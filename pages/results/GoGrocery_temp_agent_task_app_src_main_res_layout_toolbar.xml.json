{"android_layout": {"name": "app/src/main/res/layout/toolbar.xml", "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\">\n    <gradient\n        android:angle=\"1395\"\n        android:endColor=\"#DA4453\"\n        android:startColor=\"#9C27B0\"\n        android:type=\"linear\" />\n</shape>", "java": "", "contains": [], "mock_data": {}, "source": "GoGrocery"}, "breakdown_android_layout": {"tasks": [{"description": "实现安卓布局中的渐变背景形状的转译，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["shape", "gradient"], "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\">\n    <gradient\n        android:angle=\"1395\"\n        android:endColor=\"#DA4453\"\n        android:startColor=\"#9C27B0\"\n        android:type=\"linear\" />\n</shape>"}}]}, "translations": [{"description": "实现安卓布局中的渐变背景形状的转译，并保持布局和样式尽可能一致。", "source_component": "shape", "source_component_code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\">\n    <gradient\n        android:angle=\"1395\"\n        android:endColor=\"#DA4453\"\n        android:startColor=\"#9C27B0\"\n        android:type=\"linear\" />\n</shape>", "source_component_description": "矩形形状，宽度占满父容器，高度占满父容器，背景为线性渐变，渐变类型为线性，渐变角度为1395度，起始颜色为#9C27B0，结束颜色为#DA4453。", "target_component": ["Shape", "CanvasGradient"], "target_component_code": "Shape()\n  .width('100%')\n  .height('100%')\n  .backgroundColor(new CanvasGradient()\n    .linearGradient([0, 0], [1, 1], ['#9C27B0', '#DA4453'], [0, 1], 1395))\n", "target_component_description": "矩形形状，宽度占满父容器，高度占满父容器，背景为线性渐变，渐变类型为线性，渐变角度为1395度，起始颜色为#9C27B0，结束颜色为#DA4453。", "explanation": "1. 使用Shape组件来实现矩形形状，设置其宽度和高度均为'100%'以占满父容器。\n2. 使用CanvasGradient组件来创建线性渐变背景。\n3. 通过linearGradient方法设置渐变的起始点、结束点、颜色数组、位置数组和角度，实现从颜色#9C27B0到颜色#DA4453的1395度线性渐变效果。\n4. 将创建的CanvasGradient对象设置为Shape的背景颜色。"}], "translation_agent_task": {"id": "LwnfA45nrESVSCQaJPq5RB", "description": "转译安卓布局组件", "subtasks": [{"id": "BozD7WhUgGrMYqnEDSwzCY", "description": "根据转译表转译组件v1", "subtasks": [{"id": "SfYMiv3Pe8RtcTzbg6fcx9", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\">\n    <gradient\n        android:angle=\"1395\"\n        android:endColor=\"#DA4453\"\n        android:startColor=\"#9C27B0\"\n        android:type=\"linear\" />\n</shape>\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "矩形形状，宽度占满父容器，高度占满父容器，背景为线性渐变，渐变类型为线性，渐变角度为1395度，起始颜色为#9C27B0，结束颜色为#DA4453。", "function_description": "实现了一个矩形形状，背景为线性渐变，从颜色#9C27B0渐变到颜色#DA4453，渐变角度为1395度。"}}}, {"id": "CLr2dN7339wzeKJydeYTfZ", "description": "查询组件文档", "subtasks": [{"id": "aLhpG77LXbb6cfXASBpvQ2", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['shape', 'gradient']\n实现了一个矩形形状，背景为线性渐变，从颜色#9C27B0渐变到颜色#DA4453，渐变角度为1395度。\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\">\n    <gradient\n        android:angle=\"1395\"\n        android:endColor=\"#DA4453\"\n        android:startColor=\"#9C27B0\"\n        android:type=\"linear\" />\n</shape>\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["Shape", "CanvasGradient"], "queries": [{"component": "Shape", "queries": ["设置形状为矩形", "设置形状的背景为渐变"]}, {"component": "CanvasGradient", "queries": ["创建线性渐变", "设置渐变的起始颜色", "设置渐变的结束颜色", "设置渐变的角度"]}], "idea": "选择Shape组件来实现矩形形状，并使用CanvasGradient组件来实现线性渐变背景。通过设置Shape的背景为CanvasGradient创建的渐变对象，可以实现从颜色#9C27B0到颜色#DA4453的1395度线性渐变效果。"}}}, {"id": "h3XYq95morNHo4dgLU6Jwj", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["Shape", "CanvasGradient"], "queries": [{"component": "Shape", "queries": ["设置形状为矩形", "设置形状的背景为渐变"]}, {"component": "CanvasGradient", "queries": ["创建线性渐变", "设置渐变的起始颜色", "设置渐变的结束颜色", "设置渐变的角度"]}], "idea": "选择Shape组件来实现矩形形状，并使用CanvasGradient组件来实现线性渐变背景。通过设置Shape的背景为CanvasGradient创建的渐变对象，可以实现从颜色#9C27B0到颜色#DA4453的1395度线性渐变效果。"}, "corrected_component_query": {"components": ["Shape", "CanvasGradient"], "queries": [{"component": "Shape", "queries": ["设置形状为矩形", "设置形状的背景为渐变"]}, {"component": "CanvasGradient", "queries": ["创建线性渐变", "设置渐变的起始颜色", "设置渐变的结束颜色", "设置渐变的角度"]}], "idea": "选择Shape组件来实现矩形形状，并使用CanvasGradient组件来实现线性渐变背景。通过设置Shape的背景为CanvasGradient创建的渐变对象，可以实现从颜色#9C27B0到颜色#DA4453的1395度线性渐变效果。"}}}, {"id": "JKGPdJmTRktErWoAzhBkko", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个矩形形状，背景为线性渐变，从颜色#9C27B0渐变到颜色#DA4453，渐变角度为1395度。", "k": 3, "component_name": ["Shape", "CanvasGradient"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "Shape", "source": "harmony-component-example-doc", "table_id": 298}, "page_content": "该组件通过Column布局实现了一个展示多种形状（如矩形、椭圆、路径）及其样式效果的界面。布局宽度占据整个屏幕，高度根据内容自适应，顶部外边距为15vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组形状。每个形状组的形状以垂直布局方式排列，形状之间的间距均匀分布，且对齐方式为居中对齐。\n形状的样式包括填充颜色、边框颜色、边框宽度、边框虚线样式、边框线帽样式、边框线连接样式等属性，支持不同的样式展示。形状组之间通过Column组件进行分隔。形状的功能包括展示不同的几何图形和路径，用户可以通过视觉观察形状的样式变化。\n整个布局通过Column布局保证形状在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6438580751419067]], "component_examples": {"Shape": [{"description": "该组件通过Column布局实现了一个展示多种形状（如矩形、椭圆、路径）及其样式效果的界面。布局宽度占据整个屏幕，高度根据内容自适应，顶部外边距为15vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组形状。每个形状组的形状以垂直布局方式排列，形状之间的间距均匀分布，且对齐方式为居中对齐。\n形状的样式包括填充颜色、边框颜色、边框宽度、边框虚线样式、边框线帽样式、边框线连接样式等属性，支持不同的样式展示。形状组之间通过Column组件进行分隔。形状的功能包括展示不同的几何图形和路径，用户可以通过视觉观察形状的样式变化。\n整个布局通过Column布局保证形状在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct ShapeExample {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局的容器，子组件之间的间距为10vp\n      Text('basic').fontSize(11).fontColor(0xCCCCCC).width(320) // 创建一个文本组件，显示\"basic\"，字体大小为11，颜色为灰色，宽度为320vp\n\n      Shape() { // 创建一个形状组件，包含多个几何图形\n        Rect().width(300).height(50) // 创建一个矩形，宽度为300vp，高度为50vp\n        Ellipse().width(300).height(50).offset({ x: 0, y: 60 }) // 创建一个椭圆，宽度为300vp，高度为50vp，相对于上一个图形向下偏移60vp\n        Path().width(300).height(10).commands('M0 0 L900 0').offset({ x: 0, y: 120 }) // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)，相对于上一个图形向下偏移120vp\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(140) // 设置形状组件的高度为140vp\n      .viewPort({ x: -2, y: -2, width: 304, height: 130 }) // 设置形状组件的视口，视口位置为(-2,-2)，视口宽度为304vp，高度为130vp\n      .fill(0x317AF7) // 设置形状组件的填充颜色为蓝色\n      .stroke(Color.Black) // 设置形状组件的边框颜色为黑色\n      .strokeWidth(4) // 设置形状组件的边框宽度为4vp\n      .strokeDashArray([20]) // 设置形状组件的边框虚线样式，虚线长度为20vp\n      .strokeDashOffset(10) // 设置形状组件的边框虚线偏移量为10vp\n      .strokeLineCap(LineCapStyle.Round) // 设置形状组件的边框线帽样式为圆角\n      .strokeLineJoin(LineJoinStyle.Round) // 设置形状组件的边框线连接样式为圆角\n      .antiAlias(true) // 开启形状组件的抗锯齿效果\n\n      Shape() { // 创建一个形状组件，包含一个矩形\n        Rect().width(300).height(50) // 创建一个矩形，宽度为300vp，高度为50vp\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(80) // 设置形状组件的高度为80vp\n      .viewPort({ x: 0, y: 0, width: 320, height: 70 }) // 设置形状组件的视口，视口位置为(0,0)，视口宽度为320vp，高度为70vp\n      .fill(0x317AF7) // 设置形状组件的填充颜色为蓝色\n      .stroke(Color.Black) // 设置形状组件的边框颜色为黑色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n\n      Shape() { // 创建一个形状组件，包含一个矩形\n        Rect().width(300).height(50) // 创建一个矩形，宽度为300vp，高度为50vp\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(80) // 设置形状组件的高度为80vp\n      .viewPort({ x: -5, y: -5, width: 320, height: 70 }) // 设置形状组件的视口，视口位置为(-5,-5)，视口宽度为320vp，高度为70vp\n      .fill(0x317AF7) // 设置形状组件的填充颜色为蓝色\n      .stroke(Color.Black) // 设置形状组件的边框颜色为黑色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n\n      Text('path').fontSize(11).fontColor(0xCCCCCC).width(320) // 创建一个文本组件，显示\"path\"，字体大小为11，颜色为灰色，宽度为320vp\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(300).height(10).commands('M0 0 L900 0') // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(20) // 设置形状组件的高度为20vp\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置形状组件的视口，视口位置为(0,-5)，视口宽度为300vp，高度为20vp\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeDashArray([20]) // 设置形状组件的边框虚线样式，虚线长度为20vp\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(300).height(10).commands('M0 0 L900 0') // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(20) // 设置形状组件的高度为20vp\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置形状组件的视口，视口位置为(0,-5)，视口宽度为300vp，高度为20vp\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeDashArray([20]) // 设置形状组件的边框虚线样式，虚线长度为20vp\n      .strokeDashOffset(10) // 设置形状组件的边框虚线偏移量为10vp\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(300).height(10).commands('M0 0 L900 0') // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(20) // 设置形状组件的高度为20vp\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置形状组件的视口，视口位置为(0,-5)，视口宽度为300vp，高度为20vp\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeOpacity(0.5) // 设置形状组件的边框透明度为0.5\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(300).height(10).commands('M0 0 L900 0') // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(20) // 设置形状组件的高度为20vp\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置形状组件的视口，视口位置为(0,-5)，视口宽度为300vp，高度为20vp\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeDashArray([20]) // 设置形状组件的边框虚线样式，虚线长度为20vp\n      .strokeLineCap(LineCapStyle.Round) // 设置形状组件的边框线帽样式为圆角\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(200).height(60).commands('M0 0 L400 0 L400 150 Z') // 创建一个路径，宽度为200vp，高度为60vp，路径命令为从(0,0)到(400,0)再到(400,150)并闭合\n      }\n      .width(300) // 设置形状组件的宽度为300vp\n      .height(200) // 设置形状组件的高度为200vp\n      .viewPort({ x: -20, y: -5, width: 310, height: 90 }) // 设置形状组件的视口，视口位置为(-20,-5)，视口宽度为310vp，高度为90vp\n      .fill(0x317AF7) // 设置形状组件的填充颜色为蓝色\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeLineJoin(LineJoinStyle.Miter) // 设置形状组件的边框线连接样式为斜接\n      .strokeMiterLimit(5) // 设置形状组件的边框斜接限制为5\n    }.width('100%').margin({ top: 15 }) // 设置Column容器的宽度为100%，顶部外边距为15vp\n  }\n}"}]}}}, {"id": "23uQrXPDr49heCx9e9pTdt", "description": "查询组件文档", "subtasks": [{"id": "WJhnHCkRqciSJJmf7z4Hq8", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "5WEEJAMLvpXypX3CWhcmct", "description": "查询组件Shape的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置形状为矩形", "设置形状的背景为渐变"], "n_results": 10, "query_results": {"ids": [["bac47ea8-0350-4200-bc0d-0e1b5cc2f42c", "6bfdb196-22a0-442b-b903-6cf5477cfc61", "9367f713-49c9-4d79-a124-1e875a1db65e", "098635db-3fd2-4dc2-ace2-27c4588397eb", "fee7052d-093f-4d27-8ce3-f66686cee000", "f472bfa1-1bbf-4d0d-8587-163d37b95ca5", "1cf8f236-c806-40b8-b55c-efcd1227f700", "e87f99c9-2871-4e2b-bd28-3e0beee3395f", "89ef0bbf-99c3-47b2-89d3-bf91d59b759a", "11780c53-2d3c-4556-9f90-5bcfea5d42be"], ["098635db-3fd2-4dc2-ace2-27c4588397eb", "6bfdb196-22a0-442b-b903-6cf5477cfc61", "9367f713-49c9-4d79-a124-1e875a1db65e", "9e1cc6df-55bd-4003-936e-3199650182c5", "05efab99-4c47-4b9f-b0e6-fadfc78dfd1b", "11780c53-2d3c-4556-9f90-5bcfea5d42be", "89ef0bbf-99c3-47b2-89d3-bf91d59b759a", "be71aa20-8fa0-498d-ace2-42fcc1cbc383", "f472bfa1-1bbf-4d0d-8587-163d37b95ca5", "2ff33b9e-44d2-4102-a52a-5be14fa955e6"]], "distances": [[0.4098687767982483, 0.42993223667144775, 0.4350631833076477, 0.43763768672943115, 0.4378160238265991, 0.4399452209472656, 0.44924473762512207, 0.4569000005722046, 0.45711326599121094, 0.45833319425582886], [0.4382190704345703, 0.4428725242614746, 0.4441445469856262, 0.44511228799819946, 0.45209282636642456, 0.4525461792945862, 0.45919615030288696, 0.4597448706626892, 0.4614664316177368, 0.4618529677391052]], "metadatas": [[{"component_name": "Shape", "name": "radius", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Shape", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["圆角半径，支持分别设置四个角的圆角度数。\n属性名称：radius\n属性参数：{'value': {\"type\":[\"string\",\"number\",\"Array<string | number>\"],\"required\":false,\"description\":\"圆角半径值。\",\"default\":\"0\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n"], ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "B7onNFjDmJF63HYnNBNfPu", "description": "查询组件CanvasGradient的相关属性、事件文档", "subtasks": [], "details": {"query": ["创建线性渐变", "设置渐变的起始颜色", "设置渐变的结束颜色", "设置渐变的角度"], "n_results": 10, "query_results": {"ids": [["a9518220-9025-4bdf-a289-eada17df5ef7", "07c99e2a-ddc5-4b86-abb8-77c5329558a0", "68054b2e-502d-4c59-968d-12cc3292debd", "dc24b366-4a1f-49fb-917b-86a40abfca6e", "fb7e3a8c-106f-4ce9-b7c1-7189792dd679", "f70a3799-0209-452e-bf02-7604288f424b", "2b876a52-10cd-47c7-8d90-4e19acd7d1db", "180f4a76-e053-424b-b411-5c677c7cded2", "da82402c-8e46-4cca-a7d5-610dd77c3a23", "58dec13c-79db-4106-8af1-47245881c3d3"], ["68054b2e-502d-4c59-968d-12cc3292debd", "f2752c9d-edb6-4863-b51e-4aa4b1276c16", "a9518220-9025-4bdf-a289-eada17df5ef7", "146f59c2-937b-429a-93cf-9faa8615bcd7", "fb7e3a8c-106f-4ce9-b7c1-7189792dd679", "f70a3799-0209-452e-bf02-7604288f424b", "11589b22-d597-4a7a-97e6-eeb2ad41d751", "07c99e2a-ddc5-4b86-abb8-77c5329558a0", "2b876a52-10cd-47c7-8d90-4e19acd7d1db", "0414df7a-96ab-4d3f-8b23-98625d693a5e"], ["68054b2e-502d-4c59-968d-12cc3292debd", "f2752c9d-edb6-4863-b51e-4aa4b1276c16", "a9518220-9025-4bdf-a289-eada17df5ef7", "2b876a52-10cd-47c7-8d90-4e19acd7d1db", "fb7e3a8c-106f-4ce9-b7c1-7189792dd679", "07c99e2a-ddc5-4b86-abb8-77c5329558a0", "11589b22-d597-4a7a-97e6-eeb2ad41d751", "f70a3799-0209-452e-bf02-7604288f424b", "58dec13c-79db-4106-8af1-47245881c3d3", "0414df7a-96ab-4d3f-8b23-98625d693a5e"], ["a9518220-9025-4bdf-a289-eada17df5ef7", "31261526-9909-4bcc-893e-978ee42551fd", "07c99e2a-ddc5-4b86-abb8-77c5329558a0", "2b876a52-10cd-47c7-8d90-4e19acd7d1db", "0414df7a-96ab-4d3f-8b23-98625d693a5e", "f70a3799-0209-452e-bf02-7604288f424b", "47dac2a1-140e-4868-8640-7edd1b67d90a", "58dec13c-79db-4106-8af1-47245881c3d3", "4ca42970-6a6b-4d8d-a237-fe3d71d2b7d9", "fb7e3a8c-106f-4ce9-b7c1-7189792dd679"]], "distances": [[0.5192914009094238, 0.5227274298667908, 0.5416120290756226, 0.5428066849708557, 0.5430299639701843, 0.5433523654937744, 0.5472918748855591, 0.5494574904441833, 0.5504845380783081, 0.5523823499679565], [0.40652304887771606, 0.4085316061973572, 0.457794189453125, 0.4641916751861572, 0.4725145697593689, 0.4785214066505432, 0.48192667961120605, 0.4862979054450989, 0.490303099155426, 0.49163568019866943], [0.406768798828125, 0.4213992953300476, 0.4618169069290161, 0.4870103597640991, 0.48898637294769287, 0.49230122566223145, 0.4936968684196472, 0.5046427249908447, 0.5059031248092651, 0.508729100227356], [0.4262353777885437, 0.4460964798927307, 0.4494321942329407, 0.45047861337661743, 0.45661216974258423, 0.45860791206359863, 0.45887476205825806, 0.4596630930900574, 0.4657660722732544, 0.4743463397026062]], "metadatas": [[{"component_name": "CanvasGradient", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "chainMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "CanvasGradient", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "CanvasGradient", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "CanvasGradient", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "align", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "指定以该组件为链头所构成的链的参数，仅当父容器为RelativeContainer时生效。\n属性名称：chainMode\n属性参数：{'direction': {\"type\":\"Axis\",\"required\":true,\"description\":\"链的方向。\",\"default\":null}, 'style': {\"type\":\"ChainStyle\",\"required\":true,\"description\":\"链的样式。\",\"default\":null}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n"], ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n"], ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n"], ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "JioRSCQmMyQFSH2VicUab5", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "eoJjpszmBgazouEMSsD49D", "description": "过滤低于阈值的查询结果: 设置形状为矩形", "subtasks": [], "details": {"query": "设置形状为矩形", "result_ids": ["bac47ea8-0350-4200-bc0d-0e1b5cc2f42c", "6bfdb196-22a0-442b-b903-6cf5477cfc61", "9367f713-49c9-4d79-a124-1e875a1db65e", "098635db-3fd2-4dc2-ace2-27c4588397eb", "fee7052d-093f-4d27-8ce3-f66686cee000", "f472bfa1-1bbf-4d0d-8587-163d37b95ca5", "1cf8f236-c806-40b8-b55c-efcd1227f700", "e87f99c9-2871-4e2b-bd28-3e0beee3395f", "89ef0bbf-99c3-47b2-89d3-bf91d59b759a", "11780c53-2d3c-4556-9f90-5bcfea5d42be"], "result_documents": ["圆角半径，支持分别设置四个角的圆角度数。\n属性名称：radius\n属性参数：{'value': {\"type\":[\"string\",\"number\",\"Array<string | number>\"],\"required\":false,\"description\":\"圆角半径值。\",\"default\":\"0\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Shape", "name": "radius", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.4098687767982483, 0.42993223667144775, 0.4350631833076477, 0.43763768672943115, 0.4378160238265991, 0.4399452209472656, 0.44924473762512207, 0.4569000005722046, 0.45711326599121094, 0.45833319425582886], "threshold": 0.6, "query_text_results": []}}, {"id": "3vcHwrxEac5KgmmRiyTjEJ", "description": "过滤低于阈值的查询结果: 设置形状的背景为渐变", "subtasks": [], "details": {"query": "设置形状的背景为渐变", "result_ids": ["098635db-3fd2-4dc2-ace2-27c4588397eb", "6bfdb196-22a0-442b-b903-6cf5477cfc61", "9367f713-49c9-4d79-a124-1e875a1db65e", "9e1cc6df-55bd-4003-936e-3199650182c5", "05efab99-4c47-4b9f-b0e6-fadfc78dfd1b", "11780c53-2d3c-4556-9f90-5bcfea5d42be", "89ef0bbf-99c3-47b2-89d3-bf91d59b759a", "be71aa20-8fa0-498d-ace2-42fcc1cbc383", "f472bfa1-1bbf-4d0d-8587-163d37b95ca5", "2ff33b9e-44d2-4102-a52a-5be14fa955e6"], "result_documents": ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Shape", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Shape", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.4382190704345703, 0.4428725242614746, 0.4441445469856262, 0.44511228799819946, 0.45209282636642456, 0.4525461792945862, 0.45919615030288696, 0.4597448706626892, 0.4614664316177368, 0.4618529677391052], "threshold": 0.6, "query_text_results": []}}], "details": null}, {"id": "DhNCHdmvrBwXLbWeoHJbkE", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "YRx3d2zhr9zB5Gn4E6GUdv", "description": "过滤低于阈值的查询结果: 创建线性渐变", "subtasks": [], "details": {"query": "创建线性渐变", "result_ids": ["a9518220-9025-4bdf-a289-eada17df5ef7", "07c99e2a-ddc5-4b86-abb8-77c5329558a0", "68054b2e-502d-4c59-968d-12cc3292debd", "dc24b366-4a1f-49fb-917b-86a40abfca6e", "fb7e3a8c-106f-4ce9-b7c1-7189792dd679", "f70a3799-0209-452e-bf02-7604288f424b", "2b876a52-10cd-47c7-8d90-4e19acd7d1db", "180f4a76-e053-424b-b411-5c677c7cded2", "da82402c-8e46-4cca-a7d5-610dd77c3a23", "58dec13c-79db-4106-8af1-47245881c3d3"], "result_documents": ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "指定以该组件为链头所构成的链的参数，仅当父容器为RelativeContainer时生效。\n属性名称：chainMode\n属性参数：{'direction': {\"type\":\"Axis\",\"required\":true,\"description\":\"链的方向。\",\"default\":null}, 'style': {\"type\":\"ChainStyle\",\"required\":true,\"description\":\"链的样式。\",\"default\":null}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "CanvasGradient", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "chainMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.5192914009094238, 0.5227274298667908, 0.5416120290756226, 0.5428066849708557, 0.5430299639701843, 0.5433523654937744, 0.5472918748855591, 0.5494574904441833, 0.5504845380783081, 0.5523823499679565], "threshold": 0.6, "query_text_results": []}}, {"id": "kJiVe8t5Xjjzz3wU8EaVKM", "description": "过滤低于阈值的查询结果: 设置渐变的起始颜色", "subtasks": [], "details": {"query": "设置渐变的起始颜色", "result_ids": ["68054b2e-502d-4c59-968d-12cc3292debd", "f2752c9d-edb6-4863-b51e-4aa4b1276c16", "a9518220-9025-4bdf-a289-eada17df5ef7", "146f59c2-937b-429a-93cf-9faa8615bcd7", "fb7e3a8c-106f-4ce9-b7c1-7189792dd679", "f70a3799-0209-452e-bf02-7604288f424b", "11589b22-d597-4a7a-97e6-eeb2ad41d751", "07c99e2a-ddc5-4b86-abb8-77c5329558a0", "2b876a52-10cd-47c7-8d90-4e19acd7d1db", "0414df7a-96ab-4d3f-8b23-98625d693a5e"], "result_documents": ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "CanvasGradient", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.40652304887771606, 0.4085316061973572, 0.457794189453125, 0.4641916751861572, 0.4725145697593689, 0.4785214066505432, 0.48192667961120605, 0.4862979054450989, 0.490303099155426, 0.49163568019866943], "threshold": 0.6, "query_text_results": []}}, {"id": "g7Z77NHKA2PaUy4LhxjKHL", "description": "过滤低于阈值的查询结果: 设置渐变的结束颜色", "subtasks": [], "details": {"query": "设置渐变的结束颜色", "result_ids": ["68054b2e-502d-4c59-968d-12cc3292debd", "f2752c9d-edb6-4863-b51e-4aa4b1276c16", "a9518220-9025-4bdf-a289-eada17df5ef7", "2b876a52-10cd-47c7-8d90-4e19acd7d1db", "fb7e3a8c-106f-4ce9-b7c1-7189792dd679", "07c99e2a-ddc5-4b86-abb8-77c5329558a0", "11589b22-d597-4a7a-97e6-eeb2ad41d751", "f70a3799-0209-452e-bf02-7604288f424b", "58dec13c-79db-4106-8af1-47245881c3d3", "0414df7a-96ab-4d3f-8b23-98625d693a5e"], "result_documents": ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "CanvasGradient", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.406768798828125, 0.4213992953300476, 0.4618169069290161, 0.4870103597640991, 0.48898637294769287, 0.49230122566223145, 0.4936968684196472, 0.5046427249908447, 0.5059031248092651, 0.508729100227356], "threshold": 0.6, "query_text_results": []}}, {"id": "MR44DBjr6ZSdvBwzGkwv9Z", "description": "过滤低于阈值的查询结果: 设置渐变的角度", "subtasks": [], "details": {"query": "设置渐变的角度", "result_ids": ["a9518220-9025-4bdf-a289-eada17df5ef7", "31261526-9909-4bcc-893e-978ee42551fd", "07c99e2a-ddc5-4b86-abb8-77c5329558a0", "2b876a52-10cd-47c7-8d90-4e19acd7d1db", "0414df7a-96ab-4d3f-8b23-98625d693a5e", "f70a3799-0209-452e-bf02-7604288f424b", "47dac2a1-140e-4868-8640-7edd1b67d90a", "58dec13c-79db-4106-8af1-47245881c3d3", "4ca42970-6a6b-4d8d-a237-fe3d71d2b7d9", "fb7e3a8c-106f-4ce9-b7c1-7189792dd679"], "result_documents": ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n"], "result_metadatas": [{"component_name": "CanvasGradient", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "CanvasGradient", "name": "align", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.4262353777885437, 0.4460964798927307, 0.4494321942329407, 0.45047861337661743, 0.45661216974258423, 0.45860791206359863, 0.45887476205825806, 0.4596630930900574, 0.4657660722732544, 0.4743463397026062], "threshold": 0.6, "query_text_results": []}}], "details": null}], "details": null}, {"id": "LRk4ABixcvKMoSSqQbTj5V", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": [], "related_types": {}}}, {"id": "jWuZbAoxzxHoRiSitywKyy", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": []}}], "details": {"android_component": {"name": ["shape", "gradient"], "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\">\n    <gradient\n        android:angle=\"1395\"\n        android:endColor=\"#DA4453\"\n        android:startColor=\"#9C27B0\"\n        android:type=\"linear\" />\n</shape>", "layout_description": "矩形形状，宽度占满父容器，高度占满父容器，背景为线性渐变，渐变类型为线性，渐变角度为1395度，起始颜色为#9C27B0，结束颜色为#DA4453。", "function_description": "实现了一个矩形形状，背景为线性渐变，从颜色#9C27B0渐变到颜色#DA4453，渐变角度为1395度。"}}}, {"id": "PHxtePjBXWyGKjeteVSyKt", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "Shape()\n  .width('100%')\n  .height('100%')\n  .backgroundColor(new CanvasGradient()\n    .linearGradient([0, 0], [1, 1], ['#9C27B0', '#DA4453'], [0, 1], 1395))\n"}}], "details": null}], "details": {"breakdown_android_layout": {"tasks": [{"description": "实现安卓布局中的渐变背景形状的转译，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["shape", "gradient"], "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\">\n    <gradient\n        android:angle=\"1395\"\n        android:endColor=\"#DA4453\"\n        android:startColor=\"#9C27B0\"\n        android:type=\"linear\" />\n</shape>"}}]}, "translated_android_components": [{"description": "实现安卓布局中的渐变背景形状的转译，并保持布局和样式尽可能一致。", "source_component": "shape", "source_component_code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\">\n    <gradient\n        android:angle=\"1395\"\n        android:endColor=\"#DA4453\"\n        android:startColor=\"#9C27B0\"\n        android:type=\"linear\" />\n</shape>", "source_component_description": "矩形形状，宽度占满父容器，高度占满父容器，背景为线性渐变，渐变类型为线性，渐变角度为1395度，起始颜色为#9C27B0，结束颜色为#DA4453。", "target_component": ["Shape", "CanvasGradient"], "target_component_code": "Shape()\n  .width('100%')\n  .height('100%')\n  .backgroundColor(new CanvasGradient()\n    .linearGradient([0, 0], [1, 1], ['#9C27B0', '#DA4453'], [0, 1], 1395))\n", "target_component_description": "矩形形状，宽度占满父容器，高度占满父容器，背景为线性渐变，渐变类型为线性，渐变角度为1395度，起始颜色为#9C27B0，结束颜色为#DA4453。", "explanation": "1. 使用Shape组件来实现矩形形状，设置其宽度和高度均为'100%'以占满父容器。\n2. 使用CanvasGradient组件来创建线性渐变背景。\n3. 通过linearGradient方法设置渐变的起始点、结束点、颜色数组、位置数组和角度，实现从颜色#9C27B0到颜色#DA4453的1395度线性渐变效果。\n4. 将创建的CanvasGradient对象设置为Shape的背景颜色。"}]}}, "assemble_harmony_layout": "为了将已经完成的转译任务结果合并为一个整体的ArkUI布局文件，我们需要确保所有组件的层次结构和布局关系正确，并且保持原始安卓页面的语义和结构一致性。以下是合并后的ArkUI布局文件的示例：\n\n```ets\n@Entry\n@Component\nstruct MyComponent {\n  build() {\n    Column() {\n      // 矩形形状，宽度占满父容器，高度占满父容器，背景为线性渐变\n      Shape()\n        .width('100%')\n        .height('100%')\n        .backgroundColor(new CanvasGradient()\n          .linearGradient([0, 0], [1, 1], ['#9C27B0', '#DA4453'], [0, 1], 1395))\n      \n      // 其他转译的组件可以依次添加在这里\n      // 例如：\n      // Text('Hello World')\n      //   .fontSize(20)\n      //   .fontColor(Color.Black)\n      \n      // Image('test.jpg')\n      //   .width(100)\n      //   .height(100)\n      \n      // Button('Click me')\n      //   .onClick(() => {\n      //     console.info('Button clicked!');\n      //   })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}\n```\n\n### 解释：\n1. **@Entry 和 @Component**：这些是ArkUI的装饰器，用于标记一个组件作为应用程序的入口点。\n2. **Column**：这是一个容器组件，用于垂直排列子组件。\n3. **Shape**：这是已经转译的矩形形状组件，具有线性渐变背景。\n4. **其他转译的组件**：在注释部分，可以依次添加其他已经转译的组件，确保它们按照正确的层次结构和布局关系排列。\n\n### 注意事项：\n- **层次结构**：确保所有组件的层次结构和布局关系正确，保持原始安卓页面的语义和结构一致性。\n- **属性配置**：每个组件的属性配置应单独写一行，以提高代码的可读性和维护性。\n- **事件配置**：如果组件有事件处理，确保事件方法单独写一行，并使用箭头函数或声明的箭头函数来配置事件。\n\n通过这种方式，我们可以将所有转译的组件合并为一个整体的ArkUI布局文件，确保最终输出与原始安卓页面保持一致，并具有同样的功能和表现。", "time": 71.93652391433716}