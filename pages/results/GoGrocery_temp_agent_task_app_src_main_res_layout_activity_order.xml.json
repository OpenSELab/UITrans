{"android_layout": {"name": "app/src/main/res/layout/activity_order.xml", "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n\n    tools:context=\"app.infiniverse.grocery.OrderActivity\">\n\n    <include layout=\"@layout/toolbar\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:layout_marginTop=\"35dp\"\n        android:visibility=\"gone\" />\n\n    <android.support.v7.widget.RecyclerView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:id=\"@+id/recyclerview_order_details\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"3dp\" />\n\n    <android.support.constraint.ConstraintLayout\n        android:id=\"@+id/ll_empty\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"10dp\"\n        android:background=\"#ffffff\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n        <ImageView\n            android:id=\"@+id/imageView2\"\n            android:layout_width=\"169dp\"\n            android:layout_height=\"153dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginEnd=\"8dp\"\n            android:layout_marginStart=\"8dp\"\n            android:layout_marginTop=\"8dp\"\n            android:src=\"@drawable/ic_message_black\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintVertical_bias=\"0.26999998\" />\n\n        <TextView\n            android:id=\"@+id/textView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginEnd=\"8dp\"\n            android:layout_marginStart=\"8dp\"\n            android:text=\"No Orders Yet\"\n            android:textColor=\"@color/blue_grey\"\n            android:textSize=\"20sp\"\n            app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n    </android.support.constraint.ConstraintLayout>\n\n</LinearLayout>", "java": "package app.infiniverse.grocery;\n\nimport android.app.AlertDialog;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.SharedPreferences;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.support.constraint.ConstraintLayout;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.Toolbar;\nimport android.view.View;\nimport android.widget.ProgressBar;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.net.URLEncoder;\n\npublic class OrderActivity extends AppCompatActivity {\n\n\n    public static final String PREFS = \"PREFS\";\n    SharedPreferences sp;\n    ConstraintLayout cl;\n    private ProgressBar mProgressBar;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_order);\n        Toolbar toolbar = findViewById(R.id.mytoolbar);\n        setSupportActionBar(toolbar);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        getSupportActionBar().setTitle(\"Order History\");\n        mProgressBar = findViewById(R.id.progressBar);\n\n\n        cl = findViewById(R.id.ll_empty);\n        mProgressBar.setVisibility(View.VISIBLE);\n\n\n        sp = getSharedPreferences(PREFS, Context.MODE_PRIVATE);\n\n        class RecentProducts extends AsyncTask<String, Void, String> {\n\n            @Override\n            protected String doInBackground(String... params) {\n                String orderUrl = getResources().getString(R.string.base_url) + \"orders/\";\n\n                try {\n                    URL url = new URL(orderUrl);\n                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\n                    httpURLConnection.setRequestMethod(\"POST\");\n                    httpURLConnection.setDoInput(true);\n                    httpURLConnection.setDoOutput(true);\n                    OutputStream outputStream = httpURLConnection.getOutputStream();\n                    BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, \"UTF-8\"));\n                    String post_Data = URLEncoder.encode(\"login_id\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[0], \"UTF-8\");\n\n                    bufferedWriter.write(post_Data);\n                    bufferedWriter.flush();\n                    bufferedWriter.close();\n                    outputStream.close();\n                    InputStream inputStream = httpURLConnection.getInputStream();\n                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));\n                    String result = \"\", line = \"\";\n                    while ((line = bufferedReader.readLine()) != null) {\n                        result += line;\n                    }\n                    return result;\n                } catch (Exception e) {\n                    return e.toString();\n                }\n            }\n\n            @Override\n            protected void onPostExecute(String s) {\n                super.onPostExecute(s);\n                AlertDialog.Builder builder = new AlertDialog.Builder(OrderActivity.this);\n                builder.setTitle(\"Received Message\");\n\n                try {\n\n                    JSONArray orderArray = new JSONArray(s);\n\n                    String[] order_ids = new String[orderArray.length()];\n                    String[] order_savings = new String[orderArray.length()];\n                    String[] order_payableamts = new String[orderArray.length()];\n                    String[] order_status = new String[orderArray.length()];\n                    String[] order_dts = new String[orderArray.length()];\n\n\n                    JSONObject json_data = new JSONObject();\n                    for (int i = 0; i < orderArray.length(); i++) {\n                        json_data = orderArray.getJSONObject(i);\n                        order_ids[i] = json_data.getString(\"id\");\n                        order_savings[i] = json_data.getString(\"savings\");\n                        order_payableamts[i] = json_data.getString(\"payableamt\");\n                        order_status[i] = json_data.getString(\"status\");\n                        order_dts[i] = json_data.getString(\"order_dt\");\n\n                    }\n\n                    mProgressBar.setVisibility(View.GONE);\n                    if (orderArray.length() == 0) {\n\n                        cl.setVisibility(View.VISIBLE);\n                    } else {\n                        RecyclerView order_recyclerview = findViewById(R.id.recyclerview_order_details);\n                        order_recyclerview.setNestedScrollingEnabled(false);\n                        order_recyclerview.setLayoutManager(new LinearLayoutManager(OrderActivity.this));\n                        order_recyclerview.setAdapter(new Customer_Order_Adapter(order_ids, order_savings, order_payableamts, order_status, order_dts, OrderActivity.this));\n                    }\n                } catch (JSONException e) {\n                    builder.setCancelable(true);\n                    builder.setTitle(\"No Internet Connection\");\n//                    builder.setMessage(s);\n                    builder.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialogInterface, int i) {\n\n                        }\n                    });\n                    builder.show();\n                }\n\n            }\n\n            @Override\n            protected void onPreExecute() {\n                super.onPreExecute();\n            }\n\n\n        }\n        RecentProducts recentProducts = new RecentProducts();\n        recentProducts.execute(sp.getString(\"loginid\", null));\n\n\n    }\n}\n", "contains": ["app/src/main/res/layout/list_orders.xml", "app/src/main/res/layout/toolbar.xml"], "mock_data": {}, "source": "GoGrocery"}, "breakdown_android_layout": {"tasks": [{"description": "实现安卓标题工具栏的转译，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["include"], "content": "<include layout=\"@layout/toolbar\" />"}}, {"description": "实现进度条组件的转译，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["ProgressBar"], "content": "<ProgressBar\n    android:id=\"@+id/progressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginTop=\"35dp\"\n    android:visibility=\"gone\" />"}}, {"description": "实现RecyclerView组件的转译，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["android.support.v7.widget.RecyclerView"], "content": "<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerview_order_details\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"3dp\" />"}}, {"description": "实现空状态布局的转译，包括ImageView和TextView，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["android.support.constraint.ConstraintLayout", "ImageView", "TextView"], "content": "<android.support.constraint.ConstraintLayout\n    android:id=\"@+id/ll_empty\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"10dp\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n    android:visibility=\"gone\">\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"169dp\"\n        android:layout_height=\"153dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/ic_message_black\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.26999998\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"No Orders Yet\"\n        android:textColor=\"@color/blue_grey\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n</android.support.constraint.ConstraintLayout>"}}]}, "translations": [{"description": "实现安卓标题工具栏的转译，并保持布局和样式尽可能一致。", "source_component": "include", "source_component_code": "<include layout=\"@layout/toolbar\" />", "source_component_description": "包含一个工具栏布局，宽度占满父容器，高度自适应。", "target_component": ["ToolBar"], "target_component_code": "ToolBar()\n  .width('100%')\n  .height('auto')", "target_component_description": "包含一个工具栏布局，宽度占满父容器，高度自适应。", "explanation": "根据安卓组件描述，页面包含一个工具栏，工具栏的宽度和高度自适应，工具栏的具体内容和样式由外部布局文件app.layout.toolbar定义。在鸿蒙ArkUI中，选择ToolBar组件来实现安卓中的工具栏功能。ToolBar组件支持自适应宽度和高度，并且可以通过外部布局文件定义其内容和样式。因此，转译后的鸿蒙ArkUI代码为：ToolBar()，并设置其宽度为'100%'以占满父容器，高度为'auto'以自适应内容。"}, {"description": "实现进度条组件的转译，并保持布局和样式尽可能一致。", "source_component": "ProgressBar", "source_component_code": "<ProgressBar\n    android:id=\"@+id/progressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginTop=\"35dp\"\n    android:visibility=\"gone\" />", "source_component_description": "进度条，宽度自适应，高度自适应，外边距顶部为35vp，对齐方式为居中，初始状态为不可见。", "target_component": ["Progress", "Column"], "target_component_code": "Column() {\n  Progress()\n    .id('progressBar')\n    .width('auto')\n    .height('auto')\n    .visibility(Visibility.None)\n}\n.margin({ top: '35vp' })\n.alignItems(HorizontalAlign.Center)", "target_component_description": "进度条，宽度自适应，高度自适应，外边距顶部为35vp，对齐方式为居中，初始状态为不可见。", "explanation": "首先，使用Column组件来控制布局，使其宽度自适应、高度自适应，并位于父容器的中心位置。然后，在Column中添加Progress组件，设置其id为'progressBar'，宽度为'auto'，高度为'auto'，初始状态为不可见（使用Visibility.None）。最后，通过margin属性设置顶部间距为35vp，并通过alignItems属性使Progress组件在水平方向上居中。"}, {"description": "实现RecyclerView组件的转译，并保持布局和样式尽可能一致。", "source_component": "android.support.v7.widget.RecyclerView", "source_component_code": "<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerview_order_details\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"3dp\" />", "source_component_description": "一个可复用的视图容器，宽度占满父容器，高度自适应，底部外边距为3vp。", "target_component": ["List", "Blank"], "target_component_code": "List()\n  .id('recyclerview_order_details')\n  .width('100%')\n  .height('auto')\n  .margin({ bottom: '3vp' })", "target_component_description": "一个可复用的视图容器，宽度占满父容器，高度自适应，底部外边距为3vp。", "explanation": "根据安卓组件描述，RecyclerView组件的宽度占满父容器，高度自适应，底部外边距为3vp。在鸿蒙ArkUI中，使用List组件来实现RecyclerView的功能。List组件的宽度设置为'100%'以占满父容器，高度设置为'auto'以自适应内容。通过设置margin属性中的bottom值为'3vp'来实现底部的3vp外边距效果。"}, {"description": "实现空状态布局的转译，包括ImageView和TextView，并保持布局和样式尽可能一致。", "source_component": "android.support.constraint.ConstraintLayout", "source_component_code": "<android.support.constraint.ConstraintLayout\n    android:id=\"@+id/ll_empty\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"10dp\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n    android:visibility=\"gone\">\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"169dp\"\n        android:layout_height=\"153dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/ic_message_black\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.26999998\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"No Orders Yet\"\n        android:textColor=\"@color/blue_grey\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n</android.support.constraint.ConstraintLayout>", "source_component_description": "约束布局容器，宽度占满父容器，高度占满父容器，外边距为8vp（左右）和10vp（顶部），背景颜色为白色，方向为垂直，初始状态为隐藏。\n- 图像视图，宽度为169vp，高度为153vp，外边距为8vp（上下左右），图像资源引用app.media.ic_message_black，位于父容器的中心，垂直偏移为0.27。\n- 文本视图，宽度自适应，高度自适应，外边距为8vp（上下左右），文本内容为“No Orders Yet”，文本颜色引用app.color.blue_grey，字体大小为20fp，位于图像视图的正下方，水平居中。", "target_component": ["RelativeContainer", "Image", "Text"], "target_component_code": "RelativeContainer() {\n  Image($r('app.media.ic_message_black'))\n    .id('imageView2')\n    .width('169vp')\n    .height('153vp')\n    .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n    .alignRules({\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center },\n      verticalBias: { anchor: '__container__', align: VerticalAlign.Center, offset: 0.27 }\n    })\n\n  Text('No Orders Yet')\n    .id('textView')\n    .width('auto')\n    .height('auto')\n    .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n    .fontSize(20)\n    .fontColor($r('app.color.blue_grey'))\n    .alignRules({\n      top: { anchor: 'imageView2', align: VerticalAlign.Bottom },\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center }\n    })\n}\n.width('100%')\n.height('100%')\n.margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n.backgroundColor('#ffffff')\n.visibility(Visibility.Hidden)", "target_component_description": "约束布局容器，宽度占满父容器，高度占满父容器，外边距为8vp（左右）和10vp（顶部），背景颜色为白色，方向为垂直，初始状态为隐藏。\n- 图像视图，宽度为169vp，高度为153vp，外边距为8vp（上下左右），图像资源引用app.media.ic_message_black，位于父容器的中心，垂直偏移为0.27。\n- 文本视图，宽度自适应，高度自适应，外边距为8vp（上下左右），文本内容为“No Orders Yet”，文本颜色引用app.color.blue_grey，字体大小为20fp，位于图像视图的正下方，水平居中。", "explanation": "1. 使用RelativeContainer组件来实现ConstraintLayout的约束布局功能。\n2. 使用Image组件来显示图像，设置其宽度、高度、外边距和垂直偏移。\n3. 使用Text组件来显示文本，设置其宽度、高度、外边距、字体大小和颜色。\n4. 通过alignRules属性来实现组件的布局约束，确保图像视图位于容器的中心，文本视图位于图像视图的正下方。\n5. 设置容器的宽度、高度、外边距和背景颜色，并将其初始状态设置为隐藏。"}], "translation_agent_task": {"id": "S3Mo5Uin8CyTnupPmQFYPD", "description": "转译安卓布局组件", "subtasks": [{"id": "HA9cuWhYxNYghfp6nxid6G", "description": "根据转译表转译组件v1", "subtasks": [{"id": "jiVRKDygbbc9JJmMXqgtj2", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<include layout=\"@layout/toolbar\" />\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "包含一个工具栏布局，宽度占满父容器，高度自适应。", "function_description": "页面包含一个工具栏，工具栏的宽度和高度自适应，工具栏的具体内容和样式由外部布局文件app.layout.toolbar定义。"}}}, {"id": "BuBB9F8Vjtj8NNqJoudZGw", "description": "查询组件文档", "subtasks": [{"id": "n8ydrZ9htzQY67Jc2fw6w8", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['include']\n页面包含一个工具栏，工具栏的宽度和高度自适应，工具栏的具体内容和样式由外部布局文件app.layout.toolbar定义。\n<include layout=\"@layout/toolbar\" />\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["ToolBar"], "queries": [{"component": "ToolBar", "queries": ["设置工具栏的宽度和高度自适应", "设置工具栏的内容和样式", "工具栏的布局和样式定义"]}], "idea": "选择ToolBar组件来实现安卓中的工具栏功能，ToolBar组件支持自适应宽度和高度，并且可以通过外部布局文件定义其内容和样式。"}}}, {"id": "4FweXKsE7xRK48CxALJis2", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["ToolBar"], "queries": [{"component": "ToolBar", "queries": ["设置工具栏的宽度和高度自适应", "设置工具栏的内容和样式", "工具栏的布局和样式定义"]}], "idea": "选择ToolBar组件来实现安卓中的工具栏功能，ToolBar组件支持自适应宽度和高度，并且可以通过外部布局文件定义其内容和样式。"}, "corrected_component_query": {"components": ["ToolBar"], "queries": [{"component": "ToolBar", "queries": ["设置工具栏的宽度和高度自适应", "设置工具栏的内容和样式", "工具栏的布局和样式定义"]}], "idea": "选择ToolBar组件来实现安卓中的工具栏功能，ToolBar组件支持自适应宽度和高度，并且可以通过外部布局文件定义其内容和样式。"}}}, {"id": "Xxrf7WBx2qqreUuPiGv4XP", "description": "查询示例文档", "subtasks": [], "details": {"query": "页面包含一个工具栏，工具栏的宽度和高度自适应，工具栏的具体内容和样式由外部布局文件app.layout.toolbar定义。", "k": 3, "component_name": ["ToolBar"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "ToolBar", "source": "harmony-component-example-doc", "table_id": 307}, "page_content": "该组件通过Row和Stack布局实现了一个工具栏（ToolBar）的界面。布局宽度占据整个屏幕，高度设为100%。工具栏位于屏幕底部，通过Stack组件的align属性设置为Alignment.Bottom，确保工具栏始终位于底部。\n工具栏的样式包括按钮的图标和文本内容，按钮的排列方式为垂直布局，通过Column组件实现。每个按钮的图标和文本内容通过ToolBarOptions对象进行配置，支持不同的状态（如启用、禁用、激活）。\n按钮的功能包括点击事件，用户可以通过点击按钮触发相应操作。按钮的状态通过ItemState枚举进行管理，支持启用、禁用和激活三种状态。\n整个布局通过Row和Stack布局保证工具栏在底部对齐，确保界面整洁美观。", "type": "Document"}, 0.7364650964736938]], "component_examples": {"ToolBar": [{"description": "该组件通过Row和Stack布局实现了一个工具栏（ToolBar）的界面。布局宽度占据整个屏幕，高度设为100%。工具栏位于屏幕底部，通过Stack组件的align属性设置为Alignment.Bottom，确保工具栏始终位于底部。\n工具栏的样式包括按钮的图标和文本内容，按钮的排列方式为垂直布局，通过Column组件实现。每个按钮的图标和文本内容通过ToolBarOptions对象进行配置，支持不同的状态（如启用、禁用、激活）。\n按钮的功能包括点击事件，用户可以通过点击按钮触发相应操作。按钮的状态通过ItemState枚举进行管理，支持启用、禁用和激活三种状态。\n整个布局通过Row和Stack布局保证工具栏在底部对齐，确保界面整洁美观。", "code": "// 导入ToolBar和ToolBarOptions组件\nimport { ToolBar, ToolBarOptions } from '@kit.ArkUI'\n\n// 定义按钮状态的枚举\nenum ItemState {\n  ENABLE = 1, // 启用状态\n  DISABLE = 2, // 禁用状态\n  ACTIVATE = 3 // 激活状态\n}\n\n// 主入口组件\n@Entry\n@Component\nstruct Index {\n  // 定义工具栏选项列表的状态变量\n  @State toolbarList: ToolBarOptions = new ToolBarOptions()\n\n  // 组件即将显示时的生命周期方法\n  aboutToAppear() {\n    // 添加第一个工具栏按钮\n    this.toolbarList.push({\n      content: '剪贴我是超超超超超超超超超长样式', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_share'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n    })\n\n    // 添加第二个工具栏按钮，设置为禁用状态\n    this.toolbarList.push({\n      content: '拷贝', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_copy'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n      state: ItemState.DISABLE // 按钮状态为禁用\n    })\n\n    // 添加第三个工具栏按钮，设置为激活状态\n    this.toolbarList.push({\n      content: '粘贴', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_paste'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n      state: ItemState.ACTIVATE // 按钮状态为激活\n    })\n\n    // 添加第四个工具栏按钮\n    this.toolbarList.push({\n      content: '全选', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_select_all'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n    })\n\n    // 添加第五个工具栏按钮\n    this.toolbarList.push({\n      content: '分享', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_share'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n    })\n\n    // 添加第六个工具栏按钮\n    this.toolbarList.push({\n      content: '分享', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_share'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n    })\n  }\n\n  // 构建组件的UI结构\n  build() {\n    Row() {\n      Stack() {\n        Column() {\n          // 创建工具栏组件\n          ToolBar({\n            activateIndex: 2, // 设置激活按钮的索引\n            toolBarList: this.toolbarList, // 工具栏按钮列表\n          })\n        }\n      }\n      .align(Alignment.Bottom) // 设置Stack组件对齐方式为底部对齐\n      .width('100%') // 设置Stack组件宽度为100%\n      .height('100%') // 设置Stack组件高度为100%\n    }\n  }\n}"}]}}}, {"id": "SJRWVmwS6SU9qtjTcS6FL6", "description": "查询组件文档", "subtasks": [{"id": "niznc6ea29Rxw4PsnXqxUE", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "ewgeHxx2Tx8NUHm68LxrYi", "description": "查询组件ToolBar的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置工具栏的宽度和高度自适应", "设置工具栏的内容和样式", "工具栏的布局和样式定义"], "n_results": 10, "query_results": {"ids": [["c5eab92e-1cce-4b03-b2fe-0dff336fb5f2", "0be02f61-289e-490d-a40c-90a59920836e", "1cb72a5c-237e-4f1f-b8d0-6269f02a2007", "3338c221-9a2c-4a8f-ae39-3396684ea07f", "51ccd820-1f2f-43a9-b10d-8cf04ec2dbda", "1fadb693-5454-4b5b-9d2e-1273b06a3165", "713941f7-0bcf-4f89-90d8-f97e7f06914f", "d765cd2e-c4d8-4a50-9441-5208ffe8da4e", "c2297c54-3ad4-4e4e-972e-0b063239def3", "fc4e135a-7587-4d69-82a6-743b2b41e32e"], ["3338c221-9a2c-4a8f-ae39-3396684ea07f", "e4c32653-2403-492b-a11c-5fd5a726ce7d", "028c1a19-8f80-4b0a-aa2b-7075a5f286c9", "0ca0b4f6-d921-43d5-9eae-a085b7f2af5c", "c2297c54-3ad4-4e4e-972e-0b063239def3", "f6b57bb4-968f-4fdf-888f-cd506b0dc8c6", "1cb72a5c-237e-4f1f-b8d0-6269f02a2007", "d765cd2e-c4d8-4a50-9441-5208ffe8da4e", "03eb8fba-d3dd-4c65-b3c9-79b198667d04", "0be02f61-289e-490d-a40c-90a59920836e"], ["3338c221-9a2c-4a8f-ae39-3396684ea07f", "0ca0b4f6-d921-43d5-9eae-a085b7f2af5c", "1cb72a5c-237e-4f1f-b8d0-6269f02a2007", "c2297c54-3ad4-4e4e-972e-0b063239def3", "e4c32653-2403-492b-a11c-5fd5a726ce7d", "e275b8f0-9802-47d2-bdd3-dd0c83e71f89", "bedaf9a7-62ea-44c2-85ed-b483b28a829e", "0be02f61-289e-490d-a40c-90a59920836e", "028c1a19-8f80-4b0a-aa2b-7075a5f286c9", "43aaedf5-bdc3-4460-8edf-ae0dcc267187"]], "distances": [[0.40540575981140137, 0.4064178466796875, 0.41323405504226685, 0.4189830422401428, 0.42056506872177124, 0.42129242420196533, 0.42662709951400757, 0.4361393451690674, 0.4413611888885498, 0.4505199193954468], [0.30566656589508057, 0.36402320861816406, 0.3759596347808838, 0.3944002389907837, 0.3974858522415161, 0.420080304145813, 0.42781269550323486, 0.42788952589035034, 0.44141072034835815, 0.4481101632118225], [0.4038316011428833, 0.44329118728637695, 0.4695354104042053, 0.47512489557266235, 0.47860467433929443, 0.49611276388168335, 0.5041176676750183, 0.5100281834602356, 0.5144631862640381, 0.5164878368377686]], "metadatas": [[{"component_name": "ToolBar", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "toolBarList", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "ToolBar", "name": "toolBarList", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "onToolBarItemClick", "source": "harmony-component-doc", "type": "event"}, {"component_name": "ToolBar", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "width", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "ToolBar", "name": "toolBarList", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "chainMode", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "工具栏列表。\n属性名称：toolBarList\n属性参数：{'content': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"工具栏子项的文本。\",\"default\":null}, 'action': {\"type\":\"() => void\",\"required\":false,\"description\":\"工具栏子项点击事件。\",\"default\":null}, 'icon': {\"type\":\"Resource\",\"required\":false,\"description\":\"工具栏子项的图标。\",\"default\":null}, 'state': {\"type\":\"ItemState\",\"required\":false,\"description\":\"工具栏子项的状态，默认为ENABLE。\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n"], ["工具栏列表。\n属性名称：toolBarList\n属性参数：{'content': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"工具栏子项的文本。\",\"default\":null}, 'action': {\"type\":\"() => void\",\"required\":false,\"description\":\"工具栏子项点击事件。\",\"default\":null}, 'icon': {\"type\":\"Resource\",\"required\":false,\"description\":\"工具栏子项的图标。\",\"default\":null}, 'state': {\"type\":\"ItemState\",\"required\":false,\"description\":\"工具栏子项的状态，默认为ENABLE。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "工具栏子项点击事件。\n事件名称：onToolBarItemClick\n事件参数：{}\n事件返回值：None\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n"], ["工具栏列表。\n属性名称：toolBarList\n属性参数：{'content': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"工具栏子项的文本。\",\"default\":null}, 'action': {\"type\":\"() => void\",\"required\":false,\"description\":\"工具栏子项点击事件。\",\"default\":null}, 'icon': {\"type\":\"Resource\",\"required\":false,\"description\":\"工具栏子项的图标。\",\"default\":null}, 'state': {\"type\":\"ItemState\",\"required\":false,\"description\":\"工具栏子项的状态，默认为ENABLE。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "指定以该组件为链头所构成的链的参数，仅当父容器为RelativeContainer时生效。\n属性名称：chainMode\n属性参数：{'direction': {\"type\":\"Axis\",\"required\":true,\"description\":\"链的方向。\",\"default\":null}, 'style': {\"type\":\"ChainStyle\",\"required\":true,\"description\":\"链的样式。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "Mgrbs7tk7Z7Fn6dmrNcxFZ", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "2w42yrbC8BhjqSsE7aAU6X", "description": "过滤低于阈值的查询结果: 设置工具栏的宽度和高度自适应", "subtasks": [], "details": {"query": "设置工具栏的宽度和高度自适应", "result_ids": ["c5eab92e-1cce-4b03-b2fe-0dff336fb5f2", "0be02f61-289e-490d-a40c-90a59920836e", "1cb72a5c-237e-4f1f-b8d0-6269f02a2007", "3338c221-9a2c-4a8f-ae39-3396684ea07f", "51ccd820-1f2f-43a9-b10d-8cf04ec2dbda", "1fadb693-5454-4b5b-9d2e-1273b06a3165", "713941f7-0bcf-4f89-90d8-f97e7f06914f", "d765cd2e-c4d8-4a50-9441-5208ffe8da4e", "c2297c54-3ad4-4e4e-972e-0b063239def3", "fc4e135a-7587-4d69-82a6-743b2b41e32e"], "result_documents": ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "工具栏列表。\n属性名称：toolBarList\n属性参数：{'content': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"工具栏子项的文本。\",\"default\":null}, 'action': {\"type\":\"() => void\",\"required\":false,\"description\":\"工具栏子项点击事件。\",\"default\":null}, 'icon': {\"type\":\"Resource\",\"required\":false,\"description\":\"工具栏子项的图标。\",\"default\":null}, 'state': {\"type\":\"ItemState\",\"required\":false,\"description\":\"工具栏子项的状态，默认为ENABLE。\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "ToolBar", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "toolBarList", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.40540575981140137, 0.4064178466796875, 0.41323405504226685, 0.4189830422401428, 0.42056506872177124, 0.42129242420196533, 0.42662709951400757, 0.4361393451690674, 0.4413611888885498, 0.4505199193954468], "threshold": 0.6, "query_text_results": []}}, {"id": "SmYH8ziF4hQwmGYGpKdzNJ", "description": "过滤低于阈值的查询结果: 设置工具栏的内容和样式", "subtasks": [], "details": {"query": "设置工具栏的内容和样式", "result_ids": ["3338c221-9a2c-4a8f-ae39-3396684ea07f", "e4c32653-2403-492b-a11c-5fd5a726ce7d", "028c1a19-8f80-4b0a-aa2b-7075a5f286c9", "0ca0b4f6-d921-43d5-9eae-a085b7f2af5c", "c2297c54-3ad4-4e4e-972e-0b063239def3", "f6b57bb4-968f-4fdf-888f-cd506b0dc8c6", "1cb72a5c-237e-4f1f-b8d0-6269f02a2007", "d765cd2e-c4d8-4a50-9441-5208ffe8da4e", "03eb8fba-d3dd-4c65-b3c9-79b198667d04", "0be02f61-289e-490d-a40c-90a59920836e"], "result_documents": ["工具栏列表。\n属性名称：toolBarList\n属性参数：{'content': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"工具栏子项的文本。\",\"default\":null}, 'action': {\"type\":\"() => void\",\"required\":false,\"description\":\"工具栏子项点击事件。\",\"default\":null}, 'icon': {\"type\":\"Resource\",\"required\":false,\"description\":\"工具栏子项的图标。\",\"default\":null}, 'state': {\"type\":\"ItemState\",\"required\":false,\"description\":\"工具栏子项的状态，默认为ENABLE。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "工具栏子项点击事件。\n事件名称：onToolBarItemClick\n事件参数：{}\n事件返回值：None\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "ToolBar", "name": "toolBarList", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "onToolBarItemClick", "source": "harmony-component-doc", "type": "event"}, {"component_name": "ToolBar", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "width", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.30566656589508057, 0.36402320861816406, 0.3759596347808838, 0.3944002389907837, 0.3974858522415161, 0.420080304145813, 0.42781269550323486, 0.42788952589035034, 0.44141072034835815, 0.4481101632118225], "threshold": 0.6, "query_text_results": [["工具栏列表。\n属性名称：toolBarList\n属性参数：{'content': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"工具栏子项的文本。\",\"default\":null}, 'action': {\"type\":\"() => void\",\"required\":false,\"description\":\"工具栏子项点击事件。\",\"default\":null}, 'icon': {\"type\":\"Resource\",\"required\":false,\"description\":\"工具栏子项的图标。\",\"default\":null}, 'state': {\"type\":\"ItemState\",\"required\":false,\"description\":\"工具栏子项的状态，默认为ENABLE。\",\"default\":null}}\n", {"component_name": "ToolBar", "name": "toolBarList", "source": "harmony-component-doc", "type": "attribute"}, 0.6943334341049194], ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", {"component_name": "ToolBar", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, 0.6359767913818359], ["设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", {"component_name": "ToolBar", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, 0.6240403652191162], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "ToolBar", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6055997610092163], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "ToolBar", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6025141477584839]]}}, {"id": "4xRGgsJFecagMxujDKDH47", "description": "过滤低于阈值的查询结果: 工具栏的布局和样式定义", "subtasks": [], "details": {"query": "工具栏的布局和样式定义", "result_ids": ["3338c221-9a2c-4a8f-ae39-3396684ea07f", "0ca0b4f6-d921-43d5-9eae-a085b7f2af5c", "1cb72a5c-237e-4f1f-b8d0-6269f02a2007", "c2297c54-3ad4-4e4e-972e-0b063239def3", "e4c32653-2403-492b-a11c-5fd5a726ce7d", "e275b8f0-9802-47d2-bdd3-dd0c83e71f89", "bedaf9a7-62ea-44c2-85ed-b483b28a829e", "0be02f61-289e-490d-a40c-90a59920836e", "028c1a19-8f80-4b0a-aa2b-7075a5f286c9", "43aaedf5-bdc3-4460-8edf-ae0dcc267187"], "result_documents": ["工具栏列表。\n属性名称：toolBarList\n属性参数：{'content': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"工具栏子项的文本。\",\"default\":null}, 'action': {\"type\":\"() => void\",\"required\":false,\"description\":\"工具栏子项点击事件。\",\"default\":null}, 'icon': {\"type\":\"Resource\",\"required\":false,\"description\":\"工具栏子项的图标。\",\"default\":null}, 'state': {\"type\":\"ItemState\",\"required\":false,\"description\":\"工具栏子项的状态，默认为ENABLE。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "指定以该组件为链头所构成的链的参数，仅当父容器为RelativeContainer时生效。\n属性名称：chainMode\n属性参数：{'direction': {\"type\":\"Axis\",\"required\":true,\"description\":\"链的方向。\",\"default\":null}, 'style': {\"type\":\"ChainStyle\",\"required\":true,\"description\":\"链的样式。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "ToolBar", "name": "toolBarList", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "ToolBar", "name": "chainMode", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.4038316011428833, 0.44329118728637695, 0.4695354104042053, 0.47512489557266235, 0.47860467433929443, 0.49611276388168335, 0.5041176676750183, 0.5100281834602356, 0.5144631862640381, 0.5164878368377686], "threshold": 0.6, "query_text_results": []}}], "details": null}], "details": null}, {"id": "jerGkqM9osnu3WwBfZjLrd", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# ToolBar\n接口描述：Toolbar({toolBarList: ToolBarOptions, activateIndex?: number, controller: TabsController})\n接口参数：{'toolBarList': {\"type\":\"ToolBarOptions\",\"required\":true,\"description\":\"工具栏列表。\",\"default\":null}, 'activateIndex': {\"type\":\"number\",\"required\":false,\"description\":\"激活态的子项。\",\"default\":-1}, 'controller': {\"type\":\"TabsController\",\"required\":true,\"description\":\"筛选器的样式类型。\",\"default\":null}}\n工具栏列表。\n属性名称：toolBarList\n属性参数：{'content': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"工具栏子项的文本。\",\"default\":null}, 'action': {\"type\":\"() => void\",\"required\":false,\"description\":\"工具栏子项点击事件。\",\"default\":null}, 'icon': {\"type\":\"Resource\",\"required\":false,\"description\":\"工具栏子项的图标。\",\"default\":null}, 'state': {\"type\":\"ItemState\",\"required\":false,\"description\":\"工具栏子项的状态，默认为ENABLE。\",\"default\":null}}\n设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n示例：该组件通过Row和Stack布局实现了一个工具栏（ToolBar）的界面。布局宽度占据整个屏幕，高度设为100%。工具栏位于屏幕底部，通过Stack组件的align属性设置为Alignment.Bottom，确保工具栏始终位于底部。\n工具栏的样式包括按钮的图标和文本内容，按钮的排列方式为垂直布局，通过Column组件实现。每个按钮的图标和文本内容通过ToolBarOptions对象进行配置，支持不同的状态（如启用、禁用、激活）。\n按钮的功能包括点击事件，用户可以通过点击按钮触发相应操作。按钮的状态通过ItemState枚举进行管理，支持启用、禁用和激活三种状态。\n整个布局通过Row和Stack布局保证工具栏在底部对齐，确保界面整洁美观。\n// 导入ToolBar和ToolBarOptions组件\nimport { ToolBar, ToolBarOptions } from '@kit.ArkUI'\n\n// 定义按钮状态的枚举\nenum ItemState {\n  ENABLE = 1, // 启用状态\n  DISABLE = 2, // 禁用状态\n  ACTIVATE = 3 // 激活状态\n}\n\n// 主入口组件\n@Entry\n@Component\nstruct Index {\n  // 定义工具栏选项列表的状态变量\n  @State toolbarList: ToolBarOptions = new ToolBarOptions()\n\n  // 组件即将显示时的生命周期方法\n  aboutToAppear() {\n    // 添加第一个工具栏按钮\n    this.toolbarList.push({\n      content: '剪贴我是超超超超超超超超超长样式', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_share'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n    })\n\n    // 添加第二个工具栏按钮，设置为禁用状态\n    this.toolbarList.push({\n      content: '拷贝', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_copy'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n      state: ItemState.DISABLE // 按钮状态为禁用\n    })\n\n    // 添加第三个工具栏按钮，设置为激活状态\n    this.toolbarList.push({\n      content: '粘贴', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_paste'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n      state: ItemState.ACTIVATE // 按钮状态为激活\n    })\n\n    // 添加第四个工具栏按钮\n    this.toolbarList.push({\n      content: '全选', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_select_all'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n    })\n\n    // 添加第五个工具栏按钮\n    this.toolbarList.push({\n      content: '分享', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_share'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n    })\n\n    // 添加第六个工具栏按钮\n    this.toolbarList.push({\n      content: '分享', // 按钮文本内容\n      icon: $r('sys.media.ohos_ic_public_share'), // 按钮图标资源\n      action: () => { // 按钮点击事件\n        // 点击事件处理逻辑\n      },\n    })\n  }\n\n  // 构建组件的UI结构\n  build() {\n    Row() {\n      Stack() {\n        Column() {\n          // 创建工具栏组件\n          ToolBar({\n            activateIndex: 2, // 设置激活按钮的索引\n            toolBarList: this.toolbarList, // 工具栏按钮列表\n          })\n        }\n      }\n      .align(Alignment.Bottom) // 设置Stack组件对齐方式为底部对齐\n      .width('100%') // 设置Stack组件宽度为100%\n      .height('100%') // 设置Stack组件高度为100%\n    }\n  }\n}\n\n"], "related_types": {"Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "TabsController": {"description": "Tabs组件的控制器，用于控制Tabs组件进行页签切换。不支持一个TabsController控制多个Tabs组件。", "type": "object", "properties": {"constructor": {"type": "function", "required": false, "description": "TabsController的构造函数。", "enum": null, "enumDescriptions": null, "default": null}, "changeIndex": {"type": "function", "required": false, "description": "控制Tabs切换到指定页签。", "enum": null, "enumDescriptions": null, "default": null}, "preloadItems": {"type": "function", "required": false, "description": "控制Tabs预加载指定子节点。调用该接口后会一次性加载所有指定的子节点，因此为了性能考虑，建议分批加载子节点。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "ItemState": {"description": "该枚举类的描述信息", "type": "enum", "enum": ["Normal", "Disabled", "Waiting", "Skip"], "enumDescriptions": {"Normal": "正常状态，右侧文本按钮正常显示，可点击进入下一个StepperItem。", "Disabled": "不可用状态，右侧文本按钮灰度显示，不可点击进入下一个StepperItem。", "Waiting": "等待状态，右侧文本按钮不显示，显示等待进度条，不可点击进入下一个StepperItem。", "Skip": "跳过状态，右侧文本按钮默认显示“跳过”"}, "examples": null}, "ToolBarOptions": {"description": "多个ToolBar工具栏配置", "type": "Array<ToolBarOption>", "enum": null, "enumDescriptions": null, "examples": null}, "ResourceStr": {"description": "字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。", "type": ["string", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}}}}, {"id": "8mUSgFZjBhfCqFLaZ4XVqJ", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "类型名：TabsController\n类型描述：Tabs组件的控制器，用于控制Tabs组件进行页签切换。不支持一个TabsController控制多个Tabs组件。\n参数：{'constructor': {\"type\":\"function\",\"required\":false,\"description\":\"TabsController的构造函数。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'changeIndex': {\"type\":\"function\",\"required\":false,\"description\":\"控制Tabs切换到指定页签。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'preloadItems': {\"type\":\"function\",\"required\":false,\"description\":\"控制Tabs预加载指定子节点。调用该接口后会一次性加载所有指定的子节点，因此为了性能考虑，建议分批加载子节点。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：ItemState\n枚举类型描述：该枚举类的描述信息\n枚举值：['Normal', 'Disabled', 'Waiting', 'Skip']\n枚举值描述：\n* Normal: 正常状态，右侧文本按钮正常显示，可点击进入下一个StepperItem。\n* Disabled: 不可用状态，右侧文本按钮灰度显示，不可点击进入下一个StepperItem。\n* Waiting: 等待状态，右侧文本按钮不显示，显示等待进度条，不可点击进入下一个StepperItem。\n* Skip: 跳过状态，右侧文本按钮默认显示“跳过”\n\n", "类型名：ToolBarOptions\n类型描述：多个ToolBar工具栏配置\n类型：Array<ToolBarOption>\n", "类型名：ResourceStr\n类型描述：字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。\n类型：['string', 'Resource']\n"]}}], "details": {"android_component": {"name": ["include"], "content": "<include layout=\"@layout/toolbar\" />", "layout_description": "包含一个工具栏布局，宽度占满父容器，高度自适应。", "function_description": "页面包含一个工具栏，工具栏的宽度和高度自适应，工具栏的具体内容和样式由外部布局文件app.layout.toolbar定义。"}}}, {"id": "8DvGDAq3BWWLjWMEqu8hST", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "ToolBar()\n  .width('100%')\n  .height('auto')"}}], "details": null}, {"id": "kqBNy9ihjudTQPTNwoR8XL", "description": "根据转译表转译组件v1", "subtasks": [{"id": "jTHMB5QWT9tVrNxQs9gegC", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<ProgressBar\n    android:id=\"@+id/progressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginTop=\"35dp\"\n    android:visibility=\"gone\" />\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "进度条，宽度自适应，高度自适应，外边距顶部为35vp，对齐方式为居中，初始状态为不可见。", "function_description": "实现了一个进度条，宽度自适应，高度自适应，位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。"}}}, {"id": "arWwRgFXLzpSRuEUPpXU2G", "description": "查询组件文档", "subtasks": [{"id": "98XR8jf2mFhUfVJ4nkKuR2", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['ProgressBar']\n实现了一个进度条，宽度自适应，高度自适应，位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。\n<ProgressBar\n    android:id=\"@+id/progressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginTop=\"35dp\"\n    android:visibility=\"gone\" />\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["Progress", "Column"], "queries": [{"component": "Progress", "queries": ["设置进度条的宽度自适应", "设置进度条的高度自适应", "设置进度条的初始可见性为不可见"]}, {"component": "Column", "queries": ["设置Column组件的子组件垂直居中对齐", "设置Column组件的子组件上方间距为35vp"]}], "idea": "使用Progress组件来实现安卓的ProgressBar功能，通过Column组件来控制布局，使其宽度自适应、高度自适应，并位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。"}}}, {"id": "hsmQkmyicGGQCDXBKihwmA", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["Progress", "Column"], "queries": [{"component": "Progress", "queries": ["设置进度条的宽度自适应", "设置进度条的高度自适应", "设置进度条的初始可见性为不可见"]}, {"component": "Column", "queries": ["设置Column组件的子组件垂直居中对齐", "设置Column组件的子组件上方间距为35vp"]}], "idea": "使用Progress组件来实现安卓的ProgressBar功能，通过Column组件来控制布局，使其宽度自适应、高度自适应，并位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。"}, "corrected_component_query": {"components": ["Progress", "Column"], "queries": [{"component": "Progress", "queries": ["设置进度条的宽度自适应", "设置进度条的高度自适应", "设置进度条的初始可见性为不可见"]}, {"component": "Column", "queries": ["设置Column组件的子组件垂直居中对齐", "设置Column组件的子组件上方间距为35vp"]}], "idea": "使用Progress组件来实现安卓的ProgressBar功能，通过Column组件来控制布局，使其宽度自适应、高度自适应，并位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。"}}}, {"id": "UnLV8iWm4YEKRexvmWVCut", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个进度条，宽度自适应，高度自适应，位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。", "k": 3, "component_name": ["Progress", "Column"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "Progress", "source": "harmony-component-example-doc", "table_id": 266}, "page_content": "该组件通过 Column 和 Row 布局实现了一个胶囊形进度条的展示界面。布局宽度占据整个屏幕，内边距为顶部 5vp。组件的垂直方向上包含一个 Row 布局，Row 布局中包含一个 Progress 组件。\n\nProgress 组件的样式包括宽度为 100vp，高度为 50vp，类型为胶囊形（ProgressType.Capsule）。进度条的边框颜色为蓝色，边框宽度为 1vp，内容文本为 \"Installing...\"，字体大小为 13vp，字体样式为正常（FontStyle.Normal），字体颜色为灰色。进度条不启用扫描效果（enableScanEffect: false），并且不显示默认的百分比（showDefaultPercentage: false）。\n\n整个布局通过 Column 和 Row 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6896085739135742], [{"id": null, "metadata": {"component_name": "Progress", "source": "harmony-component-example-doc", "table_id": 271}, "page_content": "该组件通过 Column 布局实现了一个展示多种类型进度条（如线性进度条、环形进度条、胶囊进度条等）及其不同属性效果的界面。布局宽度占据整个屏幕，内边距为顶部 30vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组进度条。每个进度条组的进度条以水平布局方式排列，进度条之间的间距均匀分布，且对齐方式为居中对齐。\n进度条的样式包括颜色、宽度、高度、描边宽度、刻度数量、刻度宽度等属性，支持不同的样式展示。进度条组之间通过 Column 组件进行分隔。进度条的功能包括显示当前进度值和总进度值，用户可以通过这些进度条直观地了解任务的完成情况。\n整个布局通过 Column 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.675155758857727], [{"id": null, "metadata": {"component_name": "Progress", "source": "harmony-component-example-doc", "table_id": 267}, "page_content": "该组件通过 Column 布局实现了一个展示环形进度条的界面。布局宽度占据整个屏幕，内边距为顶部 5vp。组件的垂直方向上被分为两个部分，每个部分包含一个标题和一个环形进度条。每个环形进度条以水平布局方式排列，进度条之间的间距均匀分布，且对齐方式为居中对齐。\n环形进度条的样式包括宽度、颜色、描边宽度等属性，支持不同的样式展示。第一个进度条使用了渐变色作为进度条的颜色，第二个进度条使用了单一颜色并启用了阴影效果。进度条的功能包括展示当前进度值和总进度值，用户可以通过观察进度条的填充情况来了解当前进度。\n整个布局通过 Column 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6683241724967957]], "component_examples": {"Progress": [{"description": "该组件通过 Column 和 Row 布局实现了一个胶囊形进度条的展示界面。布局宽度占据整个屏幕，内边距为顶部 5vp。组件的垂直方向上包含一个 Row 布局，Row 布局中包含一个 Progress 组件。\n\nProgress 组件的样式包括宽度为 100vp，高度为 50vp，类型为胶囊形（ProgressType.Capsule）。进度条的边框颜色为蓝色，边框宽度为 1vp，内容文本为 \"Installing...\"，字体大小为 13vp，字体样式为正常（FontStyle.Normal），字体颜色为灰色。进度条不启用扫描效果（enableScanEffect: false），并且不显示默认的百分比（showDefaultPercentage: false）。\n\n整个布局通过 Column 和 Row 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct ProgressExample {\n  build() {\n    Column({ space: 15 }) { // 创建一个垂直布局，子组件之间的间距为 15vp\n      Row({ space: 40 }) { // 创建一个水平布局，子组件之间的间距为 40vp\n        Progress({ value: 100, total: 100, type: ProgressType.Capsule }) // 创建一个胶囊形进度条，当前值为 100，总值为 100\n          .width(100) // 设置进度条的宽度为 100vp\n          .height(50) // 设置进度条的高度为 50vp\n          .style({\n            borderColor: Color.Blue, // 设置进度条的边框颜色为蓝色\n            borderWidth: 1, // 设置进度条的边框宽度为 1vp\n            content: 'Installing...', // 设置进度条的内容文本为 \"Installing...\"\n            font: { size: 13, style: FontStyle.Normal }, // 设置进度条内容文本的字体大小为 13vp，字体样式为正常\n            fontColor: Color.Gray, // 设置进度条内容文本的字体颜色为灰色\n            enableScanEffect: false, // 禁用进度条的扫描效果\n            showDefaultPercentage: false // 不显示默认的百分比\n          })\n      }\n    }.width('100%') // 设置整个布局的宽度为 100%\n     .padding({ top: 5 }) // 设置整个布局的上内边距为 5vp\n  }\n}"}, {"description": "该组件通过 Column 布局实现了一个展示多种类型进度条（如线性进度条、环形进度条、胶囊进度条等）及其不同属性效果的界面。布局宽度占据整个屏幕，内边距为顶部 30vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组进度条。每个进度条组的进度条以水平布局方式排列，进度条之间的间距均匀分布，且对齐方式为居中对齐。\n进度条的样式包括颜色、宽度、高度、描边宽度、刻度数量、刻度宽度等属性，支持不同的样式展示。进度条组之间通过 Column 组件进行分隔。进度条的功能包括显示当前进度值和总进度值，用户可以通过这些进度条直观地了解任务的完成情况。\n整个布局通过 Column 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct ProgressExample {\n  build() {\n    Column({ space: 15 }) { // 使用 Column 布局，设置子组件之间的间距为 15vp\n      Text('Linear Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"Linear Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Progress({ value: 10, type: ProgressType.Linear }).width(200) // 创建一个线性进度条，当前值为 10，宽度为 200vp\n      Progress({ value: 20, total: 150, type: ProgressType.Linear }).color(Color.Grey).value(50).width(200) // 创建一个线性进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 200vp\n\n      Text('Eclipse Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"Eclipse Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 10, type: ProgressType.Eclipse }).width(100) // 创建一个环形进度条，当前值为 10，宽度为 100vp\n        Progress({ value: 20, total: 150, type: ProgressType.Eclipse }).color(Color.Grey).value(50).width(100) // 创建一个环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp\n      }\n\n      Text('ScaleRing Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"ScaleRing Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 10, type: ProgressType.ScaleRing }).width(100) // 创建一个刻度环形进度条，当前值为 10，宽度为 100vp\n        Progress({ value: 20, total: 150, type: ProgressType.ScaleRing })\n          .color(Color.Grey).value(50).width(100)\n          .style({ strokeWidth: 15, scaleCount: 15, scaleWidth: 5 }) // 创建一个刻度环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，描边宽度为 15vp，刻度数量为 15，刻度宽度为 5vp\n      }\n\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 20, total: 150, type: ProgressType.ScaleRing })\n          .color(Color.Grey).value(50).width(100)\n          .style({ strokeWidth: 20, scaleCount: 20, scaleWidth: 5 }) // 创建一个刻度环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，描边宽度为 20vp，刻度数量为 20，刻度宽度为 5vp\n        Progress({ value: 20, total: 150, type: ProgressType.ScaleRing })\n          .color(Color.Grey).value(50).width(100)\n          .style({ strokeWidth: 20, scaleCount: 30, scaleWidth: 3 }) // 创建一个刻度环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，描边宽度为 20vp，刻度数量为 30，刻度宽度为 3vp\n      }\n\n      Text('Ring Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"Ring Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 10, type: ProgressType.Ring }).width(100) // 创建一个环形进度条，当前值为 10，宽度为 100vp\n        Progress({ value: 20, total: 150, type: ProgressType.Ring })\n          .color(Color.Grey).value(50).width(100)\n          .style({ strokeWidth: 20 }) // 创建一个环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，描边宽度为 20vp\n      }\n\n      Text('Capsule Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"Capsule Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 10, type: ProgressType.Capsule }).width(100).height(50) // 创建一个胶囊形进度条，当前值为 10，宽度为 100vp，高度为 50vp\n        Progress({ value: 20, total: 150, type: ProgressType.Capsule })\n          .color(Color.Grey)\n          .value(50)\n          .width(100)\n          .height(50) // 创建一个胶囊形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，高度为 50vp\n      }\n    }.width('100%').margin({ top: 30 }) // 设置整个 Column 布局的宽度为 100%，顶部外边距为 30vp\n  }\n}"}, {"description": "该组件通过 Column 布局实现了一个展示环形进度条的界面。布局宽度占据整个屏幕，内边距为顶部 5vp。组件的垂直方向上被分为两个部分，每个部分包含一个标题和一个环形进度条。每个环形进度条以水平布局方式排列，进度条之间的间距均匀分布，且对齐方式为居中对齐。\n环形进度条的样式包括宽度、颜色、描边宽度等属性，支持不同的样式展示。第一个进度条使用了渐变色作为进度条的颜色，第二个进度条使用了单一颜色并启用了阴影效果。进度条的功能包括展示当前进度值和总进度值，用户可以通过观察进度条的填充情况来了解当前进度。\n整个布局通过 Column 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct ProgressExample {\n  // 定义一个渐变色对象，用于设置进度条的颜色\n  private gradientColor: LinearGradient = new LinearGradient([{ color: Color.Yellow, offset: 0.5 },\n                                                              { color: Color.Orange, offset: 1.0 }])\n\n  build() {\n    Column({ space: 15 }) {\n      // 标题文本，字体大小为 9，颜色为 0xCCCCCC，宽度为 90%\n      Text('Gradient Color').fontSize(9).fontColor(0xCCCCCC).width('90%')\n      \n      // 环形进度条，当前值为 70，总进度为 100，类型为环形\n      Progress({ value: 70, total: 100, type: ProgressType.Ring })\n        .width(100) // 进度条宽度为 100vp\n        .style({ strokeWidth: 20 }) // 进度条描边宽度为 20vp\n        .color(this.gradientColor) // 进度条颜色为渐变色\n\n      // 标题文本，字体大小为 9，颜色为 0xCCCCCC，宽度为 90%\n      Text('Shadow').fontSize(9).fontColor(0xCCCCCC).width('90%')\n      \n      // 环形进度条，当前值为 70，总进度为 100，类型为环形\n      Progress({ value: 70, total: 100, type: ProgressType.Ring })\n        .width(120) // 进度条宽度为 120vp\n        .color(Color.Orange) // 进度条颜色为橙色\n        .style({ strokeWidth: 20, shadow: true }) // 进度条描边宽度为 20vp，启用阴影效果\n    }.width('100%').padding({ top: 5 }) // 整个 Column 的宽度为 100%，顶部内边距为 5vp\n  }\n}"}]}}}, {"id": "362taZrST4Q8DmDAMiwfFR", "description": "查询组件文档", "subtasks": [{"id": "gQjsLYTfsaMgmzMAgpVSWp", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "ngDcsuaKKJSZepBvtpJdXH", "description": "查询组件Progress的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置进度条的宽度自适应", "设置进度条的高度自适应", "设置进度条的初始可见性为不可见"], "n_results": 10, "query_results": {"ids": [["beeb9180-0800-42c8-9d25-6864fc6e82df", "b836e58b-6059-4efa-880c-d69fb7a865e4", "5beb8036-a7ec-4c7b-82de-e8e5240f5db1", "a8c4d06f-4088-4586-8074-c604134a7035", "c6b2a3ab-1751-43af-a300-802b3b04cb09", "9791a7e5-e79e-45e5-8e9e-56485bf9f1d6", "1df17c1b-61ca-4c70-8a8f-403bfbeb22fd", "934c3856-eb9a-4e3f-a609-38126b21a7e9", "02851546-2b84-4f89-905e-fc8818d1bb01", "6f4e5000-26be-465d-beed-b8c7072756dc"], ["beeb9180-0800-42c8-9d25-6864fc6e82df", "b836e58b-6059-4efa-880c-d69fb7a865e4", "5beb8036-a7ec-4c7b-82de-e8e5240f5db1", "641138b0-3b26-4b69-bb93-c55d3e63b20e", "c6b2a3ab-1751-43af-a300-802b3b04cb09", "c024372d-6be8-4db3-acc5-71fc4550261c", "9791a7e5-e79e-45e5-8e9e-56485bf9f1d6", "a8c4d06f-4088-4586-8074-c604134a7035", "934c3856-eb9a-4e3f-a609-38126b21a7e9", "1df17c1b-61ca-4c70-8a8f-403bfbeb22fd"], ["b836e58b-6059-4efa-880c-d69fb7a865e4", "beeb9180-0800-42c8-9d25-6864fc6e82df", "c6b2a3ab-1751-43af-a300-802b3b04cb09", "5beb8036-a7ec-4c7b-82de-e8e5240f5db1", "6e2cc6fb-8b42-48ef-901e-ee7a25927b7d", "ceffddb7-d928-4d18-9c38-df02bff95da7", "35eb7743-0504-4b97-a5dc-431d624a92c8", "7190278d-db5e-43b7-af36-c7862703f151", "c78e9bb5-4253-465f-9fb9-d07a364da982", "a8c4d06f-4088-4586-8074-c604134a7035"]], "distances": [[0.34802722930908203, 0.35226112604141235, 0.35518312454223633, 0.36123859882354736, 0.38100552558898926, 0.40917205810546875, 0.4193981885910034, 0.4252302050590515, 0.43387240171432495, 0.4412294030189514], [0.3611844778060913, 0.37097400426864624, 0.3764120936393738, 0.3868056535720825, 0.3881995677947998, 0.40928685665130615, 0.42170435190200806, 0.4270389676094055, 0.4277002811431885, 0.43600696325302124], [0.3476494550704956, 0.35756683349609375, 0.3615643382072449, 0.3665555715560913, 0.41156506538391113, 0.4366394877433777, 0.48157811164855957, 0.4834505319595337, 0.4848792552947998, 0.4910564422607422]], "metadatas": [[{"component_name": "Progress", "name": "options", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "color", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "backgroundColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "value", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "contentModifier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Progress", "name": "options", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "color", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "backgroundColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "value", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "contentModifier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "size", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Progress", "name": "color", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "options", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "value", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "backgroundColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "privacySensitive", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "width", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["进度条组件参数。\n属性名称：options\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。\",\"default\":null}, 'total': {\"type\":\"number\",\"required\":false,\"description\":\"指定进度总长。设置小于等于0的数值时置为100。\",\"default\":null}, 'type': {\"type\":\"[ProgressType]\",\"required\":false,\"description\":\"指定进度条类型。\",\"default\":null}, 'style(deprecated)': {\"type\":\"[ProgressStyle]\",\"required\":false,\"description\":\"指定进度条样式。该参数从API version8开始废弃，建议使用type替代。\",\"default\":null}}\n", "设置进度条前景色。\n属性名称：color\n属性参数：{'value': {\"type\":\"[ResourceColor | LinearGradient]\",\"required\":true,\"description\":\"进度条前景色。\",\"default\":null}}\n", "设置进度条底色。\n属性名称：backgroundColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"进度条底色。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。非法数值不生效。\n属性名称：value\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"当前进度值。\",\"default\":null}}\n", "定制progress内容区的方法。\n属性名称：contentModifier\n属性参数：{'modifier': {\"type\":\"ContentModifier<ProgressConfiguration>\",\"required\":true,\"description\":\"在progress组件上，定ressConfiguration>制内容区的方法。modifier:内容修改器，开发者需要自定义class实现ContentModifier接口。\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n"], ["进度条组件参数。\n属性名称：options\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。\",\"default\":null}, 'total': {\"type\":\"number\",\"required\":false,\"description\":\"指定进度总长。设置小于等于0的数值时置为100。\",\"default\":null}, 'type': {\"type\":\"[ProgressType]\",\"required\":false,\"description\":\"指定进度条类型。\",\"default\":null}, 'style(deprecated)': {\"type\":\"[ProgressStyle]\",\"required\":false,\"description\":\"指定进度条样式。该参数从API version8开始废弃，建议使用type替代。\",\"default\":null}}\n", "设置进度条前景色。\n属性名称：color\n属性参数：{'value': {\"type\":\"[ResourceColor | LinearGradient]\",\"required\":true,\"description\":\"进度条前景色。\",\"default\":null}}\n", "设置进度条底色。\n属性名称：backgroundColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"进度条底色。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。非法数值不生效。\n属性名称：value\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"当前进度值。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "定制progress内容区的方法。\n属性名称：contentModifier\n属性参数：{'modifier': {\"type\":\"ContentModifier<ProgressConfiguration>\",\"required\":true,\"description\":\"在progress组件上，定ressConfiguration>制内容区的方法。modifier:内容修改器，开发者需要自定义class实现ContentModifier接口。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n"], ["设置进度条前景色。\n属性名称：color\n属性参数：{'value': {\"type\":\"[ResourceColor | LinearGradient]\",\"required\":true,\"description\":\"进度条前景色。\",\"default\":null}}\n", "进度条组件参数。\n属性名称：options\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。\",\"default\":null}, 'total': {\"type\":\"number\",\"required\":false,\"description\":\"指定进度总长。设置小于等于0的数值时置为100。\",\"default\":null}, 'type': {\"type\":\"[ProgressType]\",\"required\":false,\"description\":\"指定进度条类型。\",\"default\":null}, 'style(deprecated)': {\"type\":\"[ProgressStyle]\",\"required\":false,\"description\":\"指定进度条样式。该参数从API version8开始废弃，建议使用type替代。\",\"default\":null}}\n", "设置当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。非法数值不生效。\n属性名称：value\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"当前进度值。\",\"default\":null}}\n", "设置进度条底色。\n属性名称：backgroundColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"进度条底色。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置隐私敏感。\n属性名称：privacySensitive\n属性参数：{'isPrivacySensitiveMode': {\"type\":\"[Optional<boolean>]\",\"required\":true,\"description\":\"设置隐私敏感，隐私模式下进度清零，文字将被遮罩。\",\"default\":null}}\n", "设置组件的样式。\n属性名称：style\n属性参数：{'value': {\"type\":\"ProgressStyleOptions | CapsuleStyleOptions | RingStyleOptions | LinearStyleOptions | ScaleRingStyleOptions | EclipseStyleOptions\",\"required\":true,\"description\":\"设置组件的样式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "WhBmHqV2XrtJu5HTZVFKcH", "description": "查询组件Column的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置Column组件的子组件垂直居中对齐", "设置Column组件的子组件上方间距为35vp"], "n_results": 10, "query_results": {"ids": [["a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "872aac8e-8101-46e9-90b6-fbd034359d5d", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "b28478cc-39e7-47f6-a8d5-1be66cd8fd1b"], ["b28478cc-39e7-47f6-a8d5-1be66cd8fd1b", "071faf5f-8836-44a8-9974-7f0fbdb9b900", "7af90bc2-8846-435b-a7d0-4afe96092763", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "bd1a29d9-74f8-4acc-a827-c230b434f741", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "0312e8d6-efb1-4896-8129-462ef1bc3395", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3"]], "distances": [[0.26424872875213623, 0.28285425901412964, 0.3239891529083252, 0.3395519256591797, 0.3657899498939514, 0.38987791538238525, 0.3937685489654541, 0.40882766246795654, 0.4153267741203308, 0.43453580141067505], [0.36882102489471436, 0.39433610439300537, 0.4002862572669983, 0.40820610523223877, 0.4096143841743469, 0.41386276483535767, 0.41843390464782715, 0.418753445148468, 0.42845243215560913, 0.42986130714416504]], "metadatas": [[{"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"], ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "kWPfrY9aFAf5tbiVeksnzS", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "UXhphsNyBkF9KRtGfAXwPC", "description": "过滤低于阈值的查询结果: 设置进度条的宽度自适应", "subtasks": [], "details": {"query": "设置进度条的宽度自适应", "result_ids": ["beeb9180-0800-42c8-9d25-6864fc6e82df", "b836e58b-6059-4efa-880c-d69fb7a865e4", "5beb8036-a7ec-4c7b-82de-e8e5240f5db1", "a8c4d06f-4088-4586-8074-c604134a7035", "c6b2a3ab-1751-43af-a300-802b3b04cb09", "9791a7e5-e79e-45e5-8e9e-56485bf9f1d6", "1df17c1b-61ca-4c70-8a8f-403bfbeb22fd", "934c3856-eb9a-4e3f-a609-38126b21a7e9", "02851546-2b84-4f89-905e-fc8818d1bb01", "6f4e5000-26be-465d-beed-b8c7072756dc"], "result_documents": ["进度条组件参数。\n属性名称：options\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。\",\"default\":null}, 'total': {\"type\":\"number\",\"required\":false,\"description\":\"指定进度总长。设置小于等于0的数值时置为100。\",\"default\":null}, 'type': {\"type\":\"[ProgressType]\",\"required\":false,\"description\":\"指定进度条类型。\",\"default\":null}, 'style(deprecated)': {\"type\":\"[ProgressStyle]\",\"required\":false,\"description\":\"指定进度条样式。该参数从API version8开始废弃，建议使用type替代。\",\"default\":null}}\n", "设置进度条前景色。\n属性名称：color\n属性参数：{'value': {\"type\":\"[ResourceColor | LinearGradient]\",\"required\":true,\"description\":\"进度条前景色。\",\"default\":null}}\n", "设置进度条底色。\n属性名称：backgroundColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"进度条底色。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。非法数值不生效。\n属性名称：value\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"当前进度值。\",\"default\":null}}\n", "定制progress内容区的方法。\n属性名称：contentModifier\n属性参数：{'modifier': {\"type\":\"ContentModifier<ProgressConfiguration>\",\"required\":true,\"description\":\"在progress组件上，定ressConfiguration>制内容区的方法。modifier:内容修改器，开发者需要自定义class实现ContentModifier接口。\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n"], "result_metadatas": [{"component_name": "Progress", "name": "options", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "color", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "backgroundColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "value", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "contentModifier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.34802722930908203, 0.35226112604141235, 0.35518312454223633, 0.36123859882354736, 0.38100552558898926, 0.40917205810546875, 0.4193981885910034, 0.4252302050590515, 0.43387240171432495, 0.4412294030189514], "threshold": 0.6, "query_text_results": [["进度条组件参数。\n属性名称：options\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。\",\"default\":null}, 'total': {\"type\":\"number\",\"required\":false,\"description\":\"指定进度总长。设置小于等于0的数值时置为100。\",\"default\":null}, 'type': {\"type\":\"[ProgressType]\",\"required\":false,\"description\":\"指定进度条类型。\",\"default\":null}, 'style(deprecated)': {\"type\":\"[ProgressStyle]\",\"required\":false,\"description\":\"指定进度条样式。该参数从API version8开始废弃，建议使用type替代。\",\"default\":null}}\n", {"component_name": "Progress", "name": "options", "source": "harmony-component-doc", "type": "attribute"}, 0.651972770690918], ["设置进度条前景色。\n属性名称：color\n属性参数：{'value': {\"type\":\"[ResourceColor | LinearGradient]\",\"required\":true,\"description\":\"进度条前景色。\",\"default\":null}}\n", {"component_name": "Progress", "name": "color", "source": "harmony-component-doc", "type": "attribute"}, 0.6477388739585876], ["设置进度条底色。\n属性名称：backgroundColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"进度条底色。\",\"default\":null}}\n", {"component_name": "Progress", "name": "backgroundColor", "source": "harmony-component-doc", "type": "attribute"}, 0.6448168754577637], ["设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", {"component_name": "Progress", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, 0.6387614011764526], ["设置当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。非法数值不生效。\n属性名称：value\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"当前进度值。\",\"default\":null}}\n", {"component_name": "Progress", "name": "value", "source": "harmony-component-doc", "type": "attribute"}, 0.6189944744110107]]}}, {"id": "4ytJsqsAX22cbkVxvWCnSk", "description": "过滤低于阈值的查询结果: 设置进度条的高度自适应", "subtasks": [], "details": {"query": "设置进度条的高度自适应", "result_ids": ["beeb9180-0800-42c8-9d25-6864fc6e82df", "b836e58b-6059-4efa-880c-d69fb7a865e4", "5beb8036-a7ec-4c7b-82de-e8e5240f5db1", "641138b0-3b26-4b69-bb93-c55d3e63b20e", "c6b2a3ab-1751-43af-a300-802b3b04cb09", "c024372d-6be8-4db3-acc5-71fc4550261c", "9791a7e5-e79e-45e5-8e9e-56485bf9f1d6", "a8c4d06f-4088-4586-8074-c604134a7035", "934c3856-eb9a-4e3f-a609-38126b21a7e9", "1df17c1b-61ca-4c70-8a8f-403bfbeb22fd"], "result_documents": ["进度条组件参数。\n属性名称：options\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。\",\"default\":null}, 'total': {\"type\":\"number\",\"required\":false,\"description\":\"指定进度总长。设置小于等于0的数值时置为100。\",\"default\":null}, 'type': {\"type\":\"[ProgressType]\",\"required\":false,\"description\":\"指定进度条类型。\",\"default\":null}, 'style(deprecated)': {\"type\":\"[ProgressStyle]\",\"required\":false,\"description\":\"指定进度条样式。该参数从API version8开始废弃，建议使用type替代。\",\"default\":null}}\n", "设置进度条前景色。\n属性名称：color\n属性参数：{'value': {\"type\":\"[ResourceColor | LinearGradient]\",\"required\":true,\"description\":\"进度条前景色。\",\"default\":null}}\n", "设置进度条底色。\n属性名称：backgroundColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"进度条底色。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。非法数值不生效。\n属性名称：value\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"当前进度值。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "定制progress内容区的方法。\n属性名称：contentModifier\n属性参数：{'modifier': {\"type\":\"ContentModifier<ProgressConfiguration>\",\"required\":true,\"description\":\"在progress组件上，定ressConfiguration>制内容区的方法。modifier:内容修改器，开发者需要自定义class实现ContentModifier接口。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Progress", "name": "options", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "color", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "backgroundColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "value", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "contentModifier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "size", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3611844778060913, 0.37097400426864624, 0.3764120936393738, 0.3868056535720825, 0.3881995677947998, 0.40928685665130615, 0.42170435190200806, 0.4270389676094055, 0.4277002811431885, 0.43600696325302124], "threshold": 0.6, "query_text_results": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "Progress", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6131943464279175]]}}, {"id": "APUcr28rTry7SeuEosWAtG", "description": "过滤低于阈值的查询结果: 设置进度条的初始可见性为不可见", "subtasks": [], "details": {"query": "设置进度条的初始可见性为不可见", "result_ids": ["b836e58b-6059-4efa-880c-d69fb7a865e4", "beeb9180-0800-42c8-9d25-6864fc6e82df", "c6b2a3ab-1751-43af-a300-802b3b04cb09", "5beb8036-a7ec-4c7b-82de-e8e5240f5db1", "6e2cc6fb-8b42-48ef-901e-ee7a25927b7d", "ceffddb7-d928-4d18-9c38-df02bff95da7", "35eb7743-0504-4b97-a5dc-431d624a92c8", "7190278d-db5e-43b7-af36-c7862703f151", "c78e9bb5-4253-465f-9fb9-d07a364da982", "a8c4d06f-4088-4586-8074-c604134a7035"], "result_documents": ["设置进度条前景色。\n属性名称：color\n属性参数：{'value': {\"type\":\"[ResourceColor | LinearGradient]\",\"required\":true,\"description\":\"进度条前景色。\",\"default\":null}}\n", "进度条组件参数。\n属性名称：options\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。\",\"default\":null}, 'total': {\"type\":\"number\",\"required\":false,\"description\":\"指定进度总长。设置小于等于0的数值时置为100。\",\"default\":null}, 'type': {\"type\":\"[ProgressType]\",\"required\":false,\"description\":\"指定进度条类型。\",\"default\":null}, 'style(deprecated)': {\"type\":\"[ProgressStyle]\",\"required\":false,\"description\":\"指定进度条样式。该参数从API version8开始废弃，建议使用type替代。\",\"default\":null}}\n", "设置当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。非法数值不生效。\n属性名称：value\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"当前进度值。\",\"default\":null}}\n", "设置进度条底色。\n属性名称：backgroundColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"进度条底色。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置隐私敏感。\n属性名称：privacySensitive\n属性参数：{'isPrivacySensitiveMode': {\"type\":\"[Optional<boolean>]\",\"required\":true,\"description\":\"设置隐私敏感，隐私模式下进度清零，文字将被遮罩。\",\"default\":null}}\n", "设置组件的样式。\n属性名称：style\n属性参数：{'value': {\"type\":\"ProgressStyleOptions | CapsuleStyleOptions | RingStyleOptions | LinearStyleOptions | ScaleRingStyleOptions | EclipseStyleOptions\",\"required\":true,\"description\":\"设置组件的样式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Progress", "name": "color", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "options", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "value", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "backgroundColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "privacySensitive", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Progress", "name": "width", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3476494550704956, 0.35756683349609375, 0.3615643382072449, 0.3665555715560913, 0.41156506538391113, 0.4366394877433777, 0.48157811164855957, 0.4834505319595337, 0.4848792552947998, 0.4910564422607422], "threshold": 0.6, "query_text_results": []}}], "details": null}, {"id": "MAT6zYYD4fp9ssk6ffCTvw", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "8C2XMjJefxyr4KxUeWPV73", "description": "过滤低于阈值的查询结果: 设置Column组件的子组件垂直居中对齐", "subtasks": [], "details": {"query": "设置Column组件的子组件垂直居中对齐", "result_ids": ["a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "872aac8e-8101-46e9-90b6-fbd034359d5d", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "b28478cc-39e7-47f6-a8d5-1be66cd8fd1b"], "result_documents": ["设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.26424872875213623, 0.28285425901412964, 0.3239891529083252, 0.3395519256591797, 0.3657899498939514, 0.38987791538238525, 0.3937685489654541, 0.40882766246795654, 0.4153267741203308, 0.43453580141067505], "threshold": 0.6, "query_text_results": [["设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, 0.7357512712478638], ["设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, 0.7171457409858704], ["子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, 0.6760108470916748], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6604480743408203], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6342100501060486], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6101220846176147], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6062314510345459]]}}, {"id": "RngXREktUfwu9kNZj2aFNC", "description": "过滤低于阈值的查询结果: 设置Column组件的子组件上方间距为35vp", "subtasks": [], "details": {"query": "设置Column组件的子组件上方间距为35vp", "result_ids": ["b28478cc-39e7-47f6-a8d5-1be66cd8fd1b", "071faf5f-8836-44a8-9974-7f0fbdb9b900", "7af90bc2-8846-435b-a7d0-4afe96092763", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "bd1a29d9-74f8-4acc-a827-c230b434f741", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "0312e8d6-efb1-4896-8129-462ef1bc3395", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3"], "result_documents": ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.36882102489471436, 0.39433610439300537, 0.4002862572669983, 0.40820610523223877, 0.4096143841743469, 0.41386276483535767, 0.41843390464782715, 0.418753445148468, 0.42845243215560913, 0.42986130714416504], "threshold": 0.6, "query_text_results": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6311789751052856], ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "Column", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, 0.6056638956069946]]}}], "details": null}], "details": null}, {"id": "BwtKbs4t5Qj9XionixBh2h", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# Progress\n接口描述：创建进度组件，用于显示内容加载或操作处理进度。\n接口参数：{'options': {\"type\":\"ProgressOptions<Type>\",\"required\":true,\"description\":\"进度条组件参数。\",\"default\":null}}\n进度条组件参数。\n属性名称：options\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。\",\"default\":null}, 'total': {\"type\":\"number\",\"required\":false,\"description\":\"指定进度总长。设置小于等于0的数值时置为100。\",\"default\":null}, 'type': {\"type\":\"[ProgressType]\",\"required\":false,\"description\":\"指定进度条类型。\",\"default\":null}, 'style(deprecated)': {\"type\":\"[ProgressStyle]\",\"required\":false,\"description\":\"指定进度条样式。该参数从API version8开始废弃，建议使用type替代。\",\"default\":null}}\n设置进度条前景色。\n属性名称：color\n属性参数：{'value': {\"type\":\"[ResourceColor | LinearGradient]\",\"required\":true,\"description\":\"进度条前景色。\",\"default\":null}}\n设置进度条底色。\n属性名称：backgroundColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"进度条底色。\",\"default\":null}}\n设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n设置当前进度值。设置小于0的数值时置为0，设置大于total的数值时置为total。非法数值不生效。\n属性名称：value\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"当前进度值。\",\"default\":null}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n示例：该组件通过 Column 和 Row 布局实现了一个胶囊形进度条的展示界面。布局宽度占据整个屏幕，内边距为顶部 5vp。组件的垂直方向上包含一个 Row 布局，Row 布局中包含一个 Progress 组件。\n\nProgress 组件的样式包括宽度为 100vp，高度为 50vp，类型为胶囊形（ProgressType.Capsule）。进度条的边框颜色为蓝色，边框宽度为 1vp，内容文本为 \"Installing...\"，字体大小为 13vp，字体样式为正常（FontStyle.Normal），字体颜色为灰色。进度条不启用扫描效果（enableScanEffect: false），并且不显示默认的百分比（showDefaultPercentage: false）。\n\n整个布局通过 Column 和 Row 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct ProgressExample {\n  build() {\n    Column({ space: 15 }) { // 创建一个垂直布局，子组件之间的间距为 15vp\n      Row({ space: 40 }) { // 创建一个水平布局，子组件之间的间距为 40vp\n        Progress({ value: 100, total: 100, type: ProgressType.Capsule }) // 创建一个胶囊形进度条，当前值为 100，总值为 100\n          .width(100) // 设置进度条的宽度为 100vp\n          .height(50) // 设置进度条的高度为 50vp\n          .style({\n            borderColor: Color.Blue, // 设置进度条的边框颜色为蓝色\n            borderWidth: 1, // 设置进度条的边框宽度为 1vp\n            content: 'Installing...', // 设置进度条的内容文本为 \"Installing...\"\n            font: { size: 13, style: FontStyle.Normal }, // 设置进度条内容文本的字体大小为 13vp，字体样式为正常\n            fontColor: Color.Gray, // 设置进度条内容文本的字体颜色为灰色\n            enableScanEffect: false, // 禁用进度条的扫描效果\n            showDefaultPercentage: false // 不显示默认的百分比\n          })\n      }\n    }.width('100%') // 设置整个布局的宽度为 100%\n     .padding({ top: 5 }) // 设置整个布局的上内边距为 5vp\n  }\n}\n\n示例：该组件通过 Column 布局实现了一个展示多种类型进度条（如线性进度条、环形进度条、胶囊进度条等）及其不同属性效果的界面。布局宽度占据整个屏幕，内边距为顶部 30vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组进度条。每个进度条组的进度条以水平布局方式排列，进度条之间的间距均匀分布，且对齐方式为居中对齐。\n进度条的样式包括颜色、宽度、高度、描边宽度、刻度数量、刻度宽度等属性，支持不同的样式展示。进度条组之间通过 Column 组件进行分隔。进度条的功能包括显示当前进度值和总进度值，用户可以通过这些进度条直观地了解任务的完成情况。\n整个布局通过 Column 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct ProgressExample {\n  build() {\n    Column({ space: 15 }) { // 使用 Column 布局，设置子组件之间的间距为 15vp\n      Text('Linear Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"Linear Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Progress({ value: 10, type: ProgressType.Linear }).width(200) // 创建一个线性进度条，当前值为 10，宽度为 200vp\n      Progress({ value: 20, total: 150, type: ProgressType.Linear }).color(Color.Grey).value(50).width(200) // 创建一个线性进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 200vp\n\n      Text('Eclipse Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"Eclipse Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 10, type: ProgressType.Eclipse }).width(100) // 创建一个环形进度条，当前值为 10，宽度为 100vp\n        Progress({ value: 20, total: 150, type: ProgressType.Eclipse }).color(Color.Grey).value(50).width(100) // 创建一个环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp\n      }\n\n      Text('ScaleRing Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"ScaleRing Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 10, type: ProgressType.ScaleRing }).width(100) // 创建一个刻度环形进度条，当前值为 10，宽度为 100vp\n        Progress({ value: 20, total: 150, type: ProgressType.ScaleRing })\n          .color(Color.Grey).value(50).width(100)\n          .style({ strokeWidth: 15, scaleCount: 15, scaleWidth: 5 }) // 创建一个刻度环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，描边宽度为 15vp，刻度数量为 15，刻度宽度为 5vp\n      }\n\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 20, total: 150, type: ProgressType.ScaleRing })\n          .color(Color.Grey).value(50).width(100)\n          .style({ strokeWidth: 20, scaleCount: 20, scaleWidth: 5 }) // 创建一个刻度环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，描边宽度为 20vp，刻度数量为 20，刻度宽度为 5vp\n        Progress({ value: 20, total: 150, type: ProgressType.ScaleRing })\n          .color(Color.Grey).value(50).width(100)\n          .style({ strokeWidth: 20, scaleCount: 30, scaleWidth: 3 }) // 创建一个刻度环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，描边宽度为 20vp，刻度数量为 30，刻度宽度为 3vp\n      }\n\n      Text('Ring Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"Ring Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 10, type: ProgressType.Ring }).width(100) // 创建一个环形进度条，当前值为 10，宽度为 100vp\n        Progress({ value: 20, total: 150, type: ProgressType.Ring })\n          .color(Color.Grey).value(50).width(100)\n          .style({ strokeWidth: 20 }) // 创建一个环形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，描边宽度为 20vp\n      }\n\n      Text('Capsule Progress').fontSize(9).fontColor(0xCCCCCC).width('90%') // 显示标题 \"Capsule Progress\"，字体大小为 9，颜色为灰色，宽度为 90%\n      Row({ space: 40 }) { // 使用 Row 布局，设置子组件之间的间距为 40vp\n        Progress({ value: 10, type: ProgressType.Capsule }).width(100).height(50) // 创建一个胶囊形进度条，当前值为 10，宽度为 100vp，高度为 50vp\n        Progress({ value: 20, total: 150, type: ProgressType.Capsule })\n          .color(Color.Grey)\n          .value(50)\n          .width(100)\n          .height(50) // 创建一个胶囊形进度条，当前值为 50，总进度为 150，颜色为灰色，宽度为 100vp，高度为 50vp\n      }\n    }.width('100%').margin({ top: 30 }) // 设置整个 Column 布局的宽度为 100%，顶部外边距为 30vp\n  }\n}\n\n示例：该组件通过 Column 布局实现了一个展示环形进度条的界面。布局宽度占据整个屏幕，内边距为顶部 5vp。组件的垂直方向上被分为两个部分，每个部分包含一个标题和一个环形进度条。每个环形进度条以水平布局方式排列，进度条之间的间距均匀分布，且对齐方式为居中对齐。\n环形进度条的样式包括宽度、颜色、描边宽度等属性，支持不同的样式展示。第一个进度条使用了渐变色作为进度条的颜色，第二个进度条使用了单一颜色并启用了阴影效果。进度条的功能包括展示当前进度值和总进度值，用户可以通过观察进度条的填充情况来了解当前进度。\n整个布局通过 Column 布局保证进度条在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct ProgressExample {\n  // 定义一个渐变色对象，用于设置进度条的颜色\n  private gradientColor: LinearGradient = new LinearGradient([{ color: Color.Yellow, offset: 0.5 },\n                                                              { color: Color.Orange, offset: 1.0 }])\n\n  build() {\n    Column({ space: 15 }) {\n      // 标题文本，字体大小为 9，颜色为 0xCCCCCC，宽度为 90%\n      Text('Gradient Color').fontSize(9).fontColor(0xCCCCCC).width('90%')\n      \n      // 环形进度条，当前值为 70，总进度为 100，类型为环形\n      Progress({ value: 70, total: 100, type: ProgressType.Ring })\n        .width(100) // 进度条宽度为 100vp\n        .style({ strokeWidth: 20 }) // 进度条描边宽度为 20vp\n        .color(this.gradientColor) // 进度条颜色为渐变色\n\n      // 标题文本，字体大小为 9，颜色为 0xCCCCCC，宽度为 90%\n      Text('Shadow').fontSize(9).fontColor(0xCCCCCC).width('90%')\n      \n      // 环形进度条，当前值为 70，总进度为 100，类型为环形\n      Progress({ value: 70, total: 100, type: ProgressType.Ring })\n        .width(120) // 进度条宽度为 120vp\n        .color(Color.Orange) // 进度条颜色为橙色\n        .style({ strokeWidth: 20, shadow: true }) // 进度条描边宽度为 20vp，启用阴影效果\n    }.width('100%').padding({ top: 5 }) // 整个 Column 的宽度为 100%，顶部内边距为 5vp\n  }\n}\n\n", "# Column\n接口描述：Column(value?: {space?: string | number})\n接口参数：{'space': {\"type\":[\"string\",\"number\"],\"required\":false,\"description\":\"纵向布局元素垂直方向间距。从API version 9开始，space为负数或者justifyContent设置为FlexAlign.SpaceBetween、FlexAlign.SpaceAround、FlexAlign.SpaceEvenly时不生效。\",\"default\":0}}\n设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n"], "related_types": {"Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "ResourceColor": {"description": "颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析", "type": ["string", "Resource", "Color", "number"], "enum": null, "enumDescriptions": null, "examples": null}, "Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "LocalizedPadding": {"description": "内边距类型，用于描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthMetrics": {"description": "用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。", "type": "object", "properties": {"value": {"type": "number", "required": false, "description": "长度属性的值。", "enum": null, "enumDescriptions": null, "default": null}, "unit": {"type": "LengthUnit", "required": false, "description": "长度属性的单位，默认为vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthUnit": {"description": "长度属性单位枚举。", "type": "enum", "enum": ["PX", "VP", "FP", "PERCENT", "LPX"], "enumDescriptions": {"PX": "长度类型，用于描述以px像素单位为单位的长度。", "VP": "长度类型，用于描述以vp逻辑像素为单位的长度。", "FP": "长度类型，用于描述以fp字体像素为单位的长度。", "PERCENT": "长度类型，用于描述百分比长度。", "LPX": "长度类型，用于描述以lpx逻辑像素为单位的长度。"}, "examples": null}, "Padding": {"description": "内边距类型，描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Length", "required": false, "description": "左内边距，组件内元素距组件左侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Length", "required": false, "description": "右内边距，组件内元素距组件右侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Length", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}}}}, {"id": "AfUqVAuZXpVvJiSwGPjQJs", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "类型名：ResourceColor\n类型描述：颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析\n类型：['string', 'Resource', 'Color', 'number']\n", "枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：LocalizedPadding\n类型描述：内边距类型，用于描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LengthMetrics\n类型描述：用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。\n参数：{'value': {\"type\":\"number\",\"required\":false,\"description\":\"长度属性的值。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'unit': {\"type\":\"LengthUnit\",\"required\":false,\"description\":\"长度属性的单位，默认为vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：LengthUnit\n枚举类型描述：长度属性单位枚举。\n枚举值：['PX', 'VP', 'FP', 'PERCENT', 'LPX']\n枚举值描述：\n* PX: 长度类型，用于描述以px像素单位为单位的长度。\n* VP: 长度类型，用于描述以vp逻辑像素为单位的长度。\n* FP: 长度类型，用于描述以fp字体像素为单位的长度。\n* PERCENT: 长度类型，用于描述百分比长度。\n* LPX: 长度类型，用于描述以lpx逻辑像素为单位的长度。\n\n", "类型名：Padding\n类型描述：内边距类型，描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n"]}}], "details": {"android_component": {"name": ["ProgressBar"], "content": "<ProgressBar\n    android:id=\"@+id/progressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginTop=\"35dp\"\n    android:visibility=\"gone\" />", "layout_description": "进度条，宽度自适应，高度自适应，外边距顶部为35vp，对齐方式为居中，初始状态为不可见。", "function_description": "实现了一个进度条，宽度自适应，高度自适应，位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。"}}}, {"id": "H5JzyLqbfRWRoSvWNPma6V", "description": "转译组件v1", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去根据安卓组件描述生成鸿蒙ArkUI代码。\n\n\n\n\n以下是可供参考的鸿蒙组件文档：\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n\n# 声明式UI描述\nArkTS以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n## 创建组件\n根据组件构造方法的不同，创建组件包含有参数和无参数两种方式。\n\n### 无参数\n如果组件的接口定义没有包含必选构造参数，则组件后面的“()”不需要配置任何内容。例如，Divider组件不包含构造参数。\n```ets\nColumn() {\n  Text('item 1')\n  Divider()\n  Text('item 2')\n}\n```\n\n### 有参数\n- Image组件的必选参数src。\n```ets\nImage('https://xyz/test.jpg')\n```\n- Text组件的非必选参数content。\n```ets\n// string类型的参数\nText('test')\n// $r形式引入应用资源，可应用于多语言场景\nText($r('app.string.title_value'))\n// 无参数形式\nText()\n```\n- 变量或表达式也可以用于参数赋值，其中表达式返回的结果类型必须满足参数类型要求。\n例如，设置变量或表达式来构造Image和Text组件的参数。\n```ets\nImage(this.imagePath)\nImage('https://' + this.imageUrl)\nText(`count: ${this.count}`)\n```\n\n## 配置属性\n属性方法以“.”链式调用的方式配置系统组件的样式和其他属性，建议每个属性方法单独写一行。\n\n- 设置Text组件的字体大小。\n```ets\nText('test')\n  .fontSize(20)\n```\n- 配置组件的多个属性。\n```ets\nImage('test.jpg')\n  .alt('error.jpg')\n  .width(100)\n  .height(100)\n```\n- 除了直接传递常量参数外，还可以传递变量或表达式。\n```ets\nText('hello')\n  .fontSize(this.size)\nImage('test.jpg')\n  .width(this.count % 2 === 0 ? 100 : 200)\n  .height(this.offset + 100)\n```\n- 对于系统组件，ArkUI还为其属性预定义了一些枚举类型供开发者调用，枚举类型可以作为参数传递，但必须满足参数类型要求。\n例如，可以按以下方式配置Text组件的颜色和字体样式。\n```ets\nText('hello')\n  .fontSize(20)\n  .fontColor(Color.Red)\n  .fontWeight(FontWeight.Bold)\n```\n\n## 配置事件\n事件方法以“.”链式调用的方式配置系统组件支持的事件，建议每个事件方法单独写一行。\n\n- 使用箭头函数配置组件的事件方法。\n```ets\nButton('Click me')\n  .onClick(() => {\n    this.myText = 'ArkUI';\n  })\n```\n- 使用组件的成员函数配置组件的事件方法，需要bind this。ArkTS语法不推荐使用成员函数配合bind this去配置组件的事件方法。\n```ets\nmyClickHandler(): void {\n  this.counter += 2;\n}\n...\nButton('add counter')\n  .onClick(this.myClickHandler.bind(this))\n```\n- 使用声明的箭头函数，可以直接调用，不需要bind this。\n```ets\nfn = () => {\n  console.info(`counter: ${this.counter}`)\n  this.counter++\n}\n...\nButton('add counter')\n  .onClick(this.fn)\n```\n\n## 配置子组件\n如果组件支持子组件配置，则需在尾随闭包\"{...}\"中为组件添加子组件的UI描述。Column、Row、Stack、Grid、List等组件都是容器组件。\n\n- 容器组件均支持子组件配置，可以实现相对复杂的多级嵌套。\n```ets\nColumn() {\n  Row() {\n    Image('test1.jpg')\n      .width(100)\n      .height(100)\n    Button('click +1')\n      .onClick(() => {\n        console.info('+1 clicked!');\n      })\n  }\n  .width('100%')\n}\n```\n以下是关于安卓组件转译为鸿蒙ArkUI组件的示例代码：\n\n## 示例#1\n### ['Progress'] 组件\n通过 Progress 组件实现了一个进度条，用于在应用中创建一个进度指示器。进度条的当前值为 30，类型为 ScaleRing，表示一个环形进度条。进度条位于布局的中心位置，确保其在界面上居中显示。用户可以通过进度条查看任务的进度状态。\n```\nProgress({ value: 30, type: ProgressType.ScaleRing })\n.id(\"progress_bar\")\n.align(Alignment.Center)\n```\n\n这些资源目前在项目中已经定义：\n# 资源变量\n## color\nstart_window_background, colorAccentPressed, colorAccentFocused, colorPrimary, colorPrimaryDark, progress_background, colorAccent, blue_progress, white, light_gray_background, text_secondary_dark, text_color_primary_dark, background_light_grey, divider_gray, slide_1, slide_2, slide_3, slide_4, background_light, download_button_tint, gray_ripple_pressed, gray_ripple_focused\n## float\nactivity_horizontal_margin, activity_vertical_margin, book_column_width, book_column_width_padding, book_list_padding, book_list_language_bar_right_padding, text_size_page, size_text, padding_book, row_height_contributors, fab_button_size, fab_margin_right, book_size_landscape, fab_margin_top, fab_margin_right_landscape, elevation_micro, elevation_small, elevation_medium, elevation_large, z_drawer, nav_header_vertical_spacing, nav_header_height\n## integer\nbook_span, list_books_space\n## string\nmodule_desc, EntryAbility_desc, EntryAbility_label, app_name, action_settings, splash, action_language_choice, language_selection_heading, failed_to_download_book, error_loading_languages, error_loading_languages_try_again, book_not_available, title_activity_about, action_about, why_bookdash, why_bookdash_heading, heading_about, send_email_chooser, no_mail_clients, button_retry_text, error_loading_books, failed_to_open_book, skip, tutorial_done, tutorial_screen, screen_book_information, book_dash, about_heading, about_book_info, date_created, contributors, book_is_downloading, learn_more, rate_this_app, settings_thank_yous, contributions_to_app, list_of_contributors, book_download_button, slide_1_african_story_books, slide_2_volunteer_professionals, slide_3_download_and_go, slide_4_different_languages, slide_1_african_story_books_subtitle, slide_2_volunteer_professionals_subtitle, slide_3_download_and_go_subtitle, slide_4_different_languages_subtitle, transition_book_background, transition_book, filter_view_book, book_share, sharing_book_title, invitation_title, invite_error_no_apps_found, share_book_error_no_apps_found, invite_using, invitation_subject, invitation_message, sent_invitations_fmt, invite_friends, action_all_books, action_downloads, no_books_downloaded, no_books_available, book_info_still_loading, fragment_title_downloads, delete_book_confirmation, downloads_are_you_sure, delete_ok, delete_cancel, book_dash_nav_header, error_getting_contributors, error_saving_selected_language, error_opening_languagepopover, action_search, screen_title_search, menu_search, no_internet_text, search_no_internet_text, search_no_results_found, search_query_hint, show_tutorial_settings_title, show_tutorial_settings_summary, settings_title, error_opening_app_rating, settings_new_book_notifications_summary, settings_new_book_notifications, delete_book\n\n# 资源文件\nbackground.png\\n\nbookdash_b_vector.svg\\n\nbookdash_icon.png\\n\nbookdash_logo.svg\\n\nbookdash_placeholder.png\\n\nforeground.png\\n\nic_arrow_back.svg\\n\nic_arrow_down_24.svg\\n\nic_check_circle_black_24dp.svg\\n\nic_chrome_reader_mode_black_24dp.svg\\n\nic_cloud_download_black_24dp.svg\\n\nic_collections_bookmark_black_24dp.svg\\n\nic_delete.svg\\n\nic_file_download_black.svg\\n\nic_file_download_black_24dp.svg\\n\nic_grade_black_24dp.svg\\n\nic_group_add_black_24dp.svg\\n\nic_info_outline_black_24dp.svg\\n\nic_menu_24dp.svg\\n\nic_people_outline_black_24dp.svg\\n\nic_search.svg\\n\nic_settings_black_24dp.svg\\n\nic_share.svg\\n\nlayered_image.json\\n\nstartIcon.png\\n\n\n技术主管已经将代码转译分为以下步骤：\n1. 实现安卓标题工具栏的转译，并保持布局和样式尽可能一致。\\n\n2. 实现进度条组件的转译，并保持布局和样式尽可能一致。\\n\n3. 实现RecyclerView组件的转译，并保持布局和样式尽可能一致。\\n\n4. 实现空状态布局的转译，包括ImageView和TextView，并保持布局和样式尽可能一致。\\n\n\n\n你当前需要处理的任务是：\n实现进度条组件的转译，并保持布局和样式尽可能一致。\n\n以下是待转译的安卓组件描述：\n# 待转译的安卓组件名：['ProgressBar']\n功能描述：实现了一个进度条，宽度自适应，高度自适应，位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。\n安卓布局描述：进度条，宽度自适应，高度自适应，外边距顶部为35vp，对齐方式为居中，初始状态为不可见。\n实现转译的思路：使用Progress组件来实现安卓的ProgressBar功能，通过Column组件来控制布局，使其宽度自适应、高度自适应，并位于父容器的中心位置，上方有35vp的间距，初始状态下不可见。\n<ProgressBar\n    android:id=\"@+id/progressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginTop=\"35dp\"\n    android:visibility=\"gone\" />\n\n\n你的工作是根据**鸿蒙组件文档**、当前项目信息准确地、完整的根据安卓组件描述生成鸿蒙ArkUI组件代码，不可以使用不存在的鸿蒙组件以及不存在的属性和事件。\n在生成时，你需要确保生成过程中所有使用的ArkUI组件、属性和事件与安卓组件描述实现的功能、行为一致。\n在整个过程中，请严格遵循文档规范，每一步都需要详细对照官方文档，确保没有任何遗漏或误解。\n**重要**：你必须严格按照待转译的安卓组件描述来编写鸿蒙ArkUI代码，不可忽略任何可以实现的属性、样式、功能等，也不可以添加任何未在安卓组件描述中提到的功能。\n**重要**：必须确保所选用的组件、类型、属性和方法完全符合鸿蒙ArkUI官方文档的定义与规范, 必须确保使用的资源文件都已被定义。\n**重要**：当你无法通过单个组件实现功能时，可以通过组合多个组件来实现，但不可选择不存在的组件，例如Checkbox需要与Text组件搭配才能够实现复选框旁侧有文字的效果，卡片需要利用Stack布局及Text等组件来实现。\n**重要**：ArkUI以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n在你编写鸿蒙ArUI组件时，需要遵守以下规则：\n* 1. 当组件的宽度和高度是根据内容自适应时，需要使用'auto'；当组件的宽度和高度是跟随父组件时，需要使用'100%'，例如：android:layout_width=\"wrap_content\"应该转译为width=\"auto\"；android:layout_width=\"match_parent\"应该转译为width=\"100%\"。\n* 2. 引用资源时，需要使用$r('app.xxx.yyy'), 其中xxx为资源类型，yyy为资源名称，例如：Image($r('app.media.custom_background'))。\n\n在转译过程中，你需要严格遵守以下规则：\n### 规则 1\n你必须准确、完整地实现安卓布局代码地转译。\n准确意味着你需要将安卓布局代码中的每个组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要添加任何多余的或不存在的组件、属性、值。\n完整意味着你需要将安卓布局代码中的所有组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要遗漏任何组件、属性、值。\n正确示例：\n```\n安卓布局文件：\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"@string/lorem_ipsum\" />\n对应的鸿蒙ArkUI代码：\nText($r(\"app.string.lorem_ipsum\"))\n  .id(\"textview_first\")\n  .width('auto')\n  .height('auto')\n```\n错误示例：\n```\n安卓布局文件\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"16dp\"\n    android:text=\"@string/lorem_ipsum\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toEndOf=\"parent\"\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toBottomOf=\"@id/button_first\" />\n错误的鸿蒙ArkUI代码：\n// 未完整、准确地实现安卓布局代码的转译。\n// 遗漏了id、marginTop、constraintBottom_toBottomOf、constraintEnd_toEndOf、constraintStart_toStartOf、constraintTop_toBottomOf属性，并且添加了额外的maxLines属性。\nText($r(\"app.string.lorem_ipsum\"))\n  .maxLines(10)\n修改后的正确鸿蒙ArkUI代码：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        top: { anchor: 'button_first', align: VerticalAlign.Bottom },  // 对app:layout_constraintTop_toBottomOf=\"@id/button_first\"的转译\n        bottom: { anchor: '__container__', align: VerticalAlign.Bottom },  // 对app:layout_constraintBottom_toBottomOf=\"parent\"的转译\n        left: { anchor: '__container__', align: HorizontalAlign.Start },  // 对app:layout_constraintStart_toStartOf=\"parent\"的转译\n        right: { anchor: '__container__', align: HorizontalAlign.End }  // 对app:layout_constraintEnd_toEndOf=\"parent\"的转译\n    })  // 使用RelativeContainer与alignRules实现对layout_constraintXXX_toXXXOf属性的转译\n}\n额外示例：\n利用RelativeContainer实现子组件垂直水平居中：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        center: {anchor: '__container__', align: VerticalAlign.Center},\n        middle: {anchor: '__container__', align: HorizontalAlign.Center}\n    })\n}\n```\n\n", "translated_component": {"harmony_component": "Column() {\n  Progress()\n    .id('progressBar')\n    .width('auto')\n    .height('auto')\n    .visibility(Visibility.None)\n}\n.margin({ top: '35vp' })\n.alignItems(HorizontalAlign.Center)", "explanation": "首先，使用Column组件来控制布局，使其宽度自适应、高度自适应，并位于父容器的中心位置。然后，在Column中添加Progress组件，设置其id为'progressBar'，宽度为'auto'，高度为'auto'，初始状态为不可见（使用Visibility.None）。最后，通过margin属性设置顶部间距为35vp，并通过alignItems属性使Progress组件在水平方向上居中。"}}}, {"id": "iDFdHeGtG2SJYFDhnerem7", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "Column() {\n  Progress()\n    .id('progressBar')\n    .width('auto')\n    .height('auto')\n    .visibility(Visibility.None)\n}\n.margin({ top: '35vp' })\n.alignItems(HorizontalAlign.Center)"}}], "details": null}, {"id": "et6cpbZ8Bpzz7Bewgzh9gw", "description": "根据转译表转译组件v1", "subtasks": [{"id": "eNVDxLJLXh8hbEwCsmFfv3", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerview_order_details\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"3dp\" />\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "一个可复用的视图容器，宽度占满父容器，高度自适应，底部外边距为3vp。", "function_description": "实现了一个可复用的视图容器，宽度占满父容器，高度自适应，容器底部有3vp的外边距。"}}}, {"id": "B8LgvDthJNrp8HVANSf3oU", "description": "查询组件文档", "subtasks": [{"id": "6r9MYrthZhwj9oNkaVawGh", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['android.support.v7.widget.RecyclerView']\n实现了一个可复用的视图容器，宽度占满父容器，高度自适应，容器底部有3vp的外边距。\n<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerview_order_details\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"3dp\" />\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["List", "Blank"], "queries": [{"component": "List", "queries": ["设置列表的宽度为父容器的宽度", "设置列表的高度自适应内容", "设置列表的底部外边距为3vp"]}, {"component": "Blank", "queries": ["使用Blank组件填充List组件的底部外边距"]}], "idea": "选择List组件来实现RecyclerView的功能，List组件在鸿蒙ArkUI中用于展示一系列相同宽度的列表项，适合连续、多行呈现同类数据。通过设置List组件的宽度和高度属性来实现与RecyclerView相同的布局效果。使用Blank组件来填充List组件的底部外边距，以实现3vp的外边距效果。"}}}, {"id": "fiFxRfWP7avyqBqwv5TAmY", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["List", "Blank"], "queries": [{"component": "List", "queries": ["设置列表的宽度为父容器的宽度", "设置列表的高度自适应内容", "设置列表的底部外边距为3vp"]}, {"component": "Blank", "queries": ["使用Blank组件填充List组件的底部外边距"]}], "idea": "选择List组件来实现RecyclerView的功能，List组件在鸿蒙ArkUI中用于展示一系列相同宽度的列表项，适合连续、多行呈现同类数据。通过设置List组件的宽度和高度属性来实现与RecyclerView相同的布局效果。使用Blank组件来填充List组件的底部外边距，以实现3vp的外边距效果。"}, "corrected_component_query": {"components": ["List", "Blank"], "queries": [{"component": "List", "queries": ["设置列表的宽度为父容器的宽度", "设置列表的高度自适应内容", "设置列表的底部外边距为3vp"]}, {"component": "Blank", "queries": ["使用Blank组件填充List组件的底部外边距"]}], "idea": "选择List组件来实现RecyclerView的功能，List组件在鸿蒙ArkUI中用于展示一系列相同宽度的列表项，适合连续、多行呈现同类数据。通过设置List组件的宽度和高度属性来实现与RecyclerView相同的布局效果。使用Blank组件来填充List组件的底部外边距，以实现3vp的外边距效果。"}}}, {"id": "jTBN3jEhstNFjHRFMkF3um", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个可复用的视图容器，宽度占满父容器，高度自适应，容器底部有3vp的外边距。", "k": 3, "component_name": ["List", "Blank"], "score_threshold": 0.6, "example_knowledge_results": [], "component_examples": {}}}, {"id": "fVX6esjvHTyEqaQAKMKowR", "description": "查询组件文档", "subtasks": [{"id": "WC5TS2sKxFm96oz2aX3pAd", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "4dUuzt9N5iSNHaHPFy8iUp", "description": "查询组件List的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置列表的宽度为父容器的宽度", "设置列表的高度自适应内容", "设置列表的底部外边距为3vp"], "n_results": 10, "query_results": {"ids": [["63b093d9-dee9-44f9-8a18-e166b6b6940a", "7b330227-97ae-4c9f-87e5-c66c2a0999e7", "14ce3183-b46f-4272-9ede-e83e62d2f678", "7336f04f-03fc-47ea-96e4-4c9613c47be9", "96249469-b6f6-46c3-be21-7ef12a205392", "ec3bdfc1-ff95-48fa-a6c9-8ca6630f2a03", "385b3c4c-5a9f-4e08-95ad-f2136a2897f6", "e3815168-5479-404e-bb1e-29f3bdfd1a8e", "816c399a-b011-4b11-9d63-c17053c16e12", "e4e54501-eca6-4bb4-ae8d-d90d9afc0933"], ["f5c238c6-845b-474e-ba6c-4a4081c4e695", "1ba5c7ed-753f-4967-add4-89afa1fd52a6", "117f9705-e546-466e-a8d2-0d5d83c7310e", "cdb3a6fe-9d76-4732-9ae4-d2e4cfa0bdc9", "816c399a-b011-4b11-9d63-c17053c16e12", "ec3bdfc1-ff95-48fa-a6c9-8ca6630f2a03", "385b3c4c-5a9f-4e08-95ad-f2136a2897f6", "033a9f3c-cc7e-4b4d-bd61-7071334be89a", "e1c058b8-83d8-4373-8ca7-ba8205081a56", "7336f04f-03fc-47ea-96e4-4c9613c47be9"], ["cdb3a6fe-9d76-4732-9ae4-d2e4cfa0bdc9", "10f647ea-aec3-406f-aebc-598cc61867c9", "117f9705-e546-466e-a8d2-0d5d83c7310e", "b8643bb1-cbfb-4463-ac35-c649c4f203af", "b4a89b3a-2a5d-4b17-b004-c9040618d20b", "54473464-71bb-4d26-a13e-95abe518bd7c", "34ee3472-d1bd-4561-97a6-420a2bcbf9f8", "033a9f3c-cc7e-4b4d-bd61-7071334be89a", "e1c058b8-83d8-4373-8ca7-ba8205081a56", "1ba5c7ed-753f-4967-add4-89afa1fd52a6"]], "distances": [[0.32472407817840576, 0.34309864044189453, 0.3614623546600342, 0.3728710412979126, 0.3768307566642761, 0.38174593448638916, 0.42037326097488403, 0.42322808504104614, 0.42553168535232544, 0.44220292568206787], [0.36890721321105957, 0.3803914785385132, 0.38653451204299927, 0.4017733335494995, 0.4198838472366333, 0.42077040672302246, 0.42737752199172974, 0.4297062158584595, 0.4332415461540222, 0.43324869871139526], [0.3582388758659363, 0.3681597113609314, 0.3720061779022217, 0.3944661617279053, 0.3950386047363281, 0.4088340401649475, 0.43553829193115234, 0.43684273958206177, 0.44340598583221436, 0.44688135385513306]], "metadatas": [[{"component_name": "List", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "alignListItem", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "List", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "contentStartOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "contentEndOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "alignListItem", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "listDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "List", "name": "contentEndOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "contentStartOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "divider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "lanes", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "listDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "height", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置List交叉轴方向宽度大于ListItem交叉轴宽度 * lanes时，ListItem在List交叉轴方向的布局方式。\n属性名称：alignListItem\n属性参数：{'value': {\"type\":\"ListItemAlign\",\"required\":true,\"description\":\"交叉轴方向的布局方式。默认值：ListItemAlign.Start\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n"], ["设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置内容区域起始偏移量。列表滚动到起始位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentStartOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区域起始偏移量。默认值：0。单位：vp\",\"default\":null}}\n", "设置内容区末尾偏移量。列表滚动到末尾位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentEndOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区末尾偏移量。默认值：0。单位：vp\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置List交叉轴方向宽度大于ListItem交叉轴宽度 * lanes时，ListItem在List交叉轴方向的布局方式。\n属性名称：alignListItem\n属性参数：{'value': {\"type\":\"ListItemAlign\",\"required\":true,\"description\":\"交叉轴方向的布局方式。默认值：ListItemAlign.Start\",\"default\":null}}\n", "设置List组件排列方向。\n属性名称：listDirection\n属性参数：{'value': {\"type\":\"Axis\",\"required\":true,\"description\":\"组件的排列方向。默认值：Axis.Vertical\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n"], ["设置内容区末尾偏移量。列表滚动到末尾位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentEndOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区末尾偏移量。默认值：0。单位：vp\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内容区域起始偏移量。列表滚动到起始位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentStartOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区域起始偏移量。默认值：0。单位：vp\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置ListItem分割线样式，默认无分割线。\n属性名称：divider\n属性参数：{'value': {\"type\":{\"strokeWidth\":\"Length\",\"color\":\"ResourceColor\",\"startMargin\":\"Length\",\"endMargin\":\"Length\"},\"required\":true,\"description\":\"ListItem分割线样式。strokeWidth: 分割线的线宽。color: 分割线的颜色。默认值：0x08000000。startMargin: 分割线与列表侧边起始端的距离。默认值：0，单位：vp。endMargin: 分割线与列表侧边结束端的距离。默认值：0，单位：vp。\",\"default\":null}}\n", "设置List组件的布局列数或行数。gutter为列间距，当列数大于1时生效。\n属性名称：lanes\n属性参数：{'value': {\"type\":[\"number\",{\"minLength\":\"number\",\"maxLength\":\"number\"}],\"required\":true,\"description\":\"List组件的布局列数或行数。\",\"default\":null}, 'gutter': {\"type\":\"Dimension\",\"required\":false,\"description\":\"列间距。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置List组件排列方向。\n属性名称：listDirection\n属性参数：{'value': {\"type\":\"Axis\",\"required\":true,\"description\":\"组件的排列方向。默认值：Axis.Vertical\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "kmSHBAWUA3mUj2tmRPR7e8", "description": "查询组件Blank的相关属性、事件文档", "subtasks": [], "details": {"query": ["使用Blank组件填充List组件的底部外边距"], "n_results": 10, "query_results": {"ids": [["f662cc44-e0ff-4d48-b236-f6f4e74d6d1c", "2aebc796-537f-400c-8b08-9b5cfc72935c", "6b226797-ef08-48fa-91f5-f5a123492b9c", "ffab3382-8a38-4838-8b4b-7f5e83295fe5", "496dd38b-0e41-4de2-8d7a-2cafa38f57a0", "ec6a5287-adb4-472c-b506-a39de496a380", "24ea77cf-ce3c-4f10-9c61-1c2ee4c29a16", "9604b4fc-5aca-4772-9aca-907410d4a226", "c1f45038-07e2-43ca-aa67-6689350e458c", "3fb548a3-1003-4809-ac49-a0186faae9f2"]], "distances": [[0.45423340797424316, 0.46356409788131714, 0.4687063694000244, 0.46880990266799927, 0.47216761112213135, 0.48419439792633057, 0.4889850616455078, 0.4895176887512207, 0.504745364189148, 0.5117568373680115]], "metadatas": [[{"component_name": "Blank", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "dvWYao2AwS3JS4Nrt4kWKn", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "kUAMQPM8rYq9kgDYoWZX4h", "description": "过滤低于阈值的查询结果: 设置列表的宽度为父容器的宽度", "subtasks": [], "details": {"query": "设置列表的宽度为父容器的宽度", "result_ids": ["63b093d9-dee9-44f9-8a18-e166b6b6940a", "7b330227-97ae-4c9f-87e5-c66c2a0999e7", "14ce3183-b46f-4272-9ede-e83e62d2f678", "7336f04f-03fc-47ea-96e4-4c9613c47be9", "96249469-b6f6-46c3-be21-7ef12a205392", "ec3bdfc1-ff95-48fa-a6c9-8ca6630f2a03", "385b3c4c-5a9f-4e08-95ad-f2136a2897f6", "e3815168-5479-404e-bb1e-29f3bdfd1a8e", "816c399a-b011-4b11-9d63-c17053c16e12", "e4e54501-eca6-4bb4-ae8d-d90d9afc0933"], "result_documents": ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置List交叉轴方向宽度大于ListItem交叉轴宽度 * lanes时，ListItem在List交叉轴方向的布局方式。\n属性名称：alignListItem\n属性参数：{'value': {\"type\":\"ListItemAlign\",\"required\":true,\"description\":\"交叉轴方向的布局方式。默认值：ListItemAlign.Start\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n"], "result_metadatas": [{"component_name": "List", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "alignListItem", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.32472407817840576, 0.34309864044189453, 0.3614623546600342, 0.3728710412979126, 0.3768307566642761, 0.38174593448638916, 0.42037326097488403, 0.42322808504104614, 0.42553168535232544, 0.44220292568206787], "threshold": 0.6, "query_text_results": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "List", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, 0.6752759218215942], ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "List", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.6569013595581055], ["设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", {"component_name": "List", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, 0.6385376453399658], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "List", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.6271289587020874], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "List", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6231692433357239], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "List", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6182540655136108]]}}, {"id": "by6f2FnNqjNxbkLaW6sEqe", "description": "过滤低于阈值的查询结果: 设置列表的高度自适应内容", "subtasks": [], "details": {"query": "设置列表的高度自适应内容", "result_ids": ["f5c238c6-845b-474e-ba6c-4a4081c4e695", "1ba5c7ed-753f-4967-add4-89afa1fd52a6", "117f9705-e546-466e-a8d2-0d5d83c7310e", "cdb3a6fe-9d76-4732-9ae4-d2e4cfa0bdc9", "816c399a-b011-4b11-9d63-c17053c16e12", "ec3bdfc1-ff95-48fa-a6c9-8ca6630f2a03", "385b3c4c-5a9f-4e08-95ad-f2136a2897f6", "033a9f3c-cc7e-4b4d-bd61-7071334be89a", "e1c058b8-83d8-4373-8ca7-ba8205081a56", "7336f04f-03fc-47ea-96e4-4c9613c47be9"], "result_documents": ["设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置内容区域起始偏移量。列表滚动到起始位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentStartOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区域起始偏移量。默认值：0。单位：vp\",\"default\":null}}\n", "设置内容区末尾偏移量。列表滚动到末尾位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentEndOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区末尾偏移量。默认值：0。单位：vp\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置List交叉轴方向宽度大于ListItem交叉轴宽度 * lanes时，ListItem在List交叉轴方向的布局方式。\n属性名称：alignListItem\n属性参数：{'value': {\"type\":\"ListItemAlign\",\"required\":true,\"description\":\"交叉轴方向的布局方式。默认值：ListItemAlign.Start\",\"default\":null}}\n", "设置List组件排列方向。\n属性名称：listDirection\n属性参数：{'value': {\"type\":\"Axis\",\"required\":true,\"description\":\"组件的排列方向。默认值：Axis.Vertical\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n"], "result_metadatas": [{"component_name": "List", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "contentStartOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "contentEndOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "alignListItem", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "listDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.36890721321105957, 0.3803914785385132, 0.38653451204299927, 0.4017733335494995, 0.4198838472366333, 0.42077040672302246, 0.42737752199172974, 0.4297062158584595, 0.4332415461540222, 0.43324869871139526], "threshold": 0.6, "query_text_results": [["设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", {"component_name": "List", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6310927867889404], ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "List", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6196085214614868], ["设置内容区域起始偏移量。列表滚动到起始位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentStartOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区域起始偏移量。默认值：0。单位：vp\",\"default\":null}}\n", {"component_name": "List", "name": "contentStartOffset", "source": "harmony-component-doc", "type": "attribute"}, 0.6134654879570007]]}}, {"id": "ePRqZABNHw8Y4XrpYCK55Y", "description": "过滤低于阈值的查询结果: 设置列表的底部外边距为3vp", "subtasks": [], "details": {"query": "设置列表的底部外边距为3vp", "result_ids": ["cdb3a6fe-9d76-4732-9ae4-d2e4cfa0bdc9", "10f647ea-aec3-406f-aebc-598cc61867c9", "117f9705-e546-466e-a8d2-0d5d83c7310e", "b8643bb1-cbfb-4463-ac35-c649c4f203af", "b4a89b3a-2a5d-4b17-b004-c9040618d20b", "54473464-71bb-4d26-a13e-95abe518bd7c", "34ee3472-d1bd-4561-97a6-420a2bcbf9f8", "033a9f3c-cc7e-4b4d-bd61-7071334be89a", "e1c058b8-83d8-4373-8ca7-ba8205081a56", "1ba5c7ed-753f-4967-add4-89afa1fd52a6"], "result_documents": ["设置内容区末尾偏移量。列表滚动到末尾位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentEndOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区末尾偏移量。默认值：0。单位：vp\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内容区域起始偏移量。列表滚动到起始位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentStartOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区域起始偏移量。默认值：0。单位：vp\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置ListItem分割线样式，默认无分割线。\n属性名称：divider\n属性参数：{'value': {\"type\":{\"strokeWidth\":\"Length\",\"color\":\"ResourceColor\",\"startMargin\":\"Length\",\"endMargin\":\"Length\"},\"required\":true,\"description\":\"ListItem分割线样式。strokeWidth: 分割线的线宽。color: 分割线的颜色。默认值：0x08000000。startMargin: 分割线与列表侧边起始端的距离。默认值：0，单位：vp。endMargin: 分割线与列表侧边结束端的距离。默认值：0，单位：vp。\",\"default\":null}}\n", "设置List组件的布局列数或行数。gutter为列间距，当列数大于1时生效。\n属性名称：lanes\n属性参数：{'value': {\"type\":[\"number\",{\"minLength\":\"number\",\"maxLength\":\"number\"}],\"required\":true,\"description\":\"List组件的布局列数或行数。\",\"default\":null}, 'gutter': {\"type\":\"Dimension\",\"required\":false,\"description\":\"列间距。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置List组件排列方向。\n属性名称：listDirection\n属性参数：{'value': {\"type\":\"Axis\",\"required\":true,\"description\":\"组件的排列方向。默认值：Axis.Vertical\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "List", "name": "contentEndOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "contentStartOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "divider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "lanes", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "listDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "List", "name": "height", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3582388758659363, 0.3681597113609314, 0.3720061779022217, 0.3944661617279053, 0.3950386047363281, 0.4088340401649475, 0.43553829193115234, 0.43684273958206177, 0.44340598583221436, 0.44688135385513306], "threshold": 0.6, "query_text_results": [["设置内容区末尾偏移量。列表滚动到末尾位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentEndOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区末尾偏移量。默认值：0。单位：vp\",\"default\":null}}\n", {"component_name": "List", "name": "contentEndOffset", "source": "harmony-component-doc", "type": "attribute"}, 0.6417611241340637], ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "List", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, 0.6318402886390686], ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "List", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, 0.6055338382720947], ["设置ListItem分割线样式，默认无分割线。\n属性名称：divider\n属性参数：{'value': {\"type\":{\"strokeWidth\":\"Length\",\"color\":\"ResourceColor\",\"startMargin\":\"Length\",\"endMargin\":\"Length\"},\"required\":true,\"description\":\"ListItem分割线样式。strokeWidth: 分割线的线宽。color: 分割线的颜色。默认值：0x08000000。startMargin: 分割线与列表侧边起始端的距离。默认值：0，单位：vp。endMargin: 分割线与列表侧边结束端的距离。默认值：0，单位：vp。\",\"default\":null}}\n", {"component_name": "List", "name": "divider", "source": "harmony-component-doc", "type": "attribute"}, 0.6049613952636719]]}}], "details": null}, {"id": "FFh4cZMqonjpDFnDtfYtBR", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "YxvfmviPbnLdCCtEN37KCd", "description": "过滤低于阈值的查询结果: 使用Blank组件填充List组件的底部外边距", "subtasks": [], "details": {"query": "使用Blank组件填充List组件的底部外边距", "result_ids": ["f662cc44-e0ff-4d48-b236-f6f4e74d6d1c", "2aebc796-537f-400c-8b08-9b5cfc72935c", "6b226797-ef08-48fa-91f5-f5a123492b9c", "ffab3382-8a38-4838-8b4b-7f5e83295fe5", "496dd38b-0e41-4de2-8d7a-2cafa38f57a0", "ec6a5287-adb4-472c-b506-a39de496a380", "24ea77cf-ce3c-4f10-9c61-1c2ee4c29a16", "9604b4fc-5aca-4772-9aca-907410d4a226", "c1f45038-07e2-43ca-aa67-6689350e458c", "3fb548a3-1003-4809-ac49-a0186faae9f2"], "result_documents": ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n"], "result_metadatas": [{"component_name": "Blank", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Blank", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.45423340797424316, 0.46356409788131714, 0.4687063694000244, 0.46880990266799927, 0.47216761112213135, 0.48419439792633057, 0.4889850616455078, 0.4895176887512207, 0.504745364189148, 0.5117568373680115], "threshold": 0.6, "query_text_results": []}}], "details": null}], "details": null}, {"id": "d97y6HebA8vqWeXFJHoSiV", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# List\n接口描述：List(value?:{space?: number | string, initialIndex?: number, scroller?: Scroller})\n接口参数：{'space': {\"type\":[\"number\",\"string\"],\"required\":false,\"description\":\"子组件主轴方向的间隔。默认值：0。参数类型为number时单位为vp。设置为负数或者大于等于List内容区长度时，按默认值显示。space参数值小于List分割线宽度时，子组件主轴方向的间隔取分割线宽度。\",\"default\":null}, 'initialIndex': {\"type\":\"number\",\"required\":false,\"description\":\"设置当前List初次加载时视口起始位置显示的item的索引值。默认值：0。设置为负数或超过了当前List最后一个item的索引值时视为无效取值，无效取值按默认值显示。\",\"default\":null}, 'scroller': {\"type\":\"Scroller\",\"required\":false,\"description\":\"可滚动组件的控制器。用于与可滚动组件进行绑定。不允许和其他滚动类组件绑定同一个滚动控制对象。\",\"default\":null}}\n设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n设置内容区域起始偏移量。列表滚动到起始位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentStartOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区域起始偏移量。默认值：0。单位：vp\",\"default\":null}}\n设置内容区末尾偏移量。列表滚动到末尾位置时，列表内容与列表显示区域边界保留指定距离。\n属性名称：contentEndOffset\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内容区末尾偏移量。默认值：0。单位：vp\",\"default\":null}}\n设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n设置ListItem分割线样式，默认无分割线。\n属性名称：divider\n属性参数：{'value': {\"type\":{\"strokeWidth\":\"Length\",\"color\":\"ResourceColor\",\"startMargin\":\"Length\",\"endMargin\":\"Length\"},\"required\":true,\"description\":\"ListItem分割线样式。strokeWidth: 分割线的线宽。color: 分割线的颜色。默认值：0x08000000。startMargin: 分割线与列表侧边起始端的距离。默认值：0，单位：vp。endMargin: 分割线与列表侧边结束端的距离。默认值：0，单位：vp。\",\"default\":null}}\n"], "related_types": {"Margin": {"description": "外边距类型，用于描述组件不同方向的外边距。", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "上外边距，组件距其父组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Length", "required": false, "description": "左外边距，组件距其父组件左侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Length", "required": false, "description": "右外边距，组件距其父组件右侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Length", "required": false, "description": "下外边距，组件距其父组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "LocalizedMargin": {"description": "外边距类型，用于描述组件不同方向的外边距。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "上外边距，组件距其父组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "下外边距，组件距其父组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "左外边距，组件距其父组件左边界的尺寸，从右至左显示语言模式下为右外边距，组件距其父组件右边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "右外边距，组件距其父组件右边界的尺寸，从右至左显示语言模式下为左外边距，组件距其父组件左边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthMetrics": {"description": "用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。", "type": "object", "properties": {"value": {"type": "number", "required": false, "description": "长度属性的值。", "enum": null, "enumDescriptions": null, "default": null}, "unit": {"type": "LengthUnit", "required": false, "description": "长度属性的单位，默认为vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthUnit": {"description": "长度属性单位枚举。", "type": "enum", "enum": ["PX", "VP", "FP", "PERCENT", "LPX"], "enumDescriptions": {"PX": "长度类型，用于描述以px像素单位为单位的长度。", "VP": "长度类型，用于描述以vp逻辑像素为单位的长度。", "FP": "长度类型，用于描述以fp字体像素为单位的长度。", "PERCENT": "长度类型，用于描述百分比长度。", "LPX": "长度类型，用于描述以lpx逻辑像素为单位的长度。"}, "examples": null}, "LocalizedPadding": {"description": "内边距类型，用于描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Padding": {"description": "内边距类型，描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Length", "required": false, "description": "左内边距，组件内元素距组件左侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Length", "required": false, "description": "右内边距，组件内元素距组件右侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Length", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "ResourceColor": {"description": "颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析", "type": ["string", "Resource", "Color", "number"], "enum": null, "enumDescriptions": null, "examples": null}}}}, {"id": "cRqqANXYbarmuuYJqzxcFV", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["类型名：Margin\n类型描述：外边距类型，用于描述组件不同方向的外边距。\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"上外边距，组件距其父组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"左外边距，组件距其父组件左侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"右外边距，组件距其父组件右侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"下外边距，组件距其父组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "类型名：LocalizedMargin\n类型描述：外边距类型，用于描述组件不同方向的外边距。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"上外边距，组件距其父组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"下外边距，组件距其父组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"左外边距，组件距其父组件左边界的尺寸，从右至左显示语言模式下为右外边距，组件距其父组件右边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"右外边距，组件距其父组件右边界的尺寸，从右至左显示语言模式下为左外边距，组件距其父组件左边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LengthMetrics\n类型描述：用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。\n参数：{'value': {\"type\":\"number\",\"required\":false,\"description\":\"长度属性的值。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'unit': {\"type\":\"LengthUnit\",\"required\":false,\"description\":\"长度属性的单位，默认为vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：LengthUnit\n枚举类型描述：长度属性单位枚举。\n枚举值：['PX', 'VP', 'FP', 'PERCENT', 'LPX']\n枚举值描述：\n* PX: 长度类型，用于描述以px像素单位为单位的长度。\n* VP: 长度类型，用于描述以vp逻辑像素为单位的长度。\n* FP: 长度类型，用于描述以fp字体像素为单位的长度。\n* PERCENT: 长度类型，用于描述百分比长度。\n* LPX: 长度类型，用于描述以lpx逻辑像素为单位的长度。\n\n", "类型名：LocalizedPadding\n类型描述：内边距类型，用于描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Padding\n类型描述：内边距类型，描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：ResourceColor\n类型描述：颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析\n类型：['string', 'Resource', 'Color', 'number']\n"]}}], "details": {"android_component": {"name": ["android.support.v7.widget.RecyclerView"], "content": "<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerview_order_details\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"3dp\" />", "layout_description": "一个可复用的视图容器，宽度占满父容器，高度自适应，底部外边距为3vp。", "function_description": "实现了一个可复用的视图容器，宽度占满父容器，高度自适应，容器底部有3vp的外边距。"}}}, {"id": "ZLvQ3JCEiXCrsoXLKhkJkM", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "List()\n  .id('recyclerview_order_details')\n  .width('100%')\n  .height('auto')\n  .margin({ bottom: '3vp' })"}}], "details": null}, {"id": "gYi6Agt9BtCpYRMZRqPvCT", "description": "根据转译表转译组件v1", "subtasks": [{"id": "Dmta6YhNmTvQB55ZEHVQ2t", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<android.support.constraint.ConstraintLayout\n    android:id=\"@+id/ll_empty\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"10dp\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n    android:visibility=\"gone\">\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"169dp\"\n        android:layout_height=\"153dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/ic_message_black\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.26999998\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"No Orders Yet\"\n        android:textColor=\"@color/blue_grey\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n</android.support.constraint.ConstraintLayout>\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "约束布局容器，宽度占满父容器，高度占满父容器，外边距为8vp（左右）和10vp（顶部），背景颜色为白色，方向为垂直，初始状态为隐藏。\n- 图像视图，宽度为169vp，高度为153vp，外边距为8vp（上下左右），图像资源引用app.media.ic_message_black，位于父容器的中心，垂直偏移为0.27。\n- 文本视图，宽度自适应，高度自适应，外边距为8vp（上下左右），文本内容为“No Orders Yet”，文本颜色引用app.color.blue_grey，字体大小为20fp，位于图像视图的正下方，水平居中。", "function_description": "实现了一个约束布局容器，在容器中包含一个图像视图和一个文本视图。图像视图位于容器的中心，垂直偏移为0.27，显示app.media.ic_message_black图像，宽度和高度分别为169vp和153vp。在图像视图的正下方有一个文本视图，文本视图宽度和高度自适应，显示“No Orders Yet”，字体颜色引用了app.color.blue_grey资源，字体大小为20fp，水平居中。"}}}, {"id": "kaKDQoCBKbtuM54QFDhnn3", "description": "查询组件文档", "subtasks": [{"id": "hTcXQuynELPp2BkSBHHNRj", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['android.support.constraint.ConstraintLayout', 'ImageView', 'TextView']\n实现了一个约束布局容器，在容器中包含一个图像视图和一个文本视图。图像视图位于容器的中心，垂直偏移为0.27，显示app.media.ic_message_black图像，宽度和高度分别为169vp和153vp。在图像视图的正下方有一个文本视图，文本视图宽度和高度自适应，显示“No Orders Yet”，字体颜色引用了app.color.blue_grey资源，字体大小为20fp，水平居中。\n<android.support.constraint.ConstraintLayout\n    android:id=\"@+id/ll_empty\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"10dp\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n    android:visibility=\"gone\">\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"169dp\"\n        android:layout_height=\"153dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/ic_message_black\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.26999998\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"No Orders Yet\"\n        android:textColor=\"@color/blue_grey\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n</android.support.constraint.ConstraintLayout>\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["RelativeContainer", "Image", "Text"], "queries": [{"component": "RelativeContainer", "queries": ["设置容器布局的宽度和高度为match_parent", "设置容器的背景颜色", "设置容器的边距", "设置容器的可见性"]}, {"component": "Image", "queries": ["设置图像视图的宽度和高度", "设置图像视图的垂直偏移", "设置图像视图的资源路径", "设置图像视图的边距", "设置图像视图的约束布局属性"]}, {"component": "Text", "queries": ["设置文本视图的宽度和高度为wrap_content", "设置文本视图的文本内容", "设置文本视图的字体颜色", "设置文本视图的字体大小", "设置文本视图的边距", "设置文本视图的约束布局属性"]}], "idea": "选择RelativeContainer组件来实现ConstraintLayout的约束布局功能，使用Image组件来显示图像，使用Text组件来显示文本。通过设置这些组件的属性和布局约束，可以实现与安卓组件相同的功能和布局效果。"}}}, {"id": "UKHAFWoMR4TD52Cqi3hmun", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["RelativeContainer", "Image", "Text"], "queries": [{"component": "RelativeContainer", "queries": ["设置容器布局的宽度和高度为match_parent", "设置容器的背景颜色", "设置容器的边距", "设置容器的可见性"]}, {"component": "Image", "queries": ["设置图像视图的宽度和高度", "设置图像视图的垂直偏移", "设置图像视图的资源路径", "设置图像视图的边距", "设置图像视图的约束布局属性"]}, {"component": "Text", "queries": ["设置文本视图的宽度和高度为wrap_content", "设置文本视图的文本内容", "设置文本视图的字体颜色", "设置文本视图的字体大小", "设置文本视图的边距", "设置文本视图的约束布局属性"]}], "idea": "选择RelativeContainer组件来实现ConstraintLayout的约束布局功能，使用Image组件来显示图像，使用Text组件来显示文本。通过设置这些组件的属性和布局约束，可以实现与安卓组件相同的功能和布局效果。"}, "corrected_component_query": {"components": ["RelativeContainer", "Image", "Text"], "queries": [{"component": "RelativeContainer", "queries": ["设置容器布局的宽度和高度为match_parent", "设置容器的背景颜色", "设置容器的边距", "设置容器的可见性"]}, {"component": "Image", "queries": ["设置图像视图的宽度和高度", "设置图像视图的垂直偏移", "设置图像视图的资源路径", "设置图像视图的边距", "设置图像视图的约束布局属性"]}, {"component": "Text", "queries": ["设置文本视图的宽度和高度为wrap_content", "设置文本视图的文本内容", "设置文本视图的字体颜色", "设置文本视图的字体大小", "设置文本视图的边距", "设置文本视图的约束布局属性"]}], "idea": "选择RelativeContainer组件来实现ConstraintLayout的约束布局功能，使用Image组件来显示图像，使用Text组件来显示文本。通过设置这些组件的属性和布局约束，可以实现与安卓组件相同的功能和布局效果。"}}}, {"id": "Y5q2VoxW8gjFzV9oAhDSKP", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个约束布局容器，在容器中包含一个图像视图和一个文本视图。图像视图位于容器的中心，垂直偏移为0.27，显示app.media.ic_message_black图像，宽度和高度分别为169vp和153vp。在图像视图的正下方有一个文本视图，文本视图宽度和高度自适应，显示“No Orders Yet”，字体颜色引用了app.color.blue_grey资源，字体大小为20fp，水平居中。", "k": 3, "component_name": ["RelativeContainer", "Image", "Text"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "Text", "source": "harmony-component-example-doc", "table_id": 149}, "page_content": "该组件通过 Column 布局实现了一个展示文本样式的界面。布局宽度占据整个屏幕，内边距为 10vp。组件的垂直方向上被分为三个部分，每个部分包含一个 Text 组件。\n\n第一个 Text 组件用于显示标题 \"halfLeading\"，字体大小为 9vp，颜色为灰色（0xCCCCCC），外边距为 15vp，宽度占据父容器的 90%。\n\n第二个 Text 组件显示文本 \"This is the text with the halfLeading set.\"，行高为 60vp，启用了 halfLeading 属性，边框宽度为 1vp，宽度占据父容器的 80%。halfLeading 属性用于控制文本的行间距，当设置为 true 时，行间距会减半。\n\n第三个 Text 组件显示文本 \"This is the text without the halfLeading set.\"，行高为 60vp，禁用了 halfLeading 属性，边框宽度为 1vp，宽度占据父容器的 80%。当 halfLeading 属性设置为 false 时，行间距保持默认值。\n\n整个布局通过 Column 布局保证文本在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6869089007377625], [{"id": null, "metadata": {"component_name": "Text", "source": "harmony-component-example-doc", "table_id": 159}, "page_content": "该组件通过Column布局实现了一个包含文本和图像的展示界面。布局宽度占据整个屏幕，高度设为100%，内边距为25vp。组件的垂直方向上被分为两个部分，第一个部分包含一个带有边框的文本和图像区域，第二个部分包含一个自定义的菜单区域。\n文本和图像区域通过Column布局实现，宽度为200vp，高度为100vp，边框宽度为1vp，颜色为红色。文本和图像区域内的文本和图像通过Span和ImageSpan组件进行展示，文本内容为\"Hello World\"，图像内容为应用内的图标资源。文本和图像区域支持长按、右键点击和选择操作，分别触发不同的自定义菜单。\n自定义菜单区域通过Builder装饰器定义了三个不同的菜单，分别对应长按图像、右键点击文本和选择混合内容的操作。每个菜单包含一个Column布局，内部嵌套一个Menu组件，Menu组件内包含一个MenuItemGroup组件，MenuItemGroup组件内包含三个MenuItem组件。每个MenuItem组件包含一个图标、内容和点击事件，点击事件触发时关闭当前菜单。\n整个布局通过Column布局保证文本和图像区域在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6798479557037354], [{"id": null, "metadata": {"component_name": "Image", "source": "harmony-component-example-doc", "table_id": 222}, "page_content": "该组件通过 Flex 布局实现了一个展示多种图像及其 objectFit 效果的界面。布局宽度为 360vp，高度为 320vp，内边距为右侧 10vp、顶部 10vp。组件的垂直方向上被分为两个部分，每个部分包含两张图像。每张图像的宽度为 110vp，高度为 110vp，外边距为 15vp。图像的边框宽度为 2vp，颜色为粉色。图像的 objectFit 属性分别设置为不同的值，以展示不同的图像适应效果。\n图像的排列方式为水平布局，每行包含两张图像，图像之间的间距均匀分布，且对齐方式为居中对齐。图像的样式包括边框颜色、宽度和高度等属性，支持不同的样式展示。图像的功能包括 objectFit 效果，用户可以通过设置不同的 objectFit 属性来调整图像的显示效果。\n整个布局通过 Flex 布局保证图像在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6700583100318909]], "component_examples": {"Text": [{"description": "该组件通过 Column 布局实现了一个展示文本样式的界面。布局宽度占据整个屏幕，内边距为 10vp。组件的垂直方向上被分为三个部分，每个部分包含一个 Text 组件。\n\n第一个 Text 组件用于显示标题 \"halfLeading\"，字体大小为 9vp，颜色为灰色（0xCCCCCC），外边距为 15vp，宽度占据父容器的 90%。\n\n第二个 Text 组件显示文本 \"This is the text with the halfLeading set.\"，行高为 60vp，启用了 halfLeading 属性，边框宽度为 1vp，宽度占据父容器的 80%。halfLeading 属性用于控制文本的行间距，当设置为 true 时，行间距会减半。\n\n第三个 Text 组件显示文本 \"This is the text without the halfLeading set.\"，行高为 60vp，禁用了 halfLeading 属性，边框宽度为 1vp，宽度占据父容器的 80%。当 halfLeading 属性设置为 false 时，行间距保持默认值。\n\n整个布局通过 Column 布局保证文本在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct TextExample12 {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局，子组件之间的间距为 10vp\n\n      Text('halfLeading') // 创建一个 Text 组件，显示标题 \"halfLeading\"\n        .fontSize(9) // 设置字体大小为 9vp\n        .fontColor(0xCCCCCC) // 设置字体颜色为灰色（0xCCCCCC）\n        .margin(15) // 设置外边距为 15vp\n        .width('90%') // 设置宽度为父容器的 90%\n\n      Text(\"This is the text with the halfLeading set.\") // 创建一个 Text 组件，显示文本 \"This is the text with the halfLeading set.\"\n        .lineHeight(60) // 设置行高为 60vp\n        .halfLeading(true) // 启用 halfLeading 属性，行间距减半\n        .borderWidth(1) // 设置边框宽度为 1vp\n        .width('80%') // 设置宽度为父容器的 80%\n\n      Text(\"This is the text without the halfLeading set.\") // 创建一个 Text 组件，显示文本 \"This is the text without the halfLeading set.\"\n        .lineHeight(60) // 设置行高为 60vp\n        .halfLeading(false) // 禁用 halfLeading 属性，行间距保持默认值\n        .borderWidth(1) // 设置边框宽度为 1vp\n        .width('80%') // 设置宽度为父容器的 80%\n    }\n  }\n}"}, {"description": "该组件通过Column布局实现了一个包含文本和图像的展示界面。布局宽度占据整个屏幕，高度设为100%，内边距为25vp。组件的垂直方向上被分为两个部分，第一个部分包含一个带有边框的文本和图像区域，第二个部分包含一个自定义的菜单区域。\n文本和图像区域通过Column布局实现，宽度为200vp，高度为100vp，边框宽度为1vp，颜色为红色。文本和图像区域内的文本和图像通过Span和ImageSpan组件进行展示，文本内容为\"Hello World\"，图像内容为应用内的图标资源。文本和图像区域支持长按、右键点击和选择操作，分别触发不同的自定义菜单。\n自定义菜单区域通过Builder装饰器定义了三个不同的菜单，分别对应长按图像、右键点击文本和选择混合内容的操作。每个菜单包含一个Column布局，内部嵌套一个Menu组件，Menu组件内包含一个MenuItemGroup组件，MenuItemGroup组件内包含三个MenuItem组件。每个MenuItem组件包含一个图标、内容和点击事件，点击事件触发时关闭当前菜单。\n整个布局通过Column布局保证文本和图像区域在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct TextExample7 {\n  // 创建一个TextController实例，用于控制文本的选择和菜单的显示\n  controller: TextController = new TextController();\n  // 创建一个TextOptions实例，用于配置文本的控制器\n  options: TextOptions = { controller: this.controller };\n\n  build() {\n    Column() {\n      Column() {\n        // 创建一个Text组件，内容为undefined，使用options配置\n        Text(undefined, this.options) {\n          // 创建一个Span组件，内容为\"Hello World\"\n          Span('Hello World')\n          // 创建一个ImageSpan组件，内容为应用内的图标资源\n          ImageSpan($r('app.media.icon'))\n            .width('100px') // 设置图像宽度为100px\n            .height('100px') // 设置图像高度为100px\n            .objectFit(ImageFit.Fill) // 设置图像填充方式为完全填充\n            .verticalAlign(ImageSpanAlignment.CENTER) // 设置图像垂直对齐方式为居中\n        }\n        .copyOption(CopyOptions.InApp) // 设置文本的复制选项为仅在应用内复制\n        .bindSelectionMenu(TextSpanType.IMAGE, this.LongPressImageCustomMenu, TextResponseType.LONG_PRESS, {\n          onDisappear: () => {\n            console.info(`自定义选择菜单关闭时回调`); // 自定义选择菜单关闭时的回调函数\n          },\n          onAppear: () => {\n            console.info(`自定义选择菜单弹出时回调`); // 自定义选择菜单弹出时的回调函数\n          }\n        })\n        .bindSelectionMenu(TextSpanType.TEXT, this.RightClickTextCustomMenu, TextResponseType.RIGHT_CLICK) // 绑定文本的右键点击菜单\n        .bindSelectionMenu(TextSpanType.MIXED, this.SelectMixCustomMenu, TextResponseType.SELECT) // 绑定混合内容的选中菜单\n        .onTextSelectionChange((selectionStart: number, selectionEnd: number) => {\n          console.info(`文本选中区域变化回调, selectionStart: ${selectionStart}, selectionEnd: ${selectionEnd}`); // 文本选中区域变化时的回调函数\n        })\n        .borderWidth(1) // 设置边框宽度为1vp\n        .borderColor(Color.Red) // 设置边框颜色为红色\n        .width(200) // 设置宽度为200vp\n        .height(100) // 设置高度为100vp\n      }\n      .width('100%') // 设置宽度为100%\n      .backgroundColor(Color.White) // 设置背景颜色为白色\n      .alignItems(HorizontalAlign.Start) // 设置对齐方式为左对齐\n      .padding(25) // 设置内边距为25vp\n    }\n    .height('100%') // 设置高度为100%\n  }\n\n  // 定义右键点击文本时的自定义菜单\n  @Builder\n  RightClickTextCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n\n  // 定义长按图像时的自定义菜单\n  @Builder\n  LongPressImageCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n\n  // 定义选择混合内容时的自定义菜单\n  @Builder\n  SelectMixCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n}\n\n// 定义菜单的样式\n@Extend(Menu)\nfunction MenuStyles() {\n  .radius($r('sys.float.ohos_id_corner_radius_card')) // 设置菜单的圆角半径\n  .clip(true) // 设置菜单的裁剪方式为裁剪\n  .backgroundColor('#F0F0F0') // 设置菜单的背景颜色为浅灰色\n}"}], "Image": [{"description": "该组件通过 Flex 布局实现了一个展示多种图像及其 objectFit 效果的界面。布局宽度为 360vp，高度为 320vp，内边距为右侧 10vp、顶部 10vp。组件的垂直方向上被分为两个部分，每个部分包含两张图像。每张图像的宽度为 110vp，高度为 110vp，外边距为 15vp。图像的边框宽度为 2vp，颜色为粉色。图像的 objectFit 属性分别设置为不同的值，以展示不同的图像适应效果。\n图像的排列方式为水平布局，每行包含两张图像，图像之间的间距均匀分布，且对齐方式为居中对齐。图像的样式包括边框颜色、宽度和高度等属性，支持不同的样式展示。图像的功能包括 objectFit 效果，用户可以通过设置不同的 objectFit 属性来调整图像的显示效果。\n整个布局通过 Flex 布局保证图像在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct ImageExample {\n  build() {\n    Column() {\n      Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start }) {\n        Row() {\n          // 第一张图像，资源名为 app.media.sky，宽度为 110vp，高度为 110vp，外边距为 15vp，边框宽度为 2vp，颜色为粉色，objectFit 属性设置为 ImageFit.TOP_START\n          Image($r('app.media.sky'))\n            .width(110).height(110).margin(15)\n            .overlay('png', { align: Alignment.Bottom, offset: { x: 0, y: 20 } })\n            .border({ width: 2, color: Color.Pink })\n            .objectFit(ImageFit.TOP_START)\n\n          // 第二张图像，资源名为 app.media.loading，宽度为 110vp，高度为 110vp，外边距为 15vp，边框宽度为 2vp，颜色为粉色，objectFit 属性设置为 ImageFit.BOTTOM_START\n          Image($r('app.media.loading'))\n            .width(110).height(110).margin(15)\n            .overlay('gif', { align: Alignment.Bottom, offset: { x: 0, y: 20 } })\n            .border({ width: 2, color: Color.Pink })\n            .objectFit(ImageFit.BOTTOM_START)\n        }\n        Row() {\n          // 第三张图像，资源名为 app.media.svg，宽度为 110vp，高度为 110vp，外边距为 15vp，边框宽度为 2vp，颜色为粉色，objectFit 属性设置为 ImageFit.TOP_END\n          Image($r('app.media.svg'))\n            .width(110).height(110).margin(15)\n            .overlay('svg', { align: Alignment.Bottom, offset: { x: 0, y: 20 } })\n            .border({ width: 2, color: Color.Pink })\n            .objectFit(ImageFit.TOP_END)\n\n          // 第四张图像，资源名为 app.media.jpg，宽度为 110vp，高度为 110vp，外边距为 15vp，边框宽度为 2vp，颜色为粉色，objectFit 属性设置为 ImageFit.CENTER\n          Image($r('app.media.jpg'))\n            .width(110).height(110).margin(15)\n            .overlay('jpg', { align: Alignment.Bottom, offset: { x: 0, y: 20 } })\n            .border({ width: 2, color: Color.Pink })\n            .objectFit(ImageFit.CENTER)\n        }\n      }\n    }.height(320).width(360).padding({ right: 10, top: 10 })\n  }\n}"}]}}}, {"id": "aikLkxP7S9NBBRUTRdVk7p", "description": "查询组件文档", "subtasks": [{"id": "jPBoyhqFbm6f9bMsm9Qurt", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "chzQ96UhLnHswGyjRzW7hm", "description": "查询组件RelativeContainer的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置容器布局的宽度和高度为match_parent", "设置容器的背景颜色", "设置容器的边距", "设置容器的可见性"], "n_results": 10, "query_results": {"ids": [["3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3b346f3c-3633-48c0-8818-19298f847010", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "a60e508e-c659-4421-ac03-635023bfd48b", "83d130bd-f5c0-4367-837b-4f78d745876c", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "17168701-4515-4bd1-adab-7c82d6e2594c", "f808797e-8ece-4205-900e-3df29812f76d"], ["3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "f808797e-8ece-4205-900e-3df29812f76d", "d8bfc528-3745-4c32-a03e-b157fbda5775", "17168701-4515-4bd1-adab-7c82d6e2594c", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "d218b9aa-e5f5-4053-9b2a-ead5614a1505", "211e6dd1-0565-438a-9215-164b822d7a98", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "3b346f3c-3633-48c0-8818-19298f847010"], ["f808797e-8ece-4205-900e-3df29812f76d", "697ccc64-521e-43fa-856a-82ed587a7cd0", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "ebfc6e4a-6704-427e-8bb1-e984d106ffb0", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "a60e508e-c659-4421-ac03-635023bfd48b", "17168701-4515-4bd1-adab-7c82d6e2594c", "211e6dd1-0565-438a-9215-164b822d7a98"], ["1e71e552-71d5-4a32-9d22-ad916a0cbedd", "f808797e-8ece-4205-900e-3df29812f76d", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "17168701-4515-4bd1-adab-7c82d6e2594c", "211e6dd1-0565-438a-9215-164b822d7a98", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "a60e508e-c659-4421-ac03-635023bfd48b", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "3b346f3c-3633-48c0-8818-19298f847010"]], "distances": [[0.3507591485977173, 0.3567275404930115, 0.35888075828552246, 0.377763032913208, 0.3841838240623474, 0.38655853271484375, 0.39005303382873535, 0.3934345245361328, 0.4041830897331238, 0.41500693559646606], [0.3695453405380249, 0.3955349922180176, 0.41047632694244385, 0.41435831785202026, 0.4196551442146301, 0.4249314069747925, 0.42666274309158325, 0.438167929649353, 0.4415152072906494, 0.4450293183326721], [0.34461474418640137, 0.3456745147705078, 0.35548990964889526, 0.35722047090530396, 0.3673893213272095, 0.38306254148483276, 0.3911699652671814, 0.3956337571144104, 0.3968037962913513, 0.40189701318740845], [0.3560279607772827, 0.3761703372001648, 0.39330554008483887, 0.3948670029640198, 0.4006398320198059, 0.40719956159591675, 0.42317771911621094, 0.4349190592765808, 0.4443398714065552, 0.4534826874732971]], "metadatas": [[{"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n"], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], ["设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n"], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "jQZia8GF93JW5mvSoBzxU2", "description": "查询组件Image的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置图像视图的宽度和高度", "设置图像视图的垂直偏移", "设置图像视图的资源路径", "设置图像视图的边距", "设置图像视图的约束布局属性"], "n_results": 10, "query_results": {"ids": [["fbaf4c7f-24a8-45c2-b1f3-5e316867163f", "16d2a454-aec5-4a67-8522-da1b0d6a20ae", "48715149-f0ac-4328-9429-801f894ef8e9", "fa66a688-14fe-4006-a250-63f31adfb281", "ed850cab-af82-45d6-ba4f-d03878b46941", "760646e4-25ee-45c7-afff-c0e6ba5753fc", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "624c354e-ece1-4b2d-8a3c-0da079a30c47", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac"], ["e77f2930-81d3-4299-a8e2-d93f901ff6d0", "621abd37-14ff-4471-bd8a-2b44d6483327", "fa66a688-14fe-4006-a250-63f31adfb281", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "f68cc22f-3764-46df-b286-650d3c8c736d", "fbaf4c7f-24a8-45c2-b1f3-5e316867163f", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "e00f8a63-c4a4-425e-817c-3ec42c9e5580"], ["f68cc22f-3764-46df-b286-650d3c8c736d", "e00f8a63-c4a4-425e-817c-3ec42c9e5580", "621abd37-14ff-4471-bd8a-2b44d6483327", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "bd88bdf5-c228-4034-af03-225c2d433083", "8c7ce776-da25-45a7-aa7d-7568be72f79e", "521cad3e-49c5-44ec-8d86-57570299ede3", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "fa66a688-14fe-4006-a250-63f31adfb281"], ["ba0be2fa-7555-43e2-9a1d-610c804a3568", "d73b2978-b9b4-4342-997a-e6adce9503cc", "624c354e-ece1-4b2d-8a3c-0da079a30c47", "fbaf4c7f-24a8-45c2-b1f3-5e316867163f", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "fa66a688-14fe-4006-a250-63f31adfb281", "ed850cab-af82-45d6-ba4f-d03878b46941", "468a2b7c-8de8-4156-8561-ceee4e2553d3", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3"], ["624c354e-ece1-4b2d-8a3c-0da079a30c47", "f68cc22f-3764-46df-b286-650d3c8c736d", "b93f58c9-bbb2-452a-a412-9b88187fa27e", "888cef60-be06-40bd-8e10-82847d2302e6", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "550eaa20-f59b-42cf-b296-ff4406cffec6", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "fa66a688-14fe-4006-a250-63f31adfb281", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "f441e5f1-46ec-4771-bc25-220ed4536050"]], "distances": [[0.3570767045021057, 0.3763000965118408, 0.37723225355148315, 0.3778662085533142, 0.3801647424697876, 0.38043904304504395, 0.3820963501930237, 0.39753007888793945, 0.4015953540802002, 0.40540164709091187], [0.34958553314208984, 0.3845745325088501, 0.42529261112213135, 0.43532973527908325, 0.43652451038360596, 0.4391542673110962, 0.44742923974990845, 0.44805800914764404, 0.45522361993789673, 0.460928738117218], [0.39720165729522705, 0.4079170227050781, 0.4243689179420471, 0.4328668713569641, 0.4388110041618347, 0.4455081820487976, 0.45994144678115845, 0.46006476879119873, 0.4652321934700012, 0.466106116771698], [0.3544274568557739, 0.3566265106201172, 0.4224449396133423, 0.42516064643859863, 0.4291311502456665, 0.4303838610649109, 0.43243682384490967, 0.43311166763305664, 0.44180452823638916, 0.44306230545043945], [0.3336189389228821, 0.36326998472213745, 0.3681236505508423, 0.370194673538208, 0.3707771897315979, 0.38350576162338257, 0.4074401259422302, 0.4101378917694092, 0.410439670085907, 0.42215925455093384]], "metadatas": [[{"component_name": "Image", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "onComplete", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Image", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Image", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "colorFilter", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Image", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "图片数据加载成功和解码成功时均触发该回调，返回成功加载的图片尺寸。\n事件名称：onComplete\n事件参数：{'width': {\"type\":\"number\",\"required\":true,\"description\":\"图片的宽。单位：像素\",\"default\":null}, 'height': {\"type\":\"number\",\"required\":true,\"description\":\"图片的高。单位：像素\",\"default\":null}, 'componentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"组件的宽。单位：像素\",\"default\":null}, 'componentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"组件的高。单位：像素\",\"default\":null}, 'loadingStatus': {\"type\":\"number\",\"required\":true,\"description\":\"图片加载成功的状态值。返回的状态值为0时，表示图片数据加载成功。返回的状态值为1时，表示图片解码成功。\",\"default\":null}, 'contentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"图片实际绘制的宽度。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"图片实际绘制的高度。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentOffsetX': {\"type\":\"number\",\"required\":true,\"description\":\"实际绘制内容相对于组件自身的x轴偏移。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentOffsetY': {\"type\":\"number\",\"required\":true,\"description\":\"实际绘制内容相对于组件自身的y轴偏移。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}}\n事件返回值：None\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n"], ["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n"], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n"], ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "为图像设置颜色滤镜效果。\n属性名称：colorFilter\n属性参数：{'value': {\"type\":[\"ColorFilter\",\"DrawingColorFilter\"],\"required\":true,\"description\":\"给图像设置颜色滤镜效果，入参为一个的4x5的RGBA转换矩阵。\",\"default\":null}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n"], ["设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "kBRLyukuvj9LVRxW3mabNW", "description": "查询组件Text的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置文本视图的宽度和高度为wrap_content", "设置文本视图的文本内容", "设置文本视图的字体颜色", "设置文本视图的字体大小", "设置文本视图的边距", "设置文本视图的约束布局属性"], "n_results": 10, "query_results": {"ids": [["ff90f708-e4a0-4ddd-9766-66cebd6d085b", "31c5a7b7-60c3-4649-8644-b0a2fc095b6f", "d8bc2806-84bc-434e-9335-e45884b29fdc", "4b0a480c-d137-4596-a2b4-457b1f4fb17a", "32833a89-f214-41b3-b4b5-b3bf484b9230", "8118cdf0-c371-44ed-92b5-efbd530d8f86", "11431e7a-21f1-4be2-9d63-6ecd919e4dfa", "60f66ae1-4726-41fe-aebc-ab7908423a33", "9fb81972-af49-45a6-b163-3f019a5c4c58", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4"], ["6f72f2b5-8af2-4583-9413-44e7d271080c", "4b0a480c-d137-4596-a2b4-457b1f4fb17a", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "8fa42d3a-996d-4735-93af-846bf32dd907", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "6be53b16-d33e-4360-a82a-69054e0ff19a", "5b01f32f-e789-47af-86a4-df5a864c92c4", "83aa933b-cac2-47db-b828-510d20ee52b7", "51be7c3a-a32c-44a8-83f2-767fe1afbea1", "31c5a7b7-60c3-4649-8644-b0a2fc095b6f"], ["8f8332f1-4022-4fdd-8c82-0fe34be3bdf4", "5b01f32f-e789-47af-86a4-df5a864c92c4", "83aa933b-cac2-47db-b828-510d20ee52b7", "ef12c73a-8411-4320-a5ea-0d39e643de12", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "8ad449dc-70c4-4376-976c-a2ca44f8d20a", "d16166ab-76f1-41d1-8747-acff1641b70e", "6f72f2b5-8af2-4583-9413-44e7d271080c", "8fa42d3a-996d-4735-93af-846bf32dd907", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4"], ["ef12c73a-8411-4320-a5ea-0d39e643de12", "d16166ab-76f1-41d1-8747-acff1641b70e", "45373205-4066-4c33-9afc-35117484cdff", "95d6034b-0f1e-4b0c-9cde-a1202e601b71", "31c5a7b7-60c3-4649-8644-b0a2fc095b6f", "83aa933b-cac2-47db-b828-510d20ee52b7", "7d244f16-d5b4-423b-bdc7-c31d40bd72b3", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412", "ff90f708-e4a0-4ddd-9766-66cebd6d085b", "6be53b16-d33e-4360-a82a-69054e0ff19a"], ["6be53b16-d33e-4360-a82a-69054e0ff19a", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412", "6c33a734-dd70-4df6-9ed4-0f6515dd62e1", "e8d267cd-9f9a-4b14-816c-08b50f4b4800", "31c5a7b7-60c3-4649-8644-b0a2fc095b6f", "6f72f2b5-8af2-4583-9413-44e7d271080c", "05f60999-aacb-4ef0-ab9f-e81def2c3732", "94ed9170-77a3-4809-a47a-4d7dc3d72e1e", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "4b0a480c-d137-4596-a2b4-457b1f4fb17a"], ["9fb81972-af49-45a6-b163-3f019a5c4c58", "ce0d9d0f-bf44-49f2-96b8-a642cf6e18c0", "6f72f2b5-8af2-4583-9413-44e7d271080c", "8118cdf0-c371-44ed-92b5-efbd530d8f86", "11431e7a-21f1-4be2-9d63-6ecd919e4dfa", "330f26b8-a1ad-4746-8edf-b58e2c4f8653", "588549ec-b8a6-496b-8795-3be82ca87021", "6be53b16-d33e-4360-a82a-69054e0ff19a", "5b01f32f-e789-47af-86a4-df5a864c92c4", "ff90f708-e4a0-4ddd-9766-66cebd6d085b"]], "distances": [[0.3975332975387573, 0.41564512252807617, 0.42042601108551025, 0.4220927357673645, 0.4253273606300354, 0.42663365602493286, 0.4299541115760803, 0.4314325451850891, 0.43417447805404663, 0.4388880729675293], [0.3798040747642517, 0.38539350032806396, 0.38657689094543457, 0.3900296688079834, 0.3962253928184509, 0.3968994617462158, 0.4007537364959717, 0.40638405084609985, 0.4102146625518799, 0.4107440710067749], [0.32891756296157837, 0.3380463123321533, 0.37977027893066406, 0.3943589925765991, 0.39725029468536377, 0.4043777585029602, 0.40521663427352905, 0.4058747887611389, 0.4061901569366455, 0.4129279851913452], [0.3218229413032532, 0.3320487141609192, 0.3397085666656494, 0.3466241955757141, 0.3502125144004822, 0.3583971858024597, 0.36257368326187134, 0.38701117038726807, 0.3871724009513855, 0.3946150541305542], [0.32861649990081787, 0.36586111783981323, 0.37563997507095337, 0.37952351570129395, 0.3955655097961426, 0.41665035486221313, 0.41874104738235474, 0.419083833694458, 0.4214344024658203, 0.42204123735427856], [0.34918034076690674, 0.35271161794662476, 0.35813021659851074, 0.3615272641181946, 0.37454092502593994, 0.38957470655441284, 0.4041338562965393, 0.40617620944976807, 0.4061797261238098, 0.41909992694854736]], "metadatas": [[{"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textSelectable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Text", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textCase", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxFontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Text", "name": "textCase", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxFontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "fontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "fontWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "minFontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "baselineOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxLines", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n"], ["设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", "设置是否支持文本可选择、可获焦以及Touch后能否获取焦点。\n属性名称：textSelectable\n属性参数：{'value': {\"type\":\"TextSelectableMode\",\"required\":true,\"description\":\"文本是否支持可选择、可获焦。\",\"default\":\"TextSelectableMode.SELECTABLE_UNFOCUSABLE\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n"], ["设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", "设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n"], ["设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n", "设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n", "设置字体大小。\n属性名称：fontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"字体大小。fontSize为number类型时，使用fp单位。字体默认大小16fp。不支持设置百分比字符串。\",\"default\":\"16fp\"}}\n", "设置文本的字体粗细，设置过大可能会在不同字体下有截断。\n属性名称：fontWeight\n属性参数：{'value': {\"type\":[\"number\",\"FontWeight\",\"string\"],\"required\":true,\"description\":\"文本的字体粗细，number类型取值[100, 900]，取值间隔为100，默认为400，取值越大，字体越粗。string类型仅支持number类型取值的字符串形式，例如\\\"400\\\"，以及\\\"bold\\\"、\\\"bolder\\\"、\\\"lighter\\\"、\\\"regular\\\"、\\\"medium\\\"，分别对应FontWeight中相应的枚举值。默认值：FontWeight.Normal\",\"default\":\"FontWeight.Normal\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", "设置文本最小显示字号。\n属性名称：minFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最小显示字号。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n"], ["设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本基线的偏移量，设置该值为百分比时，按默认值显示。\n属性名称：baselineOffset\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本基线的偏移量。\",\"default\":0}}\n", "设置文本的最大行数。\n属性名称：maxLines\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大行数。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n"], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "3tPpJi4vY8acFuXQNi6sXQ", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "B85YnozxBKASDK3dXL6qmv", "description": "过滤低于阈值的查询结果: 设置容器布局的宽度和高度为match_parent", "subtasks": [], "details": {"query": "设置容器布局的宽度和高度为match_parent", "result_ids": ["3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3b346f3c-3633-48c0-8818-19298f847010", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "a60e508e-c659-4421-ac03-635023bfd48b", "83d130bd-f5c0-4367-837b-4f78d745876c", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "17168701-4515-4bd1-adab-7c82d6e2594c", "f808797e-8ece-4205-900e-3df29812f76d"], "result_documents": ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3507591485977173, 0.3567275404930115, 0.35888075828552246, 0.377763032913208, 0.3841838240623474, 0.38655853271484375, 0.39005303382873535, 0.3934345245361328, 0.4041830897331238, 0.41500693559646606], "threshold": 0.6, "query_text_results": [["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6492408514022827], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6432724595069885], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6411192417144775], ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.622236967086792], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6158161759376526], ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, 0.6134414672851562], ["子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, 0.6099469661712646], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.6065654754638672]]}}, {"id": "mZX96kRC2LXeuEfGH4YyeQ", "description": "过滤低于阈值的查询结果: 设置容器的背景颜色", "subtasks": [], "details": {"query": "设置容器的背景颜色", "result_ids": ["3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "f808797e-8ece-4205-900e-3df29812f76d", "d8bfc528-3745-4c32-a03e-b157fbda5775", "17168701-4515-4bd1-adab-7c82d6e2594c", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "d218b9aa-e5f5-4053-9b2a-ead5614a1505", "211e6dd1-0565-438a-9215-164b822d7a98", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "3b346f3c-3633-48c0-8818-19298f847010"], "result_documents": ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3695453405380249, 0.3955349922180176, 0.41047632694244385, 0.41435831785202026, 0.4196551442146301, 0.4249314069747925, 0.42666274309158325, 0.438167929649353, 0.4415152072906494, 0.4450293183326721], "threshold": 0.6, "query_text_results": [["设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, 0.6044650077819824]]}}, {"id": "KWAYzkTMvuEV9BLkfeG6mx", "description": "过滤低于阈值的查询结果: 设置容器的边距", "subtasks": [], "details": {"query": "设置容器的边距", "result_ids": ["f808797e-8ece-4205-900e-3df29812f76d", "697ccc64-521e-43fa-856a-82ed587a7cd0", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "ebfc6e4a-6704-427e-8bb1-e984d106ffb0", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "a60e508e-c659-4421-ac03-635023bfd48b", "17168701-4515-4bd1-adab-7c82d6e2594c", "211e6dd1-0565-438a-9215-164b822d7a98"], "result_documents": ["设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.34461474418640137, 0.3456745147705078, 0.35548990964889526, 0.35722047090530396, 0.3673893213272095, 0.38306254148483276, 0.3911699652671814, 0.3956337571144104, 0.3968037962913513, 0.40189701318740845], "threshold": 0.6, "query_text_results": [["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, 0.6543254852294922], ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, 0.642779529094696], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6031962037086487]]}}, {"id": "7nzXWhKFuBFZN6WzgS3jh5", "description": "过滤低于阈值的查询结果: 设置容器的可见性", "subtasks": [], "details": {"query": "设置容器的可见性", "result_ids": ["1e71e552-71d5-4a32-9d22-ad916a0cbedd", "f808797e-8ece-4205-900e-3df29812f76d", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "17168701-4515-4bd1-adab-7c82d6e2594c", "211e6dd1-0565-438a-9215-164b822d7a98", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "a60e508e-c659-4421-ac03-635023bfd48b", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "3b346f3c-3633-48c0-8818-19298f847010"], "result_documents": ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3560279607772827, 0.3761703372001648, 0.39330554008483887, 0.3948670029640198, 0.4006398320198059, 0.40719956159591675, 0.42317771911621094, 0.4349190592765808, 0.4443398714065552, 0.4534826874732971], "threshold": 0.6, "query_text_results": []}}], "details": null}, {"id": "dVWYk287ptpKtgyciGiawJ", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "ZRTxX73LpqqFF2iGFgBVmT", "description": "过滤低于阈值的查询结果: 设置图像视图的宽度和高度", "subtasks": [], "details": {"query": "设置图像视图的宽度和高度", "result_ids": ["fbaf4c7f-24a8-45c2-b1f3-5e316867163f", "16d2a454-aec5-4a67-8522-da1b0d6a20ae", "48715149-f0ac-4328-9429-801f894ef8e9", "fa66a688-14fe-4006-a250-63f31adfb281", "ed850cab-af82-45d6-ba4f-d03878b46941", "760646e4-25ee-45c7-afff-c0e6ba5753fc", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "624c354e-ece1-4b2d-8a3c-0da079a30c47", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac"], "result_documents": ["指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "图片数据加载成功和解码成功时均触发该回调，返回成功加载的图片尺寸。\n事件名称：onComplete\n事件参数：{'width': {\"type\":\"number\",\"required\":true,\"description\":\"图片的宽。单位：像素\",\"default\":null}, 'height': {\"type\":\"number\",\"required\":true,\"description\":\"图片的高。单位：像素\",\"default\":null}, 'componentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"组件的宽。单位：像素\",\"default\":null}, 'componentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"组件的高。单位：像素\",\"default\":null}, 'loadingStatus': {\"type\":\"number\",\"required\":true,\"description\":\"图片加载成功的状态值。返回的状态值为0时，表示图片数据加载成功。返回的状态值为1时，表示图片解码成功。\",\"default\":null}, 'contentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"图片实际绘制的宽度。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"图片实际绘制的高度。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentOffsetX': {\"type\":\"number\",\"required\":true,\"description\":\"实际绘制内容相对于组件自身的x轴偏移。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentOffsetY': {\"type\":\"number\",\"required\":true,\"description\":\"实际绘制内容相对于组件自身的y轴偏移。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}}\n事件返回值：None\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n"], "result_metadatas": [{"component_name": "Image", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "onComplete", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3570767045021057, 0.3763000965118408, 0.37723225355148315, 0.3778662085533142, 0.3801647424697876, 0.38043904304504395, 0.3820963501930237, 0.39753007888793945, 0.4015953540802002, 0.40540164709091187], "threshold": 0.6, "query_text_results": [["指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", {"component_name": "Image", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, 0.6429232954978943], ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "Image", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6236999034881592], ["设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", {"component_name": "Image", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, 0.6227677464485168], ["设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, 0.6221337914466858], ["设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", {"component_name": "Image", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, 0.6198352575302124], ["图片数据加载成功和解码成功时均触发该回调，返回成功加载的图片尺寸。\n事件名称：onComplete\n事件参数：{'width': {\"type\":\"number\",\"required\":true,\"description\":\"图片的宽。单位：像素\",\"default\":null}, 'height': {\"type\":\"number\",\"required\":true,\"description\":\"图片的高。单位：像素\",\"default\":null}, 'componentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"组件的宽。单位：像素\",\"default\":null}, 'componentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"组件的高。单位：像素\",\"default\":null}, 'loadingStatus': {\"type\":\"number\",\"required\":true,\"description\":\"图片加载成功的状态值。返回的状态值为0时，表示图片数据加载成功。返回的状态值为1时，表示图片解码成功。\",\"default\":null}, 'contentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"图片实际绘制的宽度。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"图片实际绘制的高度。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentOffsetX': {\"type\":\"number\",\"required\":true,\"description\":\"实际绘制内容相对于组件自身的x轴偏移。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentOffsetY': {\"type\":\"number\",\"required\":true,\"description\":\"实际绘制内容相对于组件自身的y轴偏移。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}}\n事件返回值：None\n", {"component_name": "Image", "name": "onComplete", "source": "harmony-component-doc", "type": "event"}, 0.619560956954956], ["设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, 0.6179036498069763], ["设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6024699211120605]]}}, {"id": "exsNgKDrmGaWQAz28sNAZp", "description": "过滤低于阈值的查询结果: 设置图像视图的垂直偏移", "subtasks": [], "details": {"query": "设置图像视图的垂直偏移", "result_ids": ["e77f2930-81d3-4299-a8e2-d93f901ff6d0", "621abd37-14ff-4471-bd8a-2b44d6483327", "fa66a688-14fe-4006-a250-63f31adfb281", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "f68cc22f-3764-46df-b286-650d3c8c736d", "fbaf4c7f-24a8-45c2-b1f3-5e316867163f", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "e00f8a63-c4a4-425e-817c-3ec42c9e5580"], "result_documents": ["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Image", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.34958553314208984, 0.3845745325088501, 0.42529261112213135, 0.43532973527908325, 0.43652451038360596, 0.4391542673110962, 0.44742923974990845, 0.44805800914764404, 0.45522361993789673, 0.460928738117218], "threshold": 0.6, "query_text_results": [["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", {"component_name": "Image", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, 0.6504144668579102], ["设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, 0.6154254674911499]]}}, {"id": "Ba9zvq6usosghCVrRBL8LX", "description": "过滤低于阈值的查询结果: 设置图像视图的资源路径", "subtasks": [], "details": {"query": "设置图像视图的资源路径", "result_ids": ["f68cc22f-3764-46df-b286-650d3c8c736d", "e00f8a63-c4a4-425e-817c-3ec42c9e5580", "621abd37-14ff-4471-bd8a-2b44d6483327", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "bd88bdf5-c228-4034-af03-225c2d433083", "8c7ce776-da25-45a7-aa7d-7568be72f79e", "521cad3e-49c5-44ec-8d86-57570299ede3", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "fa66a688-14fe-4006-a250-63f31adfb281"], "result_documents": ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.39720165729522705, 0.4079170227050781, 0.4243689179420471, 0.4328668713569641, 0.4388110041618347, 0.4455081820487976, 0.45994144678115845, 0.46006476879119873, 0.4652321934700012, 0.466106116771698], "threshold": 0.6, "query_text_results": [["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.602798342704773]]}}, {"id": "8q66W3KmntqsYffyBFEtBL", "description": "过滤低于阈值的查询结果: 设置图像视图的边距", "subtasks": [], "details": {"query": "设置图像视图的边距", "result_ids": ["ba0be2fa-7555-43e2-9a1d-610c804a3568", "d73b2978-b9b4-4342-997a-e6adce9503cc", "624c354e-ece1-4b2d-8a3c-0da079a30c47", "fbaf4c7f-24a8-45c2-b1f3-5e316867163f", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "fa66a688-14fe-4006-a250-63f31adfb281", "ed850cab-af82-45d6-ba4f-d03878b46941", "468a2b7c-8de8-4156-8561-ceee4e2553d3", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3"], "result_documents": ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "为图像设置颜色滤镜效果。\n属性名称：colorFilter\n属性参数：{'value': {\"type\":[\"ColorFilter\",\"DrawingColorFilter\"],\"required\":true,\"description\":\"给图像设置颜色滤镜效果，入参为一个的4x5的RGBA转换矩阵。\",\"default\":null}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n"], "result_metadatas": [{"component_name": "Image", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "colorFilter", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3544274568557739, 0.3566265106201172, 0.4224449396133423, 0.42516064643859863, 0.4291311502456665, 0.4303838610649109, 0.43243682384490967, 0.43311166763305664, 0.44180452823638916, 0.44306230545043945], "threshold": 0.6, "query_text_results": [["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "Image", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, 0.6455725431442261], ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "Image", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, 0.6433734893798828]]}}, {"id": "9EsivcSQH332KKWNeXa7CR", "description": "过滤低于阈值的查询结果: 设置图像视图的约束布局属性", "subtasks": [], "details": {"query": "设置图像视图的约束布局属性", "result_ids": ["624c354e-ece1-4b2d-8a3c-0da079a30c47", "f68cc22f-3764-46df-b286-650d3c8c736d", "b93f58c9-bbb2-452a-a412-9b88187fa27e", "888cef60-be06-40bd-8e10-82847d2302e6", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "550eaa20-f59b-42cf-b296-ff4406cffec6", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "fa66a688-14fe-4006-a250-63f31adfb281", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "f441e5f1-46ec-4771-bc25-220ed4536050"], "result_documents": ["设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n"], "result_metadatas": [{"component_name": "Image", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3336189389228821, 0.36326998472213745, 0.3681236505508423, 0.370194673538208, 0.3707771897315979, 0.38350576162338257, 0.4074401259422302, 0.4101378917694092, 0.410439670085907, 0.42215925455093384], "threshold": 0.6, "query_text_results": [["设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", {"component_name": "Image", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6663810610771179], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "Image", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6318763494491577], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Image", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.629805326461792], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6292228102684021], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6164942383766174]]}}], "details": null}, {"id": "SDYe6fWMpZdjVnku9vEEA3", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "2sJ5uEAqYq9xUAzJVUAoPH", "description": "过滤低于阈值的查询结果: 设置文本视图的宽度和高度为wrap_content", "subtasks": [], "details": {"query": "设置文本视图的宽度和高度为wrap_content", "result_ids": ["ff90f708-e4a0-4ddd-9766-66cebd6d085b", "31c5a7b7-60c3-4649-8644-b0a2fc095b6f", "d8bc2806-84bc-434e-9335-e45884b29fdc", "4b0a480c-d137-4596-a2b4-457b1f4fb17a", "32833a89-f214-41b3-b4b5-b3bf484b9230", "8118cdf0-c371-44ed-92b5-efbd530d8f86", "11431e7a-21f1-4be2-9d63-6ecd919e4dfa", "60f66ae1-4726-41fe-aebc-ab7908423a33", "9fb81972-af49-45a6-b163-3f019a5c4c58", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4"], "result_documents": ["设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n"], "result_metadatas": [{"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3975332975387573, 0.41564512252807617, 0.42042601108551025, 0.4220927357673645, 0.4253273606300354, 0.42663365602493286, 0.4299541115760803, 0.4314325451850891, 0.43417447805404663, 0.4388880729675293], "threshold": 0.6, "query_text_results": [["设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", {"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, 0.6024667024612427]]}}, {"id": "ZwGUczwaSX2fhGAfg79Tyr", "description": "过滤低于阈值的查询结果: 设置文本视图的文本内容", "subtasks": [], "details": {"query": "设置文本视图的文本内容", "result_ids": ["6f72f2b5-8af2-4583-9413-44e7d271080c", "4b0a480c-d137-4596-a2b4-457b1f4fb17a", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "8fa42d3a-996d-4735-93af-846bf32dd907", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "6be53b16-d33e-4360-a82a-69054e0ff19a", "5b01f32f-e789-47af-86a4-df5a864c92c4", "83aa933b-cac2-47db-b828-510d20ee52b7", "51be7c3a-a32c-44a8-83f2-767fe1afbea1", "31c5a7b7-60c3-4649-8644-b0a2fc095b6f"], "result_documents": ["设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", "设置是否支持文本可选择、可获焦以及Touch后能否获取焦点。\n属性名称：textSelectable\n属性参数：{'value': {\"type\":\"TextSelectableMode\",\"required\":true,\"description\":\"文本是否支持可选择、可获焦。\",\"default\":\"TextSelectableMode.SELECTABLE_UNFOCUSABLE\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textSelectable", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3798040747642517, 0.38539350032806396, 0.38657689094543457, 0.3900296688079834, 0.3962253928184509, 0.3968994617462158, 0.4007537364959717, 0.40638405084609985, 0.4102146625518799, 0.4107440710067749], "threshold": 0.6, "query_text_results": [["设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, 0.6201959252357483], ["设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, 0.614606499671936], ["设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, 0.6134231090545654], ["设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, 0.6099703311920166], ["设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, 0.6037746071815491], ["设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, 0.6031005382537842]]}}, {"id": "cdNBQQgmABwDtP2rhrxFRD", "description": "过滤低于阈值的查询结果: 设置文本视图的字体颜色", "subtasks": [], "details": {"query": "设置文本视图的字体颜色", "result_ids": ["8f8332f1-4022-4fdd-8c82-0fe34be3bdf4", "5b01f32f-e789-47af-86a4-df5a864c92c4", "83aa933b-cac2-47db-b828-510d20ee52b7", "ef12c73a-8411-4320-a5ea-0d39e643de12", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "8ad449dc-70c4-4376-976c-a2ca44f8d20a", "d16166ab-76f1-41d1-8747-acff1641b70e", "6f72f2b5-8af2-4583-9413-44e7d271080c", "8fa42d3a-996d-4735-93af-846bf32dd907", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4"], "result_documents": ["设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", "设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n"], "result_metadatas": [{"component_name": "Text", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textCase", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxFontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.32891756296157837, 0.3380463123321533, 0.37977027893066406, 0.3943589925765991, 0.39725029468536377, 0.4043777585029602, 0.40521663427352905, 0.4058747887611389, 0.4061901569366455, 0.4129279851913452], "threshold": 0.6, "query_text_results": [["设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", {"component_name": "Text", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, 0.6710824370384216], ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, 0.6619536876678467], ["设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, 0.6202297210693359], ["设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n", {"component_name": "Text", "name": "textCase", "source": "harmony-component-doc", "type": "attribute"}, 0.6056410074234009]]}}, {"id": "gqmr9XEdT3DvZD4LC5goBJ", "description": "过滤低于阈值的查询结果: 设置文本视图的字体大小", "subtasks": [], "details": {"query": "设置文本视图的字体大小", "result_ids": ["ef12c73a-8411-4320-a5ea-0d39e643de12", "d16166ab-76f1-41d1-8747-acff1641b70e", "45373205-4066-4c33-9afc-35117484cdff", "95d6034b-0f1e-4b0c-9cde-a1202e601b71", "31c5a7b7-60c3-4649-8644-b0a2fc095b6f", "83aa933b-cac2-47db-b828-510d20ee52b7", "7d244f16-d5b4-423b-bdc7-c31d40bd72b3", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412", "ff90f708-e4a0-4ddd-9766-66cebd6d085b", "6be53b16-d33e-4360-a82a-69054e0ff19a"], "result_documents": ["设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n", "设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n", "设置字体大小。\n属性名称：fontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"字体大小。fontSize为number类型时，使用fp单位。字体默认大小16fp。不支持设置百分比字符串。\",\"default\":\"16fp\"}}\n", "设置文本的字体粗细，设置过大可能会在不同字体下有截断。\n属性名称：fontWeight\n属性参数：{'value': {\"type\":[\"number\",\"FontWeight\",\"string\"],\"required\":true,\"description\":\"文本的字体粗细，number类型取值[100, 900]，取值间隔为100，默认为400，取值越大，字体越粗。string类型仅支持number类型取值的字符串形式，例如\\\"400\\\"，以及\\\"bold\\\"、\\\"bolder\\\"、\\\"lighter\\\"、\\\"regular\\\"、\\\"medium\\\"，分别对应FontWeight中相应的枚举值。默认值：FontWeight.Normal\",\"default\":\"FontWeight.Normal\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", "设置文本最小显示字号。\n属性名称：minFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最小显示字号。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Text", "name": "textCase", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxFontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "fontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "fontWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "minFontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3218229413032532, 0.3320487141609192, 0.3397085666656494, 0.3466241955757141, 0.3502125144004822, 0.3583971858024597, 0.36257368326187134, 0.38701117038726807, 0.3871724009513855, 0.3946150541305542], "threshold": 0.6, "query_text_results": [["设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n", {"component_name": "Text", "name": "maxFontSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6679512858390808], ["设置字体大小。\n属性名称：fontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"字体大小。fontSize为number类型时，使用fp单位。字体默认大小16fp。不支持设置百分比字符串。\",\"default\":\"16fp\"}}\n", {"component_name": "Text", "name": "fontSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6602914333343506], ["设置文本的字体粗细，设置过大可能会在不同字体下有截断。\n属性名称：fontWeight\n属性参数：{'value': {\"type\":[\"number\",\"FontWeight\",\"string\"],\"required\":true,\"description\":\"文本的字体粗细，number类型取值[100, 900]，取值间隔为100，默认为400，取值越大，字体越粗。string类型仅支持number类型取值的字符串形式，例如\\\"400\\\"，以及\\\"bold\\\"、\\\"bolder\\\"、\\\"lighter\\\"、\\\"regular\\\"、\\\"medium\\\"，分别对应FontWeight中相应的枚举值。默认值：FontWeight.Normal\",\"default\":\"FontWeight.Normal\"}}\n", {"component_name": "Text", "name": "fontWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6533758044242859], ["设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6497874855995178], ["设置文本最小显示字号。\n属性名称：minFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最小显示字号。\",\"default\":null}}\n", {"component_name": "Text", "name": "minFontSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6374263167381287], ["设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, 0.6129888296127319]]}}, {"id": "epAsrYXNczuSAmfsRyhaFj", "description": "过滤低于阈值的查询结果: 设置文本视图的边距", "subtasks": [], "details": {"query": "设置文本视图的边距", "result_ids": ["6be53b16-d33e-4360-a82a-69054e0ff19a", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412", "6c33a734-dd70-4df6-9ed4-0f6515dd62e1", "e8d267cd-9f9a-4b14-816c-08b50f4b4800", "31c5a7b7-60c3-4649-8644-b0a2fc095b6f", "6f72f2b5-8af2-4583-9413-44e7d271080c", "05f60999-aacb-4ef0-ab9f-e81def2c3732", "94ed9170-77a3-4809-a47a-4d7dc3d72e1e", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "4b0a480c-d137-4596-a2b4-457b1f4fb17a"], "result_documents": ["设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本基线的偏移量，设置该值为百分比时，按默认值显示。\n属性名称：baselineOffset\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本基线的偏移量。\",\"default\":0}}\n", "设置文本的最大行数。\n属性名称：maxLines\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大行数。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n"], "result_metadatas": [{"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "baselineOffset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxLines", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.32861649990081787, 0.36586111783981323, 0.37563997507095337, 0.37952351570129395, 0.3955655097961426, 0.41665035486221313, 0.41874104738235474, 0.419083833694458, 0.4214344024658203, 0.42204123735427856], "threshold": 0.6, "query_text_results": [["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "Text", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, 0.6243600249290466], ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "Text", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, 0.620476484298706]]}}, {"id": "hjXYmWU6DrtMut8PBVRMzu", "description": "过滤低于阈值的查询结果: 设置文本视图的约束布局属性", "subtasks": [], "details": {"query": "设置文本视图的约束布局属性", "result_ids": ["9fb81972-af49-45a6-b163-3f019a5c4c58", "ce0d9d0f-bf44-49f2-96b8-a642cf6e18c0", "6f72f2b5-8af2-4583-9413-44e7d271080c", "8118cdf0-c371-44ed-92b5-efbd530d8f86", "11431e7a-21f1-4be2-9d63-6ecd919e4dfa", "330f26b8-a1ad-4746-8edf-b58e2c4f8653", "588549ec-b8a6-496b-8795-3be82ca87021", "6be53b16-d33e-4360-a82a-69054e0ff19a", "5b01f32f-e789-47af-86a4-df5a864c92c4", "ff90f708-e4a0-4ddd-9766-66cebd6d085b"], "result_documents": ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.34918034076690674, 0.35271161794662476, 0.35813021659851074, 0.3615272641181946, 0.37454092502593994, 0.38957470655441284, 0.4041338562965393, 0.40617620944976807, 0.4061797261238098, 0.41909992694854736], "threshold": 0.6, "query_text_results": [["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6508196592330933], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Text", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6472883820533752], ["设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", {"component_name": "Text", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6384727358818054], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "Text", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6254590749740601], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "Text", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6104252934455872]]}}], "details": null}], "details": null}, {"id": "VUfHuypw986gQkmzqWoqfR", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# RelativeContainer\n接口描述：RelativeContainer()\n接口参数：{}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "# Image\n接口描述：通过图片数据源获取图片，用于后续渲染展示。\n接口参数：{'src': {\"type\":[\"PixelMap\",\"ResourceStr\",\"DrawableDescriptor\"],\"required\":true,\"description\":\"图片的数据源，支持本地图片和网络图片，引用方式请参考[加载图片资源](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-graphics-display-V5#%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90)。\",\"default\":null}}\n\n接口描述：通过图片数据源获取图片，用于后续渲染展示。\n接口参数：{'src': {\"type\":[\"PixelMap\",\"ResourceStr\",\"DrawableDescriptor\"],\"required\":true,\"description\":\"图片的数据源，支持本地图片和网络图片，引用方式请参考[加载图片资源](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-graphics-display-V5#%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90)。\",\"default\":null}, 'imageAIOptions': {\"type\":\"ImageAIOptions\",\"required\":true,\"description\":\"给组件设置一个AI分析选项，通过此项可配置分析类型或绑定一个分析控制器。\",\"default\":null}}\n指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n图片数据加载成功和解码成功时均触发该回调，返回成功加载的图片尺寸。\n事件名称：onComplete\n事件参数：{'width': {\"type\":\"number\",\"required\":true,\"description\":\"图片的宽。单位：像素\",\"default\":null}, 'height': {\"type\":\"number\",\"required\":true,\"description\":\"图片的高。单位：像素\",\"default\":null}, 'componentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"组件的宽。单位：像素\",\"default\":null}, 'componentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"组件的高。单位：像素\",\"default\":null}, 'loadingStatus': {\"type\":\"number\",\"required\":true,\"description\":\"图片加载成功的状态值。返回的状态值为0时，表示图片数据加载成功。返回的状态值为1时，表示图片解码成功。\",\"default\":null}, 'contentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"图片实际绘制的宽度。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"图片实际绘制的高度。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentOffsetX': {\"type\":\"number\",\"required\":true,\"description\":\"实际绘制内容相对于组件自身的x轴偏移。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}, 'contentOffsetY': {\"type\":\"number\",\"required\":true,\"description\":\"实际绘制内容相对于组件自身的y轴偏移。单位：像素。仅在loadingStatus返回1时有效。\",\"default\":null}}\n事件返回值：None\n设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n示例：该组件通过 Flex 布局实现了一个展示多种图像及其 objectFit 效果的界面。布局宽度为 360vp，高度为 320vp，内边距为右侧 10vp、顶部 10vp。组件的垂直方向上被分为两个部分，每个部分包含两张图像。每张图像的宽度为 110vp，高度为 110vp，外边距为 15vp。图像的边框宽度为 2vp，颜色为粉色。图像的 objectFit 属性分别设置为不同的值，以展示不同的图像适应效果。\n图像的排列方式为水平布局，每行包含两张图像，图像之间的间距均匀分布，且对齐方式为居中对齐。图像的样式包括边框颜色、宽度和高度等属性，支持不同的样式展示。图像的功能包括 objectFit 效果，用户可以通过设置不同的 objectFit 属性来调整图像的显示效果。\n整个布局通过 Flex 布局保证图像在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct ImageExample {\n  build() {\n    Column() {\n      Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start }) {\n        Row() {\n          // 第一张图像，资源名为 app.media.sky，宽度为 110vp，高度为 110vp，外边距为 15vp，边框宽度为 2vp，颜色为粉色，objectFit 属性设置为 ImageFit.TOP_START\n          Image($r('app.media.sky'))\n            .width(110).height(110).margin(15)\n            .overlay('png', { align: Alignment.Bottom, offset: { x: 0, y: 20 } })\n            .border({ width: 2, color: Color.Pink })\n            .objectFit(ImageFit.TOP_START)\n\n          // 第二张图像，资源名为 app.media.loading，宽度为 110vp，高度为 110vp，外边距为 15vp，边框宽度为 2vp，颜色为粉色，objectFit 属性设置为 ImageFit.BOTTOM_START\n          Image($r('app.media.loading'))\n            .width(110).height(110).margin(15)\n            .overlay('gif', { align: Alignment.Bottom, offset: { x: 0, y: 20 } })\n            .border({ width: 2, color: Color.Pink })\n            .objectFit(ImageFit.BOTTOM_START)\n        }\n        Row() {\n          // 第三张图像，资源名为 app.media.svg，宽度为 110vp，高度为 110vp，外边距为 15vp，边框宽度为 2vp，颜色为粉色，objectFit 属性设置为 ImageFit.TOP_END\n          Image($r('app.media.svg'))\n            .width(110).height(110).margin(15)\n            .overlay('svg', { align: Alignment.Bottom, offset: { x: 0, y: 20 } })\n            .border({ width: 2, color: Color.Pink })\n            .objectFit(ImageFit.TOP_END)\n\n          // 第四张图像，资源名为 app.media.jpg，宽度为 110vp，高度为 110vp，外边距为 15vp，边框宽度为 2vp，颜色为粉色，objectFit 属性设置为 ImageFit.CENTER\n          Image($r('app.media.jpg'))\n            .width(110).height(110).margin(15)\n            .overlay('jpg', { align: Alignment.Bottom, offset: { x: 0, y: 20 } })\n            .border({ width: 2, color: Color.Pink })\n            .objectFit(ImageFit.CENTER)\n        }\n      }\n    }.height(320).width(360).padding({ right: 10, top: 10 })\n  }\n}\n\n", "# Text\n接口描述：Text组件的接口定义。\n接口参数：{'Text': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"文本内容。包含子组件Span且未设置属性字符串时不生效，显示Span内容，并且此时text组件的样式不生效。\",\"default\":\" \"}, 'value': {\"type\":\"TextOptions\",\"required\":false,\"description\":\"文本组件初始化选项。\",\"default\":null}}\n设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n设置字体大小。\n属性名称：fontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"字体大小。fontSize为number类型时，使用fp单位。字体默认大小16fp。不支持设置百分比字符串。\",\"default\":\"16fp\"}}\n设置文本的字体粗细，设置过大可能会在不同字体下有截断。\n属性名称：fontWeight\n属性参数：{'value': {\"type\":[\"number\",\"FontWeight\",\"string\"],\"required\":true,\"description\":\"文本的字体粗细，number类型取值[100, 900]，取值间隔为100，默认为400，取值越大，字体越粗。string类型仅支持number类型取值的字符串形式，例如\\\"400\\\"，以及\\\"bold\\\"、\\\"bolder\\\"、\\\"lighter\\\"、\\\"regular\\\"、\\\"medium\\\"，分别对应FontWeight中相应的枚举值。默认值：FontWeight.Normal\",\"default\":\"FontWeight.Normal\"}}\n设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n设置文本最小显示字号。\n属性名称：minFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最小显示字号。\",\"default\":null}}\n设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n示例：该组件通过 Column 布局实现了一个展示文本样式的界面。布局宽度占据整个屏幕，内边距为 10vp。组件的垂直方向上被分为三个部分，每个部分包含一个 Text 组件。\n\n第一个 Text 组件用于显示标题 \"halfLeading\"，字体大小为 9vp，颜色为灰色（0xCCCCCC），外边距为 15vp，宽度占据父容器的 90%。\n\n第二个 Text 组件显示文本 \"This is the text with the halfLeading set.\"，行高为 60vp，启用了 halfLeading 属性，边框宽度为 1vp，宽度占据父容器的 80%。halfLeading 属性用于控制文本的行间距，当设置为 true 时，行间距会减半。\n\n第三个 Text 组件显示文本 \"This is the text without the halfLeading set.\"，行高为 60vp，禁用了 halfLeading 属性，边框宽度为 1vp，宽度占据父容器的 80%。当 halfLeading 属性设置为 false 时，行间距保持默认值。\n\n整个布局通过 Column 布局保证文本在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct TextExample12 {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局，子组件之间的间距为 10vp\n\n      Text('halfLeading') // 创建一个 Text 组件，显示标题 \"halfLeading\"\n        .fontSize(9) // 设置字体大小为 9vp\n        .fontColor(0xCCCCCC) // 设置字体颜色为灰色（0xCCCCCC）\n        .margin(15) // 设置外边距为 15vp\n        .width('90%') // 设置宽度为父容器的 90%\n\n      Text(\"This is the text with the halfLeading set.\") // 创建一个 Text 组件，显示文本 \"This is the text with the halfLeading set.\"\n        .lineHeight(60) // 设置行高为 60vp\n        .halfLeading(true) // 启用 halfLeading 属性，行间距减半\n        .borderWidth(1) // 设置边框宽度为 1vp\n        .width('80%') // 设置宽度为父容器的 80%\n\n      Text(\"This is the text without the halfLeading set.\") // 创建一个 Text 组件，显示文本 \"This is the text without the halfLeading set.\"\n        .lineHeight(60) // 设置行高为 60vp\n        .halfLeading(false) // 禁用 halfLeading 属性，行间距保持默认值\n        .borderWidth(1) // 设置边框宽度为 1vp\n        .width('80%') // 设置宽度为父容器的 80%\n    }\n  }\n}\n\n示例：该组件通过Column布局实现了一个包含文本和图像的展示界面。布局宽度占据整个屏幕，高度设为100%，内边距为25vp。组件的垂直方向上被分为两个部分，第一个部分包含一个带有边框的文本和图像区域，第二个部分包含一个自定义的菜单区域。\n文本和图像区域通过Column布局实现，宽度为200vp，高度为100vp，边框宽度为1vp，颜色为红色。文本和图像区域内的文本和图像通过Span和ImageSpan组件进行展示，文本内容为\"Hello World\"，图像内容为应用内的图标资源。文本和图像区域支持长按、右键点击和选择操作，分别触发不同的自定义菜单。\n自定义菜单区域通过Builder装饰器定义了三个不同的菜单，分别对应长按图像、右键点击文本和选择混合内容的操作。每个菜单包含一个Column布局，内部嵌套一个Menu组件，Menu组件内包含一个MenuItemGroup组件，MenuItemGroup组件内包含三个MenuItem组件。每个MenuItem组件包含一个图标、内容和点击事件，点击事件触发时关闭当前菜单。\n整个布局通过Column布局保证文本和图像区域在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct TextExample7 {\n  // 创建一个TextController实例，用于控制文本的选择和菜单的显示\n  controller: TextController = new TextController();\n  // 创建一个TextOptions实例，用于配置文本的控制器\n  options: TextOptions = { controller: this.controller };\n\n  build() {\n    Column() {\n      Column() {\n        // 创建一个Text组件，内容为undefined，使用options配置\n        Text(undefined, this.options) {\n          // 创建一个Span组件，内容为\"Hello World\"\n          Span('Hello World')\n          // 创建一个ImageSpan组件，内容为应用内的图标资源\n          ImageSpan($r('app.media.icon'))\n            .width('100px') // 设置图像宽度为100px\n            .height('100px') // 设置图像高度为100px\n            .objectFit(ImageFit.Fill) // 设置图像填充方式为完全填充\n            .verticalAlign(ImageSpanAlignment.CENTER) // 设置图像垂直对齐方式为居中\n        }\n        .copyOption(CopyOptions.InApp) // 设置文本的复制选项为仅在应用内复制\n        .bindSelectionMenu(TextSpanType.IMAGE, this.LongPressImageCustomMenu, TextResponseType.LONG_PRESS, {\n          onDisappear: () => {\n            console.info(`自定义选择菜单关闭时回调`); // 自定义选择菜单关闭时的回调函数\n          },\n          onAppear: () => {\n            console.info(`自定义选择菜单弹出时回调`); // 自定义选择菜单弹出时的回调函数\n          }\n        })\n        .bindSelectionMenu(TextSpanType.TEXT, this.RightClickTextCustomMenu, TextResponseType.RIGHT_CLICK) // 绑定文本的右键点击菜单\n        .bindSelectionMenu(TextSpanType.MIXED, this.SelectMixCustomMenu, TextResponseType.SELECT) // 绑定混合内容的选中菜单\n        .onTextSelectionChange((selectionStart: number, selectionEnd: number) => {\n          console.info(`文本选中区域变化回调, selectionStart: ${selectionStart}, selectionEnd: ${selectionEnd}`); // 文本选中区域变化时的回调函数\n        })\n        .borderWidth(1) // 设置边框宽度为1vp\n        .borderColor(Color.Red) // 设置边框颜色为红色\n        .width(200) // 设置宽度为200vp\n        .height(100) // 设置高度为100vp\n      }\n      .width('100%') // 设置宽度为100%\n      .backgroundColor(Color.White) // 设置背景颜色为白色\n      .alignItems(HorizontalAlign.Start) // 设置对齐方式为左对齐\n      .padding(25) // 设置内边距为25vp\n    }\n    .height('100%') // 设置高度为100%\n  }\n\n  // 定义右键点击文本时的自定义菜单\n  @Builder\n  RightClickTextCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n\n  // 定义长按图像时的自定义菜单\n  @Builder\n  LongPressImageCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n\n  // 定义选择混合内容时的自定义菜单\n  @Builder\n  SelectMixCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n}\n\n// 定义菜单的样式\n@Extend(Menu)\nfunction MenuStyles() {\n  .radius($r('sys.float.ohos_id_corner_radius_card')) // 设置菜单的圆角半径\n  .clip(true) // 设置菜单的裁剪方式为裁剪\n  .backgroundColor('#F0F0F0') // 设置菜单的背景颜色为浅灰色\n}\n\n"], "related_types": {"Margin": {"description": "外边距类型，用于描述组件不同方向的外边距。", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "上外边距，组件距其父组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Length", "required": false, "description": "左外边距，组件距其父组件左侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Length", "required": false, "description": "右外边距，组件距其父组件右侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Length", "required": false, "description": "下外边距，组件距其父组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "LocalizedMargin": {"description": "外边距类型，用于描述组件不同方向的外边距。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "上外边距，组件距其父组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "下外边距，组件距其父组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "左外边距，组件距其父组件左边界的尺寸，从右至左显示语言模式下为右外边距，组件距其父组件右边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "右外边距，组件距其父组件右边界的尺寸，从右至左显示语言模式下为左外边距，组件距其父组件左边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthMetrics": {"description": "用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。", "type": "object", "properties": {"value": {"type": "number", "required": false, "description": "长度属性的值。", "enum": null, "enumDescriptions": null, "default": null}, "unit": {"type": "LengthUnit", "required": false, "description": "长度属性的单位，默认为vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthUnit": {"description": "长度属性单位枚举。", "type": "enum", "enum": ["PX", "VP", "FP", "PERCENT", "LPX"], "enumDescriptions": {"PX": "长度类型，用于描述以px像素单位为单位的长度。", "VP": "长度类型，用于描述以vp逻辑像素为单位的长度。", "FP": "长度类型，用于描述以fp字体像素为单位的长度。", "PERCENT": "长度类型，用于描述百分比长度。", "LPX": "长度类型，用于描述以lpx逻辑像素为单位的长度。"}, "examples": null}, "Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "LocalizedPadding": {"description": "内边距类型，用于描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Padding": {"description": "内边距类型，描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Length", "required": false, "description": "左内边距，组件内元素距组件左侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Length", "required": false, "description": "右内边距，组件内元素距组件右侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Length", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "DynamicRangeMode": {"description": "期望展示的图像动态范围。", "type": "object", "properties": {"High": {"type": "string", "required": false, "description": "不受限动态范围，最大限度进行图片提亮。", "enum": null, "enumDescriptions": null, "default": "High"}, "Constraint": {"type": "string", "required": false, "description": "受限动态范围，受限进行图片提亮。", "enum": null, "enumDescriptions": null, "default": "Constraint"}, "Standard": {"type": "string", "required": false, "description": "标准动态范围，不进行图片提亮。", "enum": null, "enumDescriptions": null, "default": "Standard"}}, "examples": null}, "ResourceStr": {"description": "字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。", "type": ["string", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Edges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。", "type": "object", "properties": {"top": {"type": "Dimension", "required": false, "description": "相对顶边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Dimension", "required": false, "description": "相对左边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Dimension", "required": false, "description": "相对右边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Dimension", "required": false, "description": "相对底边的偏移量", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Dimension": {"description": "长度类型，用于描述尺寸单位。", "type": "enum", "enum": ["PX", "VP", "FP", "LPX", "PERCENT", "Resource"], "enumDescriptions": {"PX": "需要指定以px像素单位，如'10px'。", "VP": "需要指定数字或vp像素单位，如10或'10vp'。", "FP": "需要指定以fp像素单位，如'10fp'。", "LPX": "需要指定以lpx像素单位，如'10lpx'。", "PERCENT": "需要指定以%像素单位，如'10%'。", "Resource": "资源引用类型，引入系统资源或者应用资源中的尺寸。"}, "examples": null}, "ResizableOptions": {"description": "图像拉伸时可调整大小的图像选项。", "type": "object", "properties": {"slice": {"type": "EdgeWidths", "required": true, "description": "边框宽度类型，用于描述组件边框不同方向的宽度。只有当bottom和right同时大于0时，该属性生效。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "EdgeWidths": {"description": "EdgeWidths参数说明", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "图片顶部拉伸时保持不变距离。", "enum": null, "enumDescriptions": null, "default": 0}, "right": {"type": "Length", "required": false, "description": "图片右部拉伸时保持不变距离。", "enum": null, "enumDescriptions": null, "default": 0}, "bottom": {"type": "Length", "required": false, "description": "图片底部拉伸时保持不变距离。", "enum": null, "enumDescriptions": null, "default": 0}, "left": {"type": "Length", "required": false, "description": "图片左部拉伸时保持不变距离。", "enum": null, "enumDescriptions": null, "default": 0}}, "examples": null}, "ConstraintSizeOptions": {"description": "设置约束尺寸，组件布局时，进行尺寸范围限制。", "type": "object", "properties": {"minWidth": {"type": "Length", "required": false, "description": "组件最小宽度。", "enum": null, "enumDescriptions": null, "default": null}, "maxWidth": {"type": "Length", "required": false, "description": "组件最大宽度。", "enum": null, "enumDescriptions": null, "default": null}, "minHeight": {"type": "Length", "required": false, "description": "组件最小高度。", "enum": null, "enumDescriptions": null, "default": null}, "maxHeight": {"type": "Length", "required": false, "description": "组件最大高度。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Position": {"description": "位置类型，用于表示一个坐标点。", "type": "object", "properties": {"x": {"type": "Length", "required": false, "description": "x轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}, "y": {"type": "Length", "required": false, "description": "y轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LocalizedEdges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "相对顶边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "相对底边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "SizeOptions": {"description": "设置宽高尺寸。", "type": "object", "properties": {"width": {"type": "Length", "required": false, "description": "元素宽度。", "enum": null, "enumDescriptions": null, "default": null}, "height": {"type": "Length", "required": false, "description": "元素高度。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "TextOptions": {"description": "Text初始化参数。", "type": "object", "properties": {"controller": {"type": "TextController", "required": true, "description": "文本控制器。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "TextController": {"description": "Text组件的控制器。", "type": "object", "properties": {"controller": {"type": "TextController", "required": true, "description": "导入对象", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Font": {"description": "设置文本样式。", "type": "object", "properties": {"size": {"type": "Length", "required": false, "description": "设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。", "enum": null, "enumDescriptions": null, "default": 16.0}, "weight": {"type": ["FontWeight", "number", "string"], "required": false, "description": "设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。", "enum": null, "enumDescriptions": null, "default": "400 | FontWeight.Normal"}, "family": {"type": ["string", "Resource"], "required": false, "description": "设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。", "enum": null, "enumDescriptions": null, "default": null}, "style": {"type": "FontStyle", "required": false, "description": "设置文本的字体样式。", "enum": null, "enumDescriptions": null, "default": "FontStyle.Normal"}}, "examples": null}, "ResourceColor": {"description": "颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析", "type": ["string", "Resource", "Color", "number"], "enum": null, "enumDescriptions": null, "examples": null}, "TextDataDetectorConfig": {"description": "文本识别配置参数。", "type": "object", "properties": {"types": {"type": "TextDataDetectorType[]", "required": true, "description": "文本识别的实体类型。设置types为null或者[]时，识别所有类型的实体，否则只识别指定类型的实体。", "enum": null, "enumDescriptions": null, "default": null}, "onDetectResultUpdate": {"type": "(result: string) => void", "required": false, "description": "文本识别成功后，触发onDetectResultUpdate回调。result：文本识别的结果，Json格式。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}}}}, {"id": "MWfkmKuqQh6qxFMu8eANED", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["类型名：Margin\n类型描述：外边距类型，用于描述组件不同方向的外边距。\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"上外边距，组件距其父组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"左外边距，组件距其父组件左侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"右外边距，组件距其父组件右侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"下外边距，组件距其父组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "类型名：LocalizedMargin\n类型描述：外边距类型，用于描述组件不同方向的外边距。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"上外边距，组件距其父组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"下外边距，组件距其父组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"左外边距，组件距其父组件左边界的尺寸，从右至左显示语言模式下为右外边距，组件距其父组件右边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"右外边距，组件距其父组件右边界的尺寸，从右至左显示语言模式下为左外边距，组件距其父组件左边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LengthMetrics\n类型描述：用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。\n参数：{'value': {\"type\":\"number\",\"required\":false,\"description\":\"长度属性的值。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'unit': {\"type\":\"LengthUnit\",\"required\":false,\"description\":\"长度属性的单位，默认为vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：LengthUnit\n枚举类型描述：长度属性单位枚举。\n枚举值：['PX', 'VP', 'FP', 'PERCENT', 'LPX']\n枚举值描述：\n* PX: 长度类型，用于描述以px像素单位为单位的长度。\n* VP: 长度类型，用于描述以vp逻辑像素为单位的长度。\n* FP: 长度类型，用于描述以fp字体像素为单位的长度。\n* PERCENT: 长度类型，用于描述百分比长度。\n* LPX: 长度类型，用于描述以lpx逻辑像素为单位的长度。\n\n", "枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：LocalizedPadding\n类型描述：内边距类型，用于描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Padding\n类型描述：内边距类型，描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：DynamicRangeMode\n类型描述：期望展示的图像动态范围。\n参数：{'High': {\"type\":\"string\",\"required\":false,\"description\":\"不受限动态范围，最大限度进行图片提亮。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"High\"}, 'Constraint': {\"type\":\"string\",\"required\":false,\"description\":\"受限动态范围，受限进行图片提亮。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"Constraint\"}, 'Standard': {\"type\":\"string\",\"required\":false,\"description\":\"标准动态范围，不进行图片提亮。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"Standard\"}}\n", "类型名：ResourceStr\n类型描述：字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。\n类型：['string', 'Resource']\n", "类型名：Edges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。\n参数：{'top': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对顶边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对左边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对右边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对底边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：Dimension\n枚举类型描述：长度类型，用于描述尺寸单位。\n枚举值：['PX', 'VP', 'FP', 'LPX', 'PERCENT', 'Resource']\n枚举值描述：\n* PX: 需要指定以px像素单位，如'10px'。\n* VP: 需要指定数字或vp像素单位，如10或'10vp'。\n* FP: 需要指定以fp像素单位，如'10fp'。\n* LPX: 需要指定以lpx像素单位，如'10lpx'。\n* PERCENT: 需要指定以%像素单位，如'10%'。\n* Resource: 资源引用类型，引入系统资源或者应用资源中的尺寸。\n\n", "类型名：ResizableOptions\n类型描述：图像拉伸时可调整大小的图像选项。\n参数：{'slice': {\"type\":\"EdgeWidths\",\"required\":true,\"description\":\"边框宽度类型，用于描述组件边框不同方向的宽度。只有当bottom和right同时大于0时，该属性生效。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：EdgeWidths\n类型描述：EdgeWidths参数说明\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"图片顶部拉伸时保持不变距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":0}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"图片右部拉伸时保持不变距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":0}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"图片底部拉伸时保持不变距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":0}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"图片左部拉伸时保持不变距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":0}}\n", "类型名：ConstraintSizeOptions\n类型描述：设置约束尺寸，组件布局时，进行尺寸范围限制。\n参数：{'minWidth': {\"type\":\"Length\",\"required\":false,\"description\":\"组件最小宽度。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'maxWidth': {\"type\":\"Length\",\"required\":false,\"description\":\"组件最大宽度。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'minHeight': {\"type\":\"Length\",\"required\":false,\"description\":\"组件最小高度。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'maxHeight': {\"type\":\"Length\",\"required\":false,\"description\":\"组件最大高度。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Position\n类型描述：位置类型，用于表示一个坐标点。\n参数：{'x': {\"type\":\"Length\",\"required\":false,\"description\":\"x轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'y': {\"type\":\"Length\",\"required\":false,\"description\":\"y轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LocalizedEdges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对顶边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对底边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：SizeOptions\n类型描述：设置宽高尺寸。\n参数：{'width': {\"type\":\"Length\",\"required\":false,\"description\":\"元素宽度。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'height': {\"type\":\"Length\",\"required\":false,\"description\":\"元素高度。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：TextOptions\n类型描述：Text初始化参数。\n参数：{'controller': {\"type\":\"TextController\",\"required\":true,\"description\":\"文本控制器。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：TextController\n类型描述：Text组件的控制器。\n参数：{'controller': {\"type\":\"TextController\",\"required\":true,\"description\":\"导入对象\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Font\n类型描述：设置文本样式。\n参数：{'size': {\"type\":\"Length\",\"required\":false,\"description\":\"设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。\",\"enum\":null,\"enumDescriptions\":null,\"default\":16.0}, 'weight': {\"type\":[\"FontWeight\",\"number\",\"string\"],\"required\":false,\"description\":\"设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"400 | FontWeight.Normal\"}, 'family': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'style': {\"type\":\"FontStyle\",\"required\":false,\"description\":\"设置文本的字体样式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"FontStyle.Normal\"}}\n", "类型名：ResourceColor\n类型描述：颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析\n类型：['string', 'Resource', 'Color', 'number']\n", "类型名：TextDataDetectorConfig\n类型描述：文本识别配置参数。\n参数：{'types': {\"type\":\"TextDataDetectorType[]\",\"required\":true,\"description\":\"文本识别的实体类型。设置types为null或者[]时，识别所有类型的实体，否则只识别指定类型的实体。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'onDetectResultUpdate': {\"type\":\"(result: string) => void\",\"required\":false,\"description\":\"文本识别成功后，触发onDetectResultUpdate回调。result：文本识别的结果，Json格式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n"]}}], "details": {"android_component": {"name": ["android.support.constraint.ConstraintLayout", "ImageView", "TextView"], "content": "<android.support.constraint.ConstraintLayout\n    android:id=\"@+id/ll_empty\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"10dp\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n    android:visibility=\"gone\">\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"169dp\"\n        android:layout_height=\"153dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/ic_message_black\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.26999998\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"No Orders Yet\"\n        android:textColor=\"@color/blue_grey\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n</android.support.constraint.ConstraintLayout>", "layout_description": "约束布局容器，宽度占满父容器，高度占满父容器，外边距为8vp（左右）和10vp（顶部），背景颜色为白色，方向为垂直，初始状态为隐藏。\n- 图像视图，宽度为169vp，高度为153vp，外边距为8vp（上下左右），图像资源引用app.media.ic_message_black，位于父容器的中心，垂直偏移为0.27。\n- 文本视图，宽度自适应，高度自适应，外边距为8vp（上下左右），文本内容为“No Orders Yet”，文本颜色引用app.color.blue_grey，字体大小为20fp，位于图像视图的正下方，水平居中。", "function_description": "实现了一个约束布局容器，在容器中包含一个图像视图和一个文本视图。图像视图位于容器的中心，垂直偏移为0.27，显示app.media.ic_message_black图像，宽度和高度分别为169vp和153vp。在图像视图的正下方有一个文本视图，文本视图宽度和高度自适应，显示“No Orders Yet”，字体颜色引用了app.color.blue_grey资源，字体大小为20fp，水平居中。"}}}, {"id": "jmRLbcASY3N4bBkBhtciMv", "description": "转译组件v1", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去根据安卓组件描述生成鸿蒙ArkUI代码。\n\n\n\n\n以下是可供参考的鸿蒙组件文档：\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n\n# 声明式UI描述\nArkTS以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n## 创建组件\n根据组件构造方法的不同，创建组件包含有参数和无参数两种方式。\n\n### 无参数\n如果组件的接口定义没有包含必选构造参数，则组件后面的“()”不需要配置任何内容。例如，Divider组件不包含构造参数。\n```ets\nColumn() {\n  Text('item 1')\n  Divider()\n  Text('item 2')\n}\n```\n\n### 有参数\n- Image组件的必选参数src。\n```ets\nImage('https://xyz/test.jpg')\n```\n- Text组件的非必选参数content。\n```ets\n// string类型的参数\nText('test')\n// $r形式引入应用资源，可应用于多语言场景\nText($r('app.string.title_value'))\n// 无参数形式\nText()\n```\n- 变量或表达式也可以用于参数赋值，其中表达式返回的结果类型必须满足参数类型要求。\n例如，设置变量或表达式来构造Image和Text组件的参数。\n```ets\nImage(this.imagePath)\nImage('https://' + this.imageUrl)\nText(`count: ${this.count}`)\n```\n\n## 配置属性\n属性方法以“.”链式调用的方式配置系统组件的样式和其他属性，建议每个属性方法单独写一行。\n\n- 设置Text组件的字体大小。\n```ets\nText('test')\n  .fontSize(20)\n```\n- 配置组件的多个属性。\n```ets\nImage('test.jpg')\n  .alt('error.jpg')\n  .width(100)\n  .height(100)\n```\n- 除了直接传递常量参数外，还可以传递变量或表达式。\n```ets\nText('hello')\n  .fontSize(this.size)\nImage('test.jpg')\n  .width(this.count % 2 === 0 ? 100 : 200)\n  .height(this.offset + 100)\n```\n- 对于系统组件，ArkUI还为其属性预定义了一些枚举类型供开发者调用，枚举类型可以作为参数传递，但必须满足参数类型要求。\n例如，可以按以下方式配置Text组件的颜色和字体样式。\n```ets\nText('hello')\n  .fontSize(20)\n  .fontColor(Color.Red)\n  .fontWeight(FontWeight.Bold)\n```\n\n## 配置事件\n事件方法以“.”链式调用的方式配置系统组件支持的事件，建议每个事件方法单独写一行。\n\n- 使用箭头函数配置组件的事件方法。\n```ets\nButton('Click me')\n  .onClick(() => {\n    this.myText = 'ArkUI';\n  })\n```\n- 使用组件的成员函数配置组件的事件方法，需要bind this。ArkTS语法不推荐使用成员函数配合bind this去配置组件的事件方法。\n```ets\nmyClickHandler(): void {\n  this.counter += 2;\n}\n...\nButton('add counter')\n  .onClick(this.myClickHandler.bind(this))\n```\n- 使用声明的箭头函数，可以直接调用，不需要bind this。\n```ets\nfn = () => {\n  console.info(`counter: ${this.counter}`)\n  this.counter++\n}\n...\nButton('add counter')\n  .onClick(this.fn)\n```\n\n## 配置子组件\n如果组件支持子组件配置，则需在尾随闭包\"{...}\"中为组件添加子组件的UI描述。Column、Row、Stack、Grid、List等组件都是容器组件。\n\n- 容器组件均支持子组件配置，可以实现相对复杂的多级嵌套。\n```ets\nColumn() {\n  Row() {\n    Image('test1.jpg')\n      .width(100)\n      .height(100)\n    Button('click +1')\n      .onClick(() => {\n        console.info('+1 clicked!');\n      })\n  }\n  .width('100%')\n}\n```\n以下是关于安卓组件转译为鸿蒙ArkUI组件的示例代码：\n\n## 示例#1\n### ['Text'] 组件\n通过 Text 组件实现了一个单行滚动的文本视图，用于在应用中创建一个滚动文本界面。文本视图的文本内容为“雾霾天空，隐约雷鸣，盼有风雨来，能留你在此”，唯一标识符 id 为“textView1”，宽度占据整个父布局，顶部边距为 100vp，最大行数为 1，文本溢出时使用跑马灯效果，可聚焦，字体大小为 15vp。用户可以通过滚动文本视图查看超出屏幕范围的内容。\n```\nText('雾霾天空，隐约雷鸣，盼有风雨来，能留你在此')\n.id(\"textView1\")\n.width('100%')\n.margin({ top: '100vp' })\n.maxLines(1)\n.textOverflow({ overflow: TextOverflow.MARQUEE })\n.focusable(true)\n.fontSize(15)\n```\n## 示例#2\n### ['Image'] 组件\n通过 Image 组件实现了一个图像显示界面，用于在应用中创建一个图像显示界面。图像视图的图像资源通过 $r('app.media.img_2') 进行设置，唯一标识符 id 为“iv_show”，宽度为 500vp，高度为 250vp，顶部边距为 50vp，背景颜色为红色 (#ff0000)，图像适应方式为 ImageFit.Contain。用户可以通过图像视图查看和操作图像内容。\n```\n      Image($r('app.media.img_2'))\n.id('iv_show')\n.width('500vp')\n.height('250vp')\n.margin({ top: '50vp' })\n.backgroundColor('#ff0000')\n.objectFit(ImageFit.Contain)\n```\n## 示例#3\n### ['Row', 'Image', 'Text'] 组件\n这段代码通过使用 Row 布局组件，创建了一个包含图像和文本的水平排列的界面元素。首先，代码中定义了一个 Row 组件，其中包含两个子元素：一个 Image 组件和一个 Text 组件。\n\nImage 组件用于显示一个图标，该图标的资源路径为 $r('app.media.startIcon')。图像的宽度设置为 40vp，高度也为 40vp，并且通过 padding 属性设置了 5vp 的内边距。此外，图像的 objectFit 属性被设置为 ImageFit.Auto，这意味着图像将根据其内容自动调整大小。\n\n紧接着，Text 组件用于显示文本“设置”。文本的字体大小设置为 50fp，字体加粗（FontWeight.Bold），颜色为 $r('app.color.black')。文本的最大行数限制为 2 行，并且在文本超出两行时，使用 EllipsisMode.END 模式在末尾显示省略号。文本的宽度设置为 calc(100% - 40vp)，以确保文本不会与图像重叠。\n\n整个 Row 布局的宽度设置为 100%，高度自适应（auto），并且通过 padding 属性设置了 4vp 的内边距。最后，Row 布局的对齐方式设置为 Alignment.Start，确保子元素在水平方向上左对齐。\n\n这段代码的整体效果是一个水平排列的界面元素，左侧是一个图标，右侧是对应的文本描述，适用于需要在界面上展示图标和相关文本信息的场景。\n```\n    Row(){\nImage($r('app.media.text_view'))\n.width('40vp')\n.height('40vp')\n.padding('5vp')\n.objectFit(ImageFit.Auto)\nText('设置')\n.fontSize('50fp')\n.font({weight:FontWeight.Bold})\n.fontColor($r('app.color.black'))\n.maxLines(2)\n.ellipsisMode(EllipsisMode.END)\n.width('calc(100% - 40vp)')\n}\n.width('100%')\n.height('auto')\n.padding(4)\n.align(Alignment.Start)\n```\n\n这些资源目前在项目中已经定义：\n# 资源变量\n## color\nstart_window_background, colorAccentPressed, colorAccentFocused, colorPrimary, colorPrimaryDark, progress_background, colorAccent, blue_progress, white, light_gray_background, text_secondary_dark, text_color_primary_dark, background_light_grey, divider_gray, slide_1, slide_2, slide_3, slide_4, background_light, download_button_tint, gray_ripple_pressed, gray_ripple_focused\n## float\nactivity_horizontal_margin, activity_vertical_margin, book_column_width, book_column_width_padding, book_list_padding, book_list_language_bar_right_padding, text_size_page, size_text, padding_book, row_height_contributors, fab_button_size, fab_margin_right, book_size_landscape, fab_margin_top, fab_margin_right_landscape, elevation_micro, elevation_small, elevation_medium, elevation_large, z_drawer, nav_header_vertical_spacing, nav_header_height\n## integer\nbook_span, list_books_space\n## string\nmodule_desc, EntryAbility_desc, EntryAbility_label, app_name, action_settings, splash, action_language_choice, language_selection_heading, failed_to_download_book, error_loading_languages, error_loading_languages_try_again, book_not_available, title_activity_about, action_about, why_bookdash, why_bookdash_heading, heading_about, send_email_chooser, no_mail_clients, button_retry_text, error_loading_books, failed_to_open_book, skip, tutorial_done, tutorial_screen, screen_book_information, book_dash, about_heading, about_book_info, date_created, contributors, book_is_downloading, learn_more, rate_this_app, settings_thank_yous, contributions_to_app, list_of_contributors, book_download_button, slide_1_african_story_books, slide_2_volunteer_professionals, slide_3_download_and_go, slide_4_different_languages, slide_1_african_story_books_subtitle, slide_2_volunteer_professionals_subtitle, slide_3_download_and_go_subtitle, slide_4_different_languages_subtitle, transition_book_background, transition_book, filter_view_book, book_share, sharing_book_title, invitation_title, invite_error_no_apps_found, share_book_error_no_apps_found, invite_using, invitation_subject, invitation_message, sent_invitations_fmt, invite_friends, action_all_books, action_downloads, no_books_downloaded, no_books_available, book_info_still_loading, fragment_title_downloads, delete_book_confirmation, downloads_are_you_sure, delete_ok, delete_cancel, book_dash_nav_header, error_getting_contributors, error_saving_selected_language, error_opening_languagepopover, action_search, screen_title_search, menu_search, no_internet_text, search_no_internet_text, search_no_results_found, search_query_hint, show_tutorial_settings_title, show_tutorial_settings_summary, settings_title, error_opening_app_rating, settings_new_book_notifications_summary, settings_new_book_notifications, delete_book\n\n# 资源文件\nbackground.png\\n\nbookdash_b_vector.svg\\n\nbookdash_icon.png\\n\nbookdash_logo.svg\\n\nbookdash_placeholder.png\\n\nforeground.png\\n\nic_arrow_back.svg\\n\nic_arrow_down_24.svg\\n\nic_check_circle_black_24dp.svg\\n\nic_chrome_reader_mode_black_24dp.svg\\n\nic_cloud_download_black_24dp.svg\\n\nic_collections_bookmark_black_24dp.svg\\n\nic_delete.svg\\n\nic_file_download_black.svg\\n\nic_file_download_black_24dp.svg\\n\nic_grade_black_24dp.svg\\n\nic_group_add_black_24dp.svg\\n\nic_info_outline_black_24dp.svg\\n\nic_menu_24dp.svg\\n\nic_people_outline_black_24dp.svg\\n\nic_search.svg\\n\nic_settings_black_24dp.svg\\n\nic_share.svg\\n\nlayered_image.json\\n\nstartIcon.png\\n\n\n技术主管已经将代码转译分为以下步骤：\n1. 实现安卓标题工具栏的转译，并保持布局和样式尽可能一致。\\n\n2. 实现进度条组件的转译，并保持布局和样式尽可能一致。\\n\n3. 实现RecyclerView组件的转译，并保持布局和样式尽可能一致。\\n\n4. 实现空状态布局的转译，包括ImageView和TextView，并保持布局和样式尽可能一致。\\n\n\n\n你当前需要处理的任务是：\n实现空状态布局的转译，包括ImageView和TextView，并保持布局和样式尽可能一致。\n\n以下是待转译的安卓组件描述：\n# 待转译的安卓组件名：['android.support.constraint.ConstraintLayout', 'ImageView', 'TextView']\n功能描述：实现了一个约束布局容器，在容器中包含一个图像视图和一个文本视图。图像视图位于容器的中心，垂直偏移为0.27，显示app.media.ic_message_black图像，宽度和高度分别为169vp和153vp。在图像视图的正下方有一个文本视图，文本视图宽度和高度自适应，显示“No Orders Yet”，字体颜色引用了app.color.blue_grey资源，字体大小为20fp，水平居中。\n安卓布局描述：约束布局容器，宽度占满父容器，高度占满父容器，外边距为8vp（左右）和10vp（顶部），背景颜色为白色，方向为垂直，初始状态为隐藏。\n- 图像视图，宽度为169vp，高度为153vp，外边距为8vp（上下左右），图像资源引用app.media.ic_message_black，位于父容器的中心，垂直偏移为0.27。\n- 文本视图，宽度自适应，高度自适应，外边距为8vp（上下左右），文本内容为“No Orders Yet”，文本颜色引用app.color.blue_grey，字体大小为20fp，位于图像视图的正下方，水平居中。\n实现转译的思路：选择RelativeContainer组件来实现ConstraintLayout的约束布局功能，使用Image组件来显示图像，使用Text组件来显示文本。通过设置这些组件的属性和布局约束，可以实现与安卓组件相同的功能和布局效果。\n<android.support.constraint.ConstraintLayout\n    android:id=\"@+id/ll_empty\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"10dp\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n    android:visibility=\"gone\">\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"169dp\"\n        android:layout_height=\"153dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/ic_message_black\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.26999998\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"No Orders Yet\"\n        android:textColor=\"@color/blue_grey\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n</android.support.constraint.ConstraintLayout>\n\n\n你的工作是根据**鸿蒙组件文档**、当前项目信息准确地、完整的根据安卓组件描述生成鸿蒙ArkUI组件代码，不可以使用不存在的鸿蒙组件以及不存在的属性和事件。\n在生成时，你需要确保生成过程中所有使用的ArkUI组件、属性和事件与安卓组件描述实现的功能、行为一致。\n在整个过程中，请严格遵循文档规范，每一步都需要详细对照官方文档，确保没有任何遗漏或误解。\n**重要**：你必须严格按照待转译的安卓组件描述来编写鸿蒙ArkUI代码，不可忽略任何可以实现的属性、样式、功能等，也不可以添加任何未在安卓组件描述中提到的功能。\n**重要**：必须确保所选用的组件、类型、属性和方法完全符合鸿蒙ArkUI官方文档的定义与规范, 必须确保使用的资源文件都已被定义。\n**重要**：当你无法通过单个组件实现功能时，可以通过组合多个组件来实现，但不可选择不存在的组件，例如Checkbox需要与Text组件搭配才能够实现复选框旁侧有文字的效果，卡片需要利用Stack布局及Text等组件来实现。\n**重要**：ArkUI以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n在你编写鸿蒙ArUI组件时，需要遵守以下规则：\n* 1. 当组件的宽度和高度是根据内容自适应时，需要使用'auto'；当组件的宽度和高度是跟随父组件时，需要使用'100%'，例如：android:layout_width=\"wrap_content\"应该转译为width=\"auto\"；android:layout_width=\"match_parent\"应该转译为width=\"100%\"。\n* 2. 引用资源时，需要使用$r('app.xxx.yyy'), 其中xxx为资源类型，yyy为资源名称，例如：Image($r('app.media.custom_background'))。\n\n在转译过程中，你需要严格遵守以下规则：\n### 规则 1\n你必须准确、完整地实现安卓布局代码地转译。\n准确意味着你需要将安卓布局代码中的每个组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要添加任何多余的或不存在的组件、属性、值。\n完整意味着你需要将安卓布局代码中的所有组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要遗漏任何组件、属性、值。\n正确示例：\n```\n安卓布局文件：\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"@string/lorem_ipsum\" />\n对应的鸿蒙ArkUI代码：\nText($r(\"app.string.lorem_ipsum\"))\n  .id(\"textview_first\")\n  .width('auto')\n  .height('auto')\n```\n错误示例：\n```\n安卓布局文件\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"16dp\"\n    android:text=\"@string/lorem_ipsum\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toEndOf=\"parent\"\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toBottomOf=\"@id/button_first\" />\n错误的鸿蒙ArkUI代码：\n// 未完整、准确地实现安卓布局代码的转译。\n// 遗漏了id、marginTop、constraintBottom_toBottomOf、constraintEnd_toEndOf、constraintStart_toStartOf、constraintTop_toBottomOf属性，并且添加了额外的maxLines属性。\nText($r(\"app.string.lorem_ipsum\"))\n  .maxLines(10)\n修改后的正确鸿蒙ArkUI代码：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        top: { anchor: 'button_first', align: VerticalAlign.Bottom },  // 对app:layout_constraintTop_toBottomOf=\"@id/button_first\"的转译\n        bottom: { anchor: '__container__', align: VerticalAlign.Bottom },  // 对app:layout_constraintBottom_toBottomOf=\"parent\"的转译\n        left: { anchor: '__container__', align: HorizontalAlign.Start },  // 对app:layout_constraintStart_toStartOf=\"parent\"的转译\n        right: { anchor: '__container__', align: HorizontalAlign.End }  // 对app:layout_constraintEnd_toEndOf=\"parent\"的转译\n    })  // 使用RelativeContainer与alignRules实现对layout_constraintXXX_toXXXOf属性的转译\n}\n额外示例：\n利用RelativeContainer实现子组件垂直水平居中：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        center: {anchor: '__container__', align: VerticalAlign.Center},\n        middle: {anchor: '__container__', align: HorizontalAlign.Center}\n    })\n}\n```\n\n", "translated_component": {"harmony_component": "RelativeContainer() {\n  Image($r('app.media.ic_message_black'))\n    .id('imageView2')\n    .width('169vp')\n    .height('153vp')\n    .margin({ top: '8vp', bottom: '8vp', start: '8vp', end: '8vp' })\n    .alignRules({\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center },\n      verticalBias: { anchor: '__container__', align: VerticalAlign.Center, offset: 0.27 }\n    })\n\n  Text('No Orders Yet')\n    .id('textView')\n    .width('auto')\n    .height('auto')\n    .margin({ top: '8vp', bottom: '8vp', start: '8vp', end: '8vp' })\n    .fontSize(20)\n    .fontColor($r('app.color.blue_grey'))\n    .alignRules({\n      top: { anchor: 'imageView2', align: VerticalAlign.Bottom },\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center }\n    })\n}\n.width('100%')\n.height('100%')\n.margin({ start: '8vp', end: '8vp', top: '10vp' })\n.backgroundColor('#ffffff')\n.visibility(Visibility.Hidden)", "explanation": "1. 使用RelativeContainer组件来实现ConstraintLayout的约束布局功能。\n2. 使用Image组件来显示图像，设置其宽度、高度、外边距和垂直偏移。\n3. 使用Text组件来显示文本，设置其宽度、高度、外边距、字体大小和颜色。\n4. 通过alignRules属性来实现组件的布局约束，确保图像视图位于容器的中心，文本视图位于图像视图的正下方。\n5. 设置容器的宽度、高度、外边距和背景颜色，并将其初始状态设置为隐藏。"}}}, {"id": "RrwRc7kPp2fAnhHuyZWyJA", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "RelativeContainer() {\n  Image($r('app.media.ic_message_black'))\n    .id('imageView2')\n    .width('169vp')\n    .height('153vp')\n    .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n    .alignRules({\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center },\n      verticalBias: { anchor: '__container__', align: VerticalAlign.Center, offset: 0.27 }\n    })\n\n  Text('No Orders Yet')\n    .id('textView')\n    .width('auto')\n    .height('auto')\n    .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n    .fontSize(20)\n    .fontColor($r('app.color.blue_grey'))\n    .alignRules({\n      top: { anchor: 'imageView2', align: VerticalAlign.Bottom },\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center }\n    })\n}\n.width('100%')\n.height('100%')\n.margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n.backgroundColor('#ffffff')\n.visibility(Visibility.Hidden)"}}], "details": null}], "details": {"breakdown_android_layout": {"tasks": [{"description": "实现安卓标题工具栏的转译，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["include"], "content": "<include layout=\"@layout/toolbar\" />"}}, {"description": "实现进度条组件的转译，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["ProgressBar"], "content": "<ProgressBar\n    android:id=\"@+id/progressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginTop=\"35dp\"\n    android:visibility=\"gone\" />"}}, {"description": "实现RecyclerView组件的转译，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["android.support.v7.widget.RecyclerView"], "content": "<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerview_order_details\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"3dp\" />"}}, {"description": "实现空状态布局的转译，包括ImageView和TextView，并保持布局和样式尽可能一致。", "done": false, "component": {"name": ["android.support.constraint.ConstraintLayout", "ImageView", "TextView"], "content": "<android.support.constraint.ConstraintLayout\n    android:id=\"@+id/ll_empty\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"10dp\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n    android:visibility=\"gone\">\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"169dp\"\n        android:layout_height=\"153dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/ic_message_black\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.26999998\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"No Orders Yet\"\n        android:textColor=\"@color/blue_grey\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n</android.support.constraint.ConstraintLayout>"}}]}, "translated_android_components": [{"description": "实现安卓标题工具栏的转译，并保持布局和样式尽可能一致。", "source_component": "include", "source_component_code": "<include layout=\"@layout/toolbar\" />", "source_component_description": "包含一个工具栏布局，宽度占满父容器，高度自适应。", "target_component": ["ToolBar"], "target_component_code": "ToolBar()\n  .width('100%')\n  .height('auto')", "target_component_description": "包含一个工具栏布局，宽度占满父容器，高度自适应。", "explanation": "根据安卓组件描述，页面包含一个工具栏，工具栏的宽度和高度自适应，工具栏的具体内容和样式由外部布局文件app.layout.toolbar定义。在鸿蒙ArkUI中，选择ToolBar组件来实现安卓中的工具栏功能。ToolBar组件支持自适应宽度和高度，并且可以通过外部布局文件定义其内容和样式。因此，转译后的鸿蒙ArkUI代码为：ToolBar()，并设置其宽度为'100%'以占满父容器，高度为'auto'以自适应内容。"}, {"description": "实现进度条组件的转译，并保持布局和样式尽可能一致。", "source_component": "ProgressBar", "source_component_code": "<ProgressBar\n    android:id=\"@+id/progressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginTop=\"35dp\"\n    android:visibility=\"gone\" />", "source_component_description": "进度条，宽度自适应，高度自适应，外边距顶部为35vp，对齐方式为居中，初始状态为不可见。", "target_component": ["Progress", "Column"], "target_component_code": "Column() {\n  Progress()\n    .id('progressBar')\n    .width('auto')\n    .height('auto')\n    .visibility(Visibility.None)\n}\n.margin({ top: '35vp' })\n.alignItems(HorizontalAlign.Center)", "target_component_description": "进度条，宽度自适应，高度自适应，外边距顶部为35vp，对齐方式为居中，初始状态为不可见。", "explanation": "首先，使用Column组件来控制布局，使其宽度自适应、高度自适应，并位于父容器的中心位置。然后，在Column中添加Progress组件，设置其id为'progressBar'，宽度为'auto'，高度为'auto'，初始状态为不可见（使用Visibility.None）。最后，通过margin属性设置顶部间距为35vp，并通过alignItems属性使Progress组件在水平方向上居中。"}, {"description": "实现RecyclerView组件的转译，并保持布局和样式尽可能一致。", "source_component": "android.support.v7.widget.RecyclerView", "source_component_code": "<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/recyclerview_order_details\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"3dp\" />", "source_component_description": "一个可复用的视图容器，宽度占满父容器，高度自适应，底部外边距为3vp。", "target_component": ["List", "Blank"], "target_component_code": "List()\n  .id('recyclerview_order_details')\n  .width('100%')\n  .height('auto')\n  .margin({ bottom: '3vp' })", "target_component_description": "一个可复用的视图容器，宽度占满父容器，高度自适应，底部外边距为3vp。", "explanation": "根据安卓组件描述，RecyclerView组件的宽度占满父容器，高度自适应，底部外边距为3vp。在鸿蒙ArkUI中，使用List组件来实现RecyclerView的功能。List组件的宽度设置为'100%'以占满父容器，高度设置为'auto'以自适应内容。通过设置margin属性中的bottom值为'3vp'来实现底部的3vp外边距效果。"}, {"description": "实现空状态布局的转译，包括ImageView和TextView，并保持布局和样式尽可能一致。", "source_component": "android.support.constraint.ConstraintLayout", "source_component_code": "<android.support.constraint.ConstraintLayout\n    android:id=\"@+id/ll_empty\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginEnd=\"8dp\"\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"10dp\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n    android:visibility=\"gone\">\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"169dp\"\n        android:layout_height=\"153dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/ic_message_black\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.26999998\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"No Orders Yet\"\n        android:textColor=\"@color/blue_grey\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n</android.support.constraint.ConstraintLayout>", "source_component_description": "约束布局容器，宽度占满父容器，高度占满父容器，外边距为8vp（左右）和10vp（顶部），背景颜色为白色，方向为垂直，初始状态为隐藏。\n- 图像视图，宽度为169vp，高度为153vp，外边距为8vp（上下左右），图像资源引用app.media.ic_message_black，位于父容器的中心，垂直偏移为0.27。\n- 文本视图，宽度自适应，高度自适应，外边距为8vp（上下左右），文本内容为“No Orders Yet”，文本颜色引用app.color.blue_grey，字体大小为20fp，位于图像视图的正下方，水平居中。", "target_component": ["RelativeContainer", "Image", "Text"], "target_component_code": "RelativeContainer() {\n  Image($r('app.media.ic_message_black'))\n    .id('imageView2')\n    .width('169vp')\n    .height('153vp')\n    .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n    .alignRules({\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center },\n      verticalBias: { anchor: '__container__', align: VerticalAlign.Center, offset: 0.27 }\n    })\n\n  Text('No Orders Yet')\n    .id('textView')\n    .width('auto')\n    .height('auto')\n    .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n    .fontSize(20)\n    .fontColor($r('app.color.blue_grey'))\n    .alignRules({\n      top: { anchor: 'imageView2', align: VerticalAlign.Bottom },\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center }\n    })\n}\n.width('100%')\n.height('100%')\n.margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n.backgroundColor('#ffffff')\n.visibility(Visibility.Hidden)", "target_component_description": "约束布局容器，宽度占满父容器，高度占满父容器，外边距为8vp（左右）和10vp（顶部），背景颜色为白色，方向为垂直，初始状态为隐藏。\n- 图像视图，宽度为169vp，高度为153vp，外边距为8vp（上下左右），图像资源引用app.media.ic_message_black，位于父容器的中心，垂直偏移为0.27。\n- 文本视图，宽度自适应，高度自适应，外边距为8vp（上下左右），文本内容为“No Orders Yet”，文本颜色引用app.color.blue_grey，字体大小为20fp，位于图像视图的正下方，水平居中。", "explanation": "1. 使用RelativeContainer组件来实现ConstraintLayout的约束布局功能。\n2. 使用Image组件来显示图像，设置其宽度、高度、外边距和垂直偏移。\n3. 使用Text组件来显示文本，设置其宽度、高度、外边距、字体大小和颜色。\n4. 通过alignRules属性来实现组件的布局约束，确保图像视图位于容器的中心，文本视图位于图像视图的正下方。\n5. 设置容器的宽度、高度、外边距和背景颜色，并将其初始状态设置为隐藏。"}]}}, "assemble_harmony_layout": "为了将已经完成的转译任务结果合并为一个整体的ArkUI布局文件，我们需要确保所有组件按照正确的层次结构无缝连接，并保持原始安卓页面的语义和结构一致性。以下是合并后的ArkUI布局文件：\n\n```ets\n@Entry\n@Component\nstruct MainLayout {\n  build() {\n    Column() {\n      // 1. 标题工具栏\n      ToolBar()\n        .width('100%')\n        .height('auto')\n\n      // 2. 进度条组件\n      Column() {\n        Progress()\n          .id('progressBar')\n          .width('auto')\n          .height('auto')\n          .visibility(Visibility.None)\n      }\n      .margin({ top: '35vp' })\n      .alignItems(HorizontalAlign.Center)\n\n      // 3. RecyclerView组件\n      List()\n        .id('recyclerview_order_details')\n        .width('100%')\n        .height('auto')\n        .margin({ bottom: '3vp' })\n\n      // 4. 空状态布局\n      RelativeContainer() {\n        Image($r('app.media.ic_message_black'))\n          .id('imageView2')\n          .width('169vp')\n          .height('153vp')\n          .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n          .alignRules({\n            center: { anchor: '__container__', align: VerticalAlign.Center },\n            middle: { anchor: '__container__', align: HorizontalAlign.Center },\n            verticalBias: { anchor: '__container__', align: VerticalAlign.Center, offset: 0.27 }\n          })\n\n        Text('No Orders Yet')\n          .id('textView')\n          .width('auto')\n          .height('auto')\n          .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n          .fontSize(20)\n          .fontColor($r('app.color.blue_grey'))\n          .alignRules({\n            top: { anchor: 'imageView2', align: VerticalAlign.Bottom },\n            center: { anchor: '__container__', align: VerticalAlign.Center },\n            middle: { anchor: '__container__', align: HorizontalAlign.Center }\n          })\n      }\n      .width('100%')\n      .height('100%')\n      .margin({ top: '8vp', bottom: '8vp', left: '8vp', right: '8vp' })\n      .backgroundColor('#ffffff')\n      .visibility(Visibility.Hidden)\n    }\n    .width('100%')\n    .height('100%')\n  }\n}\n```\n\n### 合并过程说明：\n1. **标题工具栏**：直接放置在`Column`的顶部，宽度占满父容器，高度自适应。\n2. **进度条组件**：放置在标题工具栏下方，使用`Column`包裹，确保进度条居中且顶部有35vp的外边距。\n3. **RecyclerView组件**：放置在进度条组件下方，宽度占满父容器，高度自适应，底部有3vp的外边距。\n4. **空状态布局**：放置在RecyclerView组件下方，使用`RelativeContainer`包裹`Image`和`Text`，确保布局和样式与原始安卓页面一致。\n\n### 关键点：\n- **层次结构**：所有组件按照从上到下的顺序排列，确保布局的层次结构与原始安卓页面一致。\n- **样式和属性**：每个组件的样式和属性都严格按照原始安卓页面的要求进行设置，确保最终输出的布局与原始页面保持一致。\n- **组件的完整性**：确保所有转译的组件都被包含在最终的ArkUI布局文件中，没有遗漏任何UI元素、属性或样式。\n\n通过以上步骤，我们成功地将所有转译的组件合并为一个整体的ArkUI布局文件，确保了布局的完整性和一致性。", "time": 167.0505611896515}