{"android_layout": {"name": "app/src/main/res/menu/home.xml", "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <item\n        android:id=\"@+id/action_search\"\n        android:icon=\"@drawable/ic_search_black\"\n        app:showAsAction=\"always\"\n        app:actionViewClass=\"android.support.v7.widget.SearchView\"\n        android:title=\"Search\"/>\n    <item\n        android:id=\"@+id/cart\"\n        android:icon=\"@drawable/ic_shopping_cart_white\"\n        android:orderInCategory=\"100\"\n        android:title=\"@string/cart\"\n        app:showAsAction=\"always\" />\n</menu>\n", "java": "", "contains": [], "mock_data": {}, "source": "GoGrocery"}, "breakdown_android_layout": {"tasks": [{"description": "实现搜索功能的转译，包括搜索图标和搜索视图组件。", "done": false, "component": {"name": ["android.support.v7.widget.SearchView"], "content": "<item\n    android:id=\"@+id/action_search\"\n    android:icon=\"@drawable/ic_search_black\"\n    app:showAsAction=\"always\"\n    app:actionViewClass=\"android.support.v7.widget.SearchView\"\n    android:title=\"Search\"/>"}}, {"description": "实现购物车功能的转译，包括购物车图标和标题。", "done": false, "component": {"name": ["android.widget.ImageView", "android.widget.TextView"], "content": "<item\n    android:id=\"@+id/cart\"\n    android:icon=\"@drawable/ic_shopping_cart_white\"\n    android:orderInCategory=\"100\"\n    android:title=\"@string/cart\"\n    app:showAsAction=\"always\" />"}}]}, "translations": [{"description": "实现搜索功能的转译，包括搜索图标和搜索视图组件。", "source_component": "android.support.v7.widget.SearchView", "source_component_code": "<item\n    android:id=\"@+id/action_search\"\n    android:icon=\"@drawable/ic_search_black\"\n    app:showAsAction=\"always\"\n    app:actionViewClass=\"android.support.v7.widget.SearchView\"\n    android:title=\"Search\"/>", "source_component_description": "一个菜单项，宽度自适应，高度自适应，图标引用资源app.media.ic_search_black，标题为“Search”。", "target_component": ["Menu", "MenuItem", "Search"], "target_component_code": "Menu() {\n  MenuItem() {\n    Image($r('app.media.ic_search_black'))\n      .width('auto')\n      .height('auto')\n    Text('Search')\n      .fontSize(20)\n  }\n  Search() {\n    TextField()\n      .width('100%')\n      .height('auto')\n  }\n}", "target_component_description": "一个菜单项，宽度自适应，高度自适应，图标引用资源app.media.ic_search_black，标题为“Search”。", "explanation": "1. 使用Menu组件来创建菜单，对应安卓中的操作栏。\n2. 使用MenuItem组件来创建菜单项，对应安卓中的菜单项。\n3. 在MenuItem中，使用Image组件来显示图标，引用资源app.media.ic_search_black，对应安卓中的android:icon属性。\n4. 在MenuItem中，使用Text组件来显示标题'Search'，对应安卓中的android:title属性。\n5. 使用Search组件来创建搜索视图，对应安卓中的SearchView。\n6. 在Search组件中，使用TextField组件来处理搜索输入，对应安卓中的搜索输入框。\n7. 设置MenuItem和TextField的宽度为'auto'，高度为'auto'，对应安卓中的wrap_content。"}, {"description": "实现购物车功能的转译，包括购物车图标和标题。", "source_component": "android.widget.ImageView", "source_component_code": "<item\n    android:id=\"@+id/cart\"\n    android:icon=\"@drawable/ic_shopping_cart_white\"\n    android:orderInCategory=\"100\"\n    android:title=\"@string/cart\"\n    app:showAsAction=\"always\" />", "source_component_description": "一个项目组件，宽度自适应，高度自适应，图标引用资源app.media.ic_shopping_cart_white，标题引用资源app.string.cart，显示顺序为100，始终显示为操作项。", "target_component": ["Image", "Text", "RelativeContainer"], "target_component_code": "RelativeContainer() {\n  Image($r('app.media.ic_shopping_cart_white'))\n    .width('auto')\n    .height('auto')\n  Text($r('app.string.cart'))\n    .width('auto')\n    .height('auto')\n    .alignRules({\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center }\n    })\n}", "target_component_description": "一个项目组件，宽度自适应，高度自适应，图标引用资源app.media.ic_shopping_cart_white，标题引用资源app.string.cart，显示顺序为100，始终显示为操作项。", "explanation": "根据安卓组件描述，我们使用Image组件来显示购物车图标，Text组件来显示购物车标题。由于需要实现图标和标题的相对布局和对齐方式，我们选择了RelativeContainer组件。在RelativeContainer中，Image和Text组件的宽度和高度都设置为'auto'，以自适应内容。Text组件通过alignRules属性实现了在RelativeContainer中的垂直和水平居中对齐。"}], "translation_agent_task": {"id": "X3SWmNN4cfeYG3AYmXpcoq", "description": "转译安卓布局组件", "subtasks": [{"id": "mBPZjVwuU5dZHmADANyuwk", "description": "根据转译表转译组件v1", "subtasks": [{"id": "dhjdveoUBB9WbtujVbxoqd", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<item\n    android:id=\"@+id/action_search\"\n    android:icon=\"@drawable/ic_search_black\"\n    app:showAsAction=\"always\"\n    app:actionViewClass=\"android.support.v7.widget.SearchView\"\n    android:title=\"Search\"/>\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "一个菜单项，宽度自适应，高度自适应，图标引用资源app.media.ic_search_black，标题为“Search”。", "function_description": "实现了一个菜单项，图标引用资源app.media.ic_search_black，标题为“Search”，该菜单项始终显示在操作栏中，并包含一个搜索视图。"}}}, {"id": "mx5cPfar9KEv5rNAnEPR7q", "description": "查询组件文档", "subtasks": [{"id": "EDfy9ejmM5EeWeSMT49XGJ", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['android.support.v7.widget.SearchView']\n实现了一个菜单项，图标引用资源app.media.ic_search_black，标题为“Search”，该菜单项始终显示在操作栏中，并包含一个搜索视图。\n<item\n    android:id=\"@+id/action_search\"\n    android:icon=\"@drawable/ic_search_black\"\n    app:showAsAction=\"always\"\n    app:actionViewClass=\"android.support.v7.widget.SearchView\"\n    android:title=\"Search\"/>\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["Menu", "MenuItem", "Search"], "queries": [{"component": "MenuItem", "queries": ["设置菜单项的图标", "设置菜单项的标题", "设置菜单项的显示方式为始终显示"]}, {"component": "Search", "queries": ["设置搜索框的默认提示文本", "设置搜索框的输入事件处理"]}], "idea": "选择Menu和MenuItem组件来实现安卓中的菜单项功能，并使用Search组件来实现搜索视图。MenuItem用于显示带有图标和标题的菜单项，Search组件用于处理搜索输入。"}}}, {"id": "QVigXEHNgUyHwLZo8ZixtE", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["Menu", "MenuItem", "Search"], "queries": [{"component": "MenuItem", "queries": ["设置菜单项的图标", "设置菜单项的标题", "设置菜单项的显示方式为始终显示"]}, {"component": "Search", "queries": ["设置搜索框的默认提示文本", "设置搜索框的输入事件处理"]}], "idea": "选择Menu和MenuItem组件来实现安卓中的菜单项功能，并使用Search组件来实现搜索视图。MenuItem用于显示带有图标和标题的菜单项，Search组件用于处理搜索输入。"}, "corrected_component_query": {"components": ["Menu", "MenuItem", "Search"], "queries": [{"component": "MenuItem", "queries": ["设置菜单项的图标", "设置菜单项的标题", "设置菜单项的显示方式为始终显示"]}, {"component": "Search", "queries": ["设置搜索框的默认提示文本", "设置搜索框的输入事件处理"]}], "idea": "选择Menu和MenuItem组件来实现安卓中的菜单项功能，并使用Search组件来实现搜索视图。MenuItem用于显示带有图标和标题的菜单项，Search组件用于处理搜索输入。"}}}, {"id": "feAq87g6QbQyhSi2u3YCqx", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个菜单项，图标引用资源app.media.ic_search_black，标题为“Search”，该菜单项始终显示在操作栏中，并包含一个搜索视图。", "k": 3, "component_name": ["Menu", "MenuItem", "Search"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "Search", "source": "harmony-component-example-doc", "table_id": 200}, "page_content": "该组件通过 Column 布局实现了一个包含搜索框的界面。布局宽度占据整个屏幕的 90%，高度自适应内容，内边距为左右 5%。组件的垂直方向上包含一个 Search 组件，该组件的宽度为 95%，顶部外边距为 100vp。\nSearch 组件的样式包括宽度、边距等属性，支持自定义菜单扩展项。Search 组件的功能包括文本输入和自定义菜单项的点击事件，用户可以通过点击菜单项触发相应操作，菜单项也可以在点击时进行拦截或不拦截。\n整个布局通过 Column 布局保证 Search 组件在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6666228175163269], [{"id": null, "metadata": {"component_name": "Menu", "source": "harmony-component-example-doc", "table_id": 315}, "page_content": "该组件实现了一个带有符号类型图标的普通菜单。布局宽度占据整个屏幕，高度设为 100%，内边距为左右 0、顶部 0。组件的垂直方向上被分为一个部分，包含一个文本提示和一个菜单。文本提示位于顶部，菜单通过点击文本提示触发显示。\n菜单的样式包括图标大小、字体大小、颜色等属性，支持不同的样式展示。菜单项的功能包括点击事件和状态效果，用户可以通过点击菜单项触发相应操作，菜单项也可以在启用或禁用状态下进行展示。\n整个布局通过 Row 和 Column 布局保证菜单在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.660632848739624], [{"id": null, "metadata": {"component_name": "Search", "source": "harmony-component-example-doc", "table_id": 198}, "page_content": "该组件通过 Column 布局实现了一个包含搜索框和按钮的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个文本显示区域和一个搜索框或按钮。\n搜索框的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。搜索框的功能包括输入事件和提交事件，用户可以通过输入文本触发相应操作，也可以通过点击搜索按钮提交搜索内容。\n按钮的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。按钮的功能包括点击事件，用户可以通过点击按钮触发相应操作。\n整个布局通过 Column 布局保证组件在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6560094952583313]], "component_examples": {"Search": [{"description": "该组件通过 Column 布局实现了一个包含搜索框的界面。布局宽度占据整个屏幕的 90%，高度自适应内容，内边距为左右 5%。组件的垂直方向上包含一个 Search 组件，该组件的宽度为 95%，顶部外边距为 100vp。\nSearch 组件的样式包括宽度、边距等属性，支持自定义菜单扩展项。Search 组件的功能包括文本输入和自定义菜单项的点击事件，用户可以通过点击菜单项触发相应操作，菜单项也可以在点击时进行拦截或不拦截。\n整个布局通过 Column 布局保证 Search 组件在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct Index {\n  @State text: string = 'Search editMenuOptions' // 定义一个状态变量 text，初始值为 'Search editMenuOptions'\n\n  // 定义 onCreateMenu 方法，用于自定义菜单项的内容、图标和回调方法\n  onCreateMenu(menuItems: Array<TextMenuItem>) {\n    menuItems.forEach((value, index) => {\n      value.icon = $r('app.media.startIcon') // 为每个菜单项设置图标，图标资源名为 'app.media.startIcon'\n      if (value.id.equals(TextMenuItemId.COPY)) {\n        value.content = \"复制change\" // 如果菜单项的 id 为 COPY，则修改其内容为 \"复制change\"\n      }\n      if (value.id.equals(TextMenuItemId.SELECT_ALL)) {\n        value.content = \"全选change\" // 如果菜单项的 id 为 SELECT_ALL，则修改其内容为 \"全选change\"\n      }\n    })\n    let item1: TextMenuItem = {\n      content: 'custom1', // 定义一个自定义菜单项，内容为 'custom1'\n      icon: $r('app.media.startIcon'), // 设置图标，图标资源名为 'app.media.startIcon'\n      id: TextMenuItemId.of('custom1'), // 设置菜单项的 id 为 'custom1'\n    }\n    let item2: TextMenuItem = {\n      content: 'custom2', // 定义一个自定义菜单项，内容为 'custom2'\n      id: TextMenuItemId.of('custom2'), // 设置菜单项的 id 为 'custom2'\n      icon: $r('app.media.startIcon'), // 设置图标，图标资源名为 'app.media.startIcon'\n    }\n    menuItems.push(item1) // 将自定义菜单项 item1 添加到菜单项列表的末尾\n    menuItems.unshift(item2) // 将自定义菜单项 item2 添加到菜单项列表的开头\n    return menuItems // 返回修改后的菜单项列表\n  }\n\n  build() {\n    Column() {\n      Search({ value: this.text }) // 创建一个 Search 组件，绑定状态变量 text\n        .width('95%') // 设置 Search 组件的宽度为 95%\n        .editMenuOptions({\n          onCreateMenu: this.onCreateMenu, // 设置 onCreateMenu 回调方法，用于自定义菜单项\n          onMenuItemClick: (menuItem: TextMenuItem, textRange: TextRange) => { // 设置 onMenuItemClick 回调方法，用于处理菜单项点击事件\n            if (menuItem.id.equals(TextMenuItemId.of(\"custom2\"))) {\n              console.log(\"拦截 id: custom2 start:\" + textRange.start + \"; end:\" + textRange.end) // 如果点击的菜单项 id 为 'custom2'，则拦截并输出日志\n              return true; // 返回 true 表示拦截该点击事件\n            }\n            if (menuItem.id.equals(TextMenuItemId.COPY)) {\n              console.log(\"拦截 COPY start:\" + textRange.start + \"; end:\" + textRange.end) // 如果点击的菜单项 id 为 COPY，则拦截并输出日志\n              return true; // 返回 true 表示拦截该点击事件\n            }\n            if (menuItem.id.equals(TextMenuItemId.SELECT_ALL)) {\n              console.log(\"不拦截 SELECT_ALL start:\" + textRange.start + \"; end:\" + textRange.end) // 如果点击的菜单项 id 为 SELECT_ALL，则不拦截并输出日志\n              return false; // 返回 false 表示不拦截该点击事件\n            }\n            return false; // 默认返回 false，表示不拦截其他菜单项的点击事件\n          }\n        })\n        .margin({ top: 100 }) // 设置 Search 组件的顶部外边距为 100vp\n    }\n    .width(\"90%\") // 设置 Column 组件的宽度为 90%\n    .margin(\"5%\") // 设置 Column 组件的左右外边距为 5%\n  }\n}"}, {"description": "该组件通过 Column 布局实现了一个包含搜索框和按钮的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个文本显示区域和一个搜索框或按钮。\n搜索框的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。搜索框的功能包括输入事件和提交事件，用户可以通过输入文本触发相应操作，也可以通过点击搜索按钮提交搜索内容。\n按钮的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。按钮的功能包括点击事件，用户可以通过点击按钮触发相应操作。\n整个布局通过 Column 布局保证组件在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct SearchExample {\n  @State changeValue: string = '' // 用于存储搜索框的输入值\n  @State submitValue: string = '' // 用于存储搜索框的提交值\n  @State positionInfo: CaretOffset = { index: 0, x: 0, y: 0 } // 用于存储光标位置信息\n  controller: SearchController = new SearchController() // 搜索框的控制器，用于控制搜索框的行为\n\n  build() {\n    Column({space: 10}) { // 使用 Column 布局，组件之间的间距为 10vp\n      Text('onSubmit:' + this.submitValue) // 显示搜索框的提交值\n        .fontSize(18) // 字体大小为 18\n        .margin(15) // 上下左右边距为 15vp\n      Text('onChange:' + this.changeValue) // 显示搜索框的输入值\n        .fontSize(18) // 字体大小为 18\n        .margin(15) // 上下左右边距为 15vp\n      Search({ value: this.changeValue, placeholder: 'Type to search...', controller: this.controller }) // 创建搜索框，绑定输入值和控制器\n        .searchButton('SEARCH') // 设置搜索按钮的文本为 \"SEARCH\"\n        .width('95%') // 搜索框的宽度为父容器的 95%\n        .height(40) // 搜索框的高度为 40vp\n        .backgroundColor('#F5F5F5') // 搜索框的背景颜色为 #F5F5F5\n        .placeholderColor(Color.Grey) // 占位符文本颜色为灰色\n        .placeholderFont({ size: 14, weight: 400 }) // 占位符文本字体大小为 14，字体粗细为 400\n        .textFont({ size: 14, weight: 400 }) // 输入文本字体大小为 14，字体粗细为 400\n        .onSubmit((value: string) => { // 当用户提交搜索时触发的事件\n          this.submitValue = value // 更新提交值\n        })\n        .onChange((value: string) => { // 当用户输入时触发的事件\n          this.changeValue = value // 更新输入值\n        })\n        .margin(20) // 上下左右边距为 20vp\n      Button('Set caretPosition 1') // 创建按钮，文本为 \"Set caretPosition 1\"\n        .onClick(() => { // 当按钮被点击时触发的事件\n          this.controller.caretPosition(1) // 设置光标位置为 1\n        })\n      Button('Get CaretOffset') // 创建按钮，文本为 \"Get CaretOffset\"\n        .onClick(() => { // 当按钮被点击时触发的事件\n          this.positionInfo = this.controller.getCaretOffset() // 获取光标位置信息并更新状态\n        })\n    }.width('100%') // Column 布局的宽度为父容器的 100%\n  }\n}"}], "Menu": [{"description": "该组件实现了一个带有符号类型图标的普通菜单。布局宽度占据整个屏幕，高度设为 100%，内边距为左右 0、顶部 0。组件的垂直方向上被分为一个部分，包含一个文本提示和一个菜单。文本提示位于顶部，菜单通过点击文本提示触发显示。\n菜单的样式包括图标大小、字体大小、颜色等属性，支持不同的样式展示。菜单项的功能包括点击事件和状态效果，用户可以通过点击菜单项触发相应操作，菜单项也可以在启用或禁用状态下进行展示。\n整个布局通过 Row 和 Column 布局保证菜单在垂直方向上有序排列，确保界面整洁美观。", "code": "import { SymbolGlyphModifier } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct Index {\n  // 定义菜单项的起始图标样式，使用系统图标 \"ohos_mic\"，字体大小为 24vp\n  @State startIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.ohos_mic')).fontSize('24vp');\n  // 定义菜单项的结束图标样式，使用系统图标 \"ohos_trash\"，字体大小为 24vp\n  @State endIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.ohos_trash')).fontSize('24vp');\n  // 定义菜单项的选中图标样式，使用系统图标 \"checkmark\"，字体大小为 24vp\n  @State selectIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.checkmark')).fontSize('24vp');\n  // 定义菜单项的选中状态，初始值为 true\n  @State select: boolean = true;\n\n  // 定义子菜单的构建器\n  @Builder\n  SubMenu() {\n    Menu() {\n      MenuItem({ content: \"复制\", labelInfo: \"Ctrl+C\" })\n      MenuItem({ content: \"粘贴\", labelInfo: \"Ctrl+V\" })\n    }\n  }\n\n  // 定义主菜单的构建器\n  @Builder\n  MyMenu() {\n    Menu() {\n      // 定义第一个菜单项，包含起始图标和内容\n      MenuItem({ symbolStartIcon: this.startIconModifier, content: \"菜单选项\" })\n      // 定义第二个菜单项，包含起始图标和内容，并设置为禁用状态\n      MenuItem({ symbolStartIcon: this.startIconModifier, content: \"菜单选项\" })\n        .enabled(false)\n      // 定义第三个菜单项，包含起始图标、内容、结束图标和子菜单\n      MenuItem({\n        symbolStartIcon: this.startIconModifier,\n        content: \"菜单选项\",\n        symbolEndIcon: this.endIconModifier,\n        builder: (): void => this.SubMenu()\n      })\n      // 定义菜单项组，包含标题和多个菜单项\n      MenuItemGroup({ header: '小标题' }) {\n        MenuItem({\n          symbolStartIcon: this.startIconModifier,\n          content: \"菜单选项\",\n          symbolEndIcon: this.endIconModifier,\n          builder: (): void => this.SubMenu()\n        })\n        MenuItem({\n          symbolStartIcon: this.startIconModifier,\n          content: \"菜单选项\",\n          symbolEndIcon: this.endIconModifier,\n          builder: (): void => this.SubMenu()\n        })\n      }\n      // 定义最后一个菜单项，包含内容，并设置选中状态和选中图标\n      MenuItem({\n        content: \"菜单选项\",\n      }).selected(this.select).selectIcon(this.selectIconModifier)\n    }\n  }\n\n  // 构建组件的布局\n  build() {\n    Row() {\n      Column() {\n        // 定义文本提示，字体大小为 50vp，字体加粗\n        Text('click to show menu')\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n      }\n      // 绑定菜单到文本提示，点击文本提示时显示菜单\n      .bindMenu(this.MyMenu)\n      .width('100%')\n    }\n    .height('100%')\n  }\n}"}]}}}, {"id": "oTSXcLGfDE6W5TxNq6Sabi", "description": "查询组件文档", "subtasks": [{"id": "nTp5NMLrFrtyJCNV3qYDAE", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "cZPKn8ybfnbxEFC4oxYHjn", "description": "查询组件MenuItem的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置菜单项的图标", "设置菜单项的标题", "设置菜单项的显示方式为始终显示"], "n_results": 10, "query_results": {"ids": [["c3792339-f3fb-485a-bdc9-50908456f38f", "2daa2340-86e2-4344-bd4b-ac48aefdf73d", "7237f5d4-b112-47d9-83f1-09b6ef36a09b", "90afd08e-d169-43e2-af2b-7fc4ec5688a8", "eec447ac-82ea-418a-a010-b73343dcd06d", "e3fe753f-7c44-41e8-a637-1c22d024a91c", "3f7d3d67-7823-45d6-ab97-159a2257d57f", "d7ea2f11-8d34-4956-834a-0efe957e045c", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "ba863a45-92bc-4a75-bc3e-786e966f0b7e"], ["7237f5d4-b112-47d9-83f1-09b6ef36a09b", "2daa2340-86e2-4344-bd4b-ac48aefdf73d", "eec447ac-82ea-418a-a010-b73343dcd06d", "90afd08e-d169-43e2-af2b-7fc4ec5688a8", "e3fe753f-7c44-41e8-a637-1c22d024a91c", "c3792339-f3fb-485a-bdc9-50908456f38f", "3f7d3d67-7823-45d6-ab97-159a2257d57f", "d7ea2f11-8d34-4956-834a-0efe957e045c", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "828a80b5-3292-42f4-9557-b8b36e04c419"], ["2daa2340-86e2-4344-bd4b-ac48aefdf73d", "c3792339-f3fb-485a-bdc9-50908456f38f", "828a80b5-3292-42f4-9557-b8b36e04c419", "7237f5d4-b112-47d9-83f1-09b6ef36a09b", "eec447ac-82ea-418a-a010-b73343dcd06d", "e3fe753f-7c44-41e8-a637-1c22d024a91c", "90afd08e-d169-43e2-af2b-7fc4ec5688a8", "3f7d3d67-7823-45d6-ab97-159a2257d57f", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "ba863a45-92bc-4a75-bc3e-786e966f0b7e"]], "distances": [[0.28174465894699097, 0.3008485436439514, 0.3330535888671875, 0.3442504405975342, 0.34516602754592896, 0.3502686619758606, 0.39550459384918213, 0.4173174500465393, 0.4190922975540161, 0.4201508164405823], [0.3714290261268616, 0.3738543391227722, 0.3912926912307739, 0.39148807525634766, 0.3993687033653259, 0.43106377124786377, 0.45102858543395996, 0.4787883758544922, 0.48118525743484497, 0.48393332958221436], [0.37084460258483887, 0.3851473331451416, 0.40644484758377075, 0.41473013162612915, 0.4165329337120056, 0.44061750173568726, 0.44529449939727783, 0.456434965133667, 0.4757257103919983, 0.4811909794807434]], "metadatas": [[{"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置菜单项中标签信息的字体样式。\n属性名称：labelFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中标签信息的字体样式。\",\"default\":null}}\n", "设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", "设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n"], ["设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", "设置菜单项中标签信息的字体样式。\n属性名称：labelFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中标签信息的字体样式。\",\"default\":null}}\n", "设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", "设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n"], ["设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", "设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", "设置菜单项中标签信息的字体样式。\n属性名称：labelFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中标签信息的字体样式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "9UAkwdqh2jVx9gRaXufzt2", "description": "查询组件Search的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置搜索框的默认提示文本", "设置搜索框的输入事件处理"], "n_results": 10, "query_results": {"ids": [["ffe29df1-b030-4670-b72f-d79c8c392e08", "8e1e9155-67b5-4367-9231-0b9ccf608146", "dd1d9f0e-d55e-4d5a-88ce-b8f0d011df60", "06516705-b80a-4392-9c80-c08fe830b726", "f7a90d54-738d-4273-b22b-5613cf96869a", "120de9a5-4e91-4481-9967-8e79240b3b3f", "08db0343-4e6f-4618-b1b8-a7cf2b287494", "b5fcd1e1-2134-4256-b950-0c98733f0c44", "e04cefc2-642b-4418-8dca-bc497c6285c8", "c22092b7-507e-4a81-bfc9-2cd30fd660f5"], ["06516705-b80a-4392-9c80-c08fe830b726", "08db0343-4e6f-4618-b1b8-a7cf2b287494", "ffe29df1-b030-4670-b72f-d79c8c392e08", "b5fcd1e1-2134-4256-b950-0c98733f0c44", "f7a90d54-738d-4273-b22b-5613cf96869a", "8e1e9155-67b5-4367-9231-0b9ccf608146", "dd1d9f0e-d55e-4d5a-88ce-b8f0d011df60", "0af82083-145b-4aee-bc00-01e5caf39809", "038d15be-839a-4d8d-809d-8e1ce0e278bb", "99726ed9-8bd8-4310-b554-caa8a9259fe4"]], "distances": [[0.3157566785812378, 0.331038236618042, 0.339322566986084, 0.3466026186943054, 0.35013628005981445, 0.3557843565940857, 0.3713298439979553, 0.3972446918487549, 0.3994373083114624, 0.4160398840904236], [0.28183412551879883, 0.28644901514053345, 0.3440806269645691, 0.35057926177978516, 0.35244065523147583, 0.37061941623687744, 0.3772960305213928, 0.37890517711639404, 0.39119386672973633, 0.3916196823120117]], "metadatas": [[{"component_name": "Search", "name": "textFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "searchButton", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "onSubmit", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "searchIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "onChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "selectionMenuHidden", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Search", "name": "onSubmit", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "onChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "textFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "searchButton", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "onDidInsert", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "onEditChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "onWillInsert", "source": "harmony-component-doc", "type": "event"}]], "embeddings": null, "documents": [["设置搜索框内输入文本样式，包括字体大小，字体粗细，字体族，字体风格。目前仅支持默认字体族。\n属性名称：textFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":false,\"description\":\"搜索框内输入文本样式。\",\"default\":null}}\n", "设置搜索框末尾搜索按钮。\n属性名称：searchButton\n属性参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"搜索框末尾搜索按钮文本内容。\",\"default\":null}, 'option': {\"type\":\"SearchButtonOptions\",\"required\":false,\"description\":\"配置搜索框文本样式。\",\"default\":null}}\n", "设置文本在搜索框中的对齐方式。目前支持的对齐方式有：Start、Center、End。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在搜索框中的对齐方式。\",\"default\":null}}\n", "点击搜索图标、搜索按钮或者按下软键盘搜索按钮时触发该回调。\n事件名称：onSubmit\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", "设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"SearchType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":null}}\n", "设置左侧搜索图标样式。\n属性名称：searchIcon\n属性参数：{'value': {\"type\":\"IconOptions\",\"required\":true,\"description\":\"左侧搜索图标样式。\",\"default\":null}}\n", "输入内容发生变化时，触发该回调。\n事件名称：onChange\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", "设置Search通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"Search获焦时，是否绑定输入法。\",\"default\":null}}\n", "设置长按输入框或者右键输入框时，是否弹出文本选择菜单。\n属性名称：selectionMenuHidden\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"长按输入框或者右键输入框时，是否弹出文本选择菜单。\",\"default\":null}}\n", "设置输入的文本是否可复制。设置CopyOptions.None时，当前Search中的文字无法被复制或剪切，仅支持粘贴。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"输入的文本是否可复制。\",\"default\":null}}\n"], ["点击搜索图标、搜索按钮或者按下软键盘搜索按钮时触发该回调。\n事件名称：onSubmit\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", "输入内容发生变化时，触发该回调。\n事件名称：onChange\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", "设置搜索框内输入文本样式，包括字体大小，字体粗细，字体族，字体风格。目前仅支持默认字体族。\n属性名称：textFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":false,\"description\":\"搜索框内输入文本样式。\",\"default\":null}}\n", "设置Search通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"Search获焦时，是否绑定输入法。\",\"default\":null}}\n", "设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"SearchType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":null}}\n", "设置搜索框末尾搜索按钮。\n属性名称：searchButton\n属性参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"搜索框末尾搜索按钮文本内容。\",\"default\":null}, 'option': {\"type\":\"SearchButtonOptions\",\"required\":false,\"description\":\"配置搜索框文本样式。\",\"default\":null}}\n", "设置文本在搜索框中的对齐方式。目前支持的对齐方式有：Start、Center、End。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在搜索框中的对齐方式。\",\"default\":null}}\n", "在输入完成时，触发该回调。\n事件名称：onDidInsert\n事件参数：{'callback': {\"type\":\"Callback<InsertValue>\",\"required\":true,\"description\":\"在输入完成时调用的回调。仅支持系统输入法输入的场景。\",\"default\":null}}\n事件返回值：None\n", "输入状态变化时，触发该回调。有光标时为编辑态，无光标时为非编辑态。isEditing为true表示正在输入。\n事件名称：onEditChange\n事件参数：{'isEditing': {\"type\":\"Callback<boolean>\",\"required\":true,\"description\":\"为true表示正在输入。\",\"default\":null}}\n事件返回值：None\n", "在将要输入时，触发该回调。\n事件名称：onWillInsert\n事件参数：{'callback': {\"type\":\"Callback<InsertValue, boolean>\",\"required\":true,\"description\":\"在将要输入时调用的回调。在返回true时，表示正常插入，返回false时，表示不插入。在预上屏操作时，该回调不触发。仅支持系统输入法输入的场景。\",\"default\":null}}\n事件返回值：None\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "Ycz9npuERnCppZbnw7gsBW", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "PeMjYhjHWDCFZwutBkPk88", "description": "过滤低于阈值的查询结果: 设置菜单项的图标", "subtasks": [], "details": {"query": "设置菜单项的图标", "result_ids": ["c3792339-f3fb-485a-bdc9-50908456f38f", "2daa2340-86e2-4344-bd4b-ac48aefdf73d", "7237f5d4-b112-47d9-83f1-09b6ef36a09b", "90afd08e-d169-43e2-af2b-7fc4ec5688a8", "eec447ac-82ea-418a-a010-b73343dcd06d", "e3fe753f-7c44-41e8-a637-1c22d024a91c", "3f7d3d67-7823-45d6-ab97-159a2257d57f", "d7ea2f11-8d34-4956-834a-0efe957e045c", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "ba863a45-92bc-4a75-bc3e-786e966f0b7e"], "result_documents": ["设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置菜单项中标签信息的字体样式。\n属性名称：labelFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中标签信息的字体样式。\",\"default\":null}}\n", "设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", "设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n"], "result_metadatas": [{"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.28174465894699097, 0.3008485436439514, 0.3330535888671875, 0.3442504405975342, 0.34516602754592896, 0.3502686619758606, 0.39550459384918213, 0.4173174500465393, 0.4190922975540161, 0.4201508164405823], "threshold": 0.6, "query_text_results": [["设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", {"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, 0.718255341053009], ["设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, 0.6991514563560486], ["设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, 0.6669464111328125], ["设置菜单项中标签信息的字体样式。\n属性名称：labelFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中标签信息的字体样式。\",\"default\":null}}\n", {"component_name": "MenuItem", "name": "labelFont", "source": "harmony-component-doc", "type": "attribute"}, 0.6557495594024658], ["设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, 0.654833972454071], ["设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, 0.6497313380241394], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6044954061508179]]}}, {"id": "NKQ58LLxDgXXa4DTNcJHKD", "description": "过滤低于阈值的查询结果: 设置菜单项的标题", "subtasks": [], "details": {"query": "设置菜单项的标题", "result_ids": ["7237f5d4-b112-47d9-83f1-09b6ef36a09b", "2daa2340-86e2-4344-bd4b-ac48aefdf73d", "eec447ac-82ea-418a-a010-b73343dcd06d", "90afd08e-d169-43e2-af2b-7fc4ec5688a8", "e3fe753f-7c44-41e8-a637-1c22d024a91c", "c3792339-f3fb-485a-bdc9-50908456f38f", "3f7d3d67-7823-45d6-ab97-159a2257d57f", "d7ea2f11-8d34-4956-834a-0efe957e045c", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "828a80b5-3292-42f4-9557-b8b36e04c419"], "result_documents": ["设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", "设置菜单项中标签信息的字体样式。\n属性名称：labelFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中标签信息的字体样式。\",\"default\":null}}\n", "设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", "设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3714290261268616, 0.3738543391227722, 0.3912926912307739, 0.39148807525634766, 0.3993687033653259, 0.43106377124786377, 0.45102858543395996, 0.4787883758544922, 0.48118525743484497, 0.48393332958221436], "threshold": 0.6, "query_text_results": []}}, {"id": "HviZxukWHaz3dLYqaRMJc9", "description": "过滤低于阈值的查询结果: 设置菜单项的显示方式为始终显示", "subtasks": [], "details": {"query": "设置菜单项的显示方式为始终显示", "result_ids": ["2daa2340-86e2-4344-bd4b-ac48aefdf73d", "c3792339-f3fb-485a-bdc9-50908456f38f", "828a80b5-3292-42f4-9557-b8b36e04c419", "7237f5d4-b112-47d9-83f1-09b6ef36a09b", "eec447ac-82ea-418a-a010-b73343dcd06d", "e3fe753f-7c44-41e8-a637-1c22d024a91c", "90afd08e-d169-43e2-af2b-7fc4ec5688a8", "3f7d3d67-7823-45d6-ab97-159a2257d57f", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "ba863a45-92bc-4a75-bc3e-786e966f0b7e"], "result_documents": ["设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", "设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", "设置菜单项中标签信息的字体样式。\n属性名称：labelFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中标签信息的字体样式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n"], "result_metadatas": [{"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.37084460258483887, 0.3851473331451416, 0.40644484758377075, 0.41473013162612915, 0.4165329337120056, 0.44061750173568726, 0.44529449939727783, 0.456434965133667, 0.4757257103919983, 0.4811909794807434], "threshold": 0.6, "query_text_results": []}}], "details": null}, {"id": "R5XmGf4cwpTWhPYREr3iNx", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "eihvJ7xNWP86D8zHD36Wxr", "description": "过滤低于阈值的查询结果: 设置搜索框的默认提示文本", "subtasks": [], "details": {"query": "设置搜索框的默认提示文本", "result_ids": ["ffe29df1-b030-4670-b72f-d79c8c392e08", "8e1e9155-67b5-4367-9231-0b9ccf608146", "dd1d9f0e-d55e-4d5a-88ce-b8f0d011df60", "06516705-b80a-4392-9c80-c08fe830b726", "f7a90d54-738d-4273-b22b-5613cf96869a", "120de9a5-4e91-4481-9967-8e79240b3b3f", "08db0343-4e6f-4618-b1b8-a7cf2b287494", "b5fcd1e1-2134-4256-b950-0c98733f0c44", "e04cefc2-642b-4418-8dca-bc497c6285c8", "c22092b7-507e-4a81-bfc9-2cd30fd660f5"], "result_documents": ["设置搜索框内输入文本样式，包括字体大小，字体粗细，字体族，字体风格。目前仅支持默认字体族。\n属性名称：textFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":false,\"description\":\"搜索框内输入文本样式。\",\"default\":null}}\n", "设置搜索框末尾搜索按钮。\n属性名称：searchButton\n属性参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"搜索框末尾搜索按钮文本内容。\",\"default\":null}, 'option': {\"type\":\"SearchButtonOptions\",\"required\":false,\"description\":\"配置搜索框文本样式。\",\"default\":null}}\n", "设置文本在搜索框中的对齐方式。目前支持的对齐方式有：Start、Center、End。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在搜索框中的对齐方式。\",\"default\":null}}\n", "点击搜索图标、搜索按钮或者按下软键盘搜索按钮时触发该回调。\n事件名称：onSubmit\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", "设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"SearchType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":null}}\n", "设置左侧搜索图标样式。\n属性名称：searchIcon\n属性参数：{'value': {\"type\":\"IconOptions\",\"required\":true,\"description\":\"左侧搜索图标样式。\",\"default\":null}}\n", "输入内容发生变化时，触发该回调。\n事件名称：onChange\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", "设置Search通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"Search获焦时，是否绑定输入法。\",\"default\":null}}\n", "设置长按输入框或者右键输入框时，是否弹出文本选择菜单。\n属性名称：selectionMenuHidden\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"长按输入框或者右键输入框时，是否弹出文本选择菜单。\",\"default\":null}}\n", "设置输入的文本是否可复制。设置CopyOptions.None时，当前Search中的文字无法被复制或剪切，仅支持粘贴。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"输入的文本是否可复制。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Search", "name": "textFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "searchButton", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "onSubmit", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "searchIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "onChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "selectionMenuHidden", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3157566785812378, 0.331038236618042, 0.339322566986084, 0.3466026186943054, 0.35013628005981445, 0.3557843565940857, 0.3713298439979553, 0.3972446918487549, 0.3994373083114624, 0.4160398840904236], "threshold": 0.6, "query_text_results": [["设置搜索框内输入文本样式，包括字体大小，字体粗细，字体族，字体风格。目前仅支持默认字体族。\n属性名称：textFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":false,\"description\":\"搜索框内输入文本样式。\",\"default\":null}}\n", {"component_name": "Search", "name": "textFont", "source": "harmony-component-doc", "type": "attribute"}, 0.6842433214187622], ["设置搜索框末尾搜索按钮。\n属性名称：searchButton\n属性参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"搜索框末尾搜索按钮文本内容。\",\"default\":null}, 'option': {\"type\":\"SearchButtonOptions\",\"required\":false,\"description\":\"配置搜索框文本样式。\",\"default\":null}}\n", {"component_name": "Search", "name": "searchButton", "source": "harmony-component-doc", "type": "attribute"}, 0.668961763381958], ["设置文本在搜索框中的对齐方式。目前支持的对齐方式有：Start、Center、End。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在搜索框中的对齐方式。\",\"default\":null}}\n", {"component_name": "Search", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, 0.660677433013916], ["点击搜索图标、搜索按钮或者按下软键盘搜索按钮时触发该回调。\n事件名称：onSubmit\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", {"component_name": "Search", "name": "onSubmit", "source": "harmony-component-doc", "type": "event"}, 0.6533973813056946], ["设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"SearchType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":null}}\n", {"component_name": "Search", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, 0.6498637199401855], ["设置左侧搜索图标样式。\n属性名称：searchIcon\n属性参数：{'value': {\"type\":\"IconOptions\",\"required\":true,\"description\":\"左侧搜索图标样式。\",\"default\":null}}\n", {"component_name": "Search", "name": "searchIcon", "source": "harmony-component-doc", "type": "attribute"}, 0.6442156434059143], ["输入内容发生变化时，触发该回调。\n事件名称：onChange\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", {"component_name": "Search", "name": "onChange", "source": "harmony-component-doc", "type": "event"}, 0.6286701560020447], ["设置Search通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"Search获焦时，是否绑定输入法。\",\"default\":null}}\n", {"component_name": "Search", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, 0.6027553081512451], ["设置长按输入框或者右键输入框时，是否弹出文本选择菜单。\n属性名称：selectionMenuHidden\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"长按输入框或者右键输入框时，是否弹出文本选择菜单。\",\"default\":null}}\n", {"component_name": "Search", "name": "selectionMenuHidden", "source": "harmony-component-doc", "type": "attribute"}, 0.6005626916885376]]}}, {"id": "cY7ZTonYY7EPdoN3jC7mFv", "description": "过滤低于阈值的查询结果: 设置搜索框的输入事件处理", "subtasks": [], "details": {"query": "设置搜索框的输入事件处理", "result_ids": ["06516705-b80a-4392-9c80-c08fe830b726", "08db0343-4e6f-4618-b1b8-a7cf2b287494", "ffe29df1-b030-4670-b72f-d79c8c392e08", "b5fcd1e1-2134-4256-b950-0c98733f0c44", "f7a90d54-738d-4273-b22b-5613cf96869a", "8e1e9155-67b5-4367-9231-0b9ccf608146", "dd1d9f0e-d55e-4d5a-88ce-b8f0d011df60", "0af82083-145b-4aee-bc00-01e5caf39809", "038d15be-839a-4d8d-809d-8e1ce0e278bb", "99726ed9-8bd8-4310-b554-caa8a9259fe4"], "result_documents": ["点击搜索图标、搜索按钮或者按下软键盘搜索按钮时触发该回调。\n事件名称：onSubmit\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", "输入内容发生变化时，触发该回调。\n事件名称：onChange\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n", "设置搜索框内输入文本样式，包括字体大小，字体粗细，字体族，字体风格。目前仅支持默认字体族。\n属性名称：textFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":false,\"description\":\"搜索框内输入文本样式。\",\"default\":null}}\n", "设置Search通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"Search获焦时，是否绑定输入法。\",\"default\":null}}\n", "设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"SearchType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":null}}\n", "设置搜索框末尾搜索按钮。\n属性名称：searchButton\n属性参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"搜索框末尾搜索按钮文本内容。\",\"default\":null}, 'option': {\"type\":\"SearchButtonOptions\",\"required\":false,\"description\":\"配置搜索框文本样式。\",\"default\":null}}\n", "设置文本在搜索框中的对齐方式。目前支持的对齐方式有：Start、Center、End。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在搜索框中的对齐方式。\",\"default\":null}}\n", "在输入完成时，触发该回调。\n事件名称：onDidInsert\n事件参数：{'callback': {\"type\":\"Callback<InsertValue>\",\"required\":true,\"description\":\"在输入完成时调用的回调。仅支持系统输入法输入的场景。\",\"default\":null}}\n事件返回值：None\n", "输入状态变化时，触发该回调。有光标时为编辑态，无光标时为非编辑态。isEditing为true表示正在输入。\n事件名称：onEditChange\n事件参数：{'isEditing': {\"type\":\"Callback<boolean>\",\"required\":true,\"description\":\"为true表示正在输入。\",\"default\":null}}\n事件返回值：None\n", "在将要输入时，触发该回调。\n事件名称：onWillInsert\n事件参数：{'callback': {\"type\":\"Callback<InsertValue, boolean>\",\"required\":true,\"description\":\"在将要输入时调用的回调。在返回true时，表示正常插入，返回false时，表示不插入。在预上屏操作时，该回调不触发。仅支持系统输入法输入的场景。\",\"default\":null}}\n事件返回值：None\n"], "result_metadatas": [{"component_name": "Search", "name": "onSubmit", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "onChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "textFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "searchButton", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Search", "name": "onDidInsert", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "onEditChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Search", "name": "onWillInsert", "source": "harmony-component-doc", "type": "event"}], "result_distances": [0.28183412551879883, 0.28644901514053345, 0.3440806269645691, 0.35057926177978516, 0.35244065523147583, 0.37061941623687744, 0.3772960305213928, 0.37890517711639404, 0.39119386672973633, 0.3916196823120117], "threshold": 0.6, "query_text_results": [["在输入完成时，触发该回调。\n事件名称：onDidInsert\n事件参数：{'callback': {\"type\":\"Callback<InsertValue>\",\"required\":true,\"description\":\"在输入完成时调用的回调。仅支持系统输入法输入的场景。\",\"default\":null}}\n事件返回值：None\n", {"component_name": "Search", "name": "onDidInsert", "source": "harmony-component-doc", "type": "event"}, 0.621094822883606], ["输入状态变化时，触发该回调。有光标时为编辑态，无光标时为非编辑态。isEditing为true表示正在输入。\n事件名称：onEditChange\n事件参数：{'isEditing': {\"type\":\"Callback<boolean>\",\"required\":true,\"description\":\"为true表示正在输入。\",\"default\":null}}\n事件返回值：None\n", {"component_name": "Search", "name": "onEditChange", "source": "harmony-component-doc", "type": "event"}, 0.6088061332702637], ["在将要输入时，触发该回调。\n事件名称：onWillInsert\n事件参数：{'callback': {\"type\":\"Callback<InsertValue, boolean>\",\"required\":true,\"description\":\"在将要输入时调用的回调。在返回true时，表示正常插入，返回false时，表示不插入。在预上屏操作时，该回调不触发。仅支持系统输入法输入的场景。\",\"default\":null}}\n事件返回值：None\n", {"component_name": "Search", "name": "onWillInsert", "source": "harmony-component-doc", "type": "event"}, 0.6083803176879883]]}}], "details": null}], "details": null}, {"id": "D9HaKJsmGH3eJ92zfPNpEQ", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# MenuItem\n接口描述：创建MenuItem组件。\n接口参数：{'value': {\"type\":[\"MenuItemOptions\",\"CustomBuilder\"],\"required\":false,\"description\":\"包含设置MenuItem的各项信息。\",\"default\":null}}\n设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n设置菜单项中标签信息的字体样式。\n属性名称：labelFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中标签信息的字体样式。\",\"default\":null}}\n设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "# Search\n接口描述：创建搜索框组件。\n接口参数：{'options': {\"type\":\"object\",\"required\":false,\"description\":\"搜索框的配置选项。\",\"default\":null}}\n设置搜索框内输入文本样式，包括字体大小，字体粗细，字体族，字体风格。目前仅支持默认字体族。\n属性名称：textFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":false,\"description\":\"搜索框内输入文本样式。\",\"default\":null}}\n设置搜索框末尾搜索按钮。\n属性名称：searchButton\n属性参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"搜索框末尾搜索按钮文本内容。\",\"default\":null}, 'option': {\"type\":\"SearchButtonOptions\",\"required\":false,\"description\":\"配置搜索框文本样式。\",\"default\":null}}\n设置文本在搜索框中的对齐方式。目前支持的对齐方式有：Start、Center、End。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在搜索框中的对齐方式。\",\"default\":null}}\n点击搜索图标、搜索按钮或者按下软键盘搜索按钮时触发该回调。\n事件名称：onSubmit\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"SearchType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":null}}\n设置左侧搜索图标样式。\n属性名称：searchIcon\n属性参数：{'value': {\"type\":\"IconOptions\",\"required\":true,\"description\":\"左侧搜索图标样式。\",\"default\":null}}\n输入内容发生变化时，触发该回调。\n事件名称：onChange\n事件参数：{'value': {\"type\":\"string\",\"required\":true,\"description\":\"当前搜索框中输入的文本内容。\",\"default\":null}}\n事件返回值：None\n设置Search通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"Search获焦时，是否绑定输入法。\",\"default\":null}}\n设置长按输入框或者右键输入框时，是否弹出文本选择菜单。\n属性名称：selectionMenuHidden\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"长按输入框或者右键输入框时，是否弹出文本选择菜单。\",\"default\":null}}\n在输入完成时，触发该回调。\n事件名称：onDidInsert\n事件参数：{'callback': {\"type\":\"Callback<InsertValue>\",\"required\":true,\"description\":\"在输入完成时调用的回调。仅支持系统输入法输入的场景。\",\"default\":null}}\n事件返回值：None\n输入状态变化时，触发该回调。有光标时为编辑态，无光标时为非编辑态。isEditing为true表示正在输入。\n事件名称：onEditChange\n事件参数：{'isEditing': {\"type\":\"Callback<boolean>\",\"required\":true,\"description\":\"为true表示正在输入。\",\"default\":null}}\n事件返回值：None\n在将要输入时，触发该回调。\n事件名称：onWillInsert\n事件参数：{'callback': {\"type\":\"Callback<InsertValue, boolean>\",\"required\":true,\"description\":\"在将要输入时调用的回调。在返回true时，表示正常插入，返回false时，表示不插入。在预上屏操作时，该回调不触发。仅支持系统输入法输入的场景。\",\"default\":null}}\n事件返回值：None\n示例：该组件通过 Column 布局实现了一个包含搜索框的界面。布局宽度占据整个屏幕的 90%，高度自适应内容，内边距为左右 5%。组件的垂直方向上包含一个 Search 组件，该组件的宽度为 95%，顶部外边距为 100vp。\nSearch 组件的样式包括宽度、边距等属性，支持自定义菜单扩展项。Search 组件的功能包括文本输入和自定义菜单项的点击事件，用户可以通过点击菜单项触发相应操作，菜单项也可以在点击时进行拦截或不拦截。\n整个布局通过 Column 布局保证 Search 组件在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct Index {\n  @State text: string = 'Search editMenuOptions' // 定义一个状态变量 text，初始值为 'Search editMenuOptions'\n\n  // 定义 onCreateMenu 方法，用于自定义菜单项的内容、图标和回调方法\n  onCreateMenu(menuItems: Array<TextMenuItem>) {\n    menuItems.forEach((value, index) => {\n      value.icon = $r('app.media.startIcon') // 为每个菜单项设置图标，图标资源名为 'app.media.startIcon'\n      if (value.id.equals(TextMenuItemId.COPY)) {\n        value.content = \"复制change\" // 如果菜单项的 id 为 COPY，则修改其内容为 \"复制change\"\n      }\n      if (value.id.equals(TextMenuItemId.SELECT_ALL)) {\n        value.content = \"全选change\" // 如果菜单项的 id 为 SELECT_ALL，则修改其内容为 \"全选change\"\n      }\n    })\n    let item1: TextMenuItem = {\n      content: 'custom1', // 定义一个自定义菜单项，内容为 'custom1'\n      icon: $r('app.media.startIcon'), // 设置图标，图标资源名为 'app.media.startIcon'\n      id: TextMenuItemId.of('custom1'), // 设置菜单项的 id 为 'custom1'\n    }\n    let item2: TextMenuItem = {\n      content: 'custom2', // 定义一个自定义菜单项，内容为 'custom2'\n      id: TextMenuItemId.of('custom2'), // 设置菜单项的 id 为 'custom2'\n      icon: $r('app.media.startIcon'), // 设置图标，图标资源名为 'app.media.startIcon'\n    }\n    menuItems.push(item1) // 将自定义菜单项 item1 添加到菜单项列表的末尾\n    menuItems.unshift(item2) // 将自定义菜单项 item2 添加到菜单项列表的开头\n    return menuItems // 返回修改后的菜单项列表\n  }\n\n  build() {\n    Column() {\n      Search({ value: this.text }) // 创建一个 Search 组件，绑定状态变量 text\n        .width('95%') // 设置 Search 组件的宽度为 95%\n        .editMenuOptions({\n          onCreateMenu: this.onCreateMenu, // 设置 onCreateMenu 回调方法，用于自定义菜单项\n          onMenuItemClick: (menuItem: TextMenuItem, textRange: TextRange) => { // 设置 onMenuItemClick 回调方法，用于处理菜单项点击事件\n            if (menuItem.id.equals(TextMenuItemId.of(\"custom2\"))) {\n              console.log(\"拦截 id: custom2 start:\" + textRange.start + \"; end:\" + textRange.end) // 如果点击的菜单项 id 为 'custom2'，则拦截并输出日志\n              return true; // 返回 true 表示拦截该点击事件\n            }\n            if (menuItem.id.equals(TextMenuItemId.COPY)) {\n              console.log(\"拦截 COPY start:\" + textRange.start + \"; end:\" + textRange.end) // 如果点击的菜单项 id 为 COPY，则拦截并输出日志\n              return true; // 返回 true 表示拦截该点击事件\n            }\n            if (menuItem.id.equals(TextMenuItemId.SELECT_ALL)) {\n              console.log(\"不拦截 SELECT_ALL start:\" + textRange.start + \"; end:\" + textRange.end) // 如果点击的菜单项 id 为 SELECT_ALL，则不拦截并输出日志\n              return false; // 返回 false 表示不拦截该点击事件\n            }\n            return false; // 默认返回 false，表示不拦截其他菜单项的点击事件\n          }\n        })\n        .margin({ top: 100 }) // 设置 Search 组件的顶部外边距为 100vp\n    }\n    .width(\"90%\") // 设置 Column 组件的宽度为 90%\n    .margin(\"5%\") // 设置 Column 组件的左右外边距为 5%\n  }\n}\n\n示例：该组件通过 Column 布局实现了一个包含搜索框和按钮的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个文本显示区域和一个搜索框或按钮。\n搜索框的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。搜索框的功能包括输入事件和提交事件，用户可以通过输入文本触发相应操作，也可以通过点击搜索按钮提交搜索内容。\n按钮的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。按钮的功能包括点击事件，用户可以通过点击按钮触发相应操作。\n整个布局通过 Column 布局保证组件在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct SearchExample {\n  @State changeValue: string = '' // 用于存储搜索框的输入值\n  @State submitValue: string = '' // 用于存储搜索框的提交值\n  @State positionInfo: CaretOffset = { index: 0, x: 0, y: 0 } // 用于存储光标位置信息\n  controller: SearchController = new SearchController() // 搜索框的控制器，用于控制搜索框的行为\n\n  build() {\n    Column({space: 10}) { // 使用 Column 布局，组件之间的间距为 10vp\n      Text('onSubmit:' + this.submitValue) // 显示搜索框的提交值\n        .fontSize(18) // 字体大小为 18\n        .margin(15) // 上下左右边距为 15vp\n      Text('onChange:' + this.changeValue) // 显示搜索框的输入值\n        .fontSize(18) // 字体大小为 18\n        .margin(15) // 上下左右边距为 15vp\n      Search({ value: this.changeValue, placeholder: 'Type to search...', controller: this.controller }) // 创建搜索框，绑定输入值和控制器\n        .searchButton('SEARCH') // 设置搜索按钮的文本为 \"SEARCH\"\n        .width('95%') // 搜索框的宽度为父容器的 95%\n        .height(40) // 搜索框的高度为 40vp\n        .backgroundColor('#F5F5F5') // 搜索框的背景颜色为 #F5F5F5\n        .placeholderColor(Color.Grey) // 占位符文本颜色为灰色\n        .placeholderFont({ size: 14, weight: 400 }) // 占位符文本字体大小为 14，字体粗细为 400\n        .textFont({ size: 14, weight: 400 }) // 输入文本字体大小为 14，字体粗细为 400\n        .onSubmit((value: string) => { // 当用户提交搜索时触发的事件\n          this.submitValue = value // 更新提交值\n        })\n        .onChange((value: string) => { // 当用户输入时触发的事件\n          this.changeValue = value // 更新输入值\n        })\n        .margin(20) // 上下左右边距为 20vp\n      Button('Set caretPosition 1') // 创建按钮，文本为 \"Set caretPosition 1\"\n        .onClick(() => { // 当按钮被点击时触发的事件\n          this.controller.caretPosition(1) // 设置光标位置为 1\n        })\n      Button('Get CaretOffset') // 创建按钮，文本为 \"Get CaretOffset\"\n        .onClick(() => { // 当按钮被点击时触发的事件\n          this.positionInfo = this.controller.getCaretOffset() // 获取光标位置信息并更新状态\n        })\n    }.width('100%') // Column 布局的宽度为父容器的 100%\n  }\n}\n\n"], "related_types": {"Font": {"description": "设置文本样式。", "type": "object", "properties": {"size": {"type": "Length", "required": false, "description": "设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。", "enum": null, "enumDescriptions": null, "default": 16.0}, "weight": {"type": ["FontWeight", "number", "string"], "required": false, "description": "设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。", "enum": null, "enumDescriptions": null, "default": "400 | FontWeight.Normal"}, "family": {"type": ["string", "Resource"], "required": false, "description": "设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。", "enum": null, "enumDescriptions": null, "default": null}, "style": {"type": "FontStyle", "required": false, "description": "设置文本的字体样式。", "enum": null, "enumDescriptions": null, "default": "FontStyle.Normal"}}, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "MenuItemOptions": {"description": "MenuItemOptions对象说明", "type": "object", "properties": {"startIcon": {"type": "ResourceStr", "required": false, "description": "item中显示在左侧的图标信息路径。", "enum": null, "enumDescriptions": null, "default": null}, "content": {"type": "ResourceStr", "required": false, "description": "item的内容信息。", "enum": null, "enumDescriptions": null, "default": null}, "endIcon": {"type": "ResourceStr", "required": false, "description": "item中显示在右侧的图标信息路径。", "enum": null, "enumDescriptions": null, "default": null}, "labelInfo": {"type": "ResourceStr", "required": false, "description": "定义结束标签信息，如快捷方式Ctrl+C等。", "enum": null, "enumDescriptions": null, "default": null}, "builder": {"type": "CustomBuilder", "required": false, "description": "用于构建二级菜单。", "enum": null, "enumDescriptions": null, "default": null}, "symbolStartIcon": {"type": "SymbolGlyphModifier", "required": false, "description": "item中显示在左侧的HMSymbol图标信息路径。配置该项时，原先startIcon图标不显示。", "enum": null, "enumDescriptions": null, "default": null}, "symbolEndIcon": {"type": "SymbolGlyphModifier", "required": false, "description": "item中显示在右侧的HMSymbol图标信息路径。配置该项时，原先endIcon图标不显示。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "CustomBuilder": {"description": "组件属性方法参数可使用CustomBuilder类型来自定义UI描述。", "type": "object", "properties": {"CustomBuilder": {"type": "() => any | void", "required": false, "description": "生成用户自定义组件，在使用时结合@Builder使用。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "ResourceStr": {"description": "字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。", "type": ["string", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "ResourceColor": {"description": "颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析", "type": ["string", "Resource", "Color", "number"], "enum": null, "enumDescriptions": null, "examples": null}, "IconOptions": {"description": "IconOptions10+对象说明", "type": "object", "properties": {"size": {"type": "Length", "required": false, "description": "图标尺寸，不支持百分比。", "enum": null, "enumDescriptions": null, "default": null}, "color": {"type": "ResourceColor", "required": false, "description": "图标颜色。", "enum": null, "enumDescriptions": null, "default": null}, "src": {"type": "ResourceStr", "required": false, "description": "图标/图片源。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "SearchButtonOptions": {"description": "从API version 11开始，该接口支持在元服务中使用。", "type": "object", "properties": {"fontSize": {"type": "Length", "required": false, "description": "文本按钮字体大小，不支持百分比。", "enum": null, "enumDescriptions": null, "default": null}, "fontColor": {"type": "ResourceColor", "required": false, "description": "文本按钮字体颜色。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "SearchType": {"description": "该枚举类定义了不同的输入模式", "type": "enum", "enum": ["NORMAL", "NUMBER", "PHONE_NUMBER", "EMAIL", "NUMBER_DECIMAL", "URL"], "enumDescriptions": {"NORMAL": "基本输入模式。支持输入数字、字母、下划线、空格、特殊字符。", "NUMBER": "纯数字输入模式。", "PHONE_NUMBER": "电话号码输入模式。支持输入数字、空格、+ 、-、*、#、(、)，长度不限。", "EMAIL": "邮箱地址输入模式。支持数字，字母，下划线、小数点、!、#、$、%、&、'、*、+、-、/、=、?、^、`、{、|、}、~，以及@字符（只能存在一个@字符）。", "NUMBER_DECIMAL": "带小数点的数字输入模式。支持数字，小数点（只能存在一个小数点）。", "URL": "带URL的输入模式。"}, "examples": null}}}}, {"id": "nqQ3duxaLDiwSPsB4nARLN", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["类型名：Font\n类型描述：设置文本样式。\n参数：{'size': {\"type\":\"Length\",\"required\":false,\"description\":\"设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。\",\"enum\":null,\"enumDescriptions\":null,\"default\":16.0}, 'weight': {\"type\":[\"FontWeight\",\"number\",\"string\"],\"required\":false,\"description\":\"设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"400 | FontWeight.Normal\"}, 'family': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'style': {\"type\":\"FontStyle\",\"required\":false,\"description\":\"设置文本的字体样式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"FontStyle.Normal\"}}\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：MenuItemOptions\n类型描述：MenuItemOptions对象说明\n参数：{'startIcon': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"item中显示在左侧的图标信息路径。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'content': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"item的内容信息。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'endIcon': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"item中显示在右侧的图标信息路径。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'labelInfo': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"定义结束标签信息，如快捷方式Ctrl+C等。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'builder': {\"type\":\"CustomBuilder\",\"required\":false,\"description\":\"用于构建二级菜单。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'symbolStartIcon': {\"type\":\"SymbolGlyphModifier\",\"required\":false,\"description\":\"item中显示在左侧的HMSymbol图标信息路径。配置该项时，原先startIcon图标不显示。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'symbolEndIcon': {\"type\":\"SymbolGlyphModifier\",\"required\":false,\"description\":\"item中显示在右侧的HMSymbol图标信息路径。配置该项时，原先endIcon图标不显示。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：CustomBuilder\n类型描述：组件属性方法参数可使用CustomBuilder类型来自定义UI描述。\n参数：{'CustomBuilder': {\"type\":\"() => any | void\",\"required\":false,\"description\":\"生成用户自定义组件，在使用时结合@Builder使用。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：ResourceStr\n类型描述：字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。\n类型：['string', 'Resource']\n", "类型名：ResourceColor\n类型描述：颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析\n类型：['string', 'Resource', 'Color', 'number']\n", "类型名：IconOptions\n类型描述：IconOptions10+对象说明\n参数：{'size': {\"type\":\"Length\",\"required\":false,\"description\":\"图标尺寸，不支持百分比。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'color': {\"type\":\"ResourceColor\",\"required\":false,\"description\":\"图标颜色。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'src': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"图标/图片源。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：SearchButtonOptions\n类型描述：从API version 11开始，该接口支持在元服务中使用。\n参数：{'fontSize': {\"type\":\"Length\",\"required\":false,\"description\":\"文本按钮字体大小，不支持百分比。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'fontColor': {\"type\":\"ResourceColor\",\"required\":false,\"description\":\"文本按钮字体颜色。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：SearchType\n枚举类型描述：该枚举类定义了不同的输入模式\n枚举值：['NORMAL', 'NUMBER', 'PHONE_NUMBER', 'EMAIL', 'NUMBER_DECIMAL', 'URL']\n枚举值描述：\n* NORMAL: 基本输入模式。支持输入数字、字母、下划线、空格、特殊字符。\n* NUMBER: 纯数字输入模式。\n* PHONE_NUMBER: 电话号码输入模式。支持输入数字、空格、+ 、-、*、#、(、)，长度不限。\n* EMAIL: 邮箱地址输入模式。支持数字，字母，下划线、小数点、!、#、$、%、&、'、*、+、-、/、=、?、^、`、{、|、}、~，以及@字符（只能存在一个@字符）。\n* NUMBER_DECIMAL: 带小数点的数字输入模式。支持数字，小数点（只能存在一个小数点）。\n* URL: 带URL的输入模式。\n\n"]}}], "details": {"android_component": {"name": ["android.support.v7.widget.SearchView"], "content": "<item\n    android:id=\"@+id/action_search\"\n    android:icon=\"@drawable/ic_search_black\"\n    app:showAsAction=\"always\"\n    app:actionViewClass=\"android.support.v7.widget.SearchView\"\n    android:title=\"Search\"/>", "layout_description": "一个菜单项，宽度自适应，高度自适应，图标引用资源app.media.ic_search_black，标题为“Search”。", "function_description": "实现了一个菜单项，图标引用资源app.media.ic_search_black，标题为“Search”，该菜单项始终显示在操作栏中，并包含一个搜索视图。"}}}, {"id": "LeK3VxqRUAyDekZaBq2X3w", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "Menu() {\n  MenuItem() {\n    Image($r('app.media.ic_search_black'))\n      .width('auto')\n      .height('auto')\n    Text('Search')\n      .fontSize(20)\n  }\n  Search() {\n    TextField()\n      .width('100%')\n      .height('auto')\n  }\n}"}}], "details": null}, {"id": "TVbh6PWcVGKpEvTBF2hoiT", "description": "根据转译表转译组件v1", "subtasks": [{"id": "bEQVWbD7kyBtvZymJkTqEs", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<item\n    android:id=\"@+id/cart\"\n    android:icon=\"@drawable/ic_shopping_cart_white\"\n    android:orderInCategory=\"100\"\n    android:title=\"@string/cart\"\n    app:showAsAction=\"always\" />\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "一个项目组件，宽度自适应，高度自适应，图标引用资源app.media.ic_shopping_cart_white，标题引用资源app.string.cart，显示顺序为100，始终显示为操作项。", "function_description": "实现了一个项目组件，图标引用app.media.ic_shopping_cart_white资源，标题引用app.string.cart资源，显示顺序为100，始终显示为操作项。"}}}, {"id": "5AHJk5VuuhKAY8LMbMs2P2", "description": "查询组件文档", "subtasks": [{"id": "nPbdYioMHAiSromJsfBnXd", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['android.widget.ImageView', 'android.widget.TextView']\n实现了一个项目组件，图标引用app.media.ic_shopping_cart_white资源，标题引用app.string.cart资源，显示顺序为100，始终显示为操作项。\n<item\n    android:id=\"@+id/cart\"\n    android:icon=\"@drawable/ic_shopping_cart_white\"\n    android:orderInCategory=\"100\"\n    android:title=\"@string/cart\"\n    app:showAsAction=\"always\" />\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["Image", "Text", "RelativeContainer"], "queries": [{"component": "Image", "queries": ["设置图片的资源引用", "设置图片的显示顺序", "设置图片的显示方式"]}, {"component": "Text", "queries": ["设置文本的资源引用", "设置文本的显示顺序", "设置文本的显示方式"]}, {"component": "RelativeContainer", "queries": ["设置组件的相对布局", "设置组件的对齐方式", "设置组件的显示顺序"]}], "idea": "选择Image组件来显示图标，Text组件来显示标题，RelativeContainer组件来实现组件的相对布局和对齐方式。通过这些组件的组合，可以实现与安卓组件相同的功能和布局。"}}}, {"id": "53s3JJD4jxNFkDYjhCXMnC", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["Image", "Text", "RelativeContainer"], "queries": [{"component": "Image", "queries": ["设置图片的资源引用", "设置图片的显示顺序", "设置图片的显示方式"]}, {"component": "Text", "queries": ["设置文本的资源引用", "设置文本的显示顺序", "设置文本的显示方式"]}, {"component": "RelativeContainer", "queries": ["设置组件的相对布局", "设置组件的对齐方式", "设置组件的显示顺序"]}], "idea": "选择Image组件来显示图标，Text组件来显示标题，RelativeContainer组件来实现组件的相对布局和对齐方式。通过这些组件的组合，可以实现与安卓组件相同的功能和布局。"}, "corrected_component_query": {"components": ["Image", "Text", "RelativeContainer"], "queries": [{"component": "Image", "queries": ["设置图片的资源引用", "设置图片的显示顺序", "设置图片的显示方式"]}, {"component": "Text", "queries": ["设置文本的资源引用", "设置文本的显示顺序", "设置文本的显示方式"]}, {"component": "RelativeContainer", "queries": ["设置组件的相对布局", "设置组件的对齐方式", "设置组件的显示顺序"]}], "idea": "选择Image组件来显示图标，Text组件来显示标题，RelativeContainer组件来实现组件的相对布局和对齐方式。通过这些组件的组合，可以实现与安卓组件相同的功能和布局。"}}}, {"id": "JiNEYwjRZuQFAtTa5odGxS", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个项目组件，图标引用app.media.ic_shopping_cart_white资源，标题引用app.string.cart资源，显示顺序为100，始终显示为操作项。", "k": 3, "component_name": ["Image", "Text", "RelativeContainer"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "Text", "source": "harmony-component-example-doc", "table_id": 154}, "page_content": "该组件展示了一个文本组件（Text）及其相关信息的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组文本或按钮。每个部分的文本以垂直布局方式排列，文本之间的间距均匀分布，且对齐方式为居中对齐。\n\n文本组件的样式包括字体大小、颜色、边框宽度等属性，支持不同的样式展示。按钮的功能包括点击事件和状态效果，用户可以通过点击按钮触发相应操作，按钮也可以在启用或禁用状态下进行展示。\n\n整个布局通过 Column 布局保证文本和按钮在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6337586045265198], [{"id": null, "metadata": {"component_name": "Text", "source": "harmony-component-example-doc", "table_id": 148}, "page_content": "该组件通过 Column 布局实现了一个展示可选择文本的界面。布局宽度占据整个屏幕，高度根据内容自适应，顶部外边距为 100vp。组件的垂直方向上包含一个 Text 组件，用于展示一段文本。\n\nText 组件的样式包括宽度为 300vp，高度为 100vp，最大显示行数为 5 行，字体颜色为黑色。文本内容为一段较长的字符串，支持在应用内复制（通过 copyOption 属性设置）。文本的选中范围通过 selection 属性设置为从第 3 个字符到第 8 个字符。\n\n组件的功能包括文本的可选择性，通过 textSelectable 属性设置为 TextSelectableMode.SELECTABLE_FOCUSABLE，使得文本在获得焦点时可以触发键盘框选文本功能。\n\n整个布局通过 Column 布局保证 Text 组件在垂直方向上居中显示，确保界面简洁明了。", "type": "Document"}, 0.6303335428237915], [{"id": null, "metadata": {"component_name": "Text", "source": "harmony-component-example-doc", "table_id": 155}, "page_content": "该组件通过Column布局实现了一个展示文本处理效果的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个文本展示区域和一组按钮。每个文本展示区域的文本以不同的省略号模式和断词模式进行展示，按钮用于切换这些模式。\n\n文本展示区域的样式包括字体大小、边框、行高、最大行数、宽度等属性，支持不同的样式展示。按钮的样式包括背景颜色、边框圆角（或半径）、宽度和高度等属性，支持不同的样式展示。按钮组之间通过Row组件进行分隔。\n\n按钮的功能包括点击事件和状态效果，用户可以通过点击按钮触发相应操作，按钮也可以在启用或禁用状态下进行展示。整个布局通过Column布局保证文本展示区域和按钮在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.6299356818199158]], "component_examples": {"Text": [{"description": "该组件展示了一个文本组件（Text）及其相关信息的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组文本或按钮。每个部分的文本以垂直布局方式排列，文本之间的间距均匀分布，且对齐方式为居中对齐。\n\n文本组件的样式包括字体大小、颜色、边框宽度等属性，支持不同的样式展示。按钮的功能包括点击事件和状态效果，用户可以通过点击按钮触发相应操作，按钮也可以在启用或禁用状态下进行展示。\n\n整个布局通过 Column 布局保证文本和按钮在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct TextExample9 {\n  // 定义状态变量，用于存储文本组件的行数、字形位置信息和行度量信息\n  @State lineCount: string = \"\"\n  @State glyphPositionAtCoordinate: string = \"\"\n  @State lineMetrics: string = \"\"\n\n  // 创建一个 TextController 实例，用于控制文本组件\n  controller: TextController = new TextController()\n\n  // 定义文本内容\n  @State textStr: string = 'Hello World! 您好，世界！'\n\n  build() {\n    Scroll() {\n      Column() {\n        // 显示标题文本，字体大小为9，颜色为浅灰色，宽度为90%，内边距为10\n        Text('Text组件getLayoutManager接口获取段落相对组件的信息')\n          .fontSize(9)\n          .fontColor(0xCCCCCC)\n          .width('90%')\n          .padding(10)\n\n        // 显示文本内容，字体大小为25，边框宽度为1，当文本区域发生变化时获取行数\n        Text(this.textStr, { controller: this.controller })\n          .fontSize(25)\n          .borderWidth(1)\n          .onAreaChange(() => {\n            let layoutManager: LayoutManager = this.controller.getLayoutManager()\n            this.lineCount = \"LineCount: \" + layoutManager.getLineCount()\n          })\n\n        // 显示行数标题，字体大小为9，颜色为浅灰色，宽度为90%，内边距为10\n        Text('LineCount').fontSize(9).fontColor(0xCCCCCC).width('90%').padding(10)\n\n        // 显示行数信息\n        Text(this.lineCount)\n\n        // 显示字形位置标题，字体大小为9，颜色为浅灰色，宽度为90%，内边距为10\n        Text('GlyphPositionAtCoordinate').fontSize(9).fontColor(0xCCCCCC).width('90%').padding(10)\n\n        // 显示按钮，点击按钮时获取相对组件坐标[150,50]的字形信息\n        Button(\"相对组件坐标[150,50]字形信息\")\n          .onClick(() => {\n            let layoutManager: LayoutManager = this.controller.getLayoutManager()\n            let position: PositionWithAffinity = layoutManager.getGlyphPositionAtCoordinate(150, 50)\n            this.glyphPositionAtCoordinate =\n              \"相对组件坐标[150,50] glyphPositionAtCoordinate position: \" + position.position + \" affinity: \" +\n              position.affinity\n          })\n          .margin({ bottom: 20, top: 10 })\n\n        // 显示字形位置信息\n        Text(this.glyphPositionAtCoordinate)\n\n        // 显示行度量标题，字体大小为9，颜色为浅灰色，宽度为90%，内边距为10\n        Text('LineMetrics').fontSize(9).fontColor(0xCCCCCC).width('90%').padding(10)\n\n        // 显示按钮，点击按钮时获取首行行信息、文本样式信息、以及字体属性信息\n        Button(\"首行行信息、文本样式信息、以及字体属性信息\")\n          .onClick(() => {\n            let layoutManager: LayoutManager = this.controller.getLayoutManager()\n            let lineMetrics: LineMetrics = layoutManager.getLineMetrics(0)\n            this.lineMetrics = \"lineMetrics is \" + JSON.stringify(lineMetrics) + '\\\\n\\\\n'\n            let runMetrics = lineMetrics.runMetrics\n            runMetrics.forEach((value, key) => {\n              this.lineMetrics += \"runMetrics key is \" + key + \" \" + JSON.stringify(value) + \"\\\\n\\\\n\"\n            });\n          })\n          .margin({ bottom: 20, top: 10 })\n\n        // 显示行度量信息\n        Text(this.lineMetrics)\n      }\n      .margin({ top: 100, left: 8, right: 8 })\n    }\n  }\n}"}, {"description": "该组件通过 Column 布局实现了一个展示可选择文本的界面。布局宽度占据整个屏幕，高度根据内容自适应，顶部外边距为 100vp。组件的垂直方向上包含一个 Text 组件，用于展示一段文本。\n\nText 组件的样式包括宽度为 300vp，高度为 100vp，最大显示行数为 5 行，字体颜色为黑色。文本内容为一段较长的字符串，支持在应用内复制（通过 copyOption 属性设置）。文本的选中范围通过 selection 属性设置为从第 3 个字符到第 8 个字符。\n\n组件的功能包括文本的可选择性，通过 textSelectable 属性设置为 TextSelectableMode.SELECTABLE_FOCUSABLE，使得文本在获得焦点时可以触发键盘框选文本功能。\n\n整个布局通过 Column 布局保证 Text 组件在垂直方向上居中显示，确保界面简洁明了。", "code": "@Entry\n@Component\nstruct TextExample10 {\n  @State message: string = 'TextTextTextTextTextTextTextText' + 'TextTextTextTextTextTextTextTextTextTextTextTextTextTextTextText';\n\n  build() {\n    Column() {\n      Text(this.message)\n        .width(300) // 设置 Text 组件的宽度为 300vp\n        .height(100) // 设置 Text 组件的高度为 100vp\n        .maxLines(5) // 设置 Text 组件的最大显示行数为 5 行\n        .fontColor(Color.Black) // 设置 Text 组件的字体颜色为黑色\n        .copyOption(CopyOptions.InApp) // 设置 Text 组件的复制选项为仅在应用内复制\n        .selection(3, 8) // 设置 Text 组件的选中范围为从第 3 个字符到第 8 个字符\n        .textSelectable(TextSelectableMode.SELECTABLE_FOCUSABLE) // 设置 Text 组件的可选择模式为 SELECTABLE_FOCUSABLE，使得文本在获得焦点时可以触发键盘框选文本功能\n    }.width('100%') // 设置 Column 组件的宽度为 100%\n    .margin({ top: 100 }) // 设置 Column 组件的顶部外边距为 100vp\n  }\n}"}, {"description": "该组件通过Column布局实现了一个展示文本处理效果的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个文本展示区域和一组按钮。每个文本展示区域的文本以不同的省略号模式和断词模式进行展示，按钮用于切换这些模式。\n\n文本展示区域的样式包括字体大小、边框、行高、最大行数、宽度等属性，支持不同的样式展示。按钮的样式包括背景颜色、边框圆角（或半径）、宽度和高度等属性，支持不同的样式展示。按钮组之间通过Row组件进行分隔。\n\n按钮的功能包括点击事件和状态效果，用户可以通过点击按钮触发相应操作，按钮也可以在启用或禁用状态下进行展示。整个布局通过Column布局保证文本展示区域和按钮在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct TextExample4 {\n  @State text: string =\n    'The text component is used to display a piece of textual information.Support universal attributes and universal text attributes.'\n  @State ellipsisModeIndex: number = 0;\n  @State ellipsisMode: EllipsisMode[] = [EllipsisMode.START, EllipsisMode.CENTER, EllipsisMode.END]\n  @State ellipsisModeStr: string[] = ['START', 'CENTER', 'END']\n  @State wordBreakIndex: number = 0;\n  @State wordBreak: WordBreak[] = [WordBreak.NORMAL, WordBreak.BREAK_ALL, WordBreak.BREAK_WORD]\n  @State wordBreakStr: string[] = ['NORMAL', 'BREAK_ALL', 'BREAK_WORD']\n  @State textClip: boolean = false\n\n  build() {\n    Column({ space: 10 }) {\n      // 第一个文本展示区域，展示省略号模式的效果\n      Text(this.text)\n        .fontSize(16) // 设置字体大小为16\n        .border({ width: 1 }) // 设置边框宽度为1\n        .lineHeight(20) // 设置行高为20\n        .maxLines(1) // 设置最大行数为1\n        .textOverflow({ overflow: TextOverflow.Ellipsis }) // 设置文本溢出时显示省略号\n        .ellipsisMode(this.ellipsisMode[this.ellipsisModeIndex]) // 设置省略号模式\n        .width(300) // 设置宽度为300\n        .margin({ left: 20, top: 20 }) // 设置左边距和上边距为20\n\n      // 按钮区域，用于切换省略号模式\n      Row() {\n        Button('更改省略号位置：' + this.ellipsisModeStr[this.ellipsisModeIndex]).onClick(() => {\n          this.ellipsisModeIndex++\n          if (this.ellipsisModeIndex > (this.ellipsisModeStr.length - 1)) {\n            this.ellipsisModeIndex = 0\n          }\n        })\n      }\n\n      // 第二个文本展示区域，展示断词模式的效果\n      Text('This is set wordBreak to WordBreak text Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu.')\n        .fontSize(12) // 设置字体大小为12\n        .border({ width: 1 }) // 设置边框宽度为1\n        .wordBreak(WordBreak.NORMAL) // 设置断词模式为NORMAL\n        .lineHeight(20) // 设置行高为20\n        .maxLines(2) // 设置最大行数为2\n        .clip(this.textClip) // 设置是否裁剪文本\n        .width(260) // 设置宽度为260\n\n      // 按钮区域，用于切换裁剪模式\n      Row() {\n        Button('切换clip：' + this.textClip).onClick(() => {\n          this.textClip = !this.textClip\n        })\n      }\n\n      // 第三个文本展示区域，展示断词模式的效果\n      Text(this.text)\n        .fontSize(12) // 设置字体大小为12\n        .border({ width: 1 }) // 设置边框宽度为1\n        .maxLines(2) // 设置最大行数为2\n        .textOverflow({ overflow: TextOverflow.Ellipsis }) // 设置文本溢出时显示省略号\n        .wordBreak(this.wordBreak[this.wordBreakIndex]) // 设置断词模式\n        .lineHeight(20) // 设置行高为20\n        .width(260) // 设置宽度为260\n\n      // 按钮区域，用于切换断词模式\n      Row() {\n        Button('更改wordBreak模式：' + this.wordBreakStr[this.wordBreakIndex]).onClick(() => {\n          this.wordBreakIndex++\n          if (this.wordBreakIndex > (this.wordBreakStr.length - 1)) {\n            this.wordBreakIndex = 0\n          }\n        })\n      }\n    }\n  }\n}"}]}}}, {"id": "eiW7zwR6DgmnnBCJNLhfYX", "description": "查询组件文档", "subtasks": [{"id": "R6hAw8grU6ZVhEhDqh4ew5", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "Eg8ATyEPNNdg3TRYp9UPas", "description": "查询组件Image的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置图片的资源引用", "设置图片的显示顺序", "设置图片的显示方式"], "n_results": 10, "query_results": {"ids": [["e00f8a63-c4a4-425e-817c-3ec42c9e5580", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "bd88bdf5-c228-4034-af03-225c2d433083", "ce502fef-692f-40de-ae1d-e83783ff594e", "621abd37-14ff-4471-bd8a-2b44d6483327", "982e7f22-f5f1-4eef-b10f-f0fa52bf6fce", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "521cad3e-49c5-44ec-8d86-57570299ede3", "8c7ce776-da25-45a7-aa7d-7568be72f79e"], ["550eaa20-f59b-42cf-b296-ff4406cffec6", "621abd37-14ff-4471-bd8a-2b44d6483327", "e00f8a63-c4a4-425e-817c-3ec42c9e5580", "8c7ce776-da25-45a7-aa7d-7568be72f79e", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "521cad3e-49c5-44ec-8d86-57570299ede3", "888cef60-be06-40bd-8e10-82847d2302e6", "4af9acf0-7a3c-44d4-82d9-2828212cca26"], ["e00f8a63-c4a4-425e-817c-3ec42c9e5580", "521cad3e-49c5-44ec-8d86-57570299ede3", "621abd37-14ff-4471-bd8a-2b44d6483327", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "8c7ce776-da25-45a7-aa7d-7568be72f79e", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "bd88bdf5-c228-4034-af03-225c2d433083", "fa66a688-14fe-4006-a250-63f31adfb281"]], "distances": [[0.36302822828292847, 0.37321507930755615, 0.37466442584991455, 0.41524749994277954, 0.4206428527832031, 0.42258238792419434, 0.42280274629592896, 0.4253416061401367, 0.4269646406173706, 0.4275365471839905], [0.3841354250907898, 0.41829055547714233, 0.4189845323562622, 0.42067235708236694, 0.42976415157318115, 0.438776433467865, 0.4490765333175659, 0.46466827392578125, 0.4681130051612854, 0.47628819942474365], [0.31879085302352905, 0.3354411721229553, 0.3481830358505249, 0.34879422187805176, 0.35209864377975464, 0.37193191051483154, 0.3725380301475525, 0.3810904622077942, 0.3890019655227661, 0.39551109075546265]], "metadatas": [[{"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "autoResize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", "设置图片是否可复制。当copyOption设置为非CopyOptions.None时，支持使用长按、鼠标右击、快捷组合键'CTRL+C'等方式进行复制。svg图片不支持复制。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"图片是否可复制。\",\"default\":\"CopyOptions.None\"}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图片解码过程中是否对图源自动缩放。降采样解码时图片的部分信息丢失，因此可能会导致图片质量的下降（如：出现锯齿），这时可以选择把autoResize设为false，按原图尺寸解码，提升显示效果，但会增加内存占用。\n属性名称：autoResize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片解码过程中是否对图源自动缩放。\",\"default\":false}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n"], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n"], ["设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "EuKHgmsv8cXceL3cCq3QzC", "description": "查询组件Text的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置文本的资源引用", "设置文本的显示顺序", "设置文本的显示方式"], "n_results": 10, "query_results": {"ids": [["a319a79d-bc52-4839-b6ae-cded4e3702e9", "08f20e06-6d11-42e4-8ba9-01faac89ff08", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "8fa42d3a-996d-4735-93af-846bf32dd907", "6f72f2b5-8af2-4583-9413-44e7d271080c", "330f26b8-a1ad-4746-8edf-b58e2c4f8653", "a049610a-a42e-410d-a520-fe2a0a704774", "04f8490a-5298-4442-92e6-8e46cc0f17ca", "6be53b16-d33e-4360-a82a-69054e0ff19a"], ["588549ec-b8a6-496b-8795-3be82ca87021", "6f72f2b5-8af2-4583-9413-44e7d271080c", "6be53b16-d33e-4360-a82a-69054e0ff19a", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412", "4b0a480c-d137-4596-a2b4-457b1f4fb17a", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "04f8490a-5298-4442-92e6-8e46cc0f17ca", "9fb81972-af49-45a6-b163-3f019a5c4c58", "ce0d9d0f-bf44-49f2-96b8-a642cf6e18c0", "94ed9170-77a3-4809-a47a-4d7dc3d72e1e"], ["4b0a480c-d137-4596-a2b4-457b1f4fb17a", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "6f72f2b5-8af2-4583-9413-44e7d271080c", "d16166ab-76f1-41d1-8747-acff1641b70e", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412", "83aa933b-cac2-47db-b828-510d20ee52b7", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "ff90f708-e4a0-4ddd-9766-66cebd6d085b", "ef12c73a-8411-4320-a5ea-0d39e643de12", "5b01f32f-e789-47af-86a4-df5a864c92c4"]], "distances": [[0.39910268783569336, 0.4192560911178589, 0.42434167861938477, 0.42502355575561523, 0.4308842420578003, 0.43215131759643555, 0.4322342872619629, 0.43603503704071045, 0.4372650980949402, 0.43847954273223877], [0.36797118186950684, 0.3816699981689453, 0.4165734052658081, 0.4174971580505371, 0.4188135266304016, 0.421095073223114, 0.42177796363830566, 0.42551493644714355, 0.4256572723388672, 0.42607957124710083], [0.30001896619796753, 0.3284837603569031, 0.3293929100036621, 0.34288448095321655, 0.3486778736114502, 0.3487839698791504, 0.3501260280609131, 0.35048985481262207, 0.35401231050491333, 0.3550655245780945]], "metadatas": [[{"component_name": "Text", "name": "onTextSelectionChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Text", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Text", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxLines", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxFontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textCase", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["文本选择的位置发生变化时，触发该回调。\n事件名称：onTextSelectionChange\n事件参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":null}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":null}}\n事件返回值：None\n", "设置组件是否支持文本可复制粘贴。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"组件是否支持文本可复制粘贴。\",\"default\":\"CopyOptions.None\"}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n"], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置文本的最大行数。\n属性名称：maxLines\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大行数。\",\"default\":null}}\n"], ["设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "R2St8fcUCnKSgdW5TGkXXn", "description": "查询组件RelativeContainer的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置组件的相对布局", "设置组件的对齐方式", "设置组件的显示顺序"], "n_results": 10, "query_results": {"ids": [["eabbcd32-6024-4b2a-a490-c82454d6def9", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4", "3b346f3c-3633-48c0-8818-19298f847010", "17168701-4515-4bd1-adab-7c82d6e2594c", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "83d130bd-f5c0-4367-837b-4f78d745876c", "542f456a-8c59-427c-9bd7-73cfa0058f8e"], ["3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "83d130bd-f5c0-4367-837b-4f78d745876c", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "3b346f3c-3633-48c0-8818-19298f847010", "17168701-4515-4bd1-adab-7c82d6e2594c", "4a140115-78d3-4d07-b04b-6f59ab41256f", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "ba3ca22b-d3a2-40a3-b6ec-e65bba054853"], ["1e71e552-71d5-4a32-9d22-ad916a0cbedd", "17168701-4515-4bd1-adab-7c82d6e2594c", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "ba3ca22b-d3a2-40a3-b6ec-e65bba054853", "3b346f3c-3633-48c0-8818-19298f847010", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "40880148-bb03-48d6-8634-29e59c28a19e", "83d130bd-f5c0-4367-837b-4f78d745876c"]], "distances": [[0.32842206954956055, 0.34505271911621094, 0.34974539279937744, 0.35901737213134766, 0.36338478326797485, 0.3684914708137512, 0.37778806686401367, 0.39641034603118896, 0.39790964126586914, 0.4009512662887573], [0.31205159425735474, 0.31394141912460327, 0.3409194350242615, 0.3449801206588745, 0.3607180118560791, 0.3680505156517029, 0.3765244483947754, 0.3905606269836426, 0.3927578926086426, 0.40337318181991577], [0.2785090208053589, 0.4039119482040405, 0.41568946838378906, 0.41772520542144775, 0.4367631673812866, 0.43793541193008423, 0.43849003314971924, 0.45218563079833984, 0.45354193449020386, 0.4572448134422302]], "metadatas": [[{"component_name": "RelativeContainer", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n"], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "hGwhspDdZLWgtWhxv8qNQG", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "g7GPo5LHeNfqJwLSeajx3F", "description": "过滤低于阈值的查询结果: 设置图片的资源引用", "subtasks": [], "details": {"query": "设置图片的资源引用", "result_ids": ["e00f8a63-c4a4-425e-817c-3ec42c9e5580", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "bd88bdf5-c228-4034-af03-225c2d433083", "ce502fef-692f-40de-ae1d-e83783ff594e", "621abd37-14ff-4471-bd8a-2b44d6483327", "982e7f22-f5f1-4eef-b10f-f0fa52bf6fce", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "521cad3e-49c5-44ec-8d86-57570299ede3", "8c7ce776-da25-45a7-aa7d-7568be72f79e"], "result_documents": ["设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", "设置图片是否可复制。当copyOption设置为非CopyOptions.None时，支持使用长按、鼠标右击、快捷组合键'CTRL+C'等方式进行复制。svg图片不支持复制。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"图片是否可复制。\",\"default\":\"CopyOptions.None\"}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图片解码过程中是否对图源自动缩放。降采样解码时图片的部分信息丢失，因此可能会导致图片质量的下降（如：出现锯齿），这时可以选择把autoResize设为false，按原图尺寸解码，提升显示效果，但会增加内存占用。\n属性名称：autoResize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片解码过程中是否对图源自动缩放。\",\"default\":false}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n"], "result_metadatas": [{"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "autoResize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.36302822828292847, 0.37321507930755615, 0.37466442584991455, 0.41524749994277954, 0.4206428527832031, 0.42258238792419434, 0.42280274629592896, 0.4253416061401367, 0.4269646406173706, 0.4275365471839905], "threshold": 0.6, "query_text_results": [["设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, 0.6369717717170715], ["设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, 0.6267849206924438], ["设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", {"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6253355741500854]]}}, {"id": "VkfAp3YSywEUfMAZeGXmmV", "description": "过滤低于阈值的查询结果: 设置图片的显示顺序", "subtasks": [], "details": {"query": "设置图片的显示顺序", "result_ids": ["550eaa20-f59b-42cf-b296-ff4406cffec6", "621abd37-14ff-4471-bd8a-2b44d6483327", "e00f8a63-c4a4-425e-817c-3ec42c9e5580", "8c7ce776-da25-45a7-aa7d-7568be72f79e", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "521cad3e-49c5-44ec-8d86-57570299ede3", "888cef60-be06-40bd-8e10-82847d2302e6", "4af9acf0-7a3c-44d4-82d9-2828212cca26"], "result_documents": ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n"], "result_metadatas": [{"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3841354250907898, 0.41829055547714233, 0.4189845323562622, 0.42067235708236694, 0.42976415157318115, 0.438776433467865, 0.4490765333175659, 0.46466827392578125, 0.4681130051612854, 0.47628819942474365], "threshold": 0.6, "query_text_results": [["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6158645749092102]]}}, {"id": "Mkm6er6NRX7G242DunRoB7", "description": "过滤低于阈值的查询结果: 设置图片的显示方式", "subtasks": [], "details": {"query": "设置图片的显示方式", "result_ids": ["e00f8a63-c4a4-425e-817c-3ec42c9e5580", "521cad3e-49c5-44ec-8d86-57570299ede3", "621abd37-14ff-4471-bd8a-2b44d6483327", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "8c7ce776-da25-45a7-aa7d-7568be72f79e", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "dd86e971-47fc-4b20-9e5a-e3f0c563d117", "bd88bdf5-c228-4034-af03-225c2d433083", "fa66a688-14fe-4006-a250-63f31adfb281"], "result_documents": ["设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", "设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", "设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.31879085302352905, 0.3354411721229553, 0.3481830358505249, 0.34879422187805176, 0.35209864377975464, 0.37193191051483154, 0.3725380301475525, 0.3810904622077942, 0.3890019655227661, 0.39551109075546265], "threshold": 0.6, "query_text_results": [["设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, 0.6645588278770447], ["设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, 0.6518169641494751], ["设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6512057781219482], ["设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, 0.6479013562202454], ["设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, 0.6280680894851685], ["设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n", {"component_name": "Image", "name": "dynamicRangeMode", "source": "harmony-component-doc", "type": "attribute"}, 0.6189095377922058], ["设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", {"component_name": "Image", "name": "resizable", "source": "harmony-component-doc", "type": "attribute"}, 0.6044889092445374]]}}], "details": null}, {"id": "8gMaAwMQCJYyfzUaT6SuvW", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "bhcNJE58nrUHMv7rr5KsR6", "description": "过滤低于阈值的查询结果: 设置文本的资源引用", "subtasks": [], "details": {"query": "设置文本的资源引用", "result_ids": ["a319a79d-bc52-4839-b6ae-cded4e3702e9", "08f20e06-6d11-42e4-8ba9-01faac89ff08", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "8fa42d3a-996d-4735-93af-846bf32dd907", "6f72f2b5-8af2-4583-9413-44e7d271080c", "330f26b8-a1ad-4746-8edf-b58e2c4f8653", "a049610a-a42e-410d-a520-fe2a0a704774", "04f8490a-5298-4442-92e6-8e46cc0f17ca", "6be53b16-d33e-4360-a82a-69054e0ff19a"], "result_documents": ["文本选择的位置发生变化时，触发该回调。\n事件名称：onTextSelectionChange\n事件参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":null}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":null}}\n事件返回值：None\n", "设置组件是否支持文本可复制粘贴。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"组件是否支持文本可复制粘贴。\",\"default\":\"CopyOptions.None\"}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Text", "name": "onTextSelectionChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Text", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.39910268783569336, 0.4192560911178589, 0.42434167861938477, 0.42502355575561523, 0.4308842420578003, 0.43215131759643555, 0.4322342872619629, 0.43603503704071045, 0.4372650980949402, 0.43847954273223877], "threshold": 0.6, "query_text_results": [["文本选择的位置发生变化时，触发该回调。\n事件名称：onTextSelectionChange\n事件参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":null}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":null}}\n事件返回值：None\n", {"component_name": "Text", "name": "onTextSelectionChange", "source": "harmony-component-doc", "type": "event"}, 0.6008973121643066]]}}, {"id": "F2sShTPWvZgqArziy3Mmk4", "description": "过滤低于阈值的查询结果: 设置文本的显示顺序", "subtasks": [], "details": {"query": "设置文本的显示顺序", "result_ids": ["588549ec-b8a6-496b-8795-3be82ca87021", "6f72f2b5-8af2-4583-9413-44e7d271080c", "6be53b16-d33e-4360-a82a-69054e0ff19a", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412", "4b0a480c-d137-4596-a2b4-457b1f4fb17a", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "04f8490a-5298-4442-92e6-8e46cc0f17ca", "9fb81972-af49-45a6-b163-3f019a5c4c58", "ce0d9d0f-bf44-49f2-96b8-a642cf6e18c0", "94ed9170-77a3-4809-a47a-4d7dc3d72e1e"], "result_documents": ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置文本的最大行数。\n属性名称：maxLines\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大行数。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Text", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxLines", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.36797118186950684, 0.3816699981689453, 0.4165734052658081, 0.4174971580505371, 0.4188135266304016, 0.421095073223114, 0.42177796363830566, 0.42551493644714355, 0.4256572723388672, 0.42607957124710083], "threshold": 0.6, "query_text_results": [["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Text", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6320288181304932], ["设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, 0.6183300018310547]]}}, {"id": "bR6runkrMjpjSAXNVMmvqD", "description": "过滤低于阈值的查询结果: 设置文本的显示方式", "subtasks": [], "details": {"query": "设置文本的显示方式", "result_ids": ["4b0a480c-d137-4596-a2b4-457b1f4fb17a", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "6f72f2b5-8af2-4583-9413-44e7d271080c", "d16166ab-76f1-41d1-8747-acff1641b70e", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412", "83aa933b-cac2-47db-b828-510d20ee52b7", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "ff90f708-e4a0-4ddd-9766-66cebd6d085b", "ef12c73a-8411-4320-a5ea-0d39e643de12", "5b01f32f-e789-47af-86a4-df5a864c92c4"], "result_documents": ["设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n"], "result_metadatas": [{"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "maxFontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textCase", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.30001896619796753, 0.3284837603569031, 0.3293929100036621, 0.34288448095321655, 0.3486778736114502, 0.3487839698791504, 0.3501260280609131, 0.35048985481262207, 0.35401231050491333, 0.3550655245780945], "threshold": 0.6, "query_text_results": [["设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n", {"component_name": "Text", "name": "textOverflow", "source": "harmony-component-doc", "type": "attribute"}, 0.6999810338020325], ["设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, 0.6715162396430969], ["设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n", {"component_name": "Text", "name": "maxFontSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6571155190467834], ["设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, 0.6513221263885498], ["设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n", {"component_name": "Text", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, 0.6512160301208496], ["设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, 0.6498739719390869], ["设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", {"component_name": "Text", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, 0.6495101451873779], ["设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n", {"component_name": "Text", "name": "textCase", "source": "harmony-component-doc", "type": "attribute"}, 0.6459876894950867], ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, 0.6449344754219055]]}}], "details": null}, {"id": "MPHD56B5ZyRvkJLaSjrmWg", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "nSbQ5RmnP8JyYxwAAr42GV", "description": "过滤低于阈值的查询结果: 设置组件的相对布局", "subtasks": [], "details": {"query": "设置组件的相对布局", "result_ids": ["eabbcd32-6024-4b2a-a490-c82454d6def9", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4", "3b346f3c-3633-48c0-8818-19298f847010", "17168701-4515-4bd1-adab-7c82d6e2594c", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "83d130bd-f5c0-4367-837b-4f78d745876c", "542f456a-8c59-427c-9bd7-73cfa0058f8e"], "result_documents": ["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.32842206954956055, 0.34505271911621094, 0.34974539279937744, 0.35901737213134766, 0.36338478326797485, 0.3684914708137512, 0.37778806686401367, 0.39641034603118896, 0.39790964126586914, 0.4009512662887573], "threshold": 0.6, "query_text_results": [["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, 0.6715779304504395], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6549472808837891], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6502546072006226], ["绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, 0.6409826278686523], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6366152167320251], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6315085291862488], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6222119331359863], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.603589653968811], ["子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, 0.6020903587341309]]}}, {"id": "aVDMUeXtWed4RaReidAtCL", "description": "过滤低于阈值的查询结果: 设置组件的对齐方式", "subtasks": [], "details": {"query": "设置组件的对齐方式", "result_ids": ["3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "83d130bd-f5c0-4367-837b-4f78d745876c", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "3b346f3c-3633-48c0-8818-19298f847010", "17168701-4515-4bd1-adab-7c82d6e2594c", "4a140115-78d3-4d07-b04b-6f59ab41256f", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "ba3ca22b-d3a2-40a3-b6ec-e65bba054853"], "result_documents": ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.31205159425735474, 0.31394141912460327, 0.3409194350242615, 0.3449801206588745, 0.3607180118560791, 0.3680505156517029, 0.3765244483947754, 0.3905606269836426, 0.3927578926086426, 0.40337318181991577], "threshold": 0.6, "query_text_results": [["指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}, 0.6234755516052246]]}}, {"id": "ZN5o7Doy2Y8ujgxmepwWvH", "description": "过滤低于阈值的查询结果: 设置组件的显示顺序", "subtasks": [], "details": {"query": "设置组件的显示顺序", "result_ids": ["1e71e552-71d5-4a32-9d22-ad916a0cbedd", "17168701-4515-4bd1-adab-7c82d6e2594c", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "ba3ca22b-d3a2-40a3-b6ec-e65bba054853", "3b346f3c-3633-48c0-8818-19298f847010", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "40880148-bb03-48d6-8634-29e59c28a19e", "83d130bd-f5c0-4367-837b-4f78d745876c"], "result_documents": ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.2785090208053589, 0.4039119482040405, 0.41568946838378906, 0.41772520542144775, 0.4367631673812866, 0.43793541193008423, 0.43849003314971924, 0.45218563079833984, 0.45354193449020386, 0.4572448134422302], "threshold": 0.6, "query_text_results": []}}], "details": null}], "details": null}, {"id": "kc4TdJUSmjEDNt2dxfVmxj", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# Image\n接口描述：通过图片数据源获取图片，用于后续渲染展示。\n接口参数：{'src': {\"type\":[\"PixelMap\",\"ResourceStr\",\"DrawableDescriptor\"],\"required\":true,\"description\":\"图片的数据源，支持本地图片和网络图片，引用方式请参考[加载图片资源](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-graphics-display-V5#%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90)。\",\"default\":null}}\n\n接口描述：通过图片数据源获取图片，用于后续渲染展示。\n接口参数：{'src': {\"type\":[\"PixelMap\",\"ResourceStr\",\"DrawableDescriptor\"],\"required\":true,\"description\":\"图片的数据源，支持本地图片和网络图片，引用方式请参考[加载图片资源](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-graphics-display-V5#%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90)。\",\"default\":null}, 'imageAIOptions': {\"type\":\"ImageAIOptions\",\"required\":true,\"description\":\"给组件设置一个AI分析选项，通过此项可配置分析类型或绑定一个分析控制器。\",\"default\":null}}\n设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n设置期望展示的图像动态范围。\n属性名称：dynamicRangeMode\n属性参数：{'value': {\"type\":\"DynamicRangeMode\",\"required\":true,\"description\":\"期望展示的图像动态范围。\",\"default\":null}}\n设置图像拉伸时可调整大小的图像选项。拉伸对拖拽缩略图以及占位图有效。\n属性名称：resizable\n属性参数：{'value': {\"type\":\"ResizableOptions\",\"required\":true,\"description\":\"图像拉伸时可调整大小的图像选项。\",\"default\":null}}\n", "# Text\n接口描述：Text组件的接口定义。\n接口参数：{'Text': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"文本内容。包含子组件Span且未设置属性字符串时不生效，显示Span内容，并且此时text组件的样式不生效。\",\"default\":\" \"}, 'value': {\"type\":\"TextOptions\",\"required\":false,\"description\":\"文本组件初始化选项。\",\"default\":null}}\n文本选择的位置发生变化时，触发该回调。\n事件名称：onTextSelectionChange\n事件参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":null}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":null}}\n事件返回值：None\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n设置文本超长时的显示方式。\n属性名称：textOverflow\n属性参数：{'value': {\"type\":{\"overflow\":\"TextOverflow\"},\"required\":true,\"description\":\"文本超长时的显示方式。\",\"default\":{\"overflow\":\"TextOverflow.Clip\"}}}\n设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n设置文本最大显示字号。\n属性名称：maxFontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本最大显示字号。\",\"default\":null}}\n设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n设置文本样式。包括字体大小、字体粗细、字体族和字体风格。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"文本样式。\",\"default\":null}}\n设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n设置文本大小写。\n属性名称：textCase\n属性参数：{'value': {\"type\":\"TextCase\",\"required\":true,\"description\":\"文本大小写。\",\"default\":\"TextCase.Normal\"}}\n设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n示例：该组件展示了一个文本组件（Text）及其相关信息的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组文本或按钮。每个部分的文本以垂直布局方式排列，文本之间的间距均匀分布，且对齐方式为居中对齐。\n\n文本组件的样式包括字体大小、颜色、边框宽度等属性，支持不同的样式展示。按钮的功能包括点击事件和状态效果，用户可以通过点击按钮触发相应操作，按钮也可以在启用或禁用状态下进行展示。\n\n整个布局通过 Column 布局保证文本和按钮在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct TextExample9 {\n  // 定义状态变量，用于存储文本组件的行数、字形位置信息和行度量信息\n  @State lineCount: string = \"\"\n  @State glyphPositionAtCoordinate: string = \"\"\n  @State lineMetrics: string = \"\"\n\n  // 创建一个 TextController 实例，用于控制文本组件\n  controller: TextController = new TextController()\n\n  // 定义文本内容\n  @State textStr: string = 'Hello World! 您好，世界！'\n\n  build() {\n    Scroll() {\n      Column() {\n        // 显示标题文本，字体大小为9，颜色为浅灰色，宽度为90%，内边距为10\n        Text('Text组件getLayoutManager接口获取段落相对组件的信息')\n          .fontSize(9)\n          .fontColor(0xCCCCCC)\n          .width('90%')\n          .padding(10)\n\n        // 显示文本内容，字体大小为25，边框宽度为1，当文本区域发生变化时获取行数\n        Text(this.textStr, { controller: this.controller })\n          .fontSize(25)\n          .borderWidth(1)\n          .onAreaChange(() => {\n            let layoutManager: LayoutManager = this.controller.getLayoutManager()\n            this.lineCount = \"LineCount: \" + layoutManager.getLineCount()\n          })\n\n        // 显示行数标题，字体大小为9，颜色为浅灰色，宽度为90%，内边距为10\n        Text('LineCount').fontSize(9).fontColor(0xCCCCCC).width('90%').padding(10)\n\n        // 显示行数信息\n        Text(this.lineCount)\n\n        // 显示字形位置标题，字体大小为9，颜色为浅灰色，宽度为90%，内边距为10\n        Text('GlyphPositionAtCoordinate').fontSize(9).fontColor(0xCCCCCC).width('90%').padding(10)\n\n        // 显示按钮，点击按钮时获取相对组件坐标[150,50]的字形信息\n        Button(\"相对组件坐标[150,50]字形信息\")\n          .onClick(() => {\n            let layoutManager: LayoutManager = this.controller.getLayoutManager()\n            let position: PositionWithAffinity = layoutManager.getGlyphPositionAtCoordinate(150, 50)\n            this.glyphPositionAtCoordinate =\n              \"相对组件坐标[150,50] glyphPositionAtCoordinate position: \" + position.position + \" affinity: \" +\n              position.affinity\n          })\n          .margin({ bottom: 20, top: 10 })\n\n        // 显示字形位置信息\n        Text(this.glyphPositionAtCoordinate)\n\n        // 显示行度量标题，字体大小为9，颜色为浅灰色，宽度为90%，内边距为10\n        Text('LineMetrics').fontSize(9).fontColor(0xCCCCCC).width('90%').padding(10)\n\n        // 显示按钮，点击按钮时获取首行行信息、文本样式信息、以及字体属性信息\n        Button(\"首行行信息、文本样式信息、以及字体属性信息\")\n          .onClick(() => {\n            let layoutManager: LayoutManager = this.controller.getLayoutManager()\n            let lineMetrics: LineMetrics = layoutManager.getLineMetrics(0)\n            this.lineMetrics = \"lineMetrics is \" + JSON.stringify(lineMetrics) + '\\\\n\\\\n'\n            let runMetrics = lineMetrics.runMetrics\n            runMetrics.forEach((value, key) => {\n              this.lineMetrics += \"runMetrics key is \" + key + \" \" + JSON.stringify(value) + \"\\\\n\\\\n\"\n            });\n          })\n          .margin({ bottom: 20, top: 10 })\n\n        // 显示行度量信息\n        Text(this.lineMetrics)\n      }\n      .margin({ top: 100, left: 8, right: 8 })\n    }\n  }\n}\n\n示例：该组件通过 Column 布局实现了一个展示可选择文本的界面。布局宽度占据整个屏幕，高度根据内容自适应，顶部外边距为 100vp。组件的垂直方向上包含一个 Text 组件，用于展示一段文本。\n\nText 组件的样式包括宽度为 300vp，高度为 100vp，最大显示行数为 5 行，字体颜色为黑色。文本内容为一段较长的字符串，支持在应用内复制（通过 copyOption 属性设置）。文本的选中范围通过 selection 属性设置为从第 3 个字符到第 8 个字符。\n\n组件的功能包括文本的可选择性，通过 textSelectable 属性设置为 TextSelectableMode.SELECTABLE_FOCUSABLE，使得文本在获得焦点时可以触发键盘框选文本功能。\n\n整个布局通过 Column 布局保证 Text 组件在垂直方向上居中显示，确保界面简洁明了。\n@Entry\n@Component\nstruct TextExample10 {\n  @State message: string = 'TextTextTextTextTextTextTextText' + 'TextTextTextTextTextTextTextTextTextTextTextTextTextTextTextText';\n\n  build() {\n    Column() {\n      Text(this.message)\n        .width(300) // 设置 Text 组件的宽度为 300vp\n        .height(100) // 设置 Text 组件的高度为 100vp\n        .maxLines(5) // 设置 Text 组件的最大显示行数为 5 行\n        .fontColor(Color.Black) // 设置 Text 组件的字体颜色为黑色\n        .copyOption(CopyOptions.InApp) // 设置 Text 组件的复制选项为仅在应用内复制\n        .selection(3, 8) // 设置 Text 组件的选中范围为从第 3 个字符到第 8 个字符\n        .textSelectable(TextSelectableMode.SELECTABLE_FOCUSABLE) // 设置 Text 组件的可选择模式为 SELECTABLE_FOCUSABLE，使得文本在获得焦点时可以触发键盘框选文本功能\n    }.width('100%') // 设置 Column 组件的宽度为 100%\n    .margin({ top: 100 }) // 设置 Column 组件的顶部外边距为 100vp\n  }\n}\n\n示例：该组件通过Column布局实现了一个展示文本处理效果的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为多个部分，每个部分包含一个文本展示区域和一组按钮。每个文本展示区域的文本以不同的省略号模式和断词模式进行展示，按钮用于切换这些模式。\n\n文本展示区域的样式包括字体大小、边框、行高、最大行数、宽度等属性，支持不同的样式展示。按钮的样式包括背景颜色、边框圆角（或半径）、宽度和高度等属性，支持不同的样式展示。按钮组之间通过Row组件进行分隔。\n\n按钮的功能包括点击事件和状态效果，用户可以通过点击按钮触发相应操作，按钮也可以在启用或禁用状态下进行展示。整个布局通过Column布局保证文本展示区域和按钮在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct TextExample4 {\n  @State text: string =\n    'The text component is used to display a piece of textual information.Support universal attributes and universal text attributes.'\n  @State ellipsisModeIndex: number = 0;\n  @State ellipsisMode: EllipsisMode[] = [EllipsisMode.START, EllipsisMode.CENTER, EllipsisMode.END]\n  @State ellipsisModeStr: string[] = ['START', 'CENTER', 'END']\n  @State wordBreakIndex: number = 0;\n  @State wordBreak: WordBreak[] = [WordBreak.NORMAL, WordBreak.BREAK_ALL, WordBreak.BREAK_WORD]\n  @State wordBreakStr: string[] = ['NORMAL', 'BREAK_ALL', 'BREAK_WORD']\n  @State textClip: boolean = false\n\n  build() {\n    Column({ space: 10 }) {\n      // 第一个文本展示区域，展示省略号模式的效果\n      Text(this.text)\n        .fontSize(16) // 设置字体大小为16\n        .border({ width: 1 }) // 设置边框宽度为1\n        .lineHeight(20) // 设置行高为20\n        .maxLines(1) // 设置最大行数为1\n        .textOverflow({ overflow: TextOverflow.Ellipsis }) // 设置文本溢出时显示省略号\n        .ellipsisMode(this.ellipsisMode[this.ellipsisModeIndex]) // 设置省略号模式\n        .width(300) // 设置宽度为300\n        .margin({ left: 20, top: 20 }) // 设置左边距和上边距为20\n\n      // 按钮区域，用于切换省略号模式\n      Row() {\n        Button('更改省略号位置：' + this.ellipsisModeStr[this.ellipsisModeIndex]).onClick(() => {\n          this.ellipsisModeIndex++\n          if (this.ellipsisModeIndex > (this.ellipsisModeStr.length - 1)) {\n            this.ellipsisModeIndex = 0\n          }\n        })\n      }\n\n      // 第二个文本展示区域，展示断词模式的效果\n      Text('This is set wordBreak to WordBreak text Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu.')\n        .fontSize(12) // 设置字体大小为12\n        .border({ width: 1 }) // 设置边框宽度为1\n        .wordBreak(WordBreak.NORMAL) // 设置断词模式为NORMAL\n        .lineHeight(20) // 设置行高为20\n        .maxLines(2) // 设置最大行数为2\n        .clip(this.textClip) // 设置是否裁剪文本\n        .width(260) // 设置宽度为260\n\n      // 按钮区域，用于切换裁剪模式\n      Row() {\n        Button('切换clip：' + this.textClip).onClick(() => {\n          this.textClip = !this.textClip\n        })\n      }\n\n      // 第三个文本展示区域，展示断词模式的效果\n      Text(this.text)\n        .fontSize(12) // 设置字体大小为12\n        .border({ width: 1 }) // 设置边框宽度为1\n        .maxLines(2) // 设置最大行数为2\n        .textOverflow({ overflow: TextOverflow.Ellipsis }) // 设置文本溢出时显示省略号\n        .wordBreak(this.wordBreak[this.wordBreakIndex]) // 设置断词模式\n        .lineHeight(20) // 设置行高为20\n        .width(260) // 设置宽度为260\n\n      // 按钮区域，用于切换断词模式\n      Row() {\n        Button('更改wordBreak模式：' + this.wordBreakStr[this.wordBreakIndex]).onClick(() => {\n          this.wordBreakIndex++\n          if (this.wordBreakIndex > (this.wordBreakStr.length - 1)) {\n            this.wordBreakIndex = 0\n          }\n        })\n      }\n    }\n  }\n}\n\n", "# RelativeContainer\n接口描述：RelativeContainer()\n接口参数：{}\n相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n"], "related_types": {"ImageRenderMode": {"description": "从API version 9开始，该接口支持在ArkTS卡片中使用。从API version 11开始，该接口支持在元服务中使用。", "type": "object", "properties": {"Original": {"type": "string", "required": false, "description": "原色渲染模式。", "enum": null, "enumDescriptions": null, "default": "Original"}, "Template": {"type": "string", "required": false, "description": "黑白渲染模式。", "enum": null, "enumDescriptions": null, "default": "Template"}}, "examples": null}, "ResizableOptions": {"description": "图像拉伸时可调整大小的图像选项。", "type": "object", "properties": {"slice": {"type": "EdgeWidths", "required": true, "description": "边框宽度类型，用于描述组件边框不同方向的宽度。只有当bottom和right同时大于0时，该属性生效。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "EdgeWidths": {"description": "EdgeWidths参数说明", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "图片顶部拉伸时保持不变距离。", "enum": null, "enumDescriptions": null, "default": 0}, "right": {"type": "Length", "required": false, "description": "图片右部拉伸时保持不变距离。", "enum": null, "enumDescriptions": null, "default": 0}, "bottom": {"type": "Length", "required": false, "description": "图片底部拉伸时保持不变距离。", "enum": null, "enumDescriptions": null, "default": 0}, "left": {"type": "Length", "required": false, "description": "图片左部拉伸时保持不变距离。", "enum": null, "enumDescriptions": null, "default": 0}}, "examples": null}, "Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "ImageFit": {"description": "图片填充方式。", "type": "enum", "enum": ["Contain", "Cover", "Auto", "Fill", "ScaleDown", "None", "TOP_START", "TOP", "TOP_END", "START", "CENTER", "END", "BOTTOM_START", "BOTTOM", "BOTTOM_END"], "enumDescriptions": {"Contain": "保持图片宽高比缩放图片，使图片的长边能完全显示出来。", "Cover": "保持图片宽高比缩放图片，使图片的短边能完全显示出来。", "Auto": "保持图片原始尺寸。", "Fill": "拉伸图片，使图片填满容器。", "ScaleDown": "保持图片宽高比缩放图片，使图片的长边和短边都不超过容器的边界。", "None": "不缩放图片。", "TOP_START": "图片在容器的左上角显示。", "TOP": "图片在容器的上方居中显示。", "TOP_END": "图片在容器的右上角显示。", "START": "图片在容器的左边居中显示。", "CENTER": "图片在容器的中间显示。", "END": "图片在容器的右边居中显示。", "BOTTOM_START": "图片在容器的左下角显示。", "BOTTOM": "图片在容器的下方居中显示。", "BOTTOM_END": "图片在容器的右下角显示。"}, "examples": null}, "DynamicRangeMode": {"description": "期望展示的图像动态范围。", "type": "object", "properties": {"High": {"type": "string", "required": false, "description": "不受限动态范围，最大限度进行图片提亮。", "enum": null, "enumDescriptions": null, "default": "High"}, "Constraint": {"type": "string", "required": false, "description": "受限动态范围，受限进行图片提亮。", "enum": null, "enumDescriptions": null, "default": "Constraint"}, "Standard": {"type": "string", "required": false, "description": "标准动态范围，不进行图片提亮。", "enum": null, "enumDescriptions": null, "default": "Standard"}}, "examples": null}, "ResourceStr": {"description": "字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。", "type": ["string", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "TextOptions": {"description": "Text初始化参数。", "type": "object", "properties": {"controller": {"type": "TextController", "required": true, "description": "文本控制器。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "TextController": {"description": "Text组件的控制器。", "type": "object", "properties": {"controller": {"type": "TextController", "required": true, "description": "导入对象", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Font": {"description": "设置文本样式。", "type": "object", "properties": {"size": {"type": "Length", "required": false, "description": "设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。", "enum": null, "enumDescriptions": null, "default": 16.0}, "weight": {"type": ["FontWeight", "number", "string"], "required": false, "description": "设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。", "enum": null, "enumDescriptions": null, "default": "400 | FontWeight.Normal"}, "family": {"type": ["string", "Resource"], "required": false, "description": "设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。", "enum": null, "enumDescriptions": null, "default": null}, "style": {"type": "FontStyle", "required": false, "description": "设置文本的字体样式。", "enum": null, "enumDescriptions": null, "default": "FontStyle.Normal"}}, "examples": null}, "PixelRoundPolicy": {"description": "组件像素级取整对齐策略。", "type": "object", "properties": {"start": {"type": "PixelRoundCalcPolicy", "required": false, "description": "组件前部边界取整对齐。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "PixelRoundCalcPolicy", "required": false, "description": "组件尾部边界取整对齐。", "enum": null, "enumDescriptions": null, "default": null}, "top": {"type": "PixelRoundCalcPolicy", "required": false, "description": "组件上边界取整对齐。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "PixelRoundCalcPolicy", "required": false, "description": "组件下边界取整对齐。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Position": {"description": "位置类型，用于表示一个坐标点。", "type": "object", "properties": {"x": {"type": "Length", "required": false, "description": "x轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}, "y": {"type": "Length", "required": false, "description": "y轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "LocalizedEdges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "相对顶边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "相对底边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthMetrics": {"description": "用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。", "type": "object", "properties": {"value": {"type": "number", "required": false, "description": "长度属性的值。", "enum": null, "enumDescriptions": null, "default": null}, "unit": {"type": "LengthUnit", "required": false, "description": "长度属性的单位，默认为vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthUnit": {"description": "长度属性单位枚举。", "type": "enum", "enum": ["PX", "VP", "FP", "PERCENT", "LPX"], "enumDescriptions": {"PX": "长度类型，用于描述以px像素单位为单位的长度。", "VP": "长度类型，用于描述以vp逻辑像素为单位的长度。", "FP": "长度类型，用于描述以fp字体像素为单位的长度。", "PERCENT": "长度类型，用于描述百分比长度。", "LPX": "长度类型，用于描述以lpx逻辑像素为单位的长度。"}, "examples": null}, "Edges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。", "type": "object", "properties": {"top": {"type": "Dimension", "required": false, "description": "相对顶边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Dimension", "required": false, "description": "相对左边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Dimension", "required": false, "description": "相对右边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Dimension", "required": false, "description": "相对底边的偏移量", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Dimension": {"description": "长度类型，用于描述尺寸单位。", "type": "enum", "enum": ["PX", "VP", "FP", "LPX", "PERCENT", "Resource"], "enumDescriptions": {"PX": "需要指定以px像素单位，如'10px'。", "VP": "需要指定数字或vp像素单位，如10或'10vp'。", "FP": "需要指定以fp像素单位，如'10fp'。", "LPX": "需要指定以lpx像素单位，如'10lpx'。", "PERCENT": "需要指定以%像素单位，如'10%'。", "Resource": "资源引用类型，引入系统资源或者应用资源中的尺寸。"}, "examples": null}}}}, {"id": "DdgYYygHNtaFURi4vaCmMo", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["类型名：ImageRenderMode\n类型描述：从API version 9开始，该接口支持在ArkTS卡片中使用。从API version 11开始，该接口支持在元服务中使用。\n参数：{'Original': {\"type\":\"string\",\"required\":false,\"description\":\"原色渲染模式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"Original\"}, 'Template': {\"type\":\"string\",\"required\":false,\"description\":\"黑白渲染模式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"Template\"}}\n", "类型名：ResizableOptions\n类型描述：图像拉伸时可调整大小的图像选项。\n参数：{'slice': {\"type\":\"EdgeWidths\",\"required\":true,\"description\":\"边框宽度类型，用于描述组件边框不同方向的宽度。只有当bottom和right同时大于0时，该属性生效。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：EdgeWidths\n类型描述：EdgeWidths参数说明\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"图片顶部拉伸时保持不变距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":0}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"图片右部拉伸时保持不变距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":0}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"图片底部拉伸时保持不变距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":0}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"图片左部拉伸时保持不变距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":0}}\n", "类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "枚举类型名：ImageFit\n枚举类型描述：图片填充方式。\n枚举值：['Contain', 'Cover', 'Auto', 'Fill', 'ScaleDown', 'None', 'TOP_START', 'TOP', 'TOP_END', 'START', 'CENTER', 'END', 'BOTTOM_START', 'BOTTOM', 'BOTTOM_END']\n枚举值描述：\n* Contain: 保持图片宽高比缩放图片，使图片的长边能完全显示出来。\n* Cover: 保持图片宽高比缩放图片，使图片的短边能完全显示出来。\n* Auto: 保持图片原始尺寸。\n* Fill: 拉伸图片，使图片填满容器。\n* ScaleDown: 保持图片宽高比缩放图片，使图片的长边和短边都不超过容器的边界。\n* None: 不缩放图片。\n* TOP_START: 图片在容器的左上角显示。\n* TOP: 图片在容器的上方居中显示。\n* TOP_END: 图片在容器的右上角显示。\n* START: 图片在容器的左边居中显示。\n* CENTER: 图片在容器的中间显示。\n* END: 图片在容器的右边居中显示。\n* BOTTOM_START: 图片在容器的左下角显示。\n* BOTTOM: 图片在容器的下方居中显示。\n* BOTTOM_END: 图片在容器的右下角显示。\n\n", "类型名：DynamicRangeMode\n类型描述：期望展示的图像动态范围。\n参数：{'High': {\"type\":\"string\",\"required\":false,\"description\":\"不受限动态范围，最大限度进行图片提亮。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"High\"}, 'Constraint': {\"type\":\"string\",\"required\":false,\"description\":\"受限动态范围，受限进行图片提亮。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"Constraint\"}, 'Standard': {\"type\":\"string\",\"required\":false,\"description\":\"标准动态范围，不进行图片提亮。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"Standard\"}}\n", "类型名：ResourceStr\n类型描述：字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。\n类型：['string', 'Resource']\n", "类型名：TextOptions\n类型描述：Text初始化参数。\n参数：{'controller': {\"type\":\"TextController\",\"required\":true,\"description\":\"文本控制器。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：TextController\n类型描述：Text组件的控制器。\n参数：{'controller': {\"type\":\"TextController\",\"required\":true,\"description\":\"导入对象\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Font\n类型描述：设置文本样式。\n参数：{'size': {\"type\":\"Length\",\"required\":false,\"description\":\"设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。\",\"enum\":null,\"enumDescriptions\":null,\"default\":16.0}, 'weight': {\"type\":[\"FontWeight\",\"number\",\"string\"],\"required\":false,\"description\":\"设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"400 | FontWeight.Normal\"}, 'family': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'style': {\"type\":\"FontStyle\",\"required\":false,\"description\":\"设置文本的字体样式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"FontStyle.Normal\"}}\n", "类型名：PixelRoundPolicy\n类型描述：组件像素级取整对齐策略。\n参数：{'start': {\"type\":\"PixelRoundCalcPolicy\",\"required\":false,\"description\":\"组件前部边界取整对齐。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"PixelRoundCalcPolicy\",\"required\":false,\"description\":\"组件尾部边界取整对齐。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'top': {\"type\":\"PixelRoundCalcPolicy\",\"required\":false,\"description\":\"组件上边界取整对齐。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"PixelRoundCalcPolicy\",\"required\":false,\"description\":\"组件下边界取整对齐。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Position\n类型描述：位置类型，用于表示一个坐标点。\n参数：{'x': {\"type\":\"Length\",\"required\":false,\"description\":\"x轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'y': {\"type\":\"Length\",\"required\":false,\"description\":\"y轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：LocalizedEdges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对顶边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对底边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LengthMetrics\n类型描述：用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。\n参数：{'value': {\"type\":\"number\",\"required\":false,\"description\":\"长度属性的值。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'unit': {\"type\":\"LengthUnit\",\"required\":false,\"description\":\"长度属性的单位，默认为vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：LengthUnit\n枚举类型描述：长度属性单位枚举。\n枚举值：['PX', 'VP', 'FP', 'PERCENT', 'LPX']\n枚举值描述：\n* PX: 长度类型，用于描述以px像素单位为单位的长度。\n* VP: 长度类型，用于描述以vp逻辑像素为单位的长度。\n* FP: 长度类型，用于描述以fp字体像素为单位的长度。\n* PERCENT: 长度类型，用于描述百分比长度。\n* LPX: 长度类型，用于描述以lpx逻辑像素为单位的长度。\n\n", "类型名：Edges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。\n参数：{'top': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对顶边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对左边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对右边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对底边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：Dimension\n枚举类型描述：长度类型，用于描述尺寸单位。\n枚举值：['PX', 'VP', 'FP', 'LPX', 'PERCENT', 'Resource']\n枚举值描述：\n* PX: 需要指定以px像素单位，如'10px'。\n* VP: 需要指定数字或vp像素单位，如10或'10vp'。\n* FP: 需要指定以fp像素单位，如'10fp'。\n* LPX: 需要指定以lpx像素单位，如'10lpx'。\n* PERCENT: 需要指定以%像素单位，如'10%'。\n* Resource: 资源引用类型，引入系统资源或者应用资源中的尺寸。\n\n"]}}], "details": {"android_component": {"name": ["android.widget.ImageView", "android.widget.TextView"], "content": "<item\n    android:id=\"@+id/cart\"\n    android:icon=\"@drawable/ic_shopping_cart_white\"\n    android:orderInCategory=\"100\"\n    android:title=\"@string/cart\"\n    app:showAsAction=\"always\" />", "layout_description": "一个项目组件，宽度自适应，高度自适应，图标引用资源app.media.ic_shopping_cart_white，标题引用资源app.string.cart，显示顺序为100，始终显示为操作项。", "function_description": "实现了一个项目组件，图标引用app.media.ic_shopping_cart_white资源，标题引用app.string.cart资源，显示顺序为100，始终显示为操作项。"}}}, {"id": "TBGKbhj4juKHQnAa9Zvjnn", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "RelativeContainer() {\n  Image($r('app.media.ic_shopping_cart_white'))\n    .width('auto')\n    .height('auto')\n  Text($r('app.string.cart'))\n    .width('auto')\n    .height('auto')\n    .alignRules({\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center }\n    })\n}"}}], "details": null}], "details": {"breakdown_android_layout": {"tasks": [{"description": "实现搜索功能的转译，包括搜索图标和搜索视图组件。", "done": false, "component": {"name": ["android.support.v7.widget.SearchView"], "content": "<item\n    android:id=\"@+id/action_search\"\n    android:icon=\"@drawable/ic_search_black\"\n    app:showAsAction=\"always\"\n    app:actionViewClass=\"android.support.v7.widget.SearchView\"\n    android:title=\"Search\"/>"}}, {"description": "实现购物车功能的转译，包括购物车图标和标题。", "done": false, "component": {"name": ["android.widget.ImageView", "android.widget.TextView"], "content": "<item\n    android:id=\"@+id/cart\"\n    android:icon=\"@drawable/ic_shopping_cart_white\"\n    android:orderInCategory=\"100\"\n    android:title=\"@string/cart\"\n    app:showAsAction=\"always\" />"}}]}, "translated_android_components": [{"description": "实现搜索功能的转译，包括搜索图标和搜索视图组件。", "source_component": "android.support.v7.widget.SearchView", "source_component_code": "<item\n    android:id=\"@+id/action_search\"\n    android:icon=\"@drawable/ic_search_black\"\n    app:showAsAction=\"always\"\n    app:actionViewClass=\"android.support.v7.widget.SearchView\"\n    android:title=\"Search\"/>", "source_component_description": "一个菜单项，宽度自适应，高度自适应，图标引用资源app.media.ic_search_black，标题为“Search”。", "target_component": ["Menu", "MenuItem", "Search"], "target_component_code": "Menu() {\n  MenuItem() {\n    Image($r('app.media.ic_search_black'))\n      .width('auto')\n      .height('auto')\n    Text('Search')\n      .fontSize(20)\n  }\n  Search() {\n    TextField()\n      .width('100%')\n      .height('auto')\n  }\n}", "target_component_description": "一个菜单项，宽度自适应，高度自适应，图标引用资源app.media.ic_search_black，标题为“Search”。", "explanation": "1. 使用Menu组件来创建菜单，对应安卓中的操作栏。\n2. 使用MenuItem组件来创建菜单项，对应安卓中的菜单项。\n3. 在MenuItem中，使用Image组件来显示图标，引用资源app.media.ic_search_black，对应安卓中的android:icon属性。\n4. 在MenuItem中，使用Text组件来显示标题'Search'，对应安卓中的android:title属性。\n5. 使用Search组件来创建搜索视图，对应安卓中的SearchView。\n6. 在Search组件中，使用TextField组件来处理搜索输入，对应安卓中的搜索输入框。\n7. 设置MenuItem和TextField的宽度为'auto'，高度为'auto'，对应安卓中的wrap_content。"}, {"description": "实现购物车功能的转译，包括购物车图标和标题。", "source_component": "android.widget.ImageView", "source_component_code": "<item\n    android:id=\"@+id/cart\"\n    android:icon=\"@drawable/ic_shopping_cart_white\"\n    android:orderInCategory=\"100\"\n    android:title=\"@string/cart\"\n    app:showAsAction=\"always\" />", "source_component_description": "一个项目组件，宽度自适应，高度自适应，图标引用资源app.media.ic_shopping_cart_white，标题引用资源app.string.cart，显示顺序为100，始终显示为操作项。", "target_component": ["Image", "Text", "RelativeContainer"], "target_component_code": "RelativeContainer() {\n  Image($r('app.media.ic_shopping_cart_white'))\n    .width('auto')\n    .height('auto')\n  Text($r('app.string.cart'))\n    .width('auto')\n    .height('auto')\n    .alignRules({\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center }\n    })\n}", "target_component_description": "一个项目组件，宽度自适应，高度自适应，图标引用资源app.media.ic_shopping_cart_white，标题引用资源app.string.cart，显示顺序为100，始终显示为操作项。", "explanation": "根据安卓组件描述，我们使用Image组件来显示购物车图标，Text组件来显示购物车标题。由于需要实现图标和标题的相对布局和对齐方式，我们选择了RelativeContainer组件。在RelativeContainer中，Image和Text组件的宽度和高度都设置为'auto'，以自适应内容。Text组件通过alignRules属性实现了在RelativeContainer中的垂直和水平居中对齐。"}]}}, "assemble_harmony_layout": "为了将已经完成的搜索功能和购物车功能的转译结果合并为一个整体的鸿蒙ArkUI布局文件，我们需要确保所有组件按照正确的层次结构无缝连接，并保持原始安卓页面的语义和结构一致性。以下是合并后的整体ArkUI布局文件：\n\n```ets\n@Entry\n@Component\nstruct MainLayout {\n  build() {\n    Column() {\n      // 搜索功能组件\n      Menu() {\n        MenuItem() {\n          Image($r('app.media.ic_search_black'))\n            .width('auto')\n            .height('auto')\n          Text('Search')\n            .fontSize(20)\n        }\n        Search() {\n          TextField()\n            .width('100%')\n            .height('auto')\n        }\n      }\n\n      // 购物车功能组件\n      RelativeContainer() {\n        Image($r('app.media.ic_shopping_cart_white'))\n          .width('auto')\n          .height('auto')\n        Text($r('app.string.cart'))\n          .width('auto')\n          .height('auto')\n          .alignRules({\n            center: { anchor: '__container__', align: VerticalAlign.Center },\n            middle: { anchor: '__container__', align: HorizontalAlign.Center }\n          })\n      }\n    }\n    .width('100%')\n    .height('100%')\n  }\n}\n```\n\n### 解释：\n1. **整体结构**：\n   - 使用 `Column` 组件作为根容器，将搜索功能和购物车功能组件垂直排列。\n   - `Column` 组件的 `width` 和 `height` 属性设置为 `'100%'`，以确保布局占据整个屏幕。\n\n2. **搜索功能组件**：\n   - 使用 `Menu` 组件包裹 `MenuItem` 和 `Search` 组件。\n   - `MenuItem` 包含一个 `Image` 组件和一个 `Text` 组件，分别用于显示搜索图标和标题。\n   - `Search` 组件包含一个 `TextField` 组件，用于用户输入搜索内容。\n\n3. **购物车功能组件**：\n   - 使用 `RelativeContainer` 组件包裹 `Image` 和 `Text` 组件。\n   - `Image` 组件用于显示购物车图标。\n   - `Text` 组件用于显示购物车标题，并通过 `alignRules` 属性设置其在容器中的对齐方式。\n\n### 注意事项：\n- **层次结构**：确保所有组件的层次结构正确，`Menu` 和 `RelativeContainer` 组件分别包裹其子组件。\n- **属性配置**：每个组件的属性配置保持一致，确保布局的正确性和一致性。\n- **资源引用**：使用 `$r` 形式引用应用资源，确保在多语言场景下的兼容性。\n\n通过以上步骤，我们已经将搜索功能和购物车功能的转译结果合并为一个整体的鸿蒙ArkUI布局文件，确保了布局的完整性和一致性。", "time": 85.54856276512146}