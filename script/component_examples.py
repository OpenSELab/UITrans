# 组件名：组件示例
examples = {
    "Scroll": [
        {
            "description": "实现了一个可滚动的页面布局，页面内容在垂直方向上排列，并且页面顶部和底部有固定的内边距，以适应系统窗口和操作栏的高度。",
            "code": "Scroll() {\n        Column() {\n\n        }\n        .width('100%')\n        .height('auto')\n        .padding({\n          bottom: $r('app.float.activity_vertical_margin'),\n          top: $r('app.float.activity_vertical_margin')\n        })\n      }\n      .width('auto')\n      .height('auto')\n      .margin({ top: '56vp' })"
        }
    ],
    "Stack": [
        {
            "description": "页面呈现一个带有圆角和内边距的卡片视图，卡片内部包含一个文本视图，文本视图显示一段可选择的文本，文本内容为“关于”标题。",
            "code": "Stack() {\n        Column() {\n          Text($r('app.string.heading_about'))\n            .id('text_view_about')\n            .width('auto')\n            .height('auto')\n            .margin({\n              bottom: '24vp',\n              left: '16vp',\n              right: '16vp',\n              top: '16vp'\n            })\n            .lineBreakStrategy(LineBreakStrategy.HIGH_QUALITY)\n            .textSelectable(TextSelectableMode.SELECTABLE_FOCUSABLE)\n            .fontSize('16fp')\n        }\n        .width('100%')\n        .height('auto')\n      }\n      .width('100%')\n      .height('auto')\n      .margin({\n        bottom: '4vp',\n        left: $r('app.float.activity_horizontal_margin'),\n        right: $r('app.float.activity_horizontal_margin'),\n        top : '4vp'\n      })\n      .padding('16vp')\n      .borderRadius('8vp')"
        },
        {
            "description": "实现了一个居中显示的图像视图，图像的宽度和高度分别为自适应和200vp，图像资源为 app.media.bookdash_logo ，图像在容器中水平和垂直居中显示，并且图像缩放类型为适应中心。",
            "code": "      Stack() {\n        Column() {\n          Image($r('app.media.bookdash_logo'))\n            .id('imageViewLogo')\n            .width('auto')\n            .height('200vp')\n            .margin({\n              left: '8vp',\n              right: '8vp',\n              top: '8vp',\n              bottom: '8vp'\n            })\n            .objectFit(ImageFit.Auto)\n        }\n        .width('100%')\n        .height('auto')\n        .padding('8vp')\n      }\n      .width('100%')\n      .height('auto')\n      .margin({\n        bottom: '4vp',\n        left: $r('app.float.activity_horizontal_margin'),\n        right: $r('app.float.activity_horizontal_margin'),\n        top : '4vp'\n      })\n      .padding('16vp')\n      .borderRadius('8vp')"
        },
        {
            "description": "该页面呈现了一个带有圆角边框的卡片视图，卡片内部包含两段文本和一个按钮。第一段文本较大，作为标题显示，第二段文本为常规大小，提供详细信息。按钮用于触发进一步的操作，如了解更多信息。整体布局简洁，信息层次分明，便于用户阅读和交互。",
            "code": "Stack() {\n        Column() {\n          Text($r('app.string.why_bookdash_heading'))\n            .id('textViewHeading')\n            .width('auto')\n            .height('auto')\n            .margin({\n              bottom: '8vp',\n              left: '16vp',\n              right: '16vp',\n              top: '16vp'\n            })\n            .textSelectable(TextSelectableMode.SELECTABLE_FOCUSABLE)\n            .fontSize('24fp')\n\n          Text($r('app.string.why_bookdash'))\n            .id('text_why_bookdash')\n            .width('auto')\n            .height('auto')\n            .margin({\n              bottom: '16fp',\n              left: '16fp',\n              right: '16fp'\n            })\n            .lineBreakStrategy(LineBreakStrategy.HIGH_QUALITY)\n            .textSelectable(TextSelectableMode.SELECTABLE_FOCUSABLE)\n            .fontSize('16fp')\n        }\n        .width('100%')\n        .height('auto')\n      }\n      .width('100%')\n      .height('auto')\n      .margin({\n        bottom: '4vp',\n        left: $r('app.float.activity_horizontal_margin'),\n        right: $r('app.float.activity_horizontal_margin'),\n        top : '4vp'\n      })\n      .padding('16vp')\n      .borderRadius('8vp')"
        },
        {
            "description": "实现了一个垂直线性容器，包含一个卡片视图容器。卡片视图容器中包含一个约束布局容器，其中包含三个子视图：一个图像视图、一个文本视图和一个图像视图。第一个图像视图显示书籍封面，宽度占满父容器，高度自适应，图像源引用app.media.bookdash_placeholder，宽高比为1:1，位于父容器的顶部；第二个文本视图显示书籍名称，宽度自适应，高度自适应，布局重力为水平居中，底部外边距为8vp，省略方式为末尾，最大行数为2，左边和右边内边距为8vp，文本颜色引用app.color.text_color_primary_dark，字体大小为16fp，位于父容器的底部；第三个图像视图显示下载图标，宽度为16vp，高度为16vp，外边距为4vp，前景重力为底部和右侧，色调引用app.color.colorAccent，位于父容器的底部和右侧，图像源引用app.media.ic_cloud_download_black_24dp。用户可以通过该布局查看书籍封面、书籍名称和下载状态。",
            "code": "      Stack() {\n        RelativeContainer() {\n          Image($r('app.media.bookdash_placeholder'))\n            .id('bookdash_placeholder')\n            .width('100%')\n            .height('auto')\n            .alignRules({\n              // bottom: {anchor: 'textViewBookName', align: VerticalAlign.Bottom},\n              end: {anchor: '__container__', align: HorizontalAlign.End},\n              start: {anchor: '__container__', align: HorizontalAlign.Start},\n              // top: {anchor: '__container__', align: VerticalAlign.Top}\n            })\n\n\n          Text('Giraff really long named giraffee')\n            .id('textViewBookName')\n            .width('auto')\n            .height('auto')\n            .margin({ bottom: 8 })\n            .ellipsisMode(EllipsisMode.END)\n            .maxLines(2)\n            .padding({left: 8, right: 8})\n            .fontColor($r('app.color.text_color_primary_dark'))\n            .fontSize(16)\n            .alignRules({\n              top: {anchor: 'bookdash_placeholder', align: VerticalAlign.Bottom},\n              left: {anchor: '__container__', align: HorizontalAlign.Start},\n            })\n\n          Image($r('app.media.ic_cloud_download_black_24dp'))\n            .id('imageViewBookDownloaded')\n            .width(16)\n            .height(16)\n            .margin(4)\n            .alignRules({\n              top: {anchor: 'textViewBookName', align: VerticalAlign.Bottom},\n              end: {anchor: '__container__', align: HorizontalAlign.End},\n            })\n            .fillColor($r('app.color.colorAccent'))\n        }\n        .width('100%')\n        .height('auto')\n      }\n      .id('card_view')\n      .width('100%')\n      .height('auto')\n      .margin(8)\n      .borderRadius(8)\n      .borderWidth(1)"
        }
    ],
    "Column": [
        {
            "description": "实现了一个偏好设置屏幕容器，包含两个偏好设置项。第一个偏好设置项显示教程设置的摘要和标题，摘要文本引用app.string.show_tutorial_settings_summary，标题文本引用app.string.show_tutorial_settings_title；第二个偏好设置项是一个开关，默认值为true，显示新书通知设置的摘要和标题，摘要文本引用app.string.settings_new_book_notifications_summary，标题文本引用app.string.settings_new_book_notifications。用户可以通过开关控制新书通知的开启和关闭。",
            "code": "    // androidx.preference.PreferenceScreen\n    Column() {\n      // androidx.preference.Preference\n      Row() {\n        Column() {\n          // title\n          Text($r('app.string.show_tutorial_settings_title'))\n            .fontWeight(500)\n            .fontSize(20)\n          // summary\n          Text($r('app.string.show_tutorial_settings_summary'))\n            .fontColor(Color.Gray)\n        }\n        .alignItems(HorizontalAlign.Start)\n        .width('80%')\n      }\n      .width('100%')\n      .padding({left: 20})\n\n      // androidx.preference.SwitchPreferenceCompat\n      Row() {\n        Column() {\n          // title\n          Text($r('app.string.settings_new_book_notifications'))\n            .fontWeight(500)\n            .fontSize(20)\n          // summary\n          Text($r('app.string.settings_new_book_notifications_summary'))\n            .fontColor(Color.Gray)\n            .textOverflow({\n              overflow: TextOverflow.Ellipsis\n            })\n            .maxLines(1)\n        }\n        .alignItems(HorizontalAlign.Start)\n        .width('80%')\n        Toggle({\n          type: ToggleType.Switch\n        })\n      }\n      .width('100%')\n      .padding({left: 20})\n    }"
        }
    ],
    "Select": [
        {
            "description": "实现了一个菜单容器，包含一个单选组，组内包含多个菜单项。每个菜单项都有一个唯一的ID、图标和标题文本。图标引用自app.media资源，标题文本引用自app.string资源。菜单项action_about、action_thanks、action_rate_app、action_invite_friends和action_settings的显示为操作项的属性设置为never，表示这些菜单项不会显示为操作项。用户可以通过菜单项进行相应的操作，如查看所有书籍、下载内容、查看关于信息、感谢、评分应用、邀请朋友和设置应用。",
            "code": "Select([\n        {value: $r('app.string.action_all_books'), icon: $r('app.media.ic_collections_bookmark_black_24dp')},\n        {value: $r('app.string.action_downloads'), icon: $r('app.media.ic_file_download_black_24dp')},\n        {value: $r('app.string.action_about'), icon: $r('app.media.ic_info_outline_black_24dp')},\n        {value: $r('app.string.settings_thank_yous'), icon: $r('app.media.ic_people_outline_black_24dp')},\n        {value: $r('app.string.rate_this_app'), icon: $r('app.media.ic_grade_black_24dp')},\n        {value: $r('app.string.invite_friends'), icon: $r('app.media.ic_group_add_black_24dp')},\n        {value: $r('app.string.action_settings'), icon: $r('app.media.ic_settings_black_24dp')},\n      ])"
        }
    ],
    "RelativeContainer": [
        {
            "description": "实现了一个相对布局容器，包含三个子视图。第一个图像视图显示头部图像，宽度占满父容器，高度为160vp，图像缩放类型为centerCrop，图像源引用app.media.headerimage；第二个图像视图显示Bookdash图标，宽度为68vp，高度为68vp，底部外边距引用app.float.activity_vertical_margin，左边外边距为16vp，顶部外边距引用app.float.nav_header_vertical_spacing，海拔高度为16vp，适合系统窗口，图像源引用app.media.bookdash_b_vector；第三个视图显示一条水平分割线，宽度占满父容器，高度为1vp，位于父容器的底部，背景颜色为#eeeeee。用户可以通过该布局查看头部图像和Bookdash图标，并在底部看到一条分割线。",
            "code": "    RelativeContainer() {\n      Image($r('app.media.headerimage'))\n        .width('100%')\n        .height('160vp')\n\n      Image($r('app.media.bookdash_b_vector'))\n        .id('imageViewBookdashIcon')\n        .width(68)\n        .height(68)\n        .margin({\n          top: $r('app.float.nav_header_vertical_spacing'),\n          bottom: $r('app.float.activity_vertical_margin'),\n          left: 16,\n          right: 16\n        })\n        .shadow(16)  // elevation\n\n      // View\n      Row()\n        .width('100%')\n        .height('1vp')\n        .alignRules({\n          bottom: {anchor: '__container', align: VerticalAlign.Bottom}\n        })\n        .backgroundColor('#eeeeee')\n    }\n    .width('100%')\n    .height('160vp')"
        }
    ]
}