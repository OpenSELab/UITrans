[
    {
        "description": "该组件通过Column和Row布局实现了一个展示可变颜色动效和替换动效的界面。布局宽度占据整个屏幕，高度根据内容自适应，内边距为左30vp、顶部50vp。组件的垂直方向上被分为两个部分，每个部分包含一个标题、一个SymbolGlyph图标和一个按钮。每个部分的图标和按钮以水平布局方式排列，图标和按钮之间的间距为20vp，且对齐方式为居中对齐。\n\nSymbolGlyph图标的样式包括字体大小为96vp，支持不同的动效展示。第一个SymbolGlyph图标展示了可变颜色动效，通过HierarchicalSymbolEffect实现，动效类型为EffectFillStyle.ITERATIVE，用户可以通过点击按钮切换动效的播放和关闭状态。第二个SymbolGlyph图标展示了替换动效，通过ReplaceSymbolEffect实现，动效类型为EffectScope.WHOLE，用户可以通过点击按钮触发图标的替换动效，并切换图标的显示内容。\n\n整个布局通过Column和Row布局保证图标和按钮在垂直方向上有序排列，确保界面整洁美观。",
        "code": "@Entry\n@Component\nstruct Index {\n  @State isActive: boolean = true; // 控制可变颜色动效的播放状态\n  @State triggerValueReplace: number = 0; // 触发替换动效的值\n  replaceFlag: boolean = true; // 控制替换动效的图标显示内容\n\n  build() {\n    Column() {\n      Row() {\n        Column() {\n          Text(\"可变颜色动效\") // 标题，显示“可变颜色动效”\n          SymbolGlyph($r('sys.symbol.ohos_wifi')) // 显示系统图标“wifi”\n            .fontSize(96) // 设置图标字体大小为96vp\n            .symbolEffect(new HierarchicalSymbolEffect(EffectFillStyle.ITERATIVE), this.isActive) // 设置图标的可变颜色动效，动效类型为EffectFillStyle.ITERATIVE，动效状态由isActive控制\n          Button(this.isActive ? '关闭' : '播放').onClick(() => { // 按钮，点击事件切换isActive的值，从而切换动效的播放和关闭状态\n            this.isActive = !this.isActive;\n          })\n        }.margin({right:20}) // 设置右侧边距为20vp\n\n        Column() {\n          Text(\"替换动效\") // 标题，显示“替换动效”\n          SymbolGlyph(this.replaceFlag ? $r('sys.symbol.checkmark_circle') : $r('sys.symbol.repeat_1')) // 根据replaceFlag的值显示不同的系统图标\n            .fontSize(96) // 设置图标字体大小为96vp\n            .symbolEffect(new ReplaceSymbolEffect(EffectScope.WHOLE), this.triggerValueReplace) // 设置图标的替换动效，动效类型为EffectScope.WHOLE，动效触发值由triggerValueReplace控制\n          Button('trigger').onClick(() => { // 按钮，点击事件切换replaceFlag的值，并增加triggerValueReplace的值，从而触发替换动效并切换图标的显示内容\n            this.replaceFlag = !this.replaceFlag;\n            this.triggerValueReplace = this.triggerValueReplace + 1;\n          })\n        }\n      }\n    }.margin({\n      left:30, // 设置左侧边距为30vp\n      top:50 // 设置顶部边距为50vp\n    })\n  }\n}"
    },
    {
        "description": "该组件通过嵌套的Column和Row布局实现了一个展示不同字体权重、渲染策略和效果策略的SymbolGlyph图标的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为三个部分，每个部分包含一个标题和一组SymbolGlyph图标。每个SymbolGlyph图标组的图标以水平布局方式排列，图标之间的间距均匀分布，且对齐方式为居中对齐。\nSymbolGlyph图标的样式包括字体大小、字体颜色、字体权重、渲染策略和效果策略等属性，支持不同的样式展示。图标组之间通过Row组件进行分隔。图标的功能包括展示不同的字体权重、渲染策略和效果策略，用户可以通过观察图标的变化来理解不同策略的效果。\n整个布局通过Column和Row布局保证图标在垂直方向上有序排列，确保界面整洁美观。",
        "code": "@Entry\n@Component\nstruct Index {\n  build() {\n    Column() {\n      Row() {\n        Column() {\n          Text(\"Light\") // 显示文本\"Light\"\n          SymbolGlyph($r('sys.symbol.ohos_trash')) // 显示系统图标\"ohos_trash\"\n            .fontWeight(FontWeight.Lighter) // 设置字体权重为\"Lighter\"\n            .fontSize(96) // 设置字体大小为96\n        }\n\n        Column() {\n          Text(\"Normal\") // 显示文本\"Normal\"\n          SymbolGlyph($r('sys.symbol.ohos_trash')) // 显示系统图标\"ohos_trash\"\n            .fontWeight(FontWeight.Normal) // 设置字体权重为\"Normal\"\n            .fontSize(96) // 设置字体大小为96\n        }\n\n        Column() {\n          Text(\"Bold\") // 显示文本\"Bold\"\n          SymbolGlyph($r('sys.symbol.ohos_trash')) // 显示系统图标\"ohos_trash\"\n            .fontWeight(FontWeight.Bold) // 设置字体权重为\"Bold\"\n            .fontSize(96) // 设置字体大小为96\n        }\n      }\n\n      Row() {\n        Column() {\n          Text(\"单色\") // 显示文本\"单色\"\n          SymbolGlyph($r('sys.symbol.ohos_folder_badge_plus')) // 显示系统图标\"ohos_folder_badge_plus\"\n            .fontSize(96) // 设置字体大小为96\n            .renderingStrategy(SymbolRenderingStrategy.SINGLE) // 设置渲染策略为\"SINGLE\"\n            .fontColor([Color.Black, Color.Green, Color.White]) // 设置字体颜色为黑色、绿色和白色\n        }\n\n        Column() {\n          Text(\"多色\") // 显示文本\"多色\"\n          SymbolGlyph($r('sys.symbol.ohos_folder_badge_plus')) // 显示系统图标\"ohos_folder_badge_plus\"\n            .fontSize(96) // 设置字体大小为96\n            .renderingStrategy(SymbolRenderingStrategy.MULTIPLE_COLOR) // 设置渲染策略为\"MULTIPLE_COLOR\"\n            .fontColor([Color.Black, Color.Green, Color.White]) // 设置字体颜色为黑色、绿色和白色\n        }\n\n        Column() {\n          Text(\"分层\") // 显示文本\"分层\"\n          SymbolGlyph($r('sys.symbol.ohos_folder_badge_plus')) // 显示系统图标\"ohos_folder_badge_plus\"\n            .fontSize(96) // 设置字体大小为96\n            .renderingStrategy(SymbolRenderingStrategy.MULTIPLE_OPACITY) // 设置渲染策略为\"MULTIPLE_OPACITY\"\n            .fontColor([Color.Black, Color.Green, Color.White]) // 设置字体颜色为黑色、绿色和白色\n        }\n      }\n\n      Row() {\n        Column() {\n          Text(\"无动效\") // 显示文本\"无动效\"\n          SymbolGlyph($r('sys.symbol.ohos_wifi')) // 显示系统图标\"ohos_wifi\"\n            .fontSize(96) // 设置字体大小为96\n            .effectStrategy(SymbolEffectStrategy.NONE) // 设置效果策略为\"NONE\"\n        }\n\n        Column() {\n          Text(\"整体缩放动效\") // 显示文本\"整体缩放动效\"\n          SymbolGlyph($r('sys.symbol.ohos_wifi')) // 显示系统图标\"ohos_wifi\"\n            .fontSize(96) // 设置字体大小为96\n            .effectStrategy(1) // 设置效果策略为\"1\"\n        }\n\n        Column() {\n          Text(\"层级动效\") // 显示文本\"层级动效\"\n          SymbolGlyph($r('sys.symbol.ohos_wifi')) // 显示系统图标\"ohos_wifi\"\n            .fontSize(96) // 设置字体大小为96\n            .effectStrategy(2) // 设置效果策略为\"2\"\n        }\n      }\n    }\n  }\n}"
    }
]