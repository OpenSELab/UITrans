/*\n实现一个带有页签和菜单的界面组件。页签部分显示多个页签，每个页签可以有标题和图标。菜单部分显示多个菜单项，每个菜单项可以有图标、是否启用状态以及点击事件。页签和菜单项的内容通过数组定义，并在组件中进行渲染。\n*/\n\n// 导入必要的模块\nimport { TabTitleBar, promptAction } from '@kit.ArkUI';\n\n// 定义页签项的类\nclass tabItem {\n  title: ResourceStr; // 页签的标题\n  icon?: ResourceStr; // 页签的图标（可选）\n  constructor(title: ResourceStr, icon?: ResourceStr) {\n    this.title = title;\n    this.icon = icon;\n  }\n}\n\n// 定义菜单项的接口\ninterface menuItem {\n  value: ResourceStr; // 菜单项的图标\n  isEnabled?: boolean; // 菜单项是否启用（可选，默认为true）\n  action?: () => void; // 菜单项的点击事件（可选）\n}\n\n// 主组件\n@Entry\n@Component\nstruct Index {\n  // 定义一个Builder函数，用于生成页签内容\n  @Builder\n  componentBuilder() {\n    Text("#1ABC9C\nTURQUOISE")\n      .fontWeight(FontWeight.Bold) // 设置字体加粗\n      .fontSize(14) // 设置字体大小\n      .width("100%") // 设置宽度为100%\n      .textAlign(TextAlign.Center) // 设置文本居中对齐\n      .fontColor("#CCFFFFFF") // 设置字体颜色\n      .backgroundColor("#1ABC9C"); // 设置背景颜色\n    Text("#16A085\nGREEN SEA")\n      .fontWeight(FontWeight.Bold)\n      .fontSize(14)\n      .width("100%")\n      .textAlign(TextAlign.Center)\n      .fontColor("#CCFFFFFF")\n      .backgroundColor("#16A085");\n    Text("#2ECC71\nEMERALD")\n      .fontWeight(FontWeight.Bold)\n      .fontSize(14)\n      .width("100%")\n      .textAlign(TextAlign.Center)\n      .fontColor("#CCFFFFFF")\n      .backgroundColor("#2ECC71");\n    Text("#27AE60\nNEPHRITIS")\n      .fontWeight(FontWeight.Bold)\n      .fontSize(14)\n      .width("100%")\n      .textAlign(TextAlign.Center)\n      .fontColor("#CCFFFFFF")\n      .backgroundColor("#27AE60");\n    Text("#3498DB\nPETER RIVER")\n      .fontWeight(FontWeight.Bold)\n      .fontSize(14)\n      .width("100%")\n      .textAlign(TextAlign.Center)\n      .fontColor("#CCFFFFFF")\n      .backgroundColor("#3498DB");\n  }\n\n  // 定义页签项的数组\n  private readonly tabItems: Array<tabItem> = [\n    new tabItem('页签1'),\n    new tabItem('页签2'),\n    new tabItem('页签3'),\n    new tabItem("Happy", $r('app.media.emoji_happy')), // 带有图标的页签\n    new tabItem('页签4')\n  ];\n\n  // 定义菜单项的数组\n  private readonly menuItems: Array<menuItem> = [\n    {\n      value: $r('app.media.ic_public_reduce'), // 菜单项的图标\n      isEnabled: true, // 菜单项启用\n      action: () => promptAction.showToast({ message: "on item click! index 0" }) // 点击事件\n    },\n    {\n      value: $r('app.media.ic_public_edit'),\n      isEnabled: true,\n      action: () => promptAction.showToast({ message: "on item click! index 1" })\n    },\n    {\n      value: $r('app.media.ic_public_save'),\n      isEnabled: true,\n      action: () => promptAction.showToast({ message: "on item click! index 2" })\n    },\n  ];\n\n  // 构建组件\n  build() {\n    Row() {\n      Column() {\n        // 使用TabTitleBar组件，传入页签内容、页签项和菜单项\n        TabTitleBar({\n          swiperContent: this.componentBuilder, // 页签内容\n          tabItems: this.tabItems, // 页签项\n          menuItems: this.menuItems, // 菜单项\n        })\n      }.width('100%') // 设置宽度为100%\n    }.height('100%') // 设置高度为100%\n  }\n}