Title: PatternLock-信息展示-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-patternlock-V5

Markdown Content:
图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。

说明

该组件从API Version 9开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

PatternLock(controller?: PatternLockController)

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### sideLength

sideLength(value: Length)

设置组件的宽度和高度（宽高相同）。设置为0或负数时组件不显示。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

组件的宽度和高度。默认值：288vp

### circleRadius

circleRadius(value: Length)

设置宫格中圆点的半径。设置为0或负数时取默认值。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

宫格中圆点的半径。

默认值：6vp

### backgroundColor

backgroundColor(value: ResourceColor)

设置背景颜色

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### regularColor

regularColor(value: ResourceColor)

设置宫格圆点在“未选中”状态的填充颜色。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

宫格圆点在“未选中”状态的填充颜色。

默认值：'#ff182431'

### selectedColor

selectedColor(value: ResourceColor)

设置宫格圆点在“选中“状态的填充颜色。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

宫格圆点在“选中”状态的填充颜色。

默认值：'#ff182431'

### activeColor

activeColor(value: ResourceColor)

设置宫格圆点在“激活”状态的填充颜色，“激活”状态为手指经过圆点但还未选中的状态。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

宫格圆点在“激活”状态的填充颜色。

默认值：'#ff182431'

### pathColor

pathColor(value: ResourceColor)

设置连线的颜色。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### pathStrokeWidth

pathStrokeWidth(value: number | string)

设置连线的宽度。设置为0或负数时连线不显示。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | string

是

连线的宽度。

默认值：12vp

### autoReset

autoReset(value: boolean)

设置在完成密码输入后再次在组件区域按下时是否重置组件状态。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

在完成密码输入后再次在组件区域按下时是否重置组件状态。

为true时，完成密码输入后再次在组件区域按下时会重置组件状态（即清除之前输入的密码）；为false时，不会重置组件状态。

默认值：true

### activateCircleStyle12+

activateCircleStyle(options: Optional<CircleStyleOptions\>)

设置宫格圆点在“激活”状态的背景圆环样式。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

CircleStyleOptions12+对象说明
-------------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

color

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

否

背景圆环颜色。

默认值：与pathColor值相同

radius

[LengthMetrics](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-arkui-graphics-V5#lengthmetrics12)

否

背景圆环的半径。

默认值：circleRadius的11/6

enableWaveEffect

boolean

否

波浪效果开关。

默认值：true

### onPatternComplete

onPatternComplete(callback: (input: Array<number\>) =\> void)

密码输入结束时触发该回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

input

Array<number\>

是

与选中宫格圆点顺序一致的数字数组，数字为选中宫格圆点的索引值（第一行圆点从左往右依次为0、1、2，第二行圆点依次为3、4、5，第三行圆点依次为6、7、8）。

### onDotConnect11+

onDotConnect(callback: [CallBack](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-base-V5#callback)<number\>)

密码输入选中宫格圆点时触发该回调。

回调参数为选中宫格圆点顺序的数字，数字为选中宫格圆点的索引值（第一行圆点从左往右依次为0、1、2，第二行圆点依次为3、4、5，第三行圆点依次为6、7、8）。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

PatternLockController
---------------------

PatternLock组件的控制器，可以通过它进行组件状态重置。

### 导入对象

1.  let patternLockController: PatternLockController = new PatternLockController()

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### reset

reset()

重置组件状态。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### setChallengeResult11+

setChallengeResult(result: PatternLockChallengeResult): void

用于设置图案密码正确或错误状态。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

PatternLockChallengeResult11+枚举说明
---------------------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

描述

CORRECT

图案密码正确。

WRONG

图案密码错误。

示例
--

2.  import { LengthUnit } from '@kit.ArkUI'

4.  @Entry
5.  @Component
6.  struct PatternLockExample {
7.    @State passwords: Number\[\] = \[\]
8.    @State message: string = 'please input password!'
9.    private patternLockController: PatternLockController = new PatternLockController()

11.    build() {
12.      Column() {
13.        Text(this.message).textAlign(TextAlign.Center).margin(20).fontSize(20)
14.        PatternLock(this.patternLockController)
15.          .sideLength(200)
16.          .circleRadius(9)
17.          .pathStrokeWidth(18)
18.          .activeColor('#B0C4DE')
19.          .selectedColor('#228B22')
20.          .pathColor('#90EE90')
21.          .backgroundColor('#F5F5F5')
22.          .autoReset(true)
23.          .activateCircleStyle({
24.            color: '#90EE90',
25.            radius: { value: 16, unit: LengthUnit.VP },
26.            enableWaveEffect: true
27.          })
28.          .onDotConnect((index: number) =\> {
29.            console.log("onDotConnect index: " + index)
30.          })
31.          .onPatternComplete((input: Array<number\>) =\> {

33.            if (input === null || input === undefined || input.length < 5) {
34.              this.message = 'The password length needs to be greater than 5, please enter again.'
35.              return
36.            }

38.            if (this.passwords.length \> 0) {

40.              if (this.passwords.toString() === input.toString()) {
41.                this.passwords = input
42.                this.message = 'Set password successfully: ' + this.passwords.toString()
43.                this.patternLockController.setChallengeResult(PatternLockChallengeResult.CORRECT)
44.              } else {
45.                this.message = 'Inconsistent passwords, please enter again.'
46.                this.patternLockController.setChallengeResult(PatternLockChallengeResult.WRONG)
47.              }
48.            } else {

50.              this.passwords = input
51.              this.message = "Please enter again."
52.            }
53.          })
54.        Button('Reset PatternLock').margin(30).onClick(() =\> {

56.          this.patternLockController.reset()
57.          this.passwords = \[\]
58.          this.message = 'Please input password'
59.        })
60.      }.width('100%').height('100%')
61.    }
62.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114455.03153604069301289659323798371278:50001231000000:2800:FB67843353CE4245994A7626DD0E40B0C771ADBBD57D9C2F39026790781E4AEC.gif?needInitFileName=true?needInitFileName=true)
