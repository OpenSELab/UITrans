{
    "description": "滑动选择文本内容的组件。",
    "details": null,
    "interfaces": [
        {
            "description": "TextPicker(options?: TextPickerOptions)",
            "params": {
                "options": {
                    "type": "TextPickerOptions",
                    "required": false,
                    "description": "文本选择器的选项。"
                }
            }
        }
    ],
    "attributes": {
        "range": {
            "description": "选择器的数据选择列表。",
            "params": {
                "value": {
                    "type": [
                        "string[]",
                        "string[][]",
                        "Resource",
                        "TextPickerRangeContent[]",
                        "TextCascadePickerRangeContent[]"
                    ],
                    "required": true,
                    "description": "选择器的数据选择列表。不可设置为空数组，若设置为空数组，则不显示；若动态变化为空数组，则保持当前正常值显示。"
                }
            }
        },
        "selected": {
            "description": "设置默认选中项在数组中的索引值。",
            "params": {
                "value": {
                    "type": [
                        "number",
                        "number[]"
                    ],
                    "required": false,
                    "description": "默认选中项在数组中的索引值。",
                    "default": 0
                }
            }
        },
        "value": {
            "description": "设置默认选中项的值，优先级低于selected。",
            "params": {
                "value": {
                    "type": [
                        "string",
                        "string[]"
                    ],
                    "required": false,
                    "description": "默认选中项的值。"
                }
            }
        },
        "defaultPickerItemHeight": {
            "description": "设置Picker各选择项的高度。",
            "params": {
                "value": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "required": true,
                    "description": "Picker各选择项的高度。"
                }
            }
        },
        "disappearTextStyle": {
            "description": "设置所有选项中最上和最下两个选项的文本颜色、字号、字体粗细。",
            "params": {
                "value": {
                    "type": "PickerTextStyle",
                    "required": true,
                    "description": "所有选项中最上和最下两个选项的文本颜色、字号、字体粗细。",
                    "default": {
                        "color": "#ff182431",
                        "font": {
                            "size": "14fp",
                            "weight": "FontWeight.Regular"
                        }
                    }
                }
            }
        },
        "textStyle": {
            "description": "设置所有选项中除了最上、最下及选中项以外的文本颜色、字号、字体粗细。",
            "params": {
                "value": {
                    "type": "PickerTextStyle",
                    "required": true,
                    "description": "所有选项中除了最上、最下及选中项以外的文本颜色、字号、字体粗细。",
                    "default": {
                        "color": "#ff182431",
                        "font": {
                            "size": "16fp",
                            "weight": "FontWeight.Regular"
                        }
                    }
                }
            }
        },
        "selectedTextStyle": {
            "description": "设置选中项的文本颜色、字号、字体粗细。",
            "params": {
                "value": {
                    "type": "PickerTextStyle",
                    "required": true,
                    "description": "选中项的文本颜色、字号、字体粗细。",
                    "default": {
                        "color": "#ff007dff",
                        "font": {
                            "size": "20vp",
                            "weight": "FontWeight.Medium"
                        }
                    }
                }
            }
        },
        "selectedIndex": {
            "description": "设置默认选中项在数组中的索引值，优先级高于options中的选中值。",
            "params": {
                "value": {
                    "type": [
                        "number",
                        "number[]"
                    ],
                    "required": true,
                    "description": "默认选中项在数组中的索引值。",
                    "default": 0
                }
            }
        },
        "canLoop": {
            "description": "设置是否可循环滚动。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": true,
                    "description": "是否可循环滚动。",
                    "default": true
                }
            }
        },
        "divider": {
            "description": "设置分割线样式，不设置该属性则按“默认值”展示分割线。",
            "params": {
                "value": {
                    "type": [
                        "DividerOptions",
                        "null"
                    ],
                    "required": true,
                    "description": "分割线的样式。",
                    "default": {
                        "strokeWidth": "2px",
                        "startMargin": 0,
                        "endMargin": 0,
                        "color": "#33000000"
                    }
                }
            }
        },
        "gradientHeight": {
            "description": "设置渐隐效果高度，不设置该属性则显示默认渐隐效果。",
            "params": {
                "value": {
                    "type": "Dimension",
                    "required": true,
                    "description": "内容区上下边缘的渐隐高度。",
                    "default": "36vp"
                }
            }
        }
    },
    "events": {
        "onChange": {
            "description": "滑动选中TextPicker文本内容后，触发该回调。",
            "params": {
                "value": {
                    "type": [
                        "string",
                        "string[]"
                    ],
                    "required": true,
                    "description": "当前选中项的文本。"
                },
                "index": {
                    "type": [
                        "number",
                        "number[]"
                    ],
                    "required": true,
                    "description": "当前选中项的索引值。"
                }
            }
        }
    },
    "rules": null,
    "examples": [
        {
            "description": "该示例展示了如何在鸿蒙ArkUI中使用TextPicker组件。布局上，整个界面由一个Column组件包裹，内部包含三个TextPicker组件，分别用于单列选择、多列选择和多列联动选择。每个TextPicker组件之间通过margin属性设置了间距。\n\n样式上，TextPicker组件的外观由系统默认样式决定，没有进行额外的自定义。每个TextPicker组件的选中项会触发onChange事件，并在控制台输出当前选中的值和索引。\n\n功能上，用户可以通过滑动TextPicker组件来选择不同的选项。单列选择器允许用户从一组水果中选择一个；多列选择器允许用户从三组不同的水果中分别选择一个；多列联动选择器则允许用户从省份、城市、区县三级联动选择。",
            "code": "// 定义一个类bottom，用于存储底部间距的值\nclass bottom {\n  bottom: number = 50 // 底部间距为50\n}\n\n// 创建bottom类的实例，用于设置TextPicker组件的margin属性\nlet bott: bottom = new bottom()\n\n// 主入口组件，使用@Entry和@Component装饰器标记\n@Entry\n@Component\nstruct TextPickerExample {\n  // 定义一个私有变量select，用于存储单列选择器的初始选中项索引\n  private select: number = 1\n\n  // 定义三个私有数组，分别存储不同种类的水果\n  private apfruits: string[] = ['apple1', 'apple2', 'apple3', 'apple4']\n  private orfruits: string[] = ['orange1', 'orange2', 'orange3', 'orange4']\n  private pefruits: string[] = ['peach1', 'peach2', 'peach3', 'peach4']\n\n  // 定义一个二维数组multi，用于存储多列选择器的选项\n  private multi: string[][] = [this.apfruits, this.orfruits, this.pefruits]\n\n  // 定义一个私有数组cascade，用于存储多列联动选择器的选项\n  private cascade: TextCascadePickerRangeContent[] = [\n    {\n      text: '辽宁省',\n      children: [\n        { text: '沈阳市', children: [{ text: '沈河区' }, { text: '和平区' }, { text: '浑南区' }] },\n        { text: '大连市', children: [{ text: '中山区' }, { text: '金州区' }, { text: '长海县' }] }\n      ]\n    },\n    {\n      text: '吉林省',\n      children: [\n        { text: '长春市', children: [{ text: '南关区' }, { text: '宽城区' }, { text: '朝阳区' }] },\n        { text: '四平市', children: [{ text: '铁西区' }, { text: '铁东区' }, { text: '梨树县' }] }\n      ]\n    },\n    {\n      text: '黑龙江省',\n      children: [\n        { text: '哈尔滨市', children: [{ text: '道里区' }, { text: '道外区' }, { text: '南岗区' }] },\n        { text: '牡丹江市', children: [{ text: '东安区' }, { text: '西安区' }, { text: '爱民区' }] }\n      ]\n    }\n  ]\n\n  // 构建组件的UI结构\n  build() {\n    Column() {\n      // 单列选择器，范围为apfruits数组，初始选中项索引为select\n      TextPicker({ range: this.apfruits, selected: this.select })\n        .onChange((value: string | string[], index: number | number[]) => {\n          // 当选择项改变时，输出当前选中的值和索引\n          console.info('Picker item changed, value: ' + value + ', index: ' + index)\n        }).margin(bott) // 设置底部间距\n\n      // 多列选择器，范围为multi数组\n      TextPicker({ range: this.multi })\n        .onChange((value: string | string[], index: number | number[]) => {\n          // 当选择项改变时，输出当前选中的值和索引\n          console.info('TextPicker 多列:onChange ' + JSON.stringify(value) + ', ' + 'index: ' + JSON.stringify(index))\n        }).margin(bott) // 设置底部间距\n\n      // 多列联动选择器，范围为cascade数组\n      TextPicker({ range: this.cascade })\n        .onChange((value: string | string[], index: number | number[]) => {\n          // 当选择项改变时，输出当前选中的值和索引\n          console.info('TextPicker 多列联动:onChange ' + JSON.stringify(value) + ', ' + 'index: ' + JSON.stringify(index))\n        })\n    }\n  }\n}"
        }
    ],
    "is_common_attrs": true
}