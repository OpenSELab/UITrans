[
    {
        "description": "该组件通过 Column 布局实现了一个展示不同样式二维码的界面。布局宽度占据整个屏幕，内边距为顶部 5vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和对应的二维码。每个二维码的宽度和高度均为 140vp，且二维码之间的间距为 5vp。\n标题的样式为字体大小 30vp，宽度为 90%，字体颜色为 0xCCCCCC。二维码的样式包括颜色、背景色和不透明度等属性，支持不同的样式展示。二维码的功能包括生成不同颜色、背景色和不透明度的二维码，用户可以通过界面展示的二维码样式进行参考。\n整个布局通过 Column 布局保证二维码在垂直方向上有序排列，确保界面整洁美观。",
        "code": "// xxx.ets\n@Entry\n@Component\nstruct QRCodeExample {\n  private value: string = 'hello world' // 定义二维码的内容，默认为 'hello world'\n\n  build() {\n    Column({ space: 5 }) { // 使用 Column 布局，设置组件之间的间距为 5vp\n      Text('normal').fontSize(9).width('90%').fontColor(0xCCCCCC).fontSize(30) // 显示标题 'normal'，字体大小为 30vp，宽度为 90%，字体颜色为 0xCCCCCC\n      QRCode(this.value).width(140).height(140) // 生成默认样式的二维码，宽度和高度均为 140vp\n\n      // 设置二维码颜色\n      Text('color').fontSize(9).width('90%').fontColor(0xCCCCCC).fontSize(30) // 显示标题 'color'，字体大小为 30vp，宽度为 90%，字体颜色为 0xCCCCCC\n      QRCode(this.value).color(0xF7CE00).width(140).height(140) // 生成颜色为 0xF7CE00 的二维码，宽度和高度均为 140vp\n\n      // 设置二维码背景色\n      Text('backgroundColor').fontSize(9).width('90%').fontColor(0xCCCCCC).fontSize(30) // 显示标题 'backgroundColor'，字体大小为 30vp，宽度为 90%，字体颜色为 0xCCCCCC\n      QRCode(this.value).width(140).height(140).backgroundColor(Color.Orange) // 生成背景色为橙色的二维码，宽度和高度均为 140vp\n\n      // 设置二维码不透明度\n      Text('contentOpacity').fontSize(9).width('90%').fontColor(0xCCCCCC).fontSize(30) // 显示标题 'contentOpacity'，字体大小为 30vp，宽度为 90%，字体颜色为 0xCCCCCC\n      QRCode(this.value).width(140).height(140).color(Color.Black).contentOpacity(0.1) // 生成颜色为黑色、不透明度为 0.1 的二维码，宽度和高度均为 140vp\n    }.width('100%').margin({ top: 5 }) // 设置 Column 布局的宽度为 100%，顶部边距为 5vp\n  }\n}"
    }
]