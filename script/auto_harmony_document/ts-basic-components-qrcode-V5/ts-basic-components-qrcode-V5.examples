/*\n实现一个展示不同样式二维码的示例组件。该组件通过使用QRCode组件生成二维码，并展示不同颜色、背景色和不透明度的效果。\n*/\n\n@Entry\n@Component\nstruct QRCodeExample {\n  // 定义二维码的内容，默认为'hello world'\n  private value: string = 'hello world'\n\n  build() {\n    // 创建一个列布局，元素之间的间距为5\n    Column({ space: 5 }) {\n      // 显示普通二维码的标题\n      Text('normal').fontSize(9).width('90%').fontColor(0xCCCCCC).fontSize(30)\n      // 生成并显示普通二维码，宽度为140，高度为140\n      QRCode(this.value).width(140).height(140)\n\n      // 显示设置二维码颜色的标题\n      Text('color').fontSize(9).width('90%').fontColor(0xCCCCCC).fontSize(30)\n      // 生成并显示颜色为金黄色的二维码，宽度为140，高度为140\n      QRCode(this.value).color(0xF7CE00).width(140).height(140)\n\n      // 显示设置二维码背景色的标题\n      Text('backgroundColor').fontSize(9).width('90%').fontColor(0xCCCCCC).fontSize(30)\n      // 生成并显示背景色为橙色的二维码，宽度为140，高度为140\n      QRCode(this.value).width(140).height(140).backgroundColor(Color.Orange)\n\n      // 显示设置二维码不透明度的标题\n      Text('contentOpacity').fontSize(9).width('90%').fontColor(0xCCCCCC).fontSize(30)\n      // 生成并显示不透明度为0.1的黑色二维码，宽度为140，高度为140\n      QRCode(this.value).width(140).height(140).color(Color.Black).contentOpacity(0.1)\n    }\n    // 设置列布局的宽度为100%，顶部外边距为5\n    .width('100%').margin({ top: 5 })\n  }\n}