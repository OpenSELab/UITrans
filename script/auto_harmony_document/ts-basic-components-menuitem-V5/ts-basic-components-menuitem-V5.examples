/*\n实现一个包含多个菜单项的菜单组件，支持图标、文本内容、子菜单、菜单项组等功能。页面布局包含一个按钮，点击按钮可以展示定义的菜单。\n*/\n\n@Entry\n@Component\nstruct Index {\n  @State select: boolean = true // 定义一个状态变量select，初始值为true\n  private iconStr: ResourceStr = $r("app.media.view_list_filled") // 定义私有变量iconStr，用于存储图标资源\n  private iconStr2: ResourceStr = $r("app.media.arrow_right_filled") // 定义私有变量iconStr2，用于存储另一个图标资源\n\n  @Builder\n  SubMenu() {\n    Menu() {\n      MenuItem({ content: "复制", labelInfo: "Ctrl+C" }) // 创建一个菜单项"复制"，并显示快捷键信息\n      MenuItem({ content: "粘贴", labelInfo: "Ctrl+V" }) // 创建一个菜单项"粘贴"，并显示快捷键信息\n    }\n  }\n\n  @Builder\n  MyMenu(){\n    Menu() {\n      MenuItem({ startIcon: $r("app.media.icon"), content: "菜单选项" }) // 创建一个带图标的菜单项\n      MenuItem({ startIcon: $r("app.media.icon"), content: "菜单选项" }) // 创建另一个带图标的菜单项\n        .enabled(false) // 禁用该菜单项\n      MenuItem({\n        startIcon: this.iconStr,\n        content: "菜单选项",\n        endIcon: this.iconStr2,\n        builder: ():void=>this.SubMenu() // 创建一个带图标和子菜单的菜单项\n      })\n      MenuItemGroup({ header: '小标题' }) {\n        MenuItem({\n          startIcon: this.iconStr,\n          content: "菜单选项",\n          endIcon: this.iconStr2,\n          builder: ():void=>this.SubMenu() // 在菜单组中创建带图标和子菜单的菜单项\n        })\n        MenuItem({\n          startIcon: $r("app.media.app_icon"),\n          content: "菜单选项",\n          endIcon: this.iconStr2,\n          builder: ():void=>this.SubMenu() // 在菜单组中创建带图标和子菜单的菜单项\n        })\n      }\n      MenuItem({\n        startIcon: this.iconStr,\n        content: "菜单选项",\n      })\n    }\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Text('click to show menu') // 显示文本"click to show menu"\n          .fontSize(50) // 设置字体大小为50\n          .fontWeight(FontWeight.Bold) // 设置字体加粗\n      }\n      .bindMenu(this.MyMenu) // 绑定菜单到Column上\n      .width('100%') // 设置宽度为100%\n    }\n    .height('100%') // 设置高度为100%\n  }\n}