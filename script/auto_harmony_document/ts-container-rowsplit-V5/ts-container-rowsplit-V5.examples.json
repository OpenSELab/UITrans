[
    {
        "description": "该组件通过Column布局实现了一个包含可拖动分割线的水平布局示例。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为两个部分：第一部分是一个文本提示，第二部分是一个可拖动的RowSplit组件。\n\n文本提示部分使用Text组件显示一行提示信息，字体大小为9，颜色为浅灰色，宽度占据90%的父容器宽度。\n\nRowSplit组件部分包含五个Text组件，每个Text组件显示一个数字，宽度占据10%的父容器宽度，高度为100vp，背景颜色交替为浅棕色和深棕色，文本居中对齐。RowSplit组件的宽度占据90%的父容器宽度，高度为100vp，并且设置为可拖动（resizeable(true)）。\n\n整个布局通过Column布局保证文本提示和RowSplit组件在垂直方向上有序排列，确保界面整洁美观。",
        "code": "// xxx.ets\n@Entry\n@Component\nstruct RowSplitExample {\n  build() {\n    Column() {\n      Text('The second line can be dragged') // 文本提示信息\n        .fontSize(9) // 字体大小为9\n        .fontColor(0xCCCCCC) // 字体颜色为浅灰色\n        .width('90%') // 宽度占据90%的父容器宽度\n      \n      RowSplit() {\n        Text('1') // 第一个文本组件\n          .width('10%') // 宽度占据10%的父容器宽度\n          .height(100) // 高度为100vp\n          .backgroundColor(0xF5DEB3) // 背景颜色为浅棕色\n          .textAlign(TextAlign.Center) // 文本居中对齐\n        \n        Text('2') // 第二个文本组件\n          .width('10%') // 宽度占据10%的父容器宽度\n          .height(100) // 高度为100vp\n          .backgroundColor(0xD2B48C) // 背景颜色为深棕色\n          .textAlign(TextAlign.Center) // 文本居中对齐\n        \n        Text('3') // 第三个文本组件\n          .width('10%') // 宽度占据10%的父容器宽度\n          .height(100) // 高度为100vp\n          .backgroundColor(0xF5DEB3) // 背景颜色为浅棕色\n          .textAlign(TextAlign.Center) // 文本居中对齐\n        \n        Text('4') // 第四个文本组件\n          .width('10%') // 宽度占据10%的父容器宽度\n          .height(100) // 高度为100vp\n          .backgroundColor(0xD2B48C) // 背景颜色为深棕色\n          .textAlign(TextAlign.Center) // 文本居中对齐\n        \n        Text('5') // 第五个文本组件\n          .width('10%') // 宽度占据10%的父容器宽度\n          .height(100) // 高度为100vp\n          .backgroundColor(0xF5DEB3) // 背景颜色为浅棕色\n          .textAlign(TextAlign.Center) // 文本居中对齐\n      }\n      .resizeable(true) // 设置RowSplit组件为可拖动\n      .width('90%') // 宽度占据90%的父容器宽度\n      .height(100) // 高度为100vp\n    }\n    .width('100%') // 宽度占据整个屏幕\n    .margin({ top: 5 }) // 顶部外边距为5vp\n  }\n}"
    }
]