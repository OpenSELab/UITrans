{
    "description": "将子组件横向布局，并在每个子组件之间插入一根纵向的分割线。",
    "details": "RowSplit通过分割线限制子组件的宽度。初始化时，分割线位置根据子组件的宽度来计算。初始化后，后续动态修改子组件的宽度则不生效，分割线位置保持不变，子组件宽度可以通过拖动相邻分割线进行改变。初始化后，动态修改margin、border、padding通用属性导致子组件宽度大于相邻分割线间距的异常情况下，不支持拖动分割线改变子组件的宽度。",
    "interfaces": [
        {
            "description": "RowSplit()",
            "params": {}
        }
    ],
    "attributes": {
        "resizeable": {
            "description": "设置分割线是否可拖拽。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": true,
                    "description": "分割线是否可拖拽。",
                    "default": false
                }
            }
        }
    },
    "events": {},
    "rules": null,
    "examples": [
        "// xxx.ets\n@Entry\n@Component\nstruct RowSplitExample {\n  build() {\n    Column() {\n      Text('The second line can be dragged').fontSize(9).fontColor(0xCCCCCC).width('90%')\n      RowSplit() {\n        Text('1').width('10%').height(100).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n        Text('2').width('10%').height(100).backgroundColor(0xD2B48C).textAlign(TextAlign.Center)\n        Text('3').width('10%').height(100).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n        Text('4').width('10%').height(100).backgroundColor(0xD2B48C).textAlign(TextAlign.Center)\n        Text('5').width('10%').height(100).backgroundColor(0xF5DEB3).textAlign(TextAlign.Center)\n      }\n      .resizeable(true) // 可拖动\n      .width('90%').height(100)\n    }.width('100%').margin({ top: 5 })\n  }\n}"
    ],
    "is_common_attrs": true
}