/*\n实现一个自定义的加载进度条组件，通过按钮切换是否显示加载进度条。点击按钮时，config.enableLoading的值会在true和false之间切换，从而控制加载进度条的显示与隐藏。\n*/\n\n// 导入性能分析工具和ArkUI组件\nimport { hilog } from '@kit.PerformanceAnalysisKit'\nimport { promptAction } from '@kit.ArkUI'\n\n// 定义MyLoadingProgressStyle类，实现LoadingProgress的自定义样式\nclass MyLoadingProgressStyle implements ContentModifier<LoadingProgressConfiguration> {\n  enableLoading: boolean = false // 控制加载进度条是否显示的标志\n\n  constructor(enableLoading: boolean) {\n    this.enableLoading = enableLoading\n  }\n\n  // 应用自定义样式到LoadingProgress\n  applyContent(): WrappedBuilder<[LoadingProgressConfiguration]> {\n    return wrapBuilder(buildLoadingProgress)\n  }\n}\n\n// 初始化两个字符串数组\nlet arr1: string[] = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19"]\nlet arr2: string[] = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]\n\n// 构建LoadingProgress组件\n@Builder\nfunction buildLoadingProgress(config: LoadingProgressConfiguration) {\n  // 创建LoadingProgress的布局\n  Column({ space: 8 }) {\n    // 第一行\n    Row() {\n      // 左侧圆形\n      Column() {\n        Circle({\n          width: ((config.contentModifier as MyLoadingProgressStyle).enableLoading) ? 100 : 80, // 根据enableLoading设置圆形宽度\n          height: ((config.contentModifier as MyLoadingProgressStyle).enableLoading) ? 100 : 80 // 根据enableLoading设置圆形高度\n        })\n          .fill(((config.contentModifier as MyLoadingProgressStyle).enableLoading) ? Color.Grey : 0x2577e3) // 根据enableLoading设置圆形填充颜色\n      }.width('50%')\n\n      // 右侧按钮\n      Column() {\n        Button('' + ((config.contentModifier as MyLoadingProgressStyle).enableLoading))\n          .onClick((event: ClickEvent) => {\n            promptAction.showToast({\n              message: ((config.contentModifier as MyLoadingProgressStyle).enableLoading) + '' // 显示当前enableLoading状态\n            })\n          })\n          .fontColor(Color.White) // 设置按钮文字颜色为白色\n          .backgroundColor(((config.contentModifier as MyLoadingProgressStyle).enableLoading) ? Color.Grey : 0x2577e3) // 根据enableLoading设置按钮背景颜色\n      }.width('50%')\n\n    }\n\n    // 第二行\n    Row() {\n      // 进度条\n      Column() {\n        Gauge({\n          value: (config.contentModifier as MyLoadingProgressStyle).enableLoading ? 50 : 30, // 根据enableLoading设置进度条值\n          min: 11, // 设置进度条最小值\n          max: 100 // 设置进度条最大值\n        }) {\n          Column() {\n            Text('60')\n              .maxFontSize("180sp") // 设置文字最大字体大小\n              .minFontSize("160.0vp") // 设置文字最小字体大小\n              .fontWeight(FontWeight.Medium) // 设置文字字体粗细\n              .fontColor("#ff182431") // 设置文字颜色\n              .width('40%') // 设置文字宽度\n              .height('30%') // 设置文字高度\n              .textAlign(TextAlign.Center) // 设置文字对齐方式\n              .margin({ top: '22.2%' }) // 设置文字上边距\n              .textOverflow({ overflow: TextOverflow.Ellipsis }) // 设置文字溢出处理方式\n              .maxLines(1) // 设置文字最大行数\n          }.width('100%').height('100%')\n        }\n\n        .colors(((config.contentModifier as MyLoadingProgressStyle).enableLoading) ? Color.Grey : 0x2577e3) // 根据enableLoading设置进度条颜色\n        .width(200) // 设置进度条宽度\n        .strokeWidth(18) // 设置进度条描边宽度\n        .padding(5) // 设置进度条内边距\n        .trackShadow({ radius: 7, offsetX: 7, offsetY: 7 }) // 设置进度条阴影\n        .height(200) // 设置进度条高度\n      }.width('100%')\n\n    }\n\n    // 列表\n    Column() {\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(arr2, (item: string) => {\n          ListItem() {\n            Text((config.contentModifier as MyLoadingProgressStyle).enableLoading ? '' + item : Number(item) * 2 + '') // 根据enableLoading设置列表项文字内容\n              .width('100%') // 设置列表项文字宽度\n              .height('100%') // 设置列表项文字高度\n              .fontColor((config.contentModifier as MyLoadingProgressStyle).enableLoading ? Color.White : Color.Orange) // 根据enableLoading设置列表项文字颜色\n              .fontSize((config.contentModifier as MyLoadingProgressStyle).enableLoading ? 16 : 20) // 根据enableLoading设置列表项文字大小\n              .textAlign(TextAlign.Center) // 设置列表项文字对齐方式\n              .backgroundColor((config.contentModifier as MyLoadingProgressStyle).enableLoading ? Color.Grey : 0x2577e3) // 根据enableLoading设置列表项背景颜色\n          }\n          .height(110) // 设置列表项高度\n          .border({\n            width: 2, // 设置列表项边框宽度\n            color: Color.White // 设置列表项边框颜色\n          })\n        }, (item: string) => item)\n      }\n      .height(200) // 设置列表高度\n      .width('100%') // 设置列表宽度\n      .friction(0.6) // 设置列表摩擦系数\n\n      .lanes({ minLength: (config.contentModifier as MyLoadingProgressStyle).enableLoading ? 40 : 80, maxLength: (config.contentModifier as MyLoadingProgressStyle).enableLoading ? 40 : 80 }) // 根据enableLoading设置列表行高\n      .scrollBar(BarState.Off) // 关闭列表滚动条\n    }\n\n  }.width("100%").padding(10) // 设置整体布局宽度和内边距\n}\n\n// LoadingProgressDemoExample组件\n@Entry\n@Component\nstruct LoadingProgressDemoExample {\n  @State loadingProgressList: (boolean | undefined | null)[] = [undefined, true, null, false] // 加载进度条状态列表\n  @State widthList: (number | string)[] = ['110%', 220, '40%', 80] // 宽度列表\n  @State loadingProgressIndex: number = 0 // 当前加载进度条状态索引\n  @State clickFlag: number = 0 // 点击次数标志\n  scroller: Scroller = new Scroller() // 滚动控制器\n\n  // 构建LoadingProgressDemoExample组件\n  build() {\n    Column() {\n      // 滚动视图\n      Scroll(this.scroller) {\n        Column({ space: 5 }) {\n          Column() {\n            // 创建LoadingProgress组件\n            LoadingProgress()\n              .color('#106836') // 设置加载进度条颜色\n              .size({ width: '100%' }) // 设置加载进度条宽度\n              .contentModifier(new MyLoadingProgressStyle(this.loadingProgressList[this.loadingProgressIndex])) // 应用自定义样式\n          }.width('100%').backgroundColor(0xdcdcdc) // 设置整体布局宽度和背景颜色\n        }.width('100%').margin({ top: 5 }) // 设置整体布局宽度和上边距\n      }.height('85%') // 设置滚动视图高度\n\n      // 切换按钮\n      Button('点击切换config.enableloading').onClick(() => {\n        this.clickFlag++ // 增加点击次数\n        this.loadingProgressIndex = (this.loadingProgressIndex + 1) % this.loadingProgressList.length // 更新加载进度条状态索引\n        console.log('enableLoading:' + this.loadingProgressList[this.loadingProgressIndex]) // 打印当前加载进度条状态\n      }).margin(20) // 设置按钮外边距\n    }\n\n  }\n}