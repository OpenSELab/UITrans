{
    "description": "列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。",
    "details": "该组件从API Version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。",
    "interfaces": [
        {
            "description": "List(value?:{space?: number | string, initialIndex?: number, scroller?: Scroller})",
            "params": {
                "space": {
                    "type": ["number", "string"],
                    "description": "子组件主轴方向的间隔。参数类型为number时单位为vp。"
                },
                "initialIndex": {
                    "type": "number",
                    "description": "设置当前List初次加载时视口起始位置显示的item的索引值。"
                },
                "scroller": {
                    "type": "Scroller",
                    "description": "可滚动组件的控制器。用于与可滚动组件进行绑定。"
                }
            }
        }
    ],
    "attributes": {
        "listDirection": {
            "description": "设置List组件排列方向。",
            "params": {
                "value": {
                    "type": "Axis",
                    "required": true,
                    "description": "组件的排列方向。",
                    "default": "Axis.Vertical"
                }
            }
        },
        "divider": {
            "description": "设置ListItem分割线样式，默认无分割线。",
            "params": {
                "value": {
                    "type": {
                        "strokeWidth": "Length",
                        "color": "ResourceColor",
                        "startMargin": "Length",
                        "endMargin": "Length"
                    },
                    "description": "ListItem分割线样式。"
                }
            }
        },
        "scrollBar": {
            "description": "设置滚动条状态。",
            "params": {
                "value": {
                    "type": "BarState",
                    "required": true,
                    "description": "滚动条状态。",
                    "default": "BarState.Auto"
                }
            }
        },
        "cachedCount": {
            "description": "设置列表中ListItem/ListItemGroup的预加载数量，懒加载场景只会预加载List显示区域外cachedCount的内容，非懒加载场景会全部加载。",
            "params": {
                "value": {
                    "type": "number",
                    "required": true,
                    "description": "ListItem/ListItemGroup的预加载数量。",
                    "default": 1
                }
            }
        },
        "edgeEffect": {
            "description": "设置边缘滑动效果。",
            "params": {
                "value": {
                    "type": "EdgeEffect",
                    "required": true,
                    "description": "List组件的边缘滑动效果，支持弹簧效果和阴影效果。",
                    "default": "EdgeEffect.Spring"
                },
                "options": {
                    "type": "EdgeEffectOptions",
                    "description": "组件内容大小小于组件自身时，是否开启滑动效果。"
                }
            }
        },
        "chainAnimation": {
            "description": "设置当前List是否启用链式联动动效，开启后列表滑动以及顶部和底部拖拽时会有链式联动的效果。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": true,
                    "description": "是否启用链式联动动效。",
                    "default": false
                }
            }
        },
        "multiSelectable": {
            "description": "设置是否开启鼠标框选。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": true,
                    "description": "是否开启鼠标框选。",
                    "default": false
                }
            }
        },
        "lanes": {
            "description": "设置List组件的布局列数或行数。gutter为列间距，当列数大于1时生效。",
            "params": {
                "value": {
                    "type": ["number", "LengthConstrain"],
                    "required": true,
                    "description": "List组件的布局列数或行数。"
                },
                "gutter": {
                    "type": "Dimension",
                    "description": "列间距。"
                }
            }
        },
        "alignListItem": {
            "description": "设置List交叉轴方向宽度大于ListItem交叉轴宽度 * lanes时，ListItem在List交叉轴方向的布局方式。",
            "params": {
                "value": {
                    "type": "ListItemAlign",
                    "required": true,
                    "description": "交叉轴方向的布局方式。",
                    "default": "ListItemAlign.Start"
                }
            }
        },
        "sticky": {
            "description": "配合ListItemGroup组件使用，设置ListItemGroup中header和footer是否要吸顶或吸底。",
            "params": {
                "value": {
                    "type": "StickyStyle",
                    "required": true,
                    "description": "ListItemGroup吸顶或吸底效果。",
                    "default": "StickyStyle.None"
                }
            }
        },
        "scrollSnapAlign": {
            "description": "设置列表项滚动结束对齐效果。",
            "params": {
                "value": {
                    "type": "ScrollSnapAlign",
                    "required": true,
                    "description": "列表项滚动结束对齐效果。",
                    "default": "ScrollSnapAlign.NONE"
                }
            }
        },
        "enableScrollInteraction": {
            "description": "设置是否支持滚动手势，当设置为false时，无法通过手指或者鼠标滚动，但不影响控制器的滚动接口。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": true,
                    "description": "是否支持滚动手势。",
                    "default": true
                }
            }
        },
        "nestedScroll": {
            "description": "设置向前向后两个方向上的嵌套滚动模式，实现与父组件的滚动联动。",
            "params": {
                "value": {
                    "type": "NestedScrollOptions",
                    "required": true,
                    "description": "嵌套滚动模式。"
                }
            }
        },
        "friction": {
            "description": "设置摩擦系数，手动划动滚动区域时生效，只对惯性滚动过程有影响，对惯性滚动过程中的链式效果有间接影响。",
            "params": {
                "value": {
                    "type": ["number", "Resource"],
                    "required": true,
                    "description": "摩擦系数。",
                    "default": 0.75
                }
            }
        },
        "contentStartOffset": {
            "description": "设置内容区域起始偏移量。列表滚动到起始位置时，列表内容与列表显示区域边界保留指定距离。",
            "params": {
                "value": {
                    "type": "number",
                    "required": true,
                    "description": "内容区域起始偏移量。",
                    "default": 0
                }
            }
        },
        "contentEndOffset": {
            "description": "设置内容区末尾偏移量。列表滚动到末尾位置时，列表内容与列表显示区域边界保留指定距离。",
            "params": {
                "value": {
                    "type": "number",
                    "required": true,
                    "description": "内容区末尾偏移量。",
                    "default": 0
                }
            }
        },
        "childrenMainSize": {
            "description": "设置List组件的子组件在主轴方向的大小信息。",
            "params": {
                "value": {
                    "type": "ChildrenMainSize",
                    "required": true,
                    "description": "子组件在主轴方向的大小信息。"
                }
            }
        }
    },
    "events": {
        "onItemDelete": {
            "description": "当List组件在编辑模式时，点击ListItem右边出现的删除按钮时触发。",
            "params": {
                "index": {
                    "type": "number",
                    "required": true,
                    "description": "被删除的列表项的索引值。"
                }
            }
        },
        "onScrollIndex": {
            "description": "有子组件划入或划出List显示区域时触发。计算索引值时，ListItemGroup作为一个整体占一个索引值，不计算ListItemGroup内部ListItem的索引值。",
            "params": {
                "start": {
                    "type": "number",
                    "required": true,
                    "description": "List显示区域内第一个子组件的索引值。"
                },
                "end": {
                    "type": "number",
                    "required": true,
                    "description": "List显示区域内最后一个子组件的索引值。"
                },
                "center": {
                    "type": "number",
                    "required": true,
                    "description": "List显示区域内中间位置子组件的索引值。"
                }
            }
        },
        "onReachStart": {
            "description": "列表到达起始位置时触发。",
            "params": {}
        },
        "onReachEnd": {
            "description": "列表到底末尾位置时触发。",
            "params": {}
        },
        "onScrollFrameBegin": {
            "description": "列表开始滑动时触发，事件参数传入即将发生的滑动量，事件处理函数中可根据应用场景计算实际需要的滑动量并作为事件处理函数的返回值返回，列表将按照返回值的实际滑动量进行滑动。",
            "params": {
                "offset": {
                    "type": "number",
                    "required": true,
                    "description": "即将发生的滑动量，单位vp。"
                },
                "state": {
                    "type": "ScrollState",
                    "required": true,
                    "description": "当前滑动状态。"
                }
            }
        },
        "onScrollStart": {
            "description": "列表滑动开始时触发。手指拖动列表或列表的滚动条触发的滑动开始时，会触发该事件。使用Scroller滑动控制器触发的带动画的滑动，动画开始时会触发该事件。",
            "params": {}
        },
        "onScrollStop": {
            "description": "列表滑动停止时触发。手拖动列表或列表的滚动条触发的滑动，手离开屏幕并且滑动停止时会触发该事件。使用Scroller滑动控制器触发的带动画的滑动，动画停止会触发该事件。",
            "params": {}
        },
        "onItemMove": {
            "description": "列表元素发生移动时触发。",
            "params": {
                "from": {
                    "type": "number",
                    "required": true,
                    "description": "移动前索引值。"
                },
                "to": {
                    "type": "number",
                    "required": true,
                    "description": "移动后索引值。"
                }
            }
        },
        "onItemDragStart": {
            "description": "开始拖拽列表元素时触发。",
            "params": {
                "event": {
                    "type": "ItemDragInfo",
                    "required": true,
                    "description": "拖拽点的信息。"
                },
                "itemIndex": {
                    "type": "number",
                    "required": true,
                    "description": "被拖拽列表元素索引值。"
                }
            }
        },
        "onItemDragEnter": {
            "description": "拖拽进入列表元素范围内时触发。",
            "params": {
                "event": {
                    "type": "ItemDragInfo",
                    "required": true,
                    "description": "拖拽点的信息。"
                }
            }
        },
        "onItemDragMove": {
            "description": "拖拽在列表元素范围内移动时触发。",
            "params": {
                "event": {
                    "type": "ItemDragInfo",
                    "required": true,
                    "description": "拖拽点的信息。"
                },
                "itemIndex": {
                    "type": "number",
                    "required": true,
                    "description": "拖拽起始位置。"
                },
                "insertIndex": {
                    "type": "number",
                    "required": true,
                    "description": "拖拽插入位置。"
                }
            }
        },
        "onItemDragLeave": {
            "description": "拖拽离开列表元素时触发。",
            "params": {
                "event": {
                    "type": "ItemDragInfo",
                    "required": true,
                    "description": "拖拽点的信息。"
                },
                "itemIndex": {
                    "type": "number",
                    "required": true,
                    "description": "拖拽离开的列表元素索引值。"
                }
            }
        },
        "onItemDrop": {
            "description": "绑定该事件的列表元素可作为拖拽释放目标，当在列表元素内停止拖拽时触发。",
            "params": {
                "event": {
                    "type": "ItemDragInfo",
                    "required": true,
                    "description": "拖拽点的信息。"
                },
                "itemIndex": {
                    "type": "number",
                    "required": true,
                    "description": "拖拽起始位置。"
                },
                "insertIndex": {
                    "type": "number",
                    "required": true,
                    "description": "拖拽插入位置。"
                },
                "isSuccess": {
                    "type": "boolean",
                    "required": true,
                    "description": "是否成功释放。"
                }
            }
        },
        "onScroll": {
            "description": "列表滑动时触发。",
            "params": {
                "scrollOffset": {
                    "type": "number",
                    "required": true,
                    "description": "每帧滚动的偏移量，List的内容向上滚动时偏移量为正，向下滚动时偏移量为负。单位vp。"
                },
                "scrollState": {
                    "type": "ScrollState",
                    "required": true,
                    "description": "当前滑动状态。"
                }
            }
        },
        "onWillScroll": {
            "description": "列表滑动前触发。回调当前帧将要滑动的偏移量，当前滑动状态和滑动操作来源，其中回调的偏移量为计算得到的将要滑动的偏移量值，并非最终实际滑动偏移。可以通过该回调返回值指定列表将要滑动的偏移。",
            "params": {
                "handler": {
                    "type": "OnWillScrollCallback",
                    "required": true,
                    "description": "滑动前回调函数。"
                }
            }
        },
        "onDidScroll": {
            "description": "列表滑动时触发，返回当前帧滑动的偏移量和当前滑动状态。",
            "params": {
                "handler": {
                    "type": "OnScrollCallback",
                    "required": true,
                    "description": "滑动时回调函数。"
                }
            }
        },
        "onScrollVisibleContentChange": {
            "description": "有子组件划入或划出List显示区域时触发。计算触发条件时，每一个ListItem/ListItemGroup中的header/ListItemGroup中的footer都算一个子组件。",
            "params": {
                "handler": {
                    "type": "OnScrollVisibleContentChangeCallback",
                    "required": true,
                    "description": "子组件划入或划出List显示区域时回调函数。"
                }
            }
        }
    },
    "rules": [
        "该组件内容区小于一屏时，默认没有回弹效果。需要回弹效果，可以通过edgeEffect属性的options参数进行设置。",
        "List组件通用属性clip的默认值为true。",
        "要使List处于可编辑模式需配合onItemDelete事件和ListItem的editable属性，即可编辑模式实现删除列表项功能，需满足以下条件：editMode属性设置为true，绑定onItemDelete事件，且事件回调返回true，ListItem的editable属性设置为true。",
        "实现ListItem拖拽，需满足以下条件：editMode属性设置为true（从API9开始无需设置editMode属性），绑定onDragStart事件，且事件回调中返回浮动UI布局。",
        "List的子组件的索引值计算规则：按子组件的顺序依次递增。if/else语句中，只有条件成立的分支内的子组件会参与索引值计算，条件不成立的分支内子组件不计算索引值。ForEach/LazyForEach/Repeat语句中，会计算展开所有子节点索引值。if/else、ForEach、LazyForEach和Repeat发生变化以后，会更新子节点索引值。ListItemGroup作为一个整体计算一个索引值，ListItemGroup内部的ListItem不计算索引值。List子组件visibility属性设置为Hidden或None依然会计算索",
        "List子组件的visibility属性设置为None时不显示，但该子组件上下的space还会生效。",
        "链式动效生效需要满足以下前提条件：List边缘效果为Spring类型，List没有启用多列模式。",
        "List下嵌套使用LazyForEach，并且LazyForEach下嵌套使用ListItemGroup时，LazyForEach会在List显示区域外上下各会创建cachedCount个ListItemGroup。",
        "List的分割线画在主轴方向两个子组件之间，第一个子组件上方和最后一个子组件下方不会绘制分割线。",
        "多列模式下，ListItem与ListItem之间的分割线起始边距从每一列的交叉轴方向起始边开始计算，其他情况从List交叉轴方向起始边开始计算。",
        "ListItem设置多态样式时，被按压的子组件上下的分割线不绘制。",
        "List的边缘效果为弹簧效果时，在List划动到边缘继续划动和松手回弹过程不会触发onScrollIndex事件。",
        "触发onScrollIndex事件的条件：列表初始化时会触发一次，List显示区域内第一个子组件的索引值或最后一个子组件的索引值有变化时会触发。",
        "从API version 10开始，List显示区域中间位置子组件变化时也会触发onScrollIndex事件。",
        "List初始化时如果initialIndex为0会触发一次onReachStart事件，List滚动到起始位置时触发一次onReachStart事件。List边缘效果为弹簧效果时，划动经过起始位置时触发一次onReachStart事件，回弹回起始位置时再触发一次onReachStart事件。",
        "List边缘效果为弹簧效果时，划动经过末尾位置时触发一次onReachEnd事件，回弹回末尾位置时再触发一次onReachEnd事件。",
        "触发onScrollFrameBegin事件的条件：手指拖动List、List惯性划动时每帧开始时触发；List超出边缘回弹、使用滚动控制器和拖动滚动条的滚动不会触发。",
        "使用Scroller滑动控制器触发的带动画的滑动，动画开始时会触发onScrollStart事件。",
        "手拖动列表或列表的滚动条触发的滑动，手离开屏幕并且滑动停止时会触发onScrollStop事件。使用Scroller滑动控制器触发的带动画的滑动，动画停止会触发onScrollStop事件。",
        "跨List拖拽时，当拖拽释放的位置绑定了onItemDrop时会返回true，否则为false。List内部拖拽时，isSuccess为onItemMove事件的返回值。",
        "调用ScrollEdge和不带动画的ScrollToIndex时，不触发onWillScroll。",
        "调用ScrollEdge和不带动画的ScrollToIndex时，不触发onDidScroll。",
        "调用ScrollEdge和不带动画的ScrollToIndex时，不触发onScrollVisibleContentChange。",
        "List的边缘效果为弹簧效果时，在List划动到边缘继续划动和松手回弹过程不会触发onScrollVisibleContentChange事件。",
        "触发onScrollVisibleContentChange事件的条件：列表初始化时会触发一次，List显示区域内第一个子组件的索引值或最后一个子组件的索引值有变化时会触发。",
        "从API version 10开始，List显示区域中间位置子组件变化时也会触发onScrollVisibleContentChange事件。"
    ],
    "examples": [
        "示例1：该示例实现了设置纵向列表，并在当前显示界面发生改变时回调索引。",
        "示例2：该示例实现了设置多列列表，并在当前显示界面发生改变时回调索引。",
        "示例3：该示例实现了设置可编辑列表，并在当前显示界面发生改变时回调索引。",
        "示例4：该示例实现了设置横向列表，并在当前显示界面发生改变时回调索引。",
        "示例5：该示例通过设置childrenMainSize属性，实现了List在子组件高度不一致时调用scrollTo接口也可以跳转准确。"
    ],
    "is_common_attrs": true
}