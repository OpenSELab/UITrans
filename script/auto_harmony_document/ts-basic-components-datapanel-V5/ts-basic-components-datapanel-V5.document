Title: DataPanel-信息展示-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datapanel-V5

Markdown Content:
数据面板组件，用于将多个数据占比情况使用占比图进行展示。

说明

该组件从API Version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

DataPanel(options: DataPanelOptions)

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

DataPanelOptions对象说明
--------------------

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

values

number\[\]

是

数据值列表，最多包含9个数据，大于9个数据则取前9个数据。若数据值小于0则置为0。

max

number

否

\- max大于0，表示数据的最大值。

\- max小于等于0，max等于value数组各项的和，按比例显示。

默认值：100

type8+

[DataPanelType](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datapanel-V5#datapaneltype8%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

否

数据面板的类型（不支持动态修改）。

默认值：DataPanelType.Circle

DataPanelType8+枚举说明
-------------------

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

描述

Line

线型数据面板。

Circle

环形数据面板。

### closeEffect

closeEffect(value: boolean)

设置关闭数据占比图表旋转动效和投影效果。若未设置[trackShadow属性](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datapanel-V5#trackshadow10)，则该属性控制投影效果的开关，开启投影的效果为投影的默认效果。若设置trackShadow属性，则由trackShadow属性值控制投影效果的开关。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

关闭数据占比图表旋转动效和投影效果。

默认值：false

### valueColors10+

valueColors(value: Array<ResourceColor | LinearGradient\>)

设置各数据段颜色。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### trackBackgroundColor10+

trackBackgroundColor(value: ResourceColor)

设置底板颜色。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

底板颜色。

默认值：'#08182431'，格式为十六进制ARGB值，前俩位代表透明度。

### strokeWidth10+

strokeWidth(value: Length)

设置圆环粗细。数据面板的类型为DataPanelType.Line时该属性不生效。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

圆环粗细。

默认值：24

单位：vp

**说明：**

设置小于0的值时，按默认值显示。

### trackShadow10+

trackShadow(value: DataPanelShadowOptions)

设置投影样式。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### contentModifier12+

contentModifier(modifier: ContentModifier<DataPanelConfiguration\>)

定制DataPanel内容区的方法。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

DataPanelShadowOptions10+对象说明
-----------------------------

DataPanelShadowOptions继承自[MultiShadowOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#multishadowoptions10)，具有MultiShadowOptions的全部属性。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

colors

Array<[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor) | [LinearGradient](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datapanel-V5#lineargradient10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)\>

否

各数据段投影的颜色。

默认值：与valueColors值相同

**说明：**

若设置的投影颜色的个数少于数据段个数时，则显示的投影颜色的个数和设置的投影颜色个数一致。

若设置的投影颜色的个数多于数据段个数时，则显示的投影颜色的个数和数据段个数一致。

LinearGradient10+对象说明
---------------------

线性渐变颜色描述。

constructor(colorStops: ColorStop\[\])

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

名称

参数类型

必填

描述

colorStops

[ColorStop](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datapanel-V5#colorstop10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)\[\]

是

存储渐变颜色和渐变点。

ColorStop10+对象说明
----------------

颜色断点类型，用于描述渐进色颜色断点。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

color

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

颜色值。

offset

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

渐变色断点（0~1之间的比例值，若数据值小于0则置为0，若数据值大于1则置为1）。

**说明：**

若传入字符串类型且内容为数字，则转换为对应的数值。

例如'10vp'转换为10，'10%'转换为0.1。

DataPanelConfiguration12+对象说明
-----------------------------

开发者需要自定义class实现ContentModifier接口。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

values

number\[\]

是

当前DataPanel的数据值，最大长度为9。

maxValue

number

是

DataPanel显示的最大值。

默认值：100。

示例
--

### 示例1

2.  @Entry
3.  @Component
4.  struct DataPanelExample {
5.    public valueArr: number\[\] = \[10, 10, 10, 10, 10, 10, 10, 10, 10\]

7.    build() {
8.      Column({ space: 5 }) {
9.        Row() {
10.          Stack() {
11.            DataPanel({ values: \[30\], max: 100, type: DataPanelType.Circle }).width(168).height(168)
12.            Column() {
13.              Text('30').fontSize(35).fontColor('#182431')
14.              Text('1.0.0').fontSize(9.33).lineHeight(12.83).fontWeight(500).opacity(0.6)
15.            }

17.            Text('%')
18.              .fontSize(9.33)
19.              .lineHeight(12.83)
20.              .fontWeight(500)
21.              .opacity(0.6)
22.              .position({ x: 104.42, y: 78.17 })
23.          }.margin({ right: 44 })

25.          Stack() {
26.            DataPanel({ values: \[50, 12, 8, 5\], max: 100, type: DataPanelType.Circle }).width(168).height(168)
27.            Column() {
28.              Text('75').fontSize(35).fontColor('#182431')
29.              Text('已使用98GB/128GB').fontSize(8.17).lineHeight(11.08).fontWeight(500).opacity(0.6)
30.            }

32.            Text('%')
33.              .fontSize(9.33)
34.              .lineHeight(12.83)
35.              .fontWeight(500)
36.              .opacity(0.6)
37.              .position({ x: 104.42, y: 78.17 })
38.          }
39.        }.margin({ bottom: 59 })

41.        DataPanel({ values: this.valueArr, max: 100, type: DataPanelType.Line }).width(300).height(20)
42.      }.width('100%').margin({ top: 5 })
43.    }
44.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114453.04504346190329557319338530096605:50001231000000:2800:AB7814E5CB199FA02137E6523398D034BE627666D45FBBA2C5D1F26E22B6AD41.png?needInitFileName=true?needInitFileName=true)

### 示例2

2.  @Entry
3.  @Component
4.  struct LinearGradientDataPanelExample {
5.    public values1: number\[\] = \[20, 20, 20, 20\]
6.    public color1: LinearGradient = new LinearGradient(\[{ color: "#65EEC9A3", offset: 0 }, { color: "#FFEF629F", offset: 1 }\])
7.    public color2: LinearGradient = new LinearGradient(\[{ color: "#FF67F9D4", offset: 0 }, { color: "#FFFF9554", offset: 1 }\])
8.    public colorShadow1: LinearGradient = new LinearGradient(\[{ color: "#65EEC9A3", offset: 0 }, { color: "#65EF629F", offset: 1 }\])
9.    public colorShadow2: LinearGradient = new LinearGradient(\[{ color: "#65e26709", offset: 0 }, { color: "#65efbd08", offset: 1 }\])
10.    public colorShadow3: LinearGradient = new LinearGradient(\[{ color: "#6572B513", offset: 0 }, { color: "#6508efa6", offset: 1 }\])
11.    public colorShadow4: LinearGradient = new LinearGradient(\[{ color: "#65ed08f5", offset: 0 }, { color: "#65ef0849", offset: 1 }\])
12.    @State color3: string = '#00FF00'
13.    @State color4: string = '#20FF0000'
14.    @State bgColor: string = '#08182431'
15.    @State offsetX: number = 15
16.    @State offsetY: number = 15
17.    @State radius: number = 5
18.    @State colorArray: Array<LinearGradient | ResourceColor\> = \[this.color1, this.color2, this.color3, this.color4\]
19.    @State shadowColorArray: Array<LinearGradient | ResourceColor\> = \[this.colorShadow1, this.colorShadow2, this.colorShadow3, this.colorShadow4\]

21.    build() {
22.      Column({ space: 5 }) {
23.        Text('LinearGradient').fontSize(9).fontColor(0xCCCCCC).textAlign(TextAlign.Start).width('100%').margin({ top: 20, left: 20})
24.        DataPanel({ values: this.values1, max: 100, type: DataPanelType.Circle })
25.          .width(300)
26.          .height(300)
27.          .valueColors(this.colorArray)
28.          .trackShadow({
29.            radius: this.radius,
30.            colors: this.shadowColorArray,
31.            offsetX: this.offsetX,
32.            offsetY: this.offsetY
33.          })
34.          .strokeWidth(30)
35.          .trackBackgroundColor(this.bgColor)
36.      }.width('100%').margin({ top: 5 })
37.    }
38.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114453.30400769025357929637266134451940:50001231000000:2800:B296FC0D2799670F9B72EFD136AB04C57B0972E99CF2CBD1DCBC12DE8D777155.png?needInitFileName=true?needInitFileName=true)

### 示例3

2.  @Builder
3.  function buildDataPanel(config: DataPanelConfiguration) {
4.    Column() {
5.      Column() {
6.        ForEach(config.values, (item: number, index: number) =\> {
7.          ChildItem({ item: item, index: index, max:config.maxValue})
8.        }, (item: string) =\> item)
9.      }.padding(10)
10.      Column() {
11.        Line().width("100%").backgroundColor("#ff373737").margin({bottom:5})
12.      }.padding({left: 20, right: 20})
13.      Row() {
14.        Text('Length=' + config.values.length + '    ').margin({ left: 10 }).align(Alignment.Start)
15.        Text('Max=' + config.maxValue).margin({ left: 10 }).align(Alignment.Start)
16.      }
17.    }
18.  }

20.  class DataPanelBuilder implements ContentModifier<DataPanelConfiguration\> {
21.    constructor() {
22.    }
23.    applyContent () : WrappedBuilder<\[DataPanelConfiguration\]\> {
24.      return wrapBuilder(buildDataPanel)
25.    }
26.  }

28.  @Entry
29.  @Component
30.  struct Index {
31.    build() {
32.      Column() {
33.        Text("Data panel").margin({ top: 12 });
34.        Row() {
35.          DataPanel({ values: \[12.3, 21.1, 13.4, 35.2, 26.0, 32.0\], max: 140, type: DataPanelType.Circle })
36.            .width(400).height(260)
37.            .constraintSize({maxWidth: "100%"})
38.            .padding({ top: 10 })
39.            .contentModifier(new DataPanelBuilder())
40.        }.margin(15).backgroundColor("#fff5f5f5")
41.      }
42.    }
43.  }

45.  @Component
46.  struct ChildItem {
47.    @Prop item: number;
48.    @Prop index: number;
49.    @Prop max: number;
50.    public color1: string = "#65ff00dd"
51.    public color2: string = "#6500ff99"
52.    public color3: string = "#65ffe600"
53.    public color4: string = "#6595ff00"
54.    public color5: string = "#65000dff"
55.    public color6: string = "#650099ff"
56.    public colorArray: Array<string\> = \[this.color1, this.color2, this.color3, this.color4, this.color5, this.color6\]

58.    build() {
59.      RelativeContainer() {
60.        Row() {
61.          Rect().height(25).width(this.item \* 600 / this.max).foregroundColor(this.colorArray\[this.index\]).radius(5)
62.            .align(Alignment.Start)
63.          Text(" "+this.item)
64.            .fontSize(17)
65.        }
66.      }.height(28)
67.    }
68.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114453.27808268189338219515040723955985:50001231000000:2800:AB904E6D1C6D2E8B44268EE851DA82A3AB21EE4D26BBFFF37169BED98EEDF89E.jpg?needInitFileName=true?needInitFileName=true)
