{
    "description": "日期选择器组件，用于根据指定日期范围创建日期滑动选择器。",
    "details": null,
    "interfaces": [
        {
            "description": "DatePicker(options?: DatePickerOptions)",
            "params": {
                "options": {
                    "type": "DatePickerOptions",
                    "required": false,
                    "description": "配置日期选择器组件的参数。"
                }
            }
        }
    ],
    "attributes": {
        "lunar": {
            "description": "设置弹窗的日期是否显示农历。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": true,
                    "description": "日期是否显示农历。",
                    "default": false
                }
            }
        },
        "disappearTextStyle": {
            "description": "设置所有选项中最上和最下两个选项的文本样式。",
            "params": {
                "value": {
                    "type": "PickerTextStyle",
                    "required": true,
                    "description": "所有选项中最上和最下两个选项的文本颜色、字号、字体粗细。",
                    "default": {
                        "color": "#ff182431",
                        "font": {
                            "size": "14fp",
                            "weight": "FontWeight.Regular"
                        }
                    }
                }
            }
        },
        "textStyle": {
            "description": "设置所有选项中除了最上、最下及选中项以外的文本样式。",
            "params": {
                "value": {
                    "type": "PickerTextStyle",
                    "required": true,
                    "description": "所有选项中除了最上、最下及选中项以外的文本颜色、字号、字体粗细。",
                    "default": {
                        "color": "#ff182431",
                        "font": {
                            "size": "16fp",
                            "weight": "FontWeight.Regular"
                        }
                    }
                }
            }
        },
        "selectedTextStyle": {
            "description": "设置选中项的文本样式。",
            "params": {
                "value": {
                    "type": "PickerTextStyle",
                    "required": true,
                    "description": "选中项的文本颜色、字号、字体粗细。",
                    "default": {
                        "color": "#ff007dff",
                        "font": {
                            "size": "20vp",
                            "weight": "FontWeight.Medium"
                        }
                    }
                }
            }
        }
    },
    "events": {
        "onChange": {
            "description": "选择日期时触发该事件。",
            "params": {
                "value": {
                    "type": "DatePickerResult",
                    "required": true,
                    "description": "返回选中的时间。"
                }
            }
        },
        "onDateChange": {
            "description": "选择日期时触发该事件。",
            "params": {
                "value": {
                    "type": "Date",
                    "required": true,
                    "description": "返回选中的时间，年月日为选中的日期，时分取决于当前系统时间的时分，秒恒为00。"
                }
            }
        }
    },
    "rules": null,
    "examples": [
        {
            "description": "该组件实现了一个日期选择器的示例，用户可以通过点击按钮切换公历和农历显示，并在选择日期时触发相应的事件。布局宽度占据整个屏幕，日期选择器和按钮垂直排列。\n\n布局属性：\n- 整个布局使用 Column 组件，宽度设置为 100%，确保布局占据整个屏幕宽度。\n- 按钮和日期选择器在垂直方向上排列，按钮位于顶部，日期选择器位于底部。\n\n组件的样式和外观：\n- 按钮的样式包括顶部和底部的外边距为 30vp，确保按钮与其他组件之间有足够的间距。\n- 日期选择器的样式包括消失文本的颜色为灰色，字体大小为 16fp，字体加粗；普通文本的颜色为 #ff182431，字体大小为 18fp，字体正常；选中日期的文本颜色为 #ff0000FF，字体大小为 26fp，字体常规。\n\n组件的排列和嵌套关系：\n- 整个布局通过 Column 组件实现垂直排列，按钮位于顶部，日期选择器位于底部。\n- 按钮和日期选择器之间通过外边距进行分隔。\n\n组件的功能和交互：\n- 按钮的功能是切换日期选择器的显示模式（公历或农历），点击按钮时，isLunar 状态变量取反，日期选择器根据 isLunar 的值显示公历或农历。\n- 日期选择器的功能是允许用户选择日期，并在日期变化时触发 onDateChange 事件，更新 selectedDate 状态变量，并在控制台输出当前选中的日期。",
            "code": "// xxx.ets\n@Entry\n@Component\nstruct DatePickerExample {\n  @State isLunar: boolean = false // 状态变量，用于控制日期选择器显示公历或农历\n  private selectedDate: Date = new Date('2021-08-08') // 初始选中的日期\n\n  build() {\n    Column() {\n      Button('切换公历农历')\n        .margin({ top: 30, bottom: 30 }) // 设置按钮的上下外边距为 30vp\n        .onClick(() => {\n          this.isLunar = !this.isLunar // 点击按钮时，切换 isLunar 状态变量\n        })\n      DatePicker({\n        start: new Date('1970-1-1'), // 日期选择器的起始日期\n        end: new Date('2100-1-1'), // 日期选择器的结束日期\n        selected: this.selectedDate // 初始选中的日期\n      })\n        .disappearTextStyle({color: Color.Gray, font: {size: '16fp', weight: FontWeight.Bold}}) // 设置消失文本的样式\n        .textStyle({color: '#ff182431', font: {size: '18fp', weight: FontWeight.Normal}}) // 设置普通文本的样式\n        .selectedTextStyle({color: '#ff0000FF', font: {size: '26fp', weight: FontWeight.Regular}}) // 设置选中日期的文本样式\n        .lunar(this.isLunar) // 根据 isLunar 状态变量显示公历或农历\n        .onDateChange((value: Date) => {\n          this.selectedDate = value // 日期变化时更新 selectedDate 状态变量\n          console.info('select current date is: ' + value.toString()) // 在控制台输出当前选中的日期\n        })\n    }.width('100%') // 设置布局宽度为 100%\n  }\n}"
        }
    ],
    "is_common_attrs": true
}