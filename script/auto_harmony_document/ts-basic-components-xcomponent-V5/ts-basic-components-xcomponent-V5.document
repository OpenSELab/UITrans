Title: XComponent-渲染绘制-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5

Markdown Content:
提供用于图形绘制和媒体数据写入的Surface，XComponent负责将其嵌入到视图中，支持应用自定义Surface位置和大小。

说明

该组件从API Version 8 开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

### XComponent12+

XComponent(options: XComponentOptions)

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

### XComponent10+

XComponent(value: {id: string, type: XComponentType, libraryname?: string, controller?: XComponentController})

该接口不再演进，推荐使用[XComponent(options: XComponentOptions)](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#xcomponent12)。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

id

string

是

组件的唯一标识，支持最大的字符串长度128。

type

[XComponentType](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#xcomponenttype10%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

用于指定XComponent组件类型。

libraryname

string

否

用Native层编译输出动态库名称（对应的动态库不支持跨模块加载），仅类型为SURFACE或TEXTURE时有效。

controller

[XComponentController](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#xcomponentcontroller)

否

给组件绑定一个控制器，通过控制器调用组件方法，仅类型为SURFACE或TEXTURE时有效。

### XComponent(deprecated)

XComponent(value: {id: string, type: string, libraryname?: string, controller?: XComponentController})

**说明：**

从API version 12开始废弃，建议使用[XComponent(options: XComponentOptions)](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#xcomponent12)替代。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

id

string

是

组件的唯一标识，支持最大的字符串长度128。

type

string

是

用于指定XComponent组件类型，可选值仅有两个为：

\-"surface"：用于EGL/OpenGLES和媒体数据写入，开发者定制的绘制内容单独展示到屏幕上。

\-"component"9+ ：XComponent将变成一个容器组件，并可在其中执行非UI逻辑以动态加载显示内容。

其他值均会被视为"surface"类型

libraryname

string

否

应用Native层编译输出动态库名称（对应的动态库不支持跨模块加载），仅XComponent类型为"surface"时有效。

controller

[XComponentcontroller](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#xcomponentcontroller)

否

给组件绑定一个控制器，通过控制器调用组件方法，仅XComponent类型为"surface"时有效。

XComponentOptions12+
--------------------

定义XComponent的具体配置参数。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

属性
--

除支持通用属性外，还支持以下属性：

说明

不支持foregroundColor、obscured和pixelStretchEffect属性，并且type为SURFACE类型时也不支持动态属性设置、自定义绘制、背景设置(backgroundColor除外)、图像效果(shadow除外)、maskShape和foregroundEffect属性。

### enableAnalyzer12+

enableAnalyzer(enable: boolean)

设置组件支持AI分析，当前支持主体识别、文字识别和对象查找等功能。

本功能需要搭配XComponentController的[StartImageAnalyzer](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#startimageanalyzer12)和[StopImageAnalyzer](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#stopimageanalyzer12)一起使用。

不能和[overlay](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-overlay-V5)属性同时使用，两者同时设置时overlay中CustomBuilder属性将失效。该特性依赖设备能力。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

enable

boolean

是

是否启用图像分析功能

说明

仅type为SURFACE和TEXTURE时该功能有效。

事件
--

从API version 12开始，type为SURFACE或TEXTURE时，支持[通用事件](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-events-click-V5)。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

仅type为SURFACE或TEXTURE时以下事件有效：

### onLoad

onLoad(callback: (event?: object) =\> void )

插件加载完成时回调事件。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

event

object

否

获取XComponent实例对象的context，context上挂载的方法由开发者在c++层定义。

### onDestroy

onDestroy(event: () =\> void )

插件卸载完成时回调事件。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

XComponentController
--------------------

XComponent组件的控制器，可以将此对象绑定至XComponent组件，然后通过控制器来调用组件方法。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### 创建对象

1.  xcomponentController: XComponentController = new XComponentController()

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

### constructor

constructor()

XComponentController的构造函数。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### getXComponentSurfaceId9+

getXComponentSurfaceId(): string

获取XComponent对应Surface的ID，供@ohos接口使用，使用方式可参考[相机管理](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-camera-V5)，仅XComponent类型为SURFACE("surface")或TEXTURE时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**返回值:**

类型

描述

string

XComponent持有Surface的ID。

### setXComponentSurfaceSize(deprecated)

setXComponentSurfaceSize(value: {surfaceWidth: number, surfaceHeight: number}): void

设置XComponent持有Surface的宽度和高度，仅XComponent类型为SURFACE("surface")或TEXTURE时有效。

该接口从API Version 12开始废弃，建议使用[setXComponentSurfaceRect](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#setxcomponentsurfacerect12)替代。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

surfaceWidth

number

是

XComponent持有Surface的宽度。

surfaceHeight

number

是

XComponent持有Surface的高度。

### getXComponentContext

getXComponentContext(): Object

获取XComponent实例对象的context，仅XComponent类型为SURFACE("surface")或TEXTURE时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**返回值:**

类型

描述

Object

获取XComponent实例对象的context，context包含的具体接口方法由开发者自定义，context内容与onLoad回调中的第一个参数一致。

### setXComponentSurfaceRect12+

setXComponentSurfaceRect(rect: SurfaceRect): void

设置XComponent持有Surface的显示区域，仅XComponent类型为SURFACE("surface")或TEXTURE时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

rect

[SurfaceRect](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#surfacerect12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

是

XComponent持有Surface的显示区域。

说明

rect参数中的offsetX/offsetY不设置时，Surface显示区域相对于XComponent左上角x/y轴的偏移效果默认按照居中显示。

rect参数中的surfaceWidth和surfaceHeight存在0或负数时，调用该接口设置显示区域不生效。

该方法优先级高于[border](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-border-V5#border)、[padding](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-size-V5#padding)等可以改变内容偏移和大小的属性。

### getXComponentSurfaceRect12+

getXComponentSurfaceRect(): SurfaceRect

获取XComponent持有Surface的显示区域，仅XComponent类型为SURFACE("surface")或TEXTURE时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**返回值:**

### onSurfaceCreated12+

onSurfaceCreated(surfaceId: string): void

当XComponent持有的Surface创建后进行该回调，仅XComponent类型为SURFACE("surface")或TEXTURE时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

surfaceId

string

是

回调该方法的时候，绑定XComponent持有Surface的ID。

说明

仅当XComponent组件未设置libraryname参数时，会进行该回调。

### onSurfaceChanged12+

onSurfaceChanged(surfaceId: string, rect: SurfaceRect): void

当XComponent持有的Surface大小改变后（包括首次创建时的大小改变）进行该回调，仅XComponent类型为SURFACE("surface")或TEXTURE时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

surfaceId

string

是

回调该方法的时候，绑定XComponent持有Surface的ID。

rect

[SurfaceRect](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#surfacerect12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

是

回调该方法的时候，绑定XComponent持有Surface的显示区域。

说明

仅当XComponent组件未设置libraryname参数时，会进行该回调。

### onSurfaceDestroyed12+

onSurfaceDestroyed(surfaceId: string): void

当XComponent持有的Surface销毁后进行该回调，仅XComponent类型为SURFACE("surface")或TEXTURE时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

surfaceId

string

是

回调该方法的时候，绑定XComponent持有Surface的ID。

说明

仅当XComponent组件未设置libraryname参数时，会进行该回调。

### startImageAnalyzer12+

startImageAnalyzer(config: ImageAnalyzerConfig): Promise<void\>

配置AI分析并启动AI分析功能，使用前需先[使能](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-xcomponent-V5#enableanalyzer12)图像AI分析能力。

该方法调用时，将截取调用时刻的画面帧进行分析，使用时需注意启动分析的时机，避免出现画面和分析内容不一致的情况。

若该方法尚未执行完毕，此时重复调用，则会触发错误回调。

说明

分析类型不支持动态修改。

该特性依赖设备能力，不支持该能力的情况下，将返回错误码。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

**返回值：**

类型

说明

Promise<void\>

Promise对象，用于获取AI分析是否成功执行。

**错误码：**

以下错误码的详细介绍请参见[AI分析类库错误码](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/errorcode-image-analyzer-V5)。

错误码ID

错误信息

110001

Image analysis feature is unsupported.

110002

Image analysis is currently being executed.

110003

Image analysis is stopped.

### stopImageAnalyzer12+

stopImageAnalyzer(): void

停止AI分析功能，AI分析展示的内容将被销毁。

说明

在startImageAnalyzer方法未返回结果时调用本方法，会触发其错误回调。

该特性依赖设备能力。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### setXComponentSurfaceRotation12+

setXComponentSurfaceRotation(rotationOptions: SurfaceRotationOptions): void

设置XComponent持有Surface在屏幕旋转时是否锁定方向，仅XComponent类型为SURFACE("surface")时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

说明

rotationOptions未配置时，默认XComponent持有Surface在屏幕旋转时不锁定方向，跟随屏幕进行旋转。

仅在屏幕旋转过程中生效，旋转完成后不再锁定Surface。

仅在屏幕旋转90°，即发生横竖屏切换时生效。

锁定旋转后的Buffer宽高需要保持不变，否则会有拉伸问题。

### getXComponentSurfaceRotation12+

getXComponentSurfaceRotation(): Required<SurfaceRotationOptions\>

获取XComponent持有Surface在屏幕旋转时是否锁定方向的设置，仅XComponent类型为SURFACE("surface")时有效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**返回值:**

SurfaceRotationOptions12+对象说明
-----------------------------

用于描述XComponent持有Surface在屏幕旋转时是否锁定方向的设置。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

lock

boolean

否

Surface在屏幕旋转时是否锁定方向，未设置时默认取值为false，即不锁定方向。

SurfaceRect12+对象说明
------------------

用于描述XComponent持有Surface的显示区域。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

offsetX

number

否

Surface显示区域相对于XComponent组件左上角的x轴坐标，单位：px。

offsetY

number

否

Surface显示区域相对于XComponent组件左上角的y轴坐标，单位：px。

surfaceWidth

number

是

Surface显示区域的宽度，单位：px。

surfaceHeight

number

是

Surface显示区域的高度，单位：px。

示例
--

示例效果请以真机运行为准，当前IDE预览器不支持。

### 示例1

图像AI分析功能使用示例。

2.  import { BusinessError } from '@kit.BasicServicesKit';

4.  class CustomXComponentController extends XComponentController {
5.    onSurfaceCreated(surfaceId: string): void {
6.      console.log(\`onSurfaceCreated surfaceId: ${surfaceId}\`)
7.    }

9.    onSurfaceChanged(surfaceId: string, rect: SurfaceRect): void {
10.      console.log(\`onSurfaceChanged surfaceId: ${surfaceId}, rect: ${JSON.stringify(rect)}}\`)
11.    }

13.    onSurfaceDestroyed(surfaceId: string): void {
14.      console.log(\`onSurfaceDestroyed surfaceId: ${surfaceId}\`)
15.    }
16.  }

18.  @Entry
19.  @Component
20.  struct XComponentExample {
21.    xComponentController: XComponentController = new CustomXComponentController()
22.    private config: ImageAnalyzerConfig = {
23.      types: \[ImageAnalyzerType.SUBJECT, ImageAnalyzerType.TEXT\]
24.    }
25.    private aiController: ImageAnalyzerController = new ImageAnalyzerController()
26.    private options: ImageAIOptions = {
27.      types: \[ImageAnalyzerType.SUBJECT, ImageAnalyzerType.TEXT\],
28.      aiController: this.aiController
29.    }
30.    @State xcWidth: string = "320px"
31.    @State xcHeight: string = "480px"

33.    build() {
34.      Column({ space: 5 }) {
35.        Button("change size")
36.          .onClick(() =\> {
37.            this.xcWidth = "640px"
38.            this.xcHeight = "720px"
39.          })
40.        Button('start AI analyze')
41.          .onClick(() =\> {
42.            this.xComponentController.startImageAnalyzer(this.config)
43.              .then(() =\> {
44.                console.log("analysis complete")
45.              })
46.              .catch((error: BusinessError) =\> {
47.                console.log("error code: " + error.code)
48.              })
49.          })
50.        Button('stop AI analyze')
51.          .onClick(() =\> {
52.            this.xComponentController.stopImageAnalyzer()
53.          })
54.        Button('get analyzer types')
55.          .onClick(() =\> {
56.            this.aiController.getImageAnalyzerSupportTypes()
57.          })
58.        XComponent({
59.          type: XComponentType.SURFACE,
60.          controller: this.xComponentController,
61.          imageAIOptions: this.options
62.        })
63.          .width(this.xcWidth)
64.          .height(this.xcHeight)
65.      }
66.      .width("100%")
67.    }
68.  }

### 示例2

surface旋转过程中锁定功能使用示例。

2.  @Entry
3.  @Component
4.  struct Index{
5.    @State isLock: boolean = true;
6.    @State xc\_width: number = 500;
7.    @State xc\_height: number = 700;
8.    myXComponentController: XComponentController = new XComponentController();

10.    build() {
11.      Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Start }) {
12.        XComponent({
13.          id: 'xComponentId',
14.          type: XComponentType.SURFACE,
15.          libraryname: 'nativerender',
16.          controller: this.myXComponentController
17.        })
18.        .width(this.xc\_width)
19.        .height(this.xc\_height)
20.        .onLoad(() =\> {
21.          let surfaceRotation: SurfaceRotationOptions = { lock: this.isLock };
22.          this.myXComponentController.setXComponentSurfaceRotation(surfaceRotation);
23.          console.log("Surface getXComponentSurfaceRotation lock = " +
24.            this.myXComponentController.getXComponentSurfaceRotation().lock);
25.        })
26.      }
27.      .width('100%')
28.      .height('100%')
29.    }
30.  }
