Title: Scroll-滚动与滑动-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5

Markdown Content:
可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动。

说明

*   该组件从API version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。
*   该组件嵌套List子组件滚动时，若List不设置宽高，则默认全部加载，在对性能有要求的场景下建议指定List的宽高。
*   该组件滚动的前提是主轴方向大小小于内容大小。
*   Scroll组件[通用属性clip](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-sharp-clipping-V5)的默认值为true。

接口
--

Scroll(scroller?: Scroller)

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

scroller

[Scroller](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scroller)

否

可滚动组件的控制器。用于与可滚动组件进行绑定。

### scrollable

scrollable(value: ScrollDirection)

设置滚动方向。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### scrollBar

scrollBar(barState: BarState)

设置滚动条状态。如果容器组件无法滚动，则滚动条不显示。如果容器组件的子组件大小为无穷大，则滚动条不支持拖动和伴随滚动。

从API version 10开始，当滚动组件存在圆角时，为避免滚动条被圆角截断，滚动条会自动计算距顶部和底部的避让距离。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

barState

[BarState](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#barstate)

是

滚动条状态。

默认值：BarState.Auto

### scrollBarColor

scrollBarColor(color: Color | number | string)

设置滚动条的颜色。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

color

[Color](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#color) | number | string

是

滚动条的颜色。

默认值：'#182431'（40%不透明度）

### scrollBarWidth

scrollBarWidth(value: number | string)

设置滚动条的宽度，不支持百分比设置。宽度设置后，滚动条正常状态和按压状态宽度均为滚动条的宽度值。如果滚动条的宽度超过Scroll组件主轴方向的高度，则滚动条的宽度会变为默认值。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | string

是

滚动条的宽度。

默认值：4

单位：vp

### scrollSnap10+

scrollSnap(value: ScrollSnapOptions)

设置Scroll组件的限位滚动模式。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### edgeEffect

edgeEffect(edgeEffect: EdgeEffect, options?: EdgeEffectOptions)

设置边缘滑动效果。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

edgeEffect

[EdgeEffect](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#edgeeffect)

是

Scroll组件的边缘滑动效果，支持弹簧效果和阴影效果。

默认值：EdgeEffect.None

options11+

[EdgeEffectOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scrollable-common-V5#edgeeffectoptions11%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

否

组件内容大小小于组件自身时，是否开启滑动效果。设置为{ alwaysEnabled: true }会开启滑动效果，{ alwaysEnabled: false }不开启。

默认值：{ alwaysEnabled: true }

### enableScrollInteraction10+

enableScrollInteraction(value: boolean)

设置是否支持滚动手势，当设置为false时，无法通过手指或者鼠标滚动，但不影响控制器的滚动接口。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

是否支持滚动手势。

默认值：true

### nestedScroll10+

nestedScroll(value: NestedScrollOptions)

设置向前向后两个方向上的嵌套滚动模式，实现与父组件的滚动联动。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[NestedScrollOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scrollable-common-V5#nestedscrolloptions10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

是

嵌套滚动选项。

默认值：{ scrollForward: NestedScrollMode.SELF\_ONLY, scrollBackward: NestedScrollMode.SELF\_ONLY }

### friction10+

friction(value: number | Resource)

设置摩擦系数，手动划动滚动区域时生效，只对惯性滚动过程有影响，对惯性滚动过程中的链式效果有间接影响。设置为小于等于0的值时，按默认值处理

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource)

是

摩擦系数。

默认值：非可穿戴设备为0.6，可穿戴设备为0.9。

从API version 11开始，非可穿戴设备默认值为0.7。

从API version 12开始，非可穿戴设备默认值为0.75。

### enablePaging11+

enablePaging(value: boolean)

设置是否支持划动翻页。如果同时设置了划动翻页enablePaging和限位滚动scrollSnap，则scrollSnap优先生效，enablePaging不生效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

是否支持划动翻页。设置为true支持滑动翻页，false不支持。

默认值：false

### initialOffset12+

initialOffset(value: OffsetOptions)

设置初始滚动偏移量。只在首次布局时生效，后续动态修改该属性值不生效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[OffsetOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#offsetoptions12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

是

当输入的大小为百分比时，初始滚动偏移量为Scroll组件主轴方向大小与百分比数值之积。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

描述

Horizontal

仅支持水平方向滚动。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

Vertical

仅支持竖直方向滚动。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

None

不可滚动。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

Free(deprecated)

支持竖直或水平方向滚动

从API version 9开始废弃。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

snapAlign

[ScrollSnapAlign](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#scrollsnapalign10%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

设置Scroll组件限位滚动时的对齐方式。

**说明：**

1.该属性默认值为ScrollSnapAlign.NONE。

snapPagination

[Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10) | Array<Dimension\>

否

设置Scroll组件限位滚动时的限位点，限位点即为Scroll组件能滑动停靠的偏移量。

**说明：**

1.当属性为Dimension时，表示每页的大小，系统会按照该大小来自动计算每个限位点的位置：如当Dimension为500时，实际的限位点即为\[0,500,1000,1500,...\]。

2.当属性为Array<Dimension\>时，每个Dimension代表限位点的位置。每个Dimension的范围为\[0,可滑动距离\]，0和可滑动距离的底部自动成为限位点。

3.当该属性不填或者Dimension为小于等于0的输入时，按异常值，无限位滚动处理。当该属性值为Array<Dimension\>数组时，数组中的数值必须为单调递增。

4.当输入为百分比时，实际的大小为Scroll组件的视口与百分比数值之积。

enableSnapToStart

boolean

否

在Scroll组件限位滚动模式下，该属性设置为false后，允许Scroll在开头和第一个限位点间自由滑动。

**说明：**

1.该属性值默认为true。

2.该属性仅当snapPagination属性为Array<Dimension\>时生效，不支持Dimension。

enableSnapToEnd

boolean

否

在Scroll组件限位滚动模式下，该属性设置为false后，允许Scroll在最后一个限位点和末尾间自由滑动。

**说明：**

1.该属性值默认为true。

2.该属性仅当snapPagination属性为Array<Dimension\>时生效，不支持Dimension。

### onScrollFrameBegin9+

onScrollFrameBegin(event: (offset: number, state: ScrollState) =\> { offsetRemain: number; })

每帧开始滚动时触发，事件参数传入即将发生的滚动量，事件处理函数中可根据应用场景计算实际需要的滚动量并作为事件处理函数的返回值返回，Scroll将按照返回值的实际滚动量进行滚动。

支持offsetRemain为负值。

若通过onScrollFrameBegin事件和scrollBy方法实现容器嵌套滚动，需设置子滚动节点的EdgeEffect为None。如Scroll嵌套List滚动时，List组件的edgeEffect属性需设置为EdgeEffect.None。

触发该事件的条件：

1、滚动组件触发滚动时触发，包括键鼠操作等其他触发滚动的输入设置。

2、调用控制器接口时不触发。

3、越界回弹不触发。

4、拖动滚动条不触发。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

offset

number

是

即将发生的滑动量，单位vp。

state

[ScrollState](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#scrollstate%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

当前滑动状态。

**返回值：**

类型

说明

{ offsetRemain: number }

实际滑动量，单位vp。

### onScroll(deprecated)

onScroll(event: (xOffset: number, yOffset: number) =\> void)

滚动事件回调，返回滚动时水平、竖直方向偏移量，单位vp。

触发该事件的条件 ：

1、滚动组件触发滚动时触发，支持键鼠操作等其他触发滚动的输入设置。

2、通过滚动控制器API接口调用。

3、越界回弹。

从API version12开始废弃不再使用，推荐使用[onWillScroll](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#onwillscroll12)事件替代。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

xOffset

number

是

每帧滚动时水平方向的偏移量，Scroll的内容向左滚动时偏移量为正，向右滚动时偏移量为负。

单位vp。

yOffset

number

是

每帧滚动时竖直方向的偏移量，Scroll的内容向上滚动时偏移量为正，向下滚动时偏移量为负。

单位vp。

### onWillScroll12+

onWillScroll(handler: ScrollOnWillScrollCallback)

滚动事件回调，Scroll滚动前触发。

回调当前帧将要滚动的偏移量和当前滚动状态和滚动操作来源，其中回调的偏移量为计算得到的将要滚动的偏移量值，并非最终实际滚动偏移。可以通过该回调返回值指定Scroll将要滚动的偏移。

触发该事件的条件 ：

1、滚动组件触发滚动时触发，支持键鼠操作等其他触发滚动的输入设置。

2、通过滚动控制器API接口调用。

3、越界回弹。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### onDidScroll12+

onDidScroll(handler: ScrollOnScrollCallback)

滚动事件回调，Scroll滚动时触发。

返回当前帧滚动的偏移量和当前滚动状态。

触发该事件的条件 ：

1、滚动组件触发滚动时触发，支持键鼠操作等其他触发滚动的输入设置。

2、通过滚动控制器API接口调用。

3、越界回弹。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### onScrollEdge

onScrollEdge(event: (side: Edge) =\> void)

滚动到边缘事件回调。

触发该事件的条件 ：

1、滚动组件滚动到边缘时触发，支持键鼠操作等其他触发滚动的输入设置。

2、通过滚动控制器API接口调用。

3、越界回弹。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

side

[Edge](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#edge)

是

滚动到的边缘位置。

### onScrollEnd(deprecated)

onScrollEnd(event: () =\> void)

滚动停止事件回调。

触发该事件的条件 ：

1、滚动组件触发滚动后停止，支持键鼠操作等其他触发滚动的输入设置。

2、通过滚动控制器API接口调用后停止，带过渡动效。

该事件从API version 9开始废弃，使用onScrollStop事件替代。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onScrollStart9+

onScrollStart(event: () =\> void)

滚动开始时触发。手指拖动Scroll或拖动Scroll的滚动条触发的滚动开始时，会触发该事件。使用[Scroller](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scroller)滚动控制器触发的带动画的滚动，动画开始时会触发该事件。

触发该事件的条件 ：

1、滚动组件开始滚动时触发，支持键鼠操作等其他触发滚动的输入设置。

2、通过滚动控制器API接口调用后开始，带过渡动效。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onScrollStop9+

onScrollStop(event: () =\> void)

滚动停止时触发。手拖动Scroll或拖动Scroll的滚动条触发的滚动，手离开屏幕并且滚动停止时会触发该事件。使用[Scroller](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scroller)滚动控制器触发的带动画的滚动，动画停止时会触发该事件。

触发该事件的条件 ：

1、滚动组件触发滚动后停止，支持键鼠操作等其他触发滚动的输入设置。

2、通过滚动控制器API接口调用后开始，带过渡动效。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

type ScrollOnScrollCallback = (xOffset: number, yOffset: number, scrollState: ScrollState) =\> void

Scroll滚动时触发的回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

参数名

类型

必填

说明

xOffset

number

是

每帧滚动时水平方向的偏移量，Scroll中的内容向左滚动时偏移量为正，向右滚动时偏移量为负。

单位vp。

yOffset

number

是

每帧滚动时竖直方向的偏移量，Scroll中的内容向上滚动时偏移量为正，向下滚动时偏移量为负。

单位vp。

scrollState

[ScrollState](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#scrollstate%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

当前滚动状态。

说明

若通过onScrollFrameBegin事件和scrollBy方法实现容器嵌套滚动，需设置子滚动节点的EdgeEffect为None。如Scroll嵌套List滚动时，List组件的edgeEffect属性需设置为EdgeEffect.None。

type ScrollOnWillScrollCallback = (xOffset: number, yOffset: number, scrollState: ScrollState, scrollSource: ScrollSource) =\> void | OffsetResult

Scroll滚动前触发的回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

参数名

类型

必填

说明

xOffset

number

是

每帧滚动时水平方向的偏移量，Scroll中的内容向左滚动时偏移量为正，向右滚动时偏移量为负。

单位vp。

yOffset

number

是

每帧滚动时竖直方向的偏移量，Scroll中的内容向上滚动时偏移量为正，向下滚动时偏移量为负。

单位vp。

scrollState

[ScrollState](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#scrollstate%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

当前滚动状态。

scrollSource

[ScrollSource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#scrollsource12%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

当前滚动操作的来源。

**返回值：**

类型

说明

void | [OffsetResult](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#offsetresult11)

返回OffsetResult时按照开发者指定的偏移量滚动；不返回时按回调参数(xOffset，yOffset)滚动。

可滚动容器组件的控制器，可以将此组件绑定至容器组件，然后通过它控制容器组件的滚动，同一个控制器不可以控制多个容器组件，目前支持绑定到List、Scroll、ScrollBar、Grid、WaterFlow上。

### 导入对象

1.  scroller: Scroller = new Scroller()

### constructor

constructor()

Scroller的构造函数。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### scrollTo

scrollTo(value: { xOffset: number | string, yOffset: number | string, animation?: ScrollAnimationOptions | boolean })

滑动到指定位置。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

xOffset

number | string

是

水平滑动偏移。

**说明：**

该参数值不支持设置百分比。

当值小于0时，不带动画的滚动，按0处理。带动画的滚动，默认滚动到起始位置后停止，可通过设置animation参数，使滚动在越界时启动回弹动画。

仅滚动轴为x轴时生效。

yOffset

number | string

是

垂直滑动偏移。

**说明：**

该参数值不支持设置百分比。

当值小于0时，不带动画的滚动，按0处理。带动画的滚动，默认滚动到起始位置后停止，可通过设置animation参数，使滚动在越界时启动回弹动画。

仅滚动轴为y轴时生效。

animation

[ScrollAnimationOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scrollanimationoptions12)12+ | boolean10+

否

动画配置。

\- ScrollAnimationOptions: 自定义滚动动效。

\- boolean: 使能默认弹簧动效。

默认值：

ScrollAnimationOptions: { duration: 1000, curve: Curve.Ease, canOverScroll: false }

boolean: false

**说明：**

当前List、Scroll、Grid、WaterFlow均支持boolean类型和ICurve曲线。

于API12将原来的 {duration?: number, curve?: [Curve](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#curve) | [ICurve](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-curve-V5#icurve)10+ } 抽象为了ScrollAnimationOptions接口，并在其中添加了一个参数canOverScroll。

### scrollEdge

scrollEdge(value: Edge, options?: ScrollEdgeOptions)

滚动到容器边缘，不区分滚动轴方向，Edge.Top和Edge.Start表现相同，Edge.Bottom和Edge.End表现相同。

Scroll组件默认有动画，Grid、List、WaterFlow组件默认无动画。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Edge](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#edge)

是

滚动到的边缘位置。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

options12+

[ScrollEdgeOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scrolledgeoptions12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

否

设置滚动到边缘位置的模式。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

### fling12+

fling(velocity: number): void

滚动类组件开启按传入的初始速度进行惯性滚动。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

velocity

number

是

惯性滚动的初始速度值。单位：vp/s

**说明：**

velocity值设置为0，视为异常值，本次滚动不生效。如果值为正数，则向下滚动；如果值为负数，则向上滚动。

**错误码**：

以下错误码详细介绍请参考[通用错误码](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/errorcode-universal-V5)。

错误码ID

错误信息

401

Parameter error. Possible causes: 1. Mandatory parameters are left unspecified; 2.Incorrect parameters types; 3. Parameter verification failed.

100004

Controller not bound to component.

### scrollPage9+

scrollPage(value: { next: boolean }): void

滚动到下一页或者上一页。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

next

boolean

是

是否向下翻页。true表示向下翻页，false表示向上翻页。

### scrollPage(deprecated)

scrollPage(value: { next: boolean, direction?: Axis })

滚动到下一页或者上一页。从API version 9开始, 该接口不再维护，推荐使用[scrollPage9+](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scrollpage9)。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

next

boolean

是

是否向下翻页。true表示向下翻页，false表示向上翻页。

direction

[Axis](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#axis)

否

设置滚动方向为水平或竖直方向。

### currentOffset

currentOffset(): OffsetResult

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

类型

描述

[OffsetResult11+](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#offsetresult11)

返回当前的滚动偏移量。

**说明：**

当scroller控制器未绑定容器组件或者容器组件被异常释放时，currentOffset的返回值为空。

### scrollToIndex

scrollToIndex(value: number, smooth?: boolean, align?: ScrollAlign, options?: ScrollToIndexOptions)

滑动到指定Index，支持设置滑动额外偏移量。

开启smooth动效时，会对经过的所有item进行加载和布局计算，当大量加载item时会导致性能问题。

说明

仅支持Grid、List、WaterFlow组件。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number

是

要滑动到的目标元素在当前容器中的索引值。

**说明：**

value值设置成负值或者大于当前容器子组件的最大索引值，视为异常值，本次跳转不生效。

smooth

boolean

否

设置滑动到列表项在列表中的索引值时是否有动效，true表示有动效，false表示没有动效。

默认值：false。

align

[ScrollAlign](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scrollalign10%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

否

指定滑动到的元素与当前容器的对齐方式。

List中的默认值为：ScrollAlign.START。Grid中默认值为：ScrollAlign.AUTO。WaterFlow中的默认值为：ScrollAlign.START。

**说明：**

仅List、Grid、WaterFlow组件支持该参数。

options12+

[ScrollToIndexOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scrolltoindexoptions12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

否

设置滑动到指定Index的选项，如额外偏移量。

默认值：0，单位：vp。

### scrollBy9+

scrollBy(dx: Length, dy: Length)

滑动指定距离。

说明

支持Scroll、List、Grid、WaterFlow组件。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

dx

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

水平方向滚动距离，不支持百分比形式。

dy

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

竖直方向滚动距离，不支持百分比形式。

### isAtEnd10+

isAtEnd(): boolean

查询组件是否滚动到底部。

说明

支持Scroll、List、Grid、WaterFlow组件。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**返回值**

类型

描述

boolean

true表示组件已经滚动到底部，false表示组件还没滚动到底部。

### getItemRect11+

getItemRect(index: number): RectResult

获取子组件的大小及相对容器组件的位置。

说明

支持Scroll、List、Grid、WaterFlow组件。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

index

number

是

子组件的索引值。

说明

*   index必须是当前显示区域显示的子组件的索引值，否则视为非法值。
*   非法值返回的大小和位置均为0。

**返回值：**

**错误码**：

以下错误码详细介绍请参考[通用错误码](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/errorcode-universal-V5)。

错误码ID

错误信息

401

Parameter error. Possible causes: 1. Mandatory parameters are left unspecified; 2.Incorrect parameters types; 3. Parameter verification failed.

100004

Controller not bound to component.

OffsetResult11+
---------------

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

只读

可选

说明

xOffset

number

否

否

水平滑动偏移。

返回值单位为vp。

yOffset

number

否

否

竖直滑动偏移。

返回值单位为vp。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

duration

number

否

设置滚动时长。

默认值：1000。

**说明：**

设置为小于0的值时，按默认值显示。

curve

[Curve](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#curve) | [ICurve](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-curve-V5#icurve9)9+

否

设置滚动曲线。

默认值：Curve.Ease。

canOverScroll

boolean

否

设置滚动是否可越界。

默认值：false。

**说明：**

仅在设置为true，且组件的edgeEffect设置为[EdgeEffect.Spring](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#edgeeffect)时，滚动能够越界，并在越界时启动回弹动画。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

描述

START

首部对齐。指定item首部与List首部对齐。

CENTER

居中对齐。指定item主轴方向居中对齐于List。

END

尾部对齐。指定item尾部与List尾部对齐。

AUTO

自动对齐。

若指定item完全处于显示区，不做调整。否则依照滑动距离最短的原则，将指定item首部对齐或尾部对齐于List,使指定item完全处于显示区。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

OffsetOptions12+对象说明
--------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

velocity

number

否

设置滚动到容器边缘的固定速度。如果设置小于等于0的值，参数不生效。

默认值：0

单位： vp/s

示例
--

### 示例1

2.  import { curves } from '@kit.ArkUI'

4.  @Entry
5.  @Component
6.  struct ScrollExample {
7.    scroller: Scroller = new Scroller()
8.    private arr: number\[\] = \[0, 1, 2, 3, 4, 5, 6, 7, 8, 9\]

10.    build() {
11.      Stack({ alignContent: Alignment.TopStart }) {
12.        Scroll(this.scroller) {
13.          Column() {
14.            ForEach(this.arr, (item: number) =\> {
15.              Text(item.toString())
16.                .width('90%')
17.                .height(150)
18.                .backgroundColor(0xFFFFFF)
19.                .borderRadius(15)
20.                .fontSize(16)
21.                .textAlign(TextAlign.Center)
22.                .margin({ top: 10 })
23.            }, (item: string) =\> item)
24.          }.width('100%')
25.        }
26.        .scrollable(ScrollDirection.Vertical) 
27.        .scrollBar(BarState.On) 
28.        .scrollBarColor(Color.Gray) 
29.        .scrollBarWidth(10) 
30.        .friction(0.6)
31.        .edgeEffect(EdgeEffect.None)
32.        .onWillScroll((xOffset: number, yOffset: number, scrollState: ScrollState) =\> {
33.          console.info(xOffset + ' ' + yOffset)
34.        })
35.        .onScrollEdge((side: Edge) =\> {
36.          console.info('To the edge')
37.        })
38.        .onScrollStop(() =\> {
39.          console.info('Scroll Stop')
40.        })

42.        Button('scroll 150')
43.          .height('5%')
44.          .onClick(() =\> { 
45.            this.scroller.scrollBy(0, 150)
46.          })
47.          .margin({ top: 10, left: 20 })
48.        Button('scroll 100')
49.          .height('5%')
50.          .onClick(() =\> { 
51.            const yOffset: number = this.scroller.currentOffset().yOffset;
52.            this.scroller.scrollTo({ xOffset: 0, yOffset: yOffset + 100 })
53.          })
54.          .margin({ top: 60, left: 20 })
55.        Button('scroll 100')
56.          .height('5%')
57.          .onClick(() =\> { 
58.            let curve = curves.interpolatingSpring(10, 1, 228, 30) 
59.            const yOffset: number = this.scroller.currentOffset().yOffset;
60.            this.scroller.scrollTo({ xOffset: 0, yOffset: yOffset + 100, animation: { duration: 1000, curve: curve } })
61.          })
62.          .margin({ top: 110, left: 20 })
63.        Button('back top')
64.          .height('5%')
65.          .onClick(() =\> { 
66.            this.scroller.scrollEdge(Edge.Top)
67.          })
68.          .margin({ top: 160, left: 20 })
69.        Button('next page')
70.          .height('5%')
71.          .onClick(() =\> { 
72.            this.scroller.scrollPage({ next: true })
73.          })
74.          .margin({ top: 210, left: 20 })
75.      }.width('100%').height('100%').backgroundColor(0xDCDCDC)
76.    }
77.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114412.42927544983888817959066975985181:50001231000000:2800:0D4CF3E18608B1810989C6B942472239A7F6FF8E4F1594C011237AD71771D94B.gif?needInitFileName=true?needInitFileName=true)

### 示例2

1.  import { LengthMetrics } from '@kit.ArkUI'

3.  @Entry
4.  @Component
5.  struct NestedScroll {
6.    @State listPosition: number = 0; 
7.    private arr: number\[\] = \[1, 2, 3, 4, 5, 6, 7, 8, 9, 10\]
8.    private scrollerForScroll: Scroller = new Scroller()
9.    private scrollerForList: Scroller = new Scroller()

11.    build() {
12.      Flex() {
13.        Scroll(this.scrollerForScroll) {
14.          Column() {
15.            Text("Scroll Area")
16.              .width("100%")
17.              .height("40%")
18.              .backgroundColor(0X330000FF)
19.              .fontSize(16)
20.              .textAlign(TextAlign.Center)
21.              .onClick(() =\> {
22.                this.scrollerForList.scrollToIndex(5, false, ScrollAlign.START, { extraOffset: LengthMetrics.vp(5) })
23.              })

25.            List({ space: 20, scroller: this.scrollerForList }) {
26.              ForEach(this.arr, (item: number) =\> {
27.                ListItem() {
28.                  Text("ListItem" + item)
29.                    .width("100%")
30.                    .height("100%")
31.                    .borderRadius(15)
32.                    .fontSize(16)
33.                    .textAlign(TextAlign.Center)
34.                    .backgroundColor(Color.White)
35.                }.width("100%").height(100)
36.              }, (item: string) =\> item)
37.            }
38.            .width("100%")
39.            .height("50%")
40.            .edgeEffect(EdgeEffect.None)
41.            .friction(0.6)
42.            .onReachStart(() =\> {
43.              this.listPosition = 0
44.            })
45.            .onReachEnd(() =\> {
46.              this.listPosition = 2
47.            })
48.            .onScrollFrameBegin((offset: number) =\> {
49.              if ((this.listPosition == 0 && offset <\= 0) || (this.listPosition == 2 && offset \>\= 0)) {
50.                this.scrollerForScroll.scrollBy(0, offset)
51.                return { offsetRemain: 0 }
52.              }
53.              this.listPosition = 1
54.              return { offsetRemain: offset };
55.            })

57.            Text("Scroll Area")
58.              .width("100%")
59.              .height("40%")
60.              .backgroundColor(0X330000FF)
61.              .fontSize(16)
62.              .textAlign(TextAlign.Center)
63.          }
64.        }
65.        .width("100%").height("100%")
66.      }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding(20)
67.    }
68.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114412.73599501793776325164958631259343:50001231000000:2800:CDF921F6D2497790A1FF6E6300CECCA2D4999F48A503115D30A1B6E1A95FAAEC.gif?needInitFileName=true?needInitFileName=true)

### 示例3

1.  @Entry
2.  @Component
3.  struct StickyNestedScroll {
4.    @State arr: number\[\] = \[\]

6.    @Styles
7.    listCard() {
8.      .backgroundColor(Color.White)
9.      .height(72)
10.      .width("100%")
11.      .borderRadius(12)
12.    }

14.    build() {
15.      Scroll() {
16.        Column() {
17.          Text("Scroll Area")
18.            .width("100%")
19.            .height("40%")
20.            .backgroundColor('#0080DC')
21.            .textAlign(TextAlign.Center)
22.          Tabs({ barPosition: BarPosition.Start }) {
23.            TabContent() {
24.              List({ space: 10 }) {
25.                ForEach(this.arr, (item: number) =\> {
26.                  ListItem() {
27.                    Text("item" + item)
28.                      .fontSize(16)
29.                  }.listCard()
30.                }, (item: string) =\> item)
31.              }.width("100%")
32.              .edgeEffect(EdgeEffect.Spring)
33.              .nestedScroll({
34.                scrollForward: NestedScrollMode.PARENT\_FIRST,
35.                scrollBackward: NestedScrollMode.SELF\_FIRST
36.              })
37.            }.tabBar("Tab1")

39.            TabContent() {
40.            }.tabBar("Tab2")
41.          }
42.          .vertical(false)
43.          .height("100%")
44.        }.width("100%")
45.      }
46.      .edgeEffect(EdgeEffect.Spring)
47.      .friction(0.6)
48.      .backgroundColor('#DCDCDC')
49.      .scrollBar(BarState.Off)
50.      .width('100%')
51.      .height('100%')
52.    }

54.    aboutToAppear() {
55.      for (let i = 0; i < 30; i++) {
56.        this.arr.push(i)
57.      }
58.    }
59.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114412.23857125386571574699025598259252:50001231000000:2800:F9703E46B2E71F23C7A8B9F56565A07CCA5E376FB5FE9AEA27D7834B7840EC07.gif?needInitFileName=true?needInitFileName=true)

### 示例4

1.  @Entry
2.  @Component
3.  struct Index {
4.    scroller: Scroller = new Scroller;
5.    private arr: number\[\] = \[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\]
6.    build() {
7.      Scroll(this.scroller) {
8.        Column() {
9.          ForEach(this.arr, (item: number) =\> {
10.            Text(item.toString())
11.              .width('90%')
12.              .height(200)
13.              .backgroundColor(0xFFFFFF)
14.              .borderWidth(1)
15.              .borderColor(Color.Black)
16.              .borderRadius(15)
17.              .fontSize(16)
18.              .textAlign(TextAlign.Center)
19.          }, (item: string) =\> item)
20.        }.width('100%').backgroundColor(0xDCDCDC)
21.      }
22.      .backgroundColor(Color.Yellow)
23.      .height('100%')
24.      .edgeEffect(EdgeEffect.Spring)
25.      .scrollSnap({snapAlign:ScrollSnapAlign.START, snapPagination:400, enableSnapToStart:true, enableSnapToEnd:true})
26.    }
27.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114412.83102779081717172615623630271862:50001231000000:2800:67ADED38E319A6AC071DC68310C36976D8D28A813B12138DD91C17163BD21D1F.gif?needInitFileName=true?needInitFileName=true)

### 示例5

1.  @Entry
2.  @Component

4.  struct ListExample {
5.    private arr: number\[\] = \[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\]
6.    scrollerForList: Scroller = new Scroller()
7.    build() {
8.      Column() {
9.        Button('Fling-1000')
10.          .height('5%')
11.          .onClick(() =\> {
12.            this.scrollerForList.fling(-1000)
13.          })
14.        Button('Fling3000')
15.          .height('5%')
16.          .onClick(() =\> {
17.            this.scrollerForList.fling(3000)
18.          })
19.        List({ space: 20, initialIndex: 0, scroller: this.scrollerForList }) {
20.          ForEach(this.arr, (item: number) =\> {
21.            ListItem() {
22.              Text('' + item)
23.                .width('100%').height(100).fontSize(16)
24.                .textAlign(TextAlign.Center).borderRadius(10).backgroundColor(0xFFFFFF)
25.            }
26.          }, (item: string) =\> item)
27.        }
28.        .listDirection(Axis.Vertical) 
29.        .scrollBar(BarState.Off)
30.        .friction(0.9)
31.        .divider({ strokeWidth: 2, color: 0xFFFFFF, startMargin: 20, endMargin: 20 }) 
32.        .edgeEffect(EdgeEffect.Spring) 
33.        .width('90%')
34.      }
35.      .width('100%')
36.      .height('100%')
37.      .backgroundColor(0xDCDCDC)
38.      .padding({ top: 5 })
39.    }
40.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114412.73711300777755184663845570034568:50001231000000:2800:6D6EEB0242139A265B8D2D81FF63D7787DB5C32A58ABF98F0059D858EAE5A9A3.gif?needInitFileName=true?needInitFileName=true)

### 示例6

该示例实现了按速度700vp/s向Scroll下边缘滚动。

2.  @Entry
3.  @Component
4.  struct ScrollExample {
5.    scroller: Scroller = new Scroller()
6.    private arr: number\[\] = \[0, 1, 2, 3, 4, 5, 6, 7, 8, 9\]

8.    build() {
9.      Stack({ alignContent: Alignment.TopStart }) {
10.        Scroll(this.scroller) {
11.          Column() {
12.            ForEach(this.arr, (item: number) =\> {
13.              Text(item.toString())
14.                .width('90%')
15.                .height(150)
16.                .backgroundColor(0xFFFFFF)
17.                .borderRadius(15)
18.                .fontSize(16)
19.                .textAlign(TextAlign.Center)
20.                .margin({ top: 10 })
21.            }, (item: string) =\> item)
22.          }.width('100%')
23.        }
24.        .scrollable(ScrollDirection.Vertical) 
25.        .scrollBar(BarState.On) 
26.        .scrollBarColor(Color.Gray) 
27.        .scrollBarWidth(10) 
28.        .friction(0.6)
29.        .edgeEffect(EdgeEffect.None)
30.        .onWillScroll((xOffset: number, yOffset: number, scrollState: ScrollState) =\> {
31.          console.info(xOffset + ' ' + yOffset)
32.        })
33.        .onScrollEdge((side: Edge) =\> {
34.          console.info('To the edge')
35.        })
36.        .onScrollStop(() =\> {
37.          console.info('Scroll Stop')
38.        })

40.        Button('scroll to bottom 700')
41.          .height('5%')
42.          .onClick(() =\> { 
43.            this.scroller.scrollEdge(Edge.Bottom, { velocity: 700 })
44.          })
45.          .margin({ top: 100, left: 20 })
46.      }.width('100%').height('100%').backgroundColor(0xDCDCDC)
47.    }
48.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114412.82665495045522754721713691080460:50001231000000:2800:76E1AD6A3586B507E8975C6E4749C6F0E449F29E3E6C3D60D771489F815F76D6.gif?needInitFileName=true?needInitFileName=true)
