/*\n实现一个多步骤导航组件，支持步骤状态切换、步骤间导航、以及步骤完成和跳过事件的处理。\n每个步骤页包含一个标题和按钮，按钮用于切换当前步骤的状态。\n步骤页之间可以通过“上一步”和“下一步”按钮进行导航。\n*/\n\n@Entry\n@Component\nstruct StepperExample {\n  @State currentIndex: number = 0 // 当前步骤索引，初始为0\n  @State firstState: ItemState = ItemState.Normal // 第一个步骤的状态，初始为Normal\n  @State secondState: ItemState = ItemState.Normal // 第二个步骤的状态，初始为Normal\n  @State thirdState: ItemState = ItemState.Normal // 第三个步骤的状态，初始为Normal\n\n  build() {\n    Stepper({\n      index: this.currentIndex // 设置当前步骤索引\n    }) {\n      // 第一个步骤页\n      StepperItem() {\n        Column() {\n          Text('Page One')\n            .itemTextStyle() // 应用itemTextStyle样式\n          Button('change status:' + this.firstState)\n            .backgroundColor('#007dFF') // 设置背景颜色为蓝色\n            .onClick(() => {\n              this.firstState = this.firstState === ItemState.Skip ? ItemState.Normal : ItemState.Skip // 切换第一个步骤的状态\n            })\n        }.itemStyle() // 应用itemStyle样式\n      }\n      .nextLabel('Next') // 设置下一步按钮文本\n      .status(this.firstState) // 设置步骤状态\n\n      // 第二个步骤页\n      StepperItem() {\n        Column() {\n          Text('Page Two')\n            .itemTextStyle() // 应用itemTextStyle样式\n          Button('change status:' + this.secondState)\n            .backgroundColor('#007dFF') // 设置背景颜色为蓝色\n            .onClick(() => {\n              this.secondState = this.secondState === ItemState.Disabled ? ItemState.Normal : ItemState.Disabled // 切换第二个步骤的状态\n            })\n        }.itemStyle() // 应用itemStyle样式\n      }\n      .nextLabel('Next') // 设置下一步按钮文本\n      .prevLabel('Previous') // 设置上一步按钮文本\n      .status(this.secondState) // 设置步骤状态\n\n      // 第三个步骤页\n      StepperItem() {\n        Column() {\n          Text('Page Three')\n            .itemTextStyle() // 应用itemTextStyle样式\n          Button('change status:' + this.thirdState)\n            .backgroundColor('#007dFF') // 设置背景颜色为蓝色\n            .onClick(() => {\n              this.thirdState = this.thirdState === ItemState.Waiting ? ItemState.Normal : ItemState.Waiting // 切换第三个步骤的状态\n            })\n        }.itemStyle() // 应用itemStyle样式\n      }\n      .status(this.thirdState) // 设置步骤状态\n\n      // 第四个步骤页\n      StepperItem() {\n        Column() {\n          Text('Page Four')\n            .itemTextStyle() // 应用itemTextStyle样式\n        }.itemStyle() // 应用itemStyle样式\n      }\n    }\n    .backgroundColor('#F1F3F5') // 设置背景颜色为灰色\n    .onFinish(() => {\n      // 处理点击最后一页的Finish时的逻辑\n      console.info('onFinish')\n    })\n    .onSkip(() => {\n      // 处理点击跳过时的逻辑\n      console.info('onSkip')\n    })\n    .onChange((prevIndex?: number, index?: number) => {\n      if(index){\n        this.currentIndex = index // 更新当前步骤索引\n      }\n    })\n  }\n}\n\n// 定义步骤页的样式\n@Styles function itemStyle () {\n  .width(336) // 设置宽度\n  .height(621) // 设置高度\n  .margin({ top: 48, left: 12 }) // 设置外边距\n  .borderRadius(24) // 设置圆角\n  .backgroundColor('#FFFFFF') // 设置背景颜色为白色\n}\n\n// 定义文本的样式\n@Extend(Text) function itemTextStyle () {\n  .fontColor('#182431') // 设置字体颜色\n  .fontSize(36) // 设置字体大小\n  .fontWeight(500) // 设置字体粗细\n  .opacity(0.4) // 设置透明度\n  .margin({ top: 82, bottom: 40 }) // 设置外边距\n}