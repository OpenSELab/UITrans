{
    "description": "安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。",
    "details": "该组件从API Version 10开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。",
    "interfaces": [
        {
            "description": "SaveButton()",
            "params": {}
        },
        {
            "description": "SaveButton(option: SaveButtonOptions)",
            "params": {
                "option": {
                    "type": "SaveButtonOptions",
                    "description": "创建包含指定元素的保存按钮。"
                }
            }
        }
    ],
    "attributes": {},
    "events": {
        "onClick": {
            "description": "点击动作触发该回调",
            "params": {
                "event": {
                    "type": "ClickEvent",
                    "description": "见ClickEvent对象说明"
                },
                "result": {
                    "type": "SaveButtonOnClickResult",
                    "description": "存储权限的授权结果，授权时长为10秒，即触发点击后，可以在10秒之内不限制次数的调用特定媒体库接口，超出10秒的调用会鉴权失败。"
                }
            }
        }
    },
    "rules": "为避免控件样式不合法导致授权失败，请开发者先了解安全控件样式的约束与限制。",
    "examples": [
        "// xxx.ets\nimport { photoAccessHelper } from '@kit.MediaLibraryKit';\nimport { fileIo } from '@kit.CoreFileKit';\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      Column({space:10}) {\n        // 默认参数下，图标、文字、背景都存在\n        SaveButton().onClick(async (event:ClickEvent, result:SaveButtonOnClickResult) => {\n          if (result == SaveButtonOnClickResult.SUCCESS) {\n            try {\n              const context = getContext(this);\n              let helper = photoAccessHelper.getPhotoAccessHelper(context);\n              // onClick触发后10秒内通过createAsset接口创建图片文件，10秒后createAsset权限收回。\n              let uri = await helper.createAsset(photoAccessHelper.PhotoType.IMAGE, 'png');\n              // 使用uri打开文件，可以持续写入内容，写入过程不受时间限制\n              let file = await fileIo.open(uri, fileIo.OpenMode.READ_WRITE | fileIo.OpenMode.CREATE);\n              // 写入文件\n              await fileIo.write(file.fd, \"context\");\n              // 关闭文件\n              await fileIo.close(file.fd);\n            } catch (error) {\n              console.error(\"error is \"+ JSON.stringify(error));\n            }\n          }\n        })\n        // 传入参数即表示元素存在，不传入的参数表示元素不存在，如果不传入buttonType，会默认添加ButtonType.Capsule配置，显示图标+背景。\n        SaveButton({icon:SaveIconStyle.FULL_FILLED})\n        // 只显示图标+背景，如果设置背景色高八位的α值低于0x1A，则会被系统强制调整为0xFF\n        SaveButton({icon:SaveIconStyle.FULL_FILLED, buttonType:ButtonType.Capsule})\n          .backgroundColor(0x10007dff)\n        // 图标、文字、背景都存在，如果设置背景色高八位的α值低于0x1A，则会被系统强制调整为0xFF\n        SaveButton({icon:SaveIconStyle.FULL_FILLED, text:SaveDescription.DOWNLOAD, buttonType:ButtonType.Capsule})\n      }.width('100%')\n    }.height('100%')\n  }\n}"
    ],
    "is_common_attrs": false
}