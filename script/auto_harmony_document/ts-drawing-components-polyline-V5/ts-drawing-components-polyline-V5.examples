/*\n实现一个包含两个Polyline组件的示例，展示如何使用Polyline绘制折线图形。第一个Polyline使用蓝色线条绘制，第二个Polyline使用红色线条绘制，并设置了线条的连接和端点样式。\n*/\n\n@Entry\n@Component\nstruct PolylineExample {\n  build() {\n    Column({ space: 10 }) {\n      // 创建一个Polyline组件，设置宽度为100，高度为100\n      Polyline({ width: 100, height: 100 })\n        // 设置折线的点坐标，绘制从(0, 0)到(20, 60)再到(100, 100)的折线\n        .points([[0, 0], [20, 60], [100, 100]])\n        // 设置填充透明度为0，即不填充\n        .fillOpacity(0)\n        // 设置线条颜色为蓝色\n        .stroke(Color.Blue)\n        // 设置线条宽度为3\n        .strokeWidth(3)\n\n      // 创建另一个Polyline组件，默认宽度和高度为0，后续通过属性设置\n      Polyline()\n        // 设置Polyline的宽度为100\n        .width(100)\n        // 设置Polyline的高度为100\n        .height(100)\n        // 设置填充透明度为0，即不填充\n        .fillOpacity(0)\n        // 设置线条颜色为红色\n        .stroke(Color.Red)\n        // 设置线条宽度为8\n        .strokeWidth(8)\n        // 设置折线的点坐标，绘制从(20, 0)到(0, 100)再到(100, 90)的折线\n        .points([[20, 0], [0, 100], [100, 90]])\n        // 设置线条连接处的样式为圆角\n        .strokeLineJoin(LineJoinStyle.Round)\n        // 设置线条端点的样式为圆角\n        .strokeLineCap(LineCapStyle.Round)\n    }\n    // 设置Column的宽度为100%，使其占据父容器的全部宽度\n    .width('100%')\n  }\n}