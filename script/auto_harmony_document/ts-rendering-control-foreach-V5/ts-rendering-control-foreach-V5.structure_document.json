{
    "description": "ForEach接口基于数组类型数据来进行循环渲染，需要与容器组件配合使用，且接口返回的组件应当是允许包含在ForEach父容器组件中的子组件。例如，ListItem组件要求ForEach的父容器组件必须为List组件。",
    "details": "ForEach的itemGenerator函数可以包含if/else条件渲染逻辑。另外，也可以在if/else条件渲染语句中使用ForEach组件。在初始化渲染时，ForEach会加载数据源的所有数据，并为每个数据项创建对应的组件，然后将其挂载到渲染树上。如果数据源非常大或有特定的性能需求，建议使用LazyForEach组件。",
    "interfaces": [
        {
            "description": "ForEach(arr: Array<Object>, itemGenerator: (item: Object, index: number) => void, keyGenerator?: (item: Object, index: number) => string)",
            "params": {
                "arr": {
                    "type": "Array<Object>",
                    "required": true,
                    "description": "数据源，为Array类型的数组。可以设置为空数组，此时不会创建子组件。可以设置返回值为数组类型的函数，例如arr.slice(1, 3)，但设置的函数不应改变包括数组本身在内的任何状态变量，例如不应使用Array.splice(),Array.sort()或Array.reverse()这些会改变原数组的函数。"
                },
                "itemGenerator": {
                    "type": "(item: Object, index: number) => void",
                    "required": true,
                    "description": "组件生成函数。为数组中的每个元素创建对应的组件。item参数：arr数组中的数据项。index参数（可选）：arr数组中的数据项索引。组件的类型必须是ForEach的父容器所允许的。例如，ListItem组件要求ForEach的父容器组件必须为List组件。"
                },
                "keyGenerator": {
                    "type": "(item: Object, index: number) => string",
                    "required": false,
                    "description": "键值生成函数。为数据源arr的每个数组项生成唯一且持久的键值。函数返回值为开发者自定义的键值生成规则。item参数：arr数组中的数据项。index参数（可选）：arr数组中的数据项索引。如果函数缺省，框架默认的键值生成函数为(item: T, index: number) => { return index + '__' + JSON.stringify(item); }。键值生成函数不应改变任何组件状态。"
                }
            }
        }
    ],
    "attributes": {},
    "events": {
        "onMove12+": {
            "description": "onMove(handler: Optional<(from: index, to: index) => void>): T。拖拽排序数据移动回调。只有在List组件中使用，并且ForEach每次迭代都生成一个ListItem组件时才生效拖拽排序。",
            "params": {
                "from": {
                    "type": "number",
                    "required": true,
                    "description": "数据源移动起始索引号。"
                },
                "to": {
                    "type": "number",
                    "required": true,
                    "description": "数据源移动目标索引号。"
                }
            }
        }
    },
    "rules": [
        "ForEach的itemGenerator函数可以包含if/else条件渲染逻辑。",
        "也可以在if/else条件渲染语句中使用ForEach组件。",
        "在初始化渲染时，ForEach会加载数据源的所有数据，并为每个数据项创建对应的组件，然后将其挂载到渲染树上。",
        "如果数据源非常大或有特定的性能需求，建议使用LazyForEach组件。"
    ],
    "examples": null,
    "is_common_attrs": true
}