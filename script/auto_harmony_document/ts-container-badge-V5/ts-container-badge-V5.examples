/*\n实现一个带有徽章的图标组件，并通过按钮控制徽章的显隐效果。具体功能如下：\n- 徽章显示：在图标右上角显示一个徽章，徽章显示的内容为 badgeCount 的值。\n- 按钮控制：通过两个按钮可以控制 badgeCount 的值，当点击 "count 0" 按钮时，徽章隐藏；当点击 "count 1" 按钮时，徽章显示，且徽章内容为 1。\n- 布局：组件采用列布局，内容之间有一定的间隔，并设置了上边距。\n此示例展示了如何通过状态管理来动态控制徽章的显隐，从而实现不同的视觉效果。\n*/\n\n@Entry\n@Component\nstruct Index {\n  // 定义状态变量 badgeCount，用于控制徽章的显示内容\n  @State badgeCount: number = 1\n\n  build() {\n    Column({ space: 40 }) {\n      // 使用 Badge 组件，显示徽章，并设置徽章的位置为右上角\n      Badge({\n        count: this.badgeCount, // 徽章显示的内容\n        style: {}, // 徽章的样式，此处为空\n        position: BadgePosition.RightTop, // 徽章的位置，设置为右上角\n      }) {\n        // 在徽章内部嵌套一个 Image 组件，显示图标\n        Image($r("app.media.icon"))\n          .width(50) // 设置图标的宽度\n          .height(50) // 设置图标的高度\n      }\n      .width(55) // 设置 Badge 组件的宽度\n\n      // 第一个按钮，点击后将 badgeCount 设置为 0，隐藏徽章\n      Button('count 0').onClick(() => {\n        this.badgeCount = 0\n      })\n\n      // 第二个按钮，点击后将 badgeCount 设置为 1，显示徽章\n      Button('count 1').onClick(() => {\n        this.badgeCount = 1\n      })\n    }\n    .margin({top: 20}) // 设置组件的上边距\n  }\n}