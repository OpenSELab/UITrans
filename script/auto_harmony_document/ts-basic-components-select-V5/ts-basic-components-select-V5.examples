/*\n实现一个选择组件示例，包含一个自定义的菜单项内容修饰器和一个按钮构建器，用于创建带有图标和文本的菜单项。\nMyMenuItemContentModifier类用于定义菜单项内容的修饰器，包括文本内容和应用内容的方法。\nMenuItemBuilder函数用于构建菜单项，根据配置信息显示文本、图标或符号图标，并设置点击事件处理逻辑。\nSelectExample结构体作为入口组件，展示了一个选择示例，包含一个选择框和自定义菜单项内容修饰器。\n选择框的值可以通过点击选择项进行更改，同时会触发相应的选择事件并显示选择的索引和文本。\n*/\n\nimport { MenuItemModifier, SymbolGlyphModifier } from '@kit.ArkUI'\n\n// 定义一个自定义的菜单项内容修饰器类，用于设置菜单项的文本内容\nclass MyMenuItemContentModifier implements ContentModifier<MenuItemConfiguration> {\n  modifierText: string = ""\n  constructor(text: string) {\n    this.modifierText = text;\n  }\n  applyContent(): WrappedBuilder<[MenuItemConfiguration]> {\n    return wrapBuilder(MenuItemBuilder)\n  }\n}\n\n// 定义一个构建器函数，用于构建菜单项的内容\n@Builder\nfunction MenuItemBuilder(configuration: MenuItemConfiguration) {\n  Row() {\n    // 显示菜单项的文本内容\n    Text(configuration.value)\n    Blank()\n    // 如果配置了符号图标，则显示符号图标；否则显示普通图标\n    if (configuration.symbolIcon) {\n      SymbolGlyph().attributeModifier(configuration.symbolIcon).fontSize(24)\n    } else if (configuration.icon) {\n      Image(configuration.icon).size({ width: 24, height: 24 })\n    }\n    Blank(30)\n    // 显示自定义修饰器的文本内容\n    Text((configuration.contentModifier as MyMenuItemContentModifier).modifierText)\n    Blank(30)\n    // 绘制一个路径图形\n    Path()\n      .width('100px')\n      .height('150px')\n      .commands('M40 0 L80 100 L0 100 Z')\n      .fillOpacity(0)\n      .stroke(Color.Black)\n      .strokeWidth(3)\n  }\n  .onClick(() => {\n    // 点击菜单项时触发选择事件，并传递选择的索引和文本内容\n    configuration.triggerSelect(configuration.index, configuration.value.valueOf().toString())\n  })\n}\n\n// 定义一个入口组件，展示选择示例\n@Entry\n@Component\nstruct SelectExample {\n  @State text: string = "Content Modifier Select"\n  @State symbolModifier1: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.ohos_trash')).fontColor([Color.Gray]);\n  @State symbolModifier2: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.exposure')).fontColor([Color.Gray]);\n  build() {\n    Column() {\n      Row() {\n        // 创建一个选择组件，包含两个选项，每个选项包含一个图标和一个符号图标\n        Select([{ value: 'item1', icon: $r('app.media.icon'), symbolIcon: this.symbolModifier1 },\n          { value: 'item1', icon: $r('app.media.icon'), symbolIcon: this.symbolModifier2 }])\n          .value(this.text)\n          .onSelect((index:number, text?: string)=>{\n            // 选择事件处理逻辑，记录选择的索引和文本内容\n            console.info('Select index:' + index)\n            console.info('Select text:' + text)\n          })\n          // 应用自定义的菜单项内容修饰器\n          .menuItemContentModifier(new MyMenuItemContentModifier("Content Modifier"))\n\n      }.alignItems(VerticalAlign.Center).height('50%')\n    }\n  }\n}