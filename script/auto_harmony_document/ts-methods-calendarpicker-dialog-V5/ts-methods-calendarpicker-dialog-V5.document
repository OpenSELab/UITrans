Title: 日历选择器弹窗 (CalendarPickerDialog)-全局UI方法-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-methods-calendarpicker-dialog-V5

Markdown Content:
点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。

说明

该组件从API Version 10开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

本模块功能依赖UI的执行上下文，不可在UI上下文不明确的地方使用，参见[UIContext](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-arkui-uicontext-V5#uicontext)说明。

static show(options?: CalendarDialogOptions)

定义日历选择器弹窗并弹出。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

CalendarDialogOptions对象说明
-------------------------

继承自[CalendarOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-calendarpicker-V5#calendaroptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)。

| 名称 | 类型 | 必填 | 描述 |
| --- | --- | --- | --- |
| onAccept | (value: Date) => void | 否 | 点击弹窗中的“确定”按钮时触发该回调。
value：选中的日期值。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

 |
| onCancel | () => void | 否 | 点击弹窗中的“取消”按钮时触发该回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

 |
| onChange | (value: Date) => void | 否 | 选择弹窗中日期使当前选中项改变时触发该回调。

value：选中的日期值。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

 |
| backgroundColor11+ | [ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor) | 否 | 弹窗背板颜色。

默认值：Color.Transparent。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |
| backgroundBlurStyle11+ | [BlurStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-background-V5#blurstyle9) | 否 | 弹窗背板模糊材质。

默认值：BlurStyle.COMPONENT\_ULTRA\_THICK

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |
| acceptButtonStyle12+ | [PickerDialogButtonStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-methods-datepicker-dialog-V5#pickerdialogbuttonstyle12%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E) | 否 | 设置确认按钮显示样式、样式和重要程度、角色、背景色、圆角、文本颜色、字号、字体粗细、字体样式、字体列表、按钮是否默认响应Enter键。

**说明：**

acceptButtonStyle与cancelButtonStyle中最多只能有一个primary字段配置为true，二者primary字段均配置为true时均不生效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |
| cancelButtonStyle12+ | [PickerDialogButtonStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-methods-datepicker-dialog-V5#pickerdialogbuttonstyle12%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E) | 否 | 设置取消按钮显示样式、样式和重要程度、角色、背景色、圆角、文本颜色、字号、字体粗细、字体样式、字体列表、按钮是否默认响应Enter键。

**说明：**

acceptButtonStyle与cancelButtonStyle中最多只能有一个primary字段配置为true，二者primary字段均配置为true时均不生效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |
| onDidAppear12+ | () => void | 否 | 弹窗弹出时的事件回调。

**说明：**

1.正常时序依次为：onWillAppear>>onDidAppear>>(onAccept/onCancel/onChange)>>onWillDisappear>>onDidDisappear。

2.在onDidAppear内设置改变弹窗显示效果的回调事件，二次弹出生效。

3.快速点击弹出，消失弹窗时，存在onWillDisappear在onDidAppear前生效。

4\. 当弹窗入场动效未完成时关闭弹窗，该回调不会触发。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |
| onDidDisappear12+ | () => void | 否 | 弹窗消失时的事件回调。

**说明：**

1.正常时序依次为：onWillAppear>>onDidAppear>>(onAccept/onCancel/onChange)>>onWillDisappear>>onDidDisappear。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |
| onWillAppear12+ | () => void | 否 | 弹窗显示动效前的事件回调。

**说明：**

1.正常时序依次为：onWillAppear>>onDidAppear>>(onAccept/onCancel/onChange)>>onWillDisappear>>onDidDisappear。

2.在onWillAppear内设置改变弹窗显示效果的回调事件，二次弹出生效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |
| onWillDisappear12+ | () => void | 否 | 弹窗退出动效前的事件回调。

**说明：**

1.正常时序依次为：onWillAppear>>onDidAppear>>(onAccept/onCancel/onChange)>>onWillDisappear>>onDidDisappear。

2.快速点击弹出，消失弹窗时，存在onWillDisappear在onDidAppear前生效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |
| shadow12+ | [ShadowOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-image-effect-V5#shadowoptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | [ShadowStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-image-effect-V5#shadowstyle10%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E) | 否 | 设置弹窗背板的阴影。

当设备为2in1时，默认场景下获焦阴影值为ShadowStyle.OUTER\_FLOATING\_MD，失焦为ShadowStyle.OUTER\_FLOATING\_SM

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |

示例
--

### 示例1

CalendarPickerDialog基本使用

2.  @Entry
3.  @Component
4.  struct CalendarPickerDialogExample {
5.    private selectedDate: Date = new Date('2024-04-23')

7.    build() {
8.      Column() {
9.        Button("Show CalendarPicker Dialog")
10.          .margin(20)
11.          .onClick(() => {
12.            console.info("CalendarDialog.show")
13.            CalendarPickerDialog.show({
14.              selected: this.selectedDate,
15.              onAccept: (value) => {
16.                console.info("calendar onAccept:" + JSON.stringify(value))
17.              },
18.              onCancel: () => {
19.                console.info("calendar onCancel")
20.              },
21.              onChange: (value) => {
22.                console.info("calendar onChange:" + JSON.stringify(value))
23.              },
24.              onDidAppear: () => {
25.                console.info("calendar onDidAppear")
26.              },
27.              onDidDisappear: () => {
28.                console.info("calendar onDidDisappear")
29.              },
30.              onWillAppear: () => {
31.                console.info("calendar onWillAppear")
32.              },
33.              onWillDisappear: () => {
34.                console.info("calendar onWillDisappear")
35.              }
36.            })
37.          })
38.      }.width('100%')
39.    }
40.  }

![Image 1](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240821122313.31104193154055072201406603787921:50001231000000:2800:02D5EE88FBD67733F701BCB602D9439C6067810FE7CC7C8F04BDEB6C64714977.gif?needInitFileName=true?needInitFileName=true)

### 示例2

按钮支持自定义样式

2.  @Entry
3.  @Component
4.  struct CalendarPickerDialogExample {
5.    private selectedDate: Date = new Date()
6.    build() {
7.      Column() {
8.        Button("Show CalendarPicker Dialog")
9.          .margin(20)
10.          .onClick(() => {
11.            console.info("CalendarDialog.show")
12.            CalendarPickerDialog.show({
13.              selected: this.selectedDate,
14.              acceptButtonStyle: { type: ButtonType.Normal, style: ButtonStyleMode.NORMAL, role: ButtonRole.NORMAL, fontColor: Color.Red,
15.                fontSize: '26fp', fontWeight: FontWeight.Bolder, fontStyle: FontStyle.Normal, fontFamily: 'sans-serif', backgroundColor:'#80834511',
16.                borderRadius: 20 },
17.              cancelButtonStyle: { type: ButtonType.Normal, style: ButtonStyleMode.NORMAL, role: ButtonRole.NORMAL, fontColor: Color.Blue,
18.                fontSize: '16fp', fontWeight: FontWeight.Normal, fontStyle: FontStyle.Italic, fontFamily: 'sans-serif', backgroundColor:'#50182431',
19.                borderRadius: 10 },
20.              onAccept: (value) => {
21.                console.info("calendar onAccept:" + JSON.stringify(value))
22.              },
23.              onCancel: () => {
24.                console.info("calendar onCancel")
25.              },
26.              onChange: (value) => {
27.                console.info("calendar onChange:" + JSON.stringify(value))
28.              },
29.              onDidAppear: () => {
30.                console.info("calendar onDidAppear")
31.              },
32.              onDidDisappear: () => {
33.                console.info("calendar onDidDisappear")
34.              },
35.              onWillAppear: () => {
36.                console.info("calendar onWillAppear")
37.              },
38.              onWillDisappear: () => {
39.                console.info("calendar onWillDisappear")
40.              }
41.            })
42.          })
43.      }.width('100%')
44.    }
45.  }

![Image 2](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240821122314.80500172296631046141304765976459:50001231000000:2800:75680E901A636AC37428A8F0174C63A289AC0B5FA638513911FC1CF6BC47A094.png?needInitFileName=true?needInitFileName=true)
