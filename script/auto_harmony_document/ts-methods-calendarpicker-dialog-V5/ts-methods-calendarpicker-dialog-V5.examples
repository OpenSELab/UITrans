/*\n实现一个日历选择对话框示例，用户点击按钮后弹出日历选择对话框，用户可以选择日期并确认或取消选择。对话框提供了多种回调事件，用于处理用户交互的不同阶段。\n*/\n\n@Entry\n@Component\nstruct CalendarPickerDialogExample {\n  // 初始化一个默认选择的日期\n  private selectedDate: Date = new Date('2024-04-23')\n\n  build() {\n    Column() {\n      Button("Show CalendarPicker Dialog")\n        .margin(20) // 设置按钮的外边距为20\n        .onClick(() => {\n          // 点击按钮时，显示日历选择对话框\n          console.info("CalendarDialog.show")\n          CalendarPickerDialog.show({\n            selected: this.selectedDate, // 设置默认选择的日期\n            onAccept: (value) => {\n              // 用户确认选择日期时触发\n              console.info("calendar onAccept:" + JSON.stringify(value))\n            },\n            onCancel: () => {\n              // 用户取消选择时触发\n              console.info("calendar onCancel")\n            },\n            onChange: (value) => {\n              // 用户在日历中选择日期时触发\n              console.info("calendar onChange:" + JSON.stringify(value))\n            },\n            onDidAppear: () => {\n              // 对话框完全显示后触发\n              console.info("calendar onDidAppear")\n            },\n            onDidDisappear: () => {\n              // 对话框完全消失后触发\n              console.info("calendar onDidDisappear")\n            },\n            onWillAppear: () => {\n              // 对话框即将显示时触发\n              console.info("calendar onWillAppear")\n            },\n            onWillDisappear: () => {\n              // 对话框即将消失时触发\n              console.info("calendar onWillDisappear")\n            }\n          })\n        })\n    }.width('100%') // 设置列的宽度为100%\n  }\n}


/*\n实现一个日历选择对话框示例，用户点击按钮后弹出日历选择对话框，用户可以选择日期，并根据选择触发相应的事件。对话框中的按钮样式可以自定义，包括字体颜色、大小、背景颜色等。\n*/\n\n@Entry\n@Component\nstruct CalendarPickerDialogExample {\n  // 初始化选中的日期为当前日期\n  private selectedDate: Date = new Date()\n\n  build() {\n    Column() {\n      // 创建一个按钮，点击时显示日历选择对话框\n      Button("Show CalendarPicker Dialog")\n        .margin(20) // 设置按钮的外边距\n        .onClick(() => {\n          console.info("CalendarDialog.show") // 输出日志信息\n          CalendarPickerDialog.show({\n            selected: this.selectedDate, // 设置初始选中的日期\n            acceptButtonStyle: { \n              type: ButtonType.Normal, \n              style: ButtonStyleMode.NORMAL, \n              role: ButtonRole.NORMAL, \n              fontColor: Color.Red, // 设置接受按钮的字体颜色为红色\n              fontSize: '26fp', // 设置接受按钮的字体大小\n              fontWeight: FontWeight.Bolder, // 设置接受按钮的字体加粗\n              fontStyle: FontStyle.Normal, // 设置接受按钮的字体样式为正常\n              fontFamily: 'sans-serif', // 设置接受按钮的字体家族\n              backgroundColor: '#80834511', // 设置接受按钮的背景颜色\n              borderRadius: 20 // 设置接受按钮的边框圆角\n            },\n            cancelButtonStyle: { \n              type: ButtonType.Normal, \n              style: ButtonStyleMode.NORMAL, \n              role: ButtonRole.NORMAL, \n              fontColor: Color.Blue, // 设置取消按钮的字体颜色为蓝色\n              fontSize: '16fp', // 设置取消按钮的字体大小\n              fontWeight: FontWeight.Normal, // 设置取消按钮的字体为正常\n              fontStyle: FontStyle.Italic, // 设置取消按钮的字体样式为斜体\n              fontFamily: 'sans-serif', // 设置取消按钮的字体家族\n              backgroundColor: '#50182431', // 设置取消按钮的背景颜色\n              borderRadius: 10 // 设置取消按钮的边框圆角\n            },\n            onAccept: (value) => {\n              console.info("calendar onAccept:" + JSON.stringify(value)) // 输出接受事件的日志信息\n            },\n            onCancel: () => {\n              console.info("calendar onCancel") // 输出取消事件的日志信息\n            },\n            onChange: (value) => {\n              console.info("calendar onChange:" + JSON.stringify(value)) // 输出日期变化事件的日志信息\n            },\n            onDidAppear: () => {\n              console.info("calendar onDidAppear") // 输出对话框显示后的日志信息\n            },\n            onDidDisappear: () => {\n              console.info("calendar onDidDisappear") // 输出对话框消失后的日志信息\n            },\n            onWillAppear: () => {\n              console.info("calendar onWillAppear") // 输出对话框即将显示的日志信息\n            },\n            onWillDisappear: () => {\n              console.info("calendar onWillDisappear") // 输出对话框即将消失的日志信息\n            }\n          })\n        })\n    }.width('100%') // 设置列的宽度为100%\n  }\n}