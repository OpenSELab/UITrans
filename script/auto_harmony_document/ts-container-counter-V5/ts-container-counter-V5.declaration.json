{
    "description": "计数器组件，提供相应的增加或者减少的计数操作。",
    "details": "该组件从API Version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。",
    "interfaces": [
        {
            "description": "Counter()",
            "params": {}
        }
    ],
    "attributes": {
        "enableInc": {
            "description": "设置增加按钮禁用或使能。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": true,
                    "description": "增加按钮禁用或使能。",
                    "default": true
                }
            }
        },
        "enableDec": {
            "description": "设置减少按钮禁用或使能。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": true,
                    "description": "减少按钮禁用或使能。",
                    "default": true
                }
            }
        }
    },
    "events": {
        "onInc": {
            "description": "监听数值增加事件。",
            "params": {}
        },
        "onDec": {
            "description": "监听数值减少事件。",
            "params": {}
        }
    },
    "examples": [
        {
            "description": "该组件实现了一个简单的计数器应用。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上包含一个计数器显示区域和一个计数器操作区域。计数器显示区域的文本内容为当前计数值，操作区域包含增加和减少计数值的功能。\n\n布局属性：\n- 宽度：占据整个屏幕宽度（100%）。\n- 高度：根据内容自适应。\n- 边距：计数器显示区域有100vp的边距。\n\n组件的样式和外观：\n- 文本内容：显示当前计数值，使用默认字体和颜色。\n- 边距：计数器显示区域有100vp的边距，确保与其他组件有一定的间距。\n\n组件的排列和嵌套关系：\n- 垂直布局：整个组件使用Column布局，确保内容在垂直方向上排列。\n- 嵌套关系：Counter组件嵌套在Column布局中，Counter组件内部包含一个Text组件用于显示计数值。\n\n组件的功能和交互：\n- 点击事件：通过onInc和onDec事件处理函数，实现计数值的增加和减少。\n- 状态管理：使用@State装饰器管理计数值的状态，确保计数值的变化能够实时反映在界面上。",
            "code": "// xxx.ets\n@Entry\n@Component\nstruct CounterExample {\n  @State value: number = 0 // 使用@State装饰器管理计数值的状态，初始值为0\n\n  build() {\n    Column() {\n      Counter() {\n        Text(this.value.toString()) // 显示当前计数值的文本组件\n      }.margin(100) // 设置计数器显示区域的边距为100vp\n      .onInc(() => {\n        this.value++ // 增加计数值的事件处理函数\n      })\n      .onDec(() => {\n        this.value-- // 减少计数值的事件处理函数\n      })\n    }.width(\"100%\") // 设置整个组件的宽度占据整个屏幕宽度\n  }\n}"
        }
    ]
}