[
    {
        "description": "该组件通过Column布局实现了一个展示Resource动画和PixelMap动画的界面。布局宽度占据整个屏幕，高度设为100%，内边距为顶部100vp。组件的垂直方向上被分为两个主要部分：动画展示区域和控制按钮区域。\n\n动画展示区域使用ImageAnimator组件来展示动画，动画的图片资源通过images属性传入，动画的持续时间通过duration属性设置为2000毫秒。动画的状态（如运行、暂停、停止）通过state属性控制，动画的播放方向通过reverse属性控制，动画的重复次数通过iterations属性控制。动画的宽度为340vp，高度为240vp，顶部边距为100vp。\n\n控制按钮区域使用Row布局来排列按钮，按钮之间的间距均匀分布，且对齐方式为居中对齐。按钮的样式包括宽度为100vp，内边距为5vp，外边距为5vp。按钮的功能包括点击事件，用户可以通过点击按钮来控制动画的播放状态（如开始、暂停、停止）和播放方向（如正向、反向）以及重复次数（如一次、无限次）。\n\n整个布局通过Column布局保证动画展示区域和控制按钮区域在垂直方向上有序排列，确保界面整洁美观。",
        "code": "@Entry\n@Component\nstruct ImageAnimatorExample {\n  @State state: AnimationStatus = AnimationStatus.Initial // 动画状态，初始为Initial\n  @State reverse: boolean = false // 动画播放方向，初始为正向\n  @State iterations: number = 1 // 动画重复次数，初始为1次\n\n  build() {\n    Column({ space: 10 }) {\n      ImageAnimator()\n        .images([ // 设置动画的图片资源\n          {\n            src: $r('app.media.img1') // 第一帧图片资源\n          },\n          {\n            src: $r('app.media.img2') // 第二帧图片资源\n          },\n          {\n            src: $r('app.media.img3') // 第三帧图片资源\n          },\n          {\n            src: $r('app.media.img4') // 第四帧图片资源\n          }\n        ])\n        .duration(2000) // 设置动画的持续时间为2000毫秒\n        .state(this.state) // 设置动画的状态\n        .reverse(this.reverse) // 设置动画的播放方向\n        .fillMode(FillMode.None) // 设置动画的填充模式为None\n        .iterations(this.iterations) // 设置动画的重复次数\n        .width(340) // 设置动画的宽度为340vp\n        .height(240) // 设置动画的高度为240vp\n        .margin({ top: 100 }) // 设置动画的顶部边距为100vp\n        .onStart(() => { // 动画开始时的回调\n          console.info('Start')\n        })\n        .onPause(() => { // 动画暂停时的回调\n          console.info('Pause')\n        })\n        .onRepeat(() => { // 动画重复时的回调\n          console.info('Repeat')\n        })\n        .onCancel(() => { // 动画取消时的回调\n          console.info('Cancel')\n        })\n        .onFinish(() => { // 动画结束时的回调\n          console.info('Finish')\n          this.state = AnimationStatus.Stopped // 动画结束后将状态设置为Stopped\n        })\n\n      Row() { // 控制按钮区域\n        Button('start').width(100).padding(5).onClick(() => { // 开始按钮\n          this.state = AnimationStatus.Running // 点击后将动画状态设置为Running\n        }).margin(5)\n        Button('pause').width(100).padding(5).onClick(() => { // 暂停按钮\n          this.state = AnimationStatus.Paused // 点击后将动画状态设置为Paused\n        }).margin(5)\n        Button('stop').width(100).padding(5).onClick(() => { // 停止按钮\n          this.state = AnimationStatus.Stopped // 点击后将动画状态设置为Stopped\n        }).margin(5)\n      }\n\n      Row() { // 控制按钮区域\n        Button('reverse').width(100).padding(5).onClick(() => { // 反向播放按钮\n          this.reverse = !this.reverse // 点击后切换动画的播放方向\n        }).margin(5)\n        Button('once').width(100).padding(5).onClick(() => { // 播放一次按钮\n          this.iterations = 1 // 点击后将动画的重复次数设置为1次\n        }).margin(5)\n        Button('infinite').width(100).padding(5).onClick(() => { // 无限播放按钮\n          this.iterations = -1 // 点击后将动画的重复次数设置为无限次\n        }).margin(5)\n      }\n    }.width('100%').height('100%') // 设置布局的宽度和高度为100%\n  }\n}"
    }
]