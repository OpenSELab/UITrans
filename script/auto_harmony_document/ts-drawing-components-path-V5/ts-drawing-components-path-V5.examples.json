[
    {
        "description": "该组件通过 Column 布局实现了一个展示多种类型路径图形的界面。布局宽度占据整个屏幕，内边距为顶部 5vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组路径图形。每个路径图形组的图形以水平布局方式排列，图形之间的间距均匀分布，且对齐方式为两端对齐。\n路径图形的样式包括宽度、高度、填充颜色、描边颜色、描边宽度等属性，支持不同的样式展示。路径图形组之间通过 Flex 组件进行分隔。路径图形的功能包括展示不同的路径形状，用户可以通过路径命令（commands）定义不同的路径形状。\n整个布局通过 Column 布局保证路径图形在垂直方向上有序排列，确保界面整洁美观。",
        "code": "@Entry\n@Component\nstruct PathExample {\n  build() {\n    Column({ space: 10 }) { // 使用 Column 布局，设置子组件之间的间距为 10vp\n      Text('Straight line') // 显示文本 \"Straight line\"\n        .fontSize(11) // 设置字体大小为 11\n        .fontColor(0xCCCCCC) // 设置字体颜色为浅灰色\n        .width('90%') // 设置文本宽度为父容器的 90%\n\n      Path() // 创建一个路径图形\n        .width('600px') // 设置路径图形的宽度为 600px\n        .height('10px') // 设置路径图形的高度为 10px\n        .commands('M0 0 L600 0') // 设置路径命令，绘制一条从 (0, 0) 到 (600, 0) 的直线\n        .stroke(Color.Black) // 设置描边颜色为黑色\n        .strokeWidth(3) // 设置描边宽度为 3px\n\n      Text('Straight line graph') // 显示文本 \"Straight line graph\"\n        .fontSize(11) // 设置字体大小为 11\n        .fontColor(0xCCCCCC) // 设置字体颜色为浅灰色\n        .width('90%') // 设置文本宽度为父容器的 90%\n\n      Flex({ justifyContent: FlexAlign.SpaceBetween }) { // 使用 Flex 布局，设置子组件之间的间距均匀分布\n        Path() // 创建一个路径图形\n          .width('210px') // 设置路径图形的宽度为 210px\n          .height('310px') // 设置路径图形的高度为 310px\n          .commands('M100 0 L200 240 L0 240 Z') // 设置路径命令，绘制一个三角形\n          .fillOpacity(0) // 设置填充透明度为 0，即不填充颜色\n          .stroke(Color.Black) // 设置描边颜色为黑色\n          .strokeWidth(3) // 设置描边宽度为 3px\n        Path() // 创建一个路径图形\n          .width('210px') // 设置路径图形的宽度为 210px\n          .height('310px') // 设置路径图形的高度为 310px\n          .commands('M0 0 H200 V200 H0 Z') // 设置路径命令，绘制一个矩形\n          .fillOpacity(0) // 设置填充透明度为 0，即不填充颜色\n          .stroke(Color.Black) // 设置描边颜色为黑色\n          .strokeWidth(3) // 设置描边宽度为 3px\n        Path() // 创建一个路径图形\n          .width('210px') // 设置路径图形的宽度为 210px\n          .height('310px') // 设置路径图形的高度为 310px\n          .commands('M100 0 L0 100 L50 200 L150 200 L200 100 Z') // 设置路径命令，绘制一个五边形\n          .fillOpacity(0) // 设置填充透明度为 0，即不填充颜色\n          .stroke(Color.Black) // 设置描边颜色为黑色\n          .strokeWidth(3) // 设置描边宽度为 3px\n      }.width('95%') // 设置 Flex 容器的宽度为父容器的 95%\n\n      Text('Curve graphics').fontSize(11).fontColor(0xCCCCCC).width('90%') // 显示文本 \"Curve graphics\"，设置字体大小、颜色和宽度\n\n      Flex({ justifyContent: FlexAlign.SpaceBetween }) { // 使用 Flex 布局，设置子组件之间的间距均匀分布\n        Path() // 创建一个路径图形\n          .width('250px') // 设置路径图形的宽度为 250px\n          .height('310px') // 设置路径图形的高度为 310px\n          .commands(\"M0 300 S100 0 240 300 Z\") // 设置路径命令，绘制一条曲线\n          .fillOpacity(0) // 设置填充透明度为 0，即不填充颜色\n          .stroke(Color.Black) // 设置描边颜色为黑色\n          .strokeWidth(3) // 设置描边宽度为 3px\n        Path() // 创建一个路径图形\n          .width('210px') // 设置路径图形的宽度为 210px\n          .height('310px') // 设置路径图形的高度为 310px\n          .commands('M0 150 C0 100 140 0 200 150 L100 300 Z') // 设置路径命令，绘制一条曲线\n          .fillOpacity(0) // 设置填充透明度为 0，即不填充颜色\n          .stroke(Color.Black) // 设置描边颜色为黑色\n          .strokeWidth(3) // 设置描边宽度为 3px\n        Path() // 创建一个路径图形\n          .width('210px') // 设置路径图形的宽度为 210px\n          .height('310px') // 设置路径图形的高度为 310px\n          .commands('M0 100 A30 20 20 0 0 200 100 Z') // 设置路径命令，绘制一条曲线\n          .fillOpacity(0) // 设置填充透明度为 0，即不填充颜色\n          .stroke(Color.Black) // 设置描边颜色为黑色\n          .strokeWidth(3) // 设置描边宽度为 3px\n      }.width('95%') // 设置 Flex 容器的宽度为父容器的 95%\n    }.width('100%') // 设置 Column 容器的宽度为父容器的 100%\n    .margin({ top: 5 }) // 设置顶部外边距为 5vp\n  }\n}"
    }
]