{
    "description": "操作块组件，用于搜索框历史记录或者邮件发送列表等场景。",
    "details": "该组件从API Version 11开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。",
    "interfaces": [
        {
            "description": "Chip({options: ChipOptions})",
            "params": {
                "options": {
                    "type": "ChipOptions",
                    "required": true,
                    "description": "定义chip组件的参数。"
                }
            }
        }
    ],
    "attributes": {
        "size": {
            "description": "操作块尺寸。",
            "params": {
                "value": {
                    "type": [
                        "ChipSize",
                        "SizeOptions"
                    ],
                    "required": false,
                    "description": "操作块尺寸。默认值：ChipSize.NORMAL。SizeOptions类型参数不支持百分比设置。"
                }
            }
        },
        "enabled": {
            "description": "操作块是否可选中。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": false,
                    "description": "操作块是否可选中。默认值：true。"
                }
            }
        },
        "activated12+": {
            "description": "操作块是否为激活态。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": false,
                    "description": "操作块是否为激活态。默认值：false。"
                }
            }
        },
        "prefixIcon": {
            "description": "前缀图标属性。",
            "params": {
                "value": {
                    "type": "PrefixIconOptions",
                    "required": false,
                    "description": "前缀图标属性。"
                }
            }
        },
        "prefixSymbol12+": {
            "description": "前缀图标属性，symbol类型。",
            "params": {
                "value": {
                    "type": "ChipSymbolGlyphOptions",
                    "required": false,
                    "description": "前缀图标属性，symbol类型。"
                }
            }
        },
        "label": {
            "description": "文本属性。",
            "params": {
                "value": {
                    "type": "LabelOptions",
                    "required": true,
                    "description": "文本属性。"
                }
            }
        },
        "suffixIcon": {
            "description": "后缀图标属性。",
            "params": {
                "value": {
                    "type": "SuffixIconOptions",
                    "required": false,
                    "description": "后缀图标属性。"
                }
            }
        },
        "suffixSymbol12+": {
            "description": "后缀图标属性，symbol类型。",
            "params": {
                "value": {
                    "type": "ChipSymbolGlyphOptions",
                    "required": false,
                    "description": "后缀图标属性，symbol类型。"
                }
            }
        },
        "backgroundColor": {
            "description": "操作块背景颜色。",
            "params": {
                "value": {
                    "type": "ResourceColor",
                    "required": false,
                    "description": "操作块背景颜色。默认值：$r('sys.color.ohos_id_color_button_normal')。"
                }
            }
        },
        "activatedBackgroundColor12+": {
            "description": "操作块激活时的背景颜色。",
            "params": {
                "value": {
                    "type": "ResourceColor",
                    "required": false,
                    "description": "操作块激活时的背景颜色。默认值：$r('sys.color.ohos_id_color_emphasize')。"
                }
            }
        },
        "borderRadius": {
            "description": "操作块背景圆角半径大小，不支持百分比。",
            "params": {
                "value": {
                    "type": "Dimension",
                    "required": false,
                    "description": "操作块背景圆角半径大小，不支持百分比。默认值：$r('sys.float.ohos_id_corner_radius_button')。"
                }
            }
        },
        "allowClose": {
            "description": "删除图标是否显示。",
            "params": {
                "value": {
                    "type": "boolean",
                    "required": false,
                    "description": "删除图标是否显示。默认值：true。"
                }
            }
        },
        "direction12+": {
            "description": "布局方向。",
            "params": {
                "value": {
                    "type": "Direction",
                    "required": false,
                    "description": "布局方向。默认值：Direction.Auto。"
                }
            }
        }
    },
    "events": {
        "onClose": {
            "description": "默认删除图标点击事件。",
            "params": {}
        },
        "onClicked12+": {
            "description": "操作块点击事件。",
            "params": {}
        }
    },
    "rules": [
        "suffixSymbol有传入参数时，suffixIcon和allowClose不生效；suffixSymbol没有传入参数、suffixIcon有传入参数时，allowClose不生效；suffixSymbol和suffixIcon都没有传入参数时，allowClose决定是否显示删除图标。",
        "backgroundColor和activatedBackgroundColor赋值undefined时，显示默认背景颜色，赋值非法值时，背景色透明。",
        "prefixSymbol/suffixSymbol的fontColor默认值，normalFontColor: [$r('sys.color.ohos_id_color_primary')]、activatedFontColor: [$r('sys.color.ohos_id_color_text_primary_contrary')]。fontColor默认值为16。",
        "prefixIcon的fillColor默认值：$r('sys.color.ohos_id_color_secondary')，suffixIcon的fillColor默认值：$r('sys.color.ohos_id_color_primary')。fillColor对颜色的解析与Image组件保持一致。",
        "prefixIcon的activatedFillColor默认值：$r('sys.color.ohos_id_color_text_primary_contrary')，suffixIcon的activatedFillColor默认值：$r('sys.color.ohos_id_color_text_primary_contrary')。activatedFillColor对颜色的解析与Image组件保持一致。"
    ],
    "examples": [
        {
            "description": "该组件通过自定义Chip组件实现了一个带有删除图标的操作块。布局上，操作块采用垂直布局，包含一个前缀图标、标签文本和一个后缀图标。前缀图标和后缀图标分别位于操作块的左侧和右侧，标签文本位于中间。操作块的背景颜色和边框圆角通过系统资源进行设置，确保与系统风格一致。\n\n组件的样式包括图标的尺寸、颜色、标签文本的字体、颜色、字体家族以及标签文本的左右边距。操作块的大小为正常尺寸，允许关闭功能被禁用，确保操作块在启用状态下展示。\n\n组件的功能主要是展示一个带有删除图标的操作块，用户可以通过点击删除图标进行删除操作。操作块的背景颜色和边框圆角通过系统资源进行设置，确保与系统风格一致。",
            "code": "import { Chip, ChipSize } from '@kit.ArkUI'; // 导入Chip组件及其尺寸枚举\n\n@Entry // 标记该组件为入口组件\n@Component // 标记该结构体为组件\nstruct Index {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局的容器，子组件之间的间距为10\n      Chip({\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置前缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置前缀图标的尺寸为16x16\n          fillColor: Color.Red // 设置前缀图标的填充颜色为红色\n        },\n        label: {\n          text: \"操作块\", // 设置标签文本内容为\"操作块\"\n          fontSize: 12, // 设置标签文本的字体大小为12\n          fontColor: Color.Blue, // 设置标签文本的字体颜色为蓝色\n          fontFamily: \"HarmonyOS Sans\", // 设置标签文本的字体家族为HarmonyOS Sans\n          labelMargin: { left: 20, right: 30 } // 设置标签文本的左右边距分别为20和30\n        },\n        suffixIcon: {\n          src: $r('app.media.close'), // 设置后缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置后缀图标的尺寸为16x16\n          fillColor: Color.Red // 设置后缀图标的填充颜色为红色\n        },\n        size: ChipSize.NORMAL, // 设置操作块的尺寸为正常尺寸\n        allowClose: false, // 禁用操作块的关闭功能\n        enabled: true, // 设置操作块为启用状态\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 设置操作块的背景颜色为系统按钮的正常颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button') // 设置操作块的边框圆角为系统按钮的圆角\n      })\n    }\n  }\n}"
        },
        {
            "description": "该组件通过 Column 布局实现了一个 Chip 组件的镜像化展示。布局宽度占据整个屏幕，高度设为 100%，内边距为 0。组件的垂直方向上仅包含一个 Chip 组件，该 Chip 组件的排列方式为居中对齐。\nChip 组件的样式包括背景颜色、边框圆角、宽度、高度等属性，支持不同的样式展示。Chip 组件的功能包括显示前缀图标、标签文本和后缀图标，用户可以通过点击 Chip 组件触发相应操作，Chip 组件也可以在启用或禁用状态下进行展示。\n整个布局通过 Column 布局保证 Chip 组件在垂直方向上居中对齐，确保界面整洁美观。",
            "code": "import { Chip, ChipSize, LengthMetrics } from '@kit.ArkUI'; // 导入 Chip 组件及其相关属性\n\n@Entry\n@Component\nstruct ChipPage {\n  @State message: string = 'Hello World'; // 定义一个状态变量 message，初始值为 'Hello World'\n\n  build() {\n    Column() {\n      Chip({\n        direction: Direction.Rtl, // 设置 Chip 组件的布局方向为从右到左（镜像化）\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置前缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置前缀图标的宽度和高度\n          fillColor: Color.Red, // 设置前缀图标的填充颜色为红色\n        },\n        label: {\n          text: \"操作块\", // 设置 Chip 组件的标签文本\n          fontSize: 12, // 设置标签文本的字体大小\n          fontColor: Color.Blue, // 设置标签文本的字体颜色为蓝色\n          fontFamily: \"HarmonyOS Sans\", // 设置标签文本的字体族\n          localizedLabelMargin: { start: LengthMetrics.vp(20), end: LengthMetrics.vp(20) }, // 设置标签文本的左右边距\n        },\n        suffixIcon: {\n          src: $r('app.media.close'), // 设置后缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置后缀图标的宽度和高度\n          fillColor: Color.Red, // 设置后缀图标的填充颜色为红色\n        },\n        size: ChipSize.NORMAL, // 设置 Chip 组件的大小为正常尺寸\n        allowClose: false, // 设置 Chip 组件是否允许关闭\n        enabled: true, // 设置 Chip 组件是否启用\n        backgroundColor: $r('sys.color.ohos\\_id\\_color\\_button\\_normal'), // 设置 Chip 组件的背景颜色，使用系统资源\n        borderRadius: $r('sys.float.ohos\\_id\\_corner\\_radius\\_button') // 设置 Chip 组件的边框圆角，使用系统资源\n      })\n    }.justifyContent(FlexAlign.Center) // 设置 Column 组件的内容居中对齐\n    .width('100%') // 设置 Column 组件的宽度为 100%\n    .height('100%') // 设置 Column 组件的高度为 100%\n  }\n}"
        },
        {
            "description": "该组件通过 Column 布局实现了一个带有默认删除图标的操作块。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上包含一个 Chip 组件，Chip 组件内部包含一个前缀图标和一个标签文本。Chip 组件的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。Chip 组件的功能包括点击事件和删除操作，用户可以通过点击删除图标触发删除操作。\n\n布局属性：\n- 组件的宽度占据整个屏幕，高度根据内容自适应。\n- Chip 组件的宽度根据内容自适应，高度为 ChipSize.NORMAL 的大小。\n\n组件的样式和外观：\n- 前缀图标的源文件为 app.media.chips，大小为 16x16vp，填充颜色为蓝色。\n- 标签文本的字体大小为 12vp，字体颜色为蓝色，字体家族为 \"HarmonyOS Sans\"，标签文本的左右边距分别为 20vp 和 30vp。\n- Chip 组件的背景颜色为系统默认的按钮背景颜色，边框圆角为系统默认的按钮圆角。\n\n组件的排列和嵌套关系：\n- 整个组件通过 Column 布局实现，Chip 组件位于 Column 内部。\n- Chip 组件内部包含一个前缀图标和一个标签文本，前缀图标位于标签文本的左侧。\n\n组件的功能和交互：\n- Chip 组件支持删除操作，用户可以通过点击删除图标触发删除操作。\n- Chip 组件在启用状态下展示，用户可以点击 Chip 组件进行交互。",
            "code": "import { Chip, ChipSize } from '@kit.ArkUI'; // 导入 Chip 组件及其相关属性\n\n@Entry // 标记该组件为入口组件\n@Component // 标记该组件为一个自定义组件\nstruct Index {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局的 Column 组件，组件之间的间距为 10vp\n      Chip({\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置前缀图标的源文件为 app.media.chips\n          size: { width: 16, height: 16 }, // 设置前缀图标的大小为 16x16vp\n          fillColor: Color.Blue // 设置前缀图标的填充颜色为蓝色\n        },\n        label: {\n          text: \"操作块\", // 设置标签文本为 \"操作块\"\n          fontSize: 12, // 设置标签文本的字体大小为 12vp\n          fontColor: Color.Blue, // 设置标签文本的字体颜色为蓝色\n          fontFamily: \"HarmonyOS Sans\", // 设置标签文本的字体家族为 \"HarmonyOS Sans\"\n          labelMargin: { left: 20, right: 30 } // 设置标签文本的左右边距分别为 20vp 和 30vp\n        },\n        size: ChipSize.NORMAL, // 设置 Chip 组件的大小为正常大小\n        allowClose: true, // 允许 Chip 组件显示删除图标\n        enabled: true, // 设置 Chip 组件为启用状态\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 设置 Chip 组件的背景颜色为系统默认的按钮背景颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button') // 设置 Chip 组件的边框圆角为系统默认的按钮圆角\n      })\n    }\n  }\n}"
        },
        {
            "description": "该组件通过 Column 布局实现了一个不显示删除图标的操作块。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上包含一个 Chip 组件，Chip 组件内部包含一个前缀图标和一个标签文本。Chip 组件的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。Chip 组件的功能包括点击事件和状态效果，用户可以通过点击 Chip 组件触发相应操作，Chip 组件也可以在启用或禁用状态下进行展示。\n\n布局属性：\n- 组件的宽度占据整个屏幕，高度根据内容自适应。\n- Chip 组件的宽度根据内容自适应，高度为 ChipSize.SMALL 定义的高度。\n\n组件的样式和外观：\n- Chip 组件的背景颜色为系统定义的颜色 $r('sys.color.ohos\\_id\\_color\\_button\\_normal')。\n- Chip 组件的边框圆角为系统定义的圆角 $r('sys.float.ohos\\_id\\_corner\\_radius\\_button')。\n- 前缀图标的颜色为蓝色，大小为 16x16 像素。\n- 标签文本的字体大小为 12，颜色为蓝色，字体家族为 \"HarmonyOS Sans\"，标签文本的左右边距分别为 20 和 30 像素。\n\n组件的排列和嵌套关系：\n- 组件通过 Column 布局实现，Chip 组件位于 Column 内部。\n- Chip 组件内部包含前缀图标和标签文本，前缀图标位于标签文本的左侧。\n\n组件的功能和交互：\n- Chip 组件支持点击事件，但在此示例中未定义具体的点击事件处理逻辑。\n- Chip 组件的删除图标被禁用，即 allowClose 属性设置为 false，因此不会显示删除图标。\n- Chip 组件的状态为启用状态，即 enabled 属性设置为 true。",
            "code": "import { Chip, ChipSize } from '@kit.ArkUI'; // 导入 Chip 组件及其相关属性\n\n@Entry // 标记该组件为入口组件\n@Component // 标记该组件为一个可渲染的组件\nstruct Index {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局的 Column 组件，组件之间的间距为 10 像素\n      Chip({\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置前缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置前缀图标的大小为 16x16 像素\n          fillColor: Color.Blue // 设置前缀图标的填充颜色为蓝色\n        },\n        label: {\n          text: \"操作块\", // 设置标签文本内容为 \"操作块\"\n          fontSize: 12, // 设置标签文本的字体大小为 12\n          fontColor: Color.Blue, // 设置标签文本的颜色为蓝色\n          fontFamily: \"HarmonyOS Sans\", // 设置标签文本的字体家族为 \"HarmonyOS Sans\"\n          labelMargin: { left: 20, right: 30 } // 设置标签文本的左右边距分别为 20 和 30 像素\n        },\n        size: ChipSize.SMALL, // 设置 Chip 组件的大小为 ChipSize.SMALL\n        allowClose: false, // 禁用 Chip 组件的删除图标\n        enabled: true, // 设置 Chip 组件为启用状态\n        backgroundColor: $r('sys.color.ohos\\_id\\_color\\_button\\_normal'), // 设置 Chip 组件的背景颜色为系统定义的颜色\n        borderRadius: $r('sys.float.ohos\\_id\\_corner\\_radius\\_button'), // 设置 Chip 组件的边框圆角为系统定义的圆角\n        onClose:()=>{\n          console.log(\"chip on close\") // 定义 Chip 组件的关闭事件处理逻辑，此处仅打印日志\n        }\n      })\n    }\n  }\n}"
        },
        {
            "description": "该组件通过 Column 布局实现了一个包含 Chip 组件和 Button 组件的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为两个部分，第一部分是一个 Chip 组件，第二部分是一个 Button 组件。Chip 组件用于展示一个带有图标和文本的操作块，支持激活态和非激活态的切换，并且可以点击和关闭。Button 组件用于切换 Chip 组件的激活状态。\n\nChip 组件的样式包括背景颜色、边框圆角、图标和文本的颜色、字体大小、字体家族等属性，支持不同的样式展示。Chip 组件的功能包括点击事件和关闭事件，用户可以通过点击 Chip 组件触发相应操作，也可以通过点击关闭按钮关闭 Chip 组件。\n\nButton 组件的样式包括文本颜色、字体大小、字体家族等属性，支持不同的样式展示。Button 组件的功能包括点击事件，用户可以通过点击 Button 组件切换 Chip 组件的激活状态。\n\n整个布局通过 Column 布局保证 Chip 组件和 Button 组件在垂直方向上有序排列，确保界面整洁美观。",
            "code": "import { Chip, ChipSize } from '@kit.ArkUI'; // 导入 Chip 组件和 ChipSize 枚举\n\n@Entry\n@Component\nstruct Index {\n  @State isActivated: boolean = false; // 定义一个状态变量 isActivated，用于控制 Chip 组件的激活状态，初始值为 false\n\n  build() {\n    Column({ space: 10 }) { // 创建一个 Column 布局，设置子组件之间的间距为 10vp\n      Chip({\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置 Chip 组件的前缀图标资源路径\n          size: { width: 16, height: 16 }, // 设置图标的宽度和高度为 16vp\n          fillColor: Color.Blue, // 设置图标的填充颜色为蓝色\n          activatedFillColor: $r('sys.color.ohos_id_color_text_primary_contrary') // 设置激活状态下图标的填充颜色为系统定义的颜色\n        },\n        label: {\n          text: \"操作块\", // 设置 Chip 组件的文本内容为 \"操作块\"\n          fontSize: 12, // 设置文本的字体大小为 12vp\n          fontColor: Color.Blue, // 设置文本的颜色为蓝色\n          activatedFontColor: $r('sys.color.ohos_id_color_text_primary_contrary'), // 设置激活状态下文本的颜色为系统定义的颜色\n          fontFamily: \"HarmonyOS Sans\", // 设置文本的字体家族为 \"HarmonyOS Sans\"\n          labelMargin: { left: 20, right: 30 } // 设置文本的左右边距分别为 20vp 和 30vp\n        },\n        size: ChipSize.NORMAL, // 设置 Chip 组件的大小为正常大小\n        allowClose: true, // 允许 Chip 组件显示关闭按钮\n        enabled: true, // 启用 Chip 组件的交互功能\n        activated: this.isActivated, // 根据 isActivated 状态变量控制 Chip 组件的激活状态\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 设置 Chip 组件的背景颜色为系统定义的颜色\n        activatedBackgroundColor: $r('sys.color.ohos_id_color_emphasize'), // 设置激活状态下 Chip 组件的背景颜色为系统定义的颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button'), // 设置 Chip 组件的边框圆角为系统定义的圆角\n        onClose:()=>{\n          console.log(\"chip on close\") // 定义 Chip 组件的关闭事件处理函数，点击关闭按钮时输出日志\n        },\n        onClicked:()=>{\n          console.log(\"chip on clicked\") // 定义 Chip 组件的点击事件处理函数，点击 Chip 组件时输出日志\n        }\n      })\n\n      Button('改变激活状态').onClick(()=>{\n        this.isActivated = !this.isActivated; // 定义 Button 组件的点击事件处理函数，点击 Button 组件时切换 isActivated 状态变量的值\n      })\n    }\n  }\n}"
        },
        {
            "description": "该组件通过 Column 布局实现了一个包含 Chip 组件和 Button 组件的界面。布局宽度占据整个屏幕，高度根据内容自适应。组件的垂直方向上被分为两个部分，第一部分是一个 Chip 组件，第二部分是一个 Button 组件。\n\nChip 组件的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。Chip 组件的功能包括点击事件和状态效果，用户可以通过点击 Chip 组件触发相应操作，Chip 组件也可以在激活或未激活状态下进行展示。\n\nButton 组件的样式包括背景颜色、边框圆角、宽度和高度等属性，支持不同的样式展示。Button 组件的功能包括点击事件，用户可以通过点击 Button 组件触发相应操作。\n\n整个布局通过 Column 布局保证 Chip 组件和 Button 组件在垂直方向上有序排列，确保界面整洁美观。",
            "code": "import { Chip, ChipSize, SymbolGlyphModifier } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct Index {\n  @State isActivated: boolean = false; // 定义一个状态变量 isActivated，用于控制 Chip 组件的激活状态\n\n  build() {\n    Column({ space: 10 }) { // 使用 Column 布局，设置子组件之间的间距为 10vp\n      Chip({\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置 Chip 组件前缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置前缀图标的宽度和高度为 16vp\n          fillColor: Color.Blue, // 设置前缀图标的填充颜色为蓝色\n          activatedFillColor: $r('sys.color.ohos_id_color_text_primary_contrary') // 设置激活状态下前缀图标的填充颜色为系统定义的颜色\n        },\n        prefixSymbol: {\n          normal: new SymbolGlyphModifier($r('sys.symbol.ohos_star')).fontSize(16).fontColor([Color.Green]), // 设置 Chip 组件前缀符号的正常状态，使用系统符号资源，字体大小为 16vp，字体颜色为绿色\n          activated: new SymbolGlyphModifier($r('sys.symbol.ohos_star')).fontSize(16).fontColor([Color.Red]), // 设置 Chip 组件前缀符号的激活状态，使用系统符号资源，字体大小为 16vp，字体颜色为红色\n        },\n        label: {\n          text: \"操作块\", // 设置 Chip 组件的标签文本为 \"操作块\"\n          fontSize: 12, // 设置标签文本的字体大小为 12vp\n          fontColor: Color.Blue, // 设置标签文本的字体颜色为蓝色\n          activatedFontColor: $r('sys.color.ohos_id_color_text_primary_contrary'), // 设置激活状态下标签文本的字体颜色为系统定义的颜色\n          fontFamily: \"HarmonyOS Sans\", // 设置标签文本的字体为 HarmonyOS Sans\n          labelMargin: { left: 20, right: 30 }, // 设置标签文本的左右边距分别为 20vp 和 30vp\n        },\n        size: ChipSize.NORMAL, // 设置 Chip 组件的大小为正常大小\n        allowClose: true, // 允许 Chip 组件显示关闭按钮\n        enabled: true, // 设置 Chip 组件为启用状态\n        activated: this.isActivated, // 根据 isActivated 状态变量设置 Chip 组件的激活状态\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 设置 Chip 组件的背景颜色为系统定义的颜色\n        activatedBackgroundColor: $r('sys.color.ohos_id_color_emphasize'), // 设置激活状态下 Chip 组件的背景颜色为系统定义的颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button'), // 设置 Chip 组件的边框圆角为系统定义的圆角\n        onClose:()=>{\n          console.log(\"chip on close\") // 定义 Chip 组件的关闭事件回调函数，打印 \"chip on close\"\n        },\n        onClicked:()=>{\n          console.log(\"chip on clicked\") // 定义 Chip 组件的点击事件回调函数，打印 \"chip on clicked\"\n        }\n      })\n\n      Button('改变激活状态').onClick(()=>{\n        this.isActivated = !this.isActivated; // 定义 Button 组件的点击事件回调函数，切换 isActivated 状态变量的值\n      })\n    }\n  }\n}"
        }
    ],
    "is_common_attrs": true
}