/*\n实现一个带有Checkbox和Text的简单界面组件。Checkbox的选中状态与Text的点击事件相互关联，点击Text可以切换Checkbox的选中状态。\n*/\n\n@Entry\n@Component\nstruct CheckedTextView {\n  // 定义一个状态变量checked，用于存储Checkbox的选中状态，初始值为false\n  @State checked: boolean = false; \n\n  build() {\n    // 使用Flex布局，设置布局方向为行（水平），对齐方式为中心对齐\n    Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      // 创建一个Checkbox组件，绑定到状态变量checked，设置宽度和高度\n      Checkbox()\n        .select($$this.checked) // 绑定Checkbox的选中状态到状态变量checked\n        .width(30) // 设置Checkbox的宽度为30\n        .height(30) // 设置Checkbox的高度为30\n      \n      // 创建一个Text组件，显示文本"Click to check"，设置字体大小和文本对齐方式\n      Text('Click to check')\n        .fontSize(18) // 设置字体大小为18\n        .textAlign(TextAlign.Center) // 设置文本对齐方式为中心对齐\n        .onClick(() => {\n          // 点击Text时，切换状态变量checked的值\n          this.checked = !this.checked\n        })\n    }\n    .width('100%') // 设置Flex容器的宽度为100%\n    .height('100%') // 设置Flex容器的高度为100%\n  }\n}


/*\n实现一个包含两个复选框的界面，每个复选框旁边有一个对应的文本标签。整个界面使用Flex布局进行居中对齐，并且复选框和文本标签在水平和垂直方向上都居中显示。\n*/\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      Column() {\n        // 创建一个Flex布局，水平和垂直居中对齐其子组件\n        Flex({ justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n          // 创建第一个复选框，设置宽度和高度\n          Checkbox({ name: 'checkbox1', group: 'checkboxGroup' })\n            .width(30) // 设置复选框宽度为30\n            .height(30) // 设置复选框高度为30\n          // 创建文本标签，设置字体大小\n          Text('Checkbox1').fontSize(20)\n        }\n\n        // 创建另一个Flex布局，水平和垂直居中对齐其子组件\n        Flex({ justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {\n          // 创建第二个复选框，设置宽度和高度\n          Checkbox({ name: 'checkbox2', group: 'checkboxGroup' })\n            .width(30) // 设置复选框宽度为30\n            .height(30) // 设置复选框高度为30\n          // 创建文本标签，设置字体大小\n          Text('Checkbox2').fontSize(20)\n        }\n      }\n      .width('100%') // 设置Column的宽度为100%\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}