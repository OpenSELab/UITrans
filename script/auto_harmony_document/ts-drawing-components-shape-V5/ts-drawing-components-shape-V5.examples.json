[
    {
        "description": "该组件通过Column布局实现了一个展示多种形状（如矩形、椭圆、路径）及其样式效果的界面。布局宽度占据整个屏幕，高度根据内容自适应，顶部外边距为15vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一组形状。每个形状组的形状以垂直布局方式排列，形状之间的间距均匀分布，且对齐方式为居中对齐。\n形状的样式包括填充颜色、边框颜色、边框宽度、边框虚线样式、边框线帽样式、边框线连接样式等属性，支持不同的样式展示。形状组之间通过Column组件进行分隔。形状的功能包括展示不同的几何图形和路径，用户可以通过视觉观察形状的样式变化。\n整个布局通过Column布局保证形状在垂直方向上有序排列，确保界面整洁美观。",
        "code": "@Entry\n@Component\nstruct ShapeExample {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局的容器，子组件之间的间距为10vp\n      Text('basic').fontSize(11).fontColor(0xCCCCCC).width(320) // 创建一个文本组件，显示\"basic\"，字体大小为11，颜色为灰色，宽度为320vp\n\n      Shape() { // 创建一个形状组件，包含多个几何图形\n        Rect().width(300).height(50) // 创建一个矩形，宽度为300vp，高度为50vp\n        Ellipse().width(300).height(50).offset({ x: 0, y: 60 }) // 创建一个椭圆，宽度为300vp，高度为50vp，相对于上一个图形向下偏移60vp\n        Path().width(300).height(10).commands('M0 0 L900 0').offset({ x: 0, y: 120 }) // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)，相对于上一个图形向下偏移120vp\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(140) // 设置形状组件的高度为140vp\n      .viewPort({ x: -2, y: -2, width: 304, height: 130 }) // 设置形状组件的视口，视口位置为(-2,-2)，视口宽度为304vp，高度为130vp\n      .fill(0x317AF7) // 设置形状组件的填充颜色为蓝色\n      .stroke(Color.Black) // 设置形状组件的边框颜色为黑色\n      .strokeWidth(4) // 设置形状组件的边框宽度为4vp\n      .strokeDashArray([20]) // 设置形状组件的边框虚线样式，虚线长度为20vp\n      .strokeDashOffset(10) // 设置形状组件的边框虚线偏移量为10vp\n      .strokeLineCap(LineCapStyle.Round) // 设置形状组件的边框线帽样式为圆角\n      .strokeLineJoin(LineJoinStyle.Round) // 设置形状组件的边框线连接样式为圆角\n      .antiAlias(true) // 开启形状组件的抗锯齿效果\n\n      Shape() { // 创建一个形状组件，包含一个矩形\n        Rect().width(300).height(50) // 创建一个矩形，宽度为300vp，高度为50vp\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(80) // 设置形状组件的高度为80vp\n      .viewPort({ x: 0, y: 0, width: 320, height: 70 }) // 设置形状组件的视口，视口位置为(0,0)，视口宽度为320vp，高度为70vp\n      .fill(0x317AF7) // 设置形状组件的填充颜色为蓝色\n      .stroke(Color.Black) // 设置形状组件的边框颜色为黑色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n\n      Shape() { // 创建一个形状组件，包含一个矩形\n        Rect().width(300).height(50) // 创建一个矩形，宽度为300vp，高度为50vp\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(80) // 设置形状组件的高度为80vp\n      .viewPort({ x: -5, y: -5, width: 320, height: 70 }) // 设置形状组件的视口，视口位置为(-5,-5)，视口宽度为320vp，高度为70vp\n      .fill(0x317AF7) // 设置形状组件的填充颜色为蓝色\n      .stroke(Color.Black) // 设置形状组件的边框颜色为黑色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n\n      Text('path').fontSize(11).fontColor(0xCCCCCC).width(320) // 创建一个文本组件，显示\"path\"，字体大小为11，颜色为灰色，宽度为320vp\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(300).height(10).commands('M0 0 L900 0') // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(20) // 设置形状组件的高度为20vp\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置形状组件的视口，视口位置为(0,-5)，视口宽度为300vp，高度为20vp\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeDashArray([20]) // 设置形状组件的边框虚线样式，虚线长度为20vp\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(300).height(10).commands('M0 0 L900 0') // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(20) // 设置形状组件的高度为20vp\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置形状组件的视口，视口位置为(0,-5)，视口宽度为300vp，高度为20vp\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeDashArray([20]) // 设置形状组件的边框虚线样式，虚线长度为20vp\n      .strokeDashOffset(10) // 设置形状组件的边框虚线偏移量为10vp\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(300).height(10).commands('M0 0 L900 0') // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(20) // 设置形状组件的高度为20vp\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置形状组件的视口，视口位置为(0,-5)，视口宽度为300vp，高度为20vp\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeOpacity(0.5) // 设置形状组件的边框透明度为0.5\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(300).height(10).commands('M0 0 L900 0') // 创建一个路径，宽度为300vp，高度为10vp，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置形状组件的宽度为350vp\n      .height(20) // 设置形状组件的高度为20vp\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置形状组件的视口，视口位置为(0,-5)，视口宽度为300vp，高度为20vp\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeDashArray([20]) // 设置形状组件的边框虚线样式，虚线长度为20vp\n      .strokeLineCap(LineCapStyle.Round) // 设置形状组件的边框线帽样式为圆角\n\n      Shape() { // 创建一个形状组件，包含一个路径\n        Path().width(200).height(60).commands('M0 0 L400 0 L400 150 Z') // 创建一个路径，宽度为200vp，高度为60vp，路径命令为从(0,0)到(400,0)再到(400,150)并闭合\n      }\n      .width(300) // 设置形状组件的宽度为300vp\n      .height(200) // 设置形状组件的高度为200vp\n      .viewPort({ x: -20, y: -5, width: 310, height: 90 }) // 设置形状组件的视口，视口位置为(-20,-5)，视口宽度为310vp，高度为90vp\n      .fill(0x317AF7) // 设置形状组件的填充颜色为蓝色\n      .stroke(0xEE8443) // 设置形状组件的边框颜色为橙色\n      .strokeWidth(10) // 设置形状组件的边框宽度为10vp\n      .strokeLineJoin(LineJoinStyle.Miter) // 设置形状组件的边框线连接样式为斜接\n      .strokeMiterLimit(5) // 设置形状组件的边框斜接限制为5\n    }.width('100%').margin({ top: 15 }) // 设置Column容器的宽度为100%，顶部外边距为15vp\n  }\n}"
    }
]