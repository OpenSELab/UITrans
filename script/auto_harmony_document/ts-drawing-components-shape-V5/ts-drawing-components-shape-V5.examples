/*\n实现一个包含多种形状和路径的示例组件，展示不同形状和路径的绘制效果，包括矩形、椭圆、路径等，并设置不同的样式属性，如填充颜色、描边颜色、描边宽度、描边虚线、描边线帽、描边线连接等。\n*/\n\n@Entry\n@Component\nstruct ShapeExample {\n  build() {\n    Column({ space: 10 }) {\n      // 显示一个标题文本，字体大小为11，颜色为灰色，宽度为320\n      Text('basic').fontSize(11).fontColor(0xCCCCCC).width(320)\n\n      // 创建一个Shape组件，包含多个形状，设置形状的宽度、高度、偏移量等属性\n      Shape() {\n        Rect().width(300).height(50) // 绘制一个宽度为300，高度为50的矩形\n        Ellipse().width(300).height(50).offset({ x: 0, y: 60 }) // 绘制一个宽度为300，高度为50的椭圆，并向下偏移60\n        Path().width(300).height(10).commands('M0 0 L900 0').offset({ x: 0, y: 120 }) // 绘制一个宽度为300，高度为10的路径，路径命令为从(0,0)到(900,0)，并向下偏移120\n      }\n      .width(350) // 设置Shape组件的宽度为350\n      .height(140) // 设置Shape组件的高度为140\n      .viewPort({ x: -2, y: -2, width: 304, height: 130 }) // 设置视口位置和大小，x和y为偏移量，width和height为视口大小\n      .fill(0x317AF7) // 设置填充颜色为蓝色\n      .stroke(Color.Black) // 设置描边颜色为黑色\n      .strokeWidth(4) // 设置描边宽度为4\n      .strokeDashArray([20]) // 设置描边虚线，虚线长度为20\n      .strokeDashOffset(10) // 设置描边虚线偏移量为10\n      .strokeLineCap(LineCapStyle.Round) // 设置描边线帽为圆角\n      .strokeLineJoin(LineJoinStyle.Round) // 设置描边线连接为圆角\n      .antiAlias(true) // 开启抗锯齿\n\n      // 创建一个Shape组件，包含一个矩形，设置形状的宽度、高度、视口等属性\n      Shape() {\n        Rect().width(300).height(50) // 绘制一个宽度为300，高度为50的矩形\n      }\n      .width(350) // 设置Shape组件的宽度为350\n      .height(80) // 设置Shape组件的高度为80\n      .viewPort({ x: 0, y: 0, width: 320, height: 70 }) // 设置视口位置和大小，x和y为偏移量，width和height为视口大小\n      .fill(0x317AF7) // 设置填充颜色为蓝色\n      .stroke(Color.Black) // 设置描边颜色为黑色\n      .strokeWidth(10) // 设置描边宽度为10\n\n      // 创建一个Shape组件，包含一个矩形，设置形状的宽度、高度、视口等属性\n      Shape() {\n        Rect().width(300).height(50) // 绘制一个宽度为300，高度为50的矩形\n      }\n      .width(350) // 设置Shape组件的宽度为350\n      .height(80) // 设置Shape组件的高度为80\n      .viewPort({ x: -5, y: -5, width: 320, height: 70 }) // 设置视口位置和大小，x和y为偏移量，width和height为视口大小\n      .fill(0x317AF7) // 设置填充颜色为蓝色\n      .stroke(Color.Black) // 设置描边颜色为黑色\n      .strokeWidth(10) // 设置描边宽度为10\n\n      // 显示一个标题文本，字体大小为11，颜色为灰色，宽度为320\n      Text('path').fontSize(11).fontColor(0xCCCCCC).width(320)\n\n      // 创建一个Shape组件，包含一个路径，设置路径的宽度、高度、视口等属性\n      Shape() {\n        Path().width(300).height(10).commands('M0 0 L900 0') // 绘制一个宽度为300，高度为10的路径，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置Shape组件的宽度为350\n      .height(20) // 设置Shape组件的高度为20\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置视口位置和大小，x和y为偏移量，width和height为视口大小\n      .stroke(0xEE8443) // 设置描边颜色为橙色\n      .strokeWidth(10) // 设置描边宽度为10\n      .strokeDashArray([20]) // 设置描边虚线，虚线长度为20\n\n      // 创建一个Shape组件，包含一个路径，设置路径的宽度、高度、视口等属性\n      Shape() {\n        Path().width(300).height(10).commands('M0 0 L900 0') // 绘制一个宽度为300，高度为10的路径，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置Shape组件的宽度为350\n      .height(20) // 设置Shape组件的高度为20\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置视口位置和大小，x和y为偏移量，width和height为视口大小\n      .stroke(0xEE8443) // 设置描边颜色为橙色\n      .strokeWidth(10) // 设置描边宽度为10\n      .strokeDashArray([20]) // 设置描边虚线，虚线长度为20\n      .strokeDashOffset(10) // 设置描边虚线偏移量为10\n\n      // 创建一个Shape组件，包含一个路径，设置路径的宽度、高度、视口等属性\n      Shape() {\n        Path().width(300).height(10).commands('M0 0 L900 0') // 绘制一个宽度为300，高度为10的路径，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置Shape组件的宽度为350\n      .height(20) // 设置Shape组件的高度为20\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置视口位置和大小，x和y为偏移量，width和height为视口大小\n      .stroke(0xEE8443) // 设置描边颜色为橙色\n      .strokeWidth(10) // 设置描边宽度为10\n      .strokeOpacity(0.5) // 设置描边透明度为0.5\n\n      // 创建一个Shape组件，包含一个路径，设置路径的宽度、高度、视口等属性\n      Shape() {\n        Path().width(300).height(10).commands('M0 0 L900 0') // 绘制一个宽度为300，高度为10的路径，路径命令为从(0,0)到(900,0)\n      }\n      .width(350) // 设置Shape组件的宽度为350\n      .height(20) // 设置Shape组件的高度为20\n      .viewPort({ x: 0, y: -5, width: 300, height: 20 }) // 设置视口位置和大小，x和y为偏移量，width和height为视口大小\n      .stroke(0xEE8443) // 设置描边颜色为橙色\n      .strokeWidth(10) // 设置描边宽度为10\n      .strokeDashArray([20]) // 设置描边虚线，虚线长度为20\n      .strokeLineCap(LineCapStyle.Round) // 设置描边线帽为圆角\n\n      // 创建一个Shape组件，包含一个路径，设置路径的宽度、高度、视口等属性\n      Shape() {\n        Path().width(200).height(60).commands('M0 0 L400 0 L400 150 Z') // 绘制一个宽度为200，高度为60的路径，路径命令为从(0,0)到(400,0)再到(400,150)并闭合\n      }\n      .width(300) // 设置Shape组件的宽度为300\n      .height(200) // 设置Shape组件的高度为200\n      .viewPort({ x: -20, y: -5, width: 310, height: 90 }) // 设置视口位置和大小，x和y为偏移量，width和height为视口大小\n      .fill(0x317AF7) // 设置填充颜色为蓝色\n      .stroke(0xEE8443) // 设置描边颜色为橙色\n      .strokeWidth(10) // 设置描边宽度为10\n      .strokeLineJoin(LineJoinStyle.Miter) // 设置描边线连接为斜角\n      .strokeMiterLimit(5) // 设置描边斜角限制为5\n    }.width('100%').margin({ top: 15 }) // 设置Column组件的宽度为100%，顶部外边距为15\n  }\n}