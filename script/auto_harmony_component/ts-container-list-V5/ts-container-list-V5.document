Title: List-容器组件-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5

Markdown Content:
列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。

说明

*   该组件从API Version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。
    
*   该组件内容区小于一屏时，默认没有回弹效果。需要回弹效果，可以通过edgeEffect属性的options参数进行设置。
    
*   List组件[通用属性clip](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-sharp-clipping-V5)的默认值为true。
    
*   要使List处于可编辑模式需配合onItemDelete事件和ListItem的editable属性，即可编辑模式实现删除列表项功能，需满足以下条件（该功能从API9开始废弃）：
    
    *   editMode属性设置为true。
        
    *   绑定onItemDelete事件，且事件回调返回true。
        
    *   ListItem的editable属性设置为true。
        
*   实现ListItem拖拽，需满足以下条件：
    
    *   editMode属性设置为true（从API9开始无需设置editMode属性）。
        
    *   绑定onDragStart事件，且事件回调中返回浮动UI布局。
        

子组件
---

仅支持[ListItem](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitem-V5)、[ListItemGroup](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitemgroup-V5)子组件，支持渲染控制类型（[if/else](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-rendering-control-ifelse-V5)、[ForEach](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-rendering-control-foreach-V5)、[LazyForEach](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-rendering-control-lazyforeach-V5)和[Repeat](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-new-rendering-control-repeat-V5)）。

说明

List的子组件的索引值计算规则：

按子组件的顺序依次递增。

if/else语句中，只有条件成立的分支内的子组件会参与索引值计算，条件不成立的分支内子组件不计算索引值。

ForEach/LazyForEach/Repeat语句中，会计算展开所有子节点索引值。

[if/else](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-rendering-control-ifelse-V5)、[ForEach](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-rendering-control-foreach-V5)、[LazyForEach](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-rendering-control-lazyforeach-V5)和[Repeat](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-new-rendering-control-repeat-V5)发生变化以后，会更新子节点索引值。

ListItemGroup作为一个整体计算一个索引值，ListItemGroup内部的ListItem不计算索引值。

List子组件visibility属性设置为Hidden或None依然会计算索引值。

List子组件的visibility属性设置为None时不显示，但该子组件上下的space还会生效。

接口
--

List(value?:{space?: number | string, initialIndex?: number, scroller?: Scroller})

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 参数类型 | 必填 | 参数描述 |
| --- | --- | --- | --- |
| space | number | string | 否 | 子组件主轴方向的间隔。
默认值：0

参数类型为number时单位为vp

**说明：**

设置为负数或者大于等于List内容区长度时，按默认值显示。

space参数值小于List分割线宽度时，子组件主轴方向的间隔取分割线宽度。

 |
| initialIndex | number | 否 | 设置当前List初次加载时视口起始位置显示的item的索引值。

默认值：0

**说明：**

设置为负数或超过了当前List最后一个item的索引值时视为无效取值，无效取值按默认值显示。

 |
| scroller | [Scroller](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scroller) | 否 | 可滚动组件的控制器。用于与可滚动组件进行绑定。

**说明：**

不允许和其他滚动类组件绑定同一个滚动控制对象。

 |

### listDirection

listDirection(value: Axis)

设置List组件排列方向。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [Axis](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#axis) | 是 | 组件的排列方向。
默认值：Axis.Vertical

 |

### divider

divider(value: {strokeWidth: Length; color?: ResourceColor; startMargin?: Length; endMargin?: Length;} | null,)

设置ListItem分割线样式，默认无分割线。

endMargin + startMargin 超过列宽度后startMargin和endMargin会置0。

strokeWidth, startMargin和endMargin不支持设置百分比。

List的分割线画在主轴方向两个子组件之间，第一个子组件上方和最后一个子组件下方不会绘制分割线。

多列模式下，ListItem与ListItem之间的分割线起始边距从每一列的交叉轴方向起始边开始计算，其他情况从List交叉轴方向起始边开始计算。

ListItem设置[多态样式](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-polymorphic-style-V5)时，被按压的子组件上下的分割线不绘制。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | {
strokeWidth: [Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length),

color?:[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor),

startMargin?: [Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length),

endMargin?: [Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

} | null

 | 是 | ListItem分割线样式。

\- strokeWidth: 分割线的线宽。

\- color: 分割线的颜色。

默认值：0x08000000

\- startMargin: 分割线与列表侧边起始端的距离。

默认值：0，单位：vp

\- endMargin: 分割线与列表侧边结束端的距离。

默认值：0，单位：vp

 |

### scrollBar

scrollBar(value: BarState)

设置滚动条状态。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [BarState](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#barstate) | 是 | 滚动条状态。
默认值：BarState.Auto

**说明：**

API version 9及以下版本默认值为BarState.Off，API version 10及以上版本的默认值为BarState.Auto。

 |

### cachedCount

cachedCount(value: number)

设置列表中ListItem/ListItemGroup的预加载数量，懒加载场景只会预加载List显示区域外cachedCount的内容，非懒加载场景会全部加载。懒加载、非懒加载都只布局List显示区域+List显示区域外cachedCount的内容。

List设置cachedCount后，显示区域外上下各会预加载并布局cachedCount行ListItem。计算ListItem行数时，会计算ListItemGroup内部的ListItem行数。如果ListItemGroup内没有ListItem，则整个ListItemGroup算一行。

List下嵌套使用LazyForEach，并且LazyForEach下嵌套使用ListItemGroup时，LazyForEach会在List显示区域外上下各会创建cachedCount个ListItemGroup。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | 是 | ListItem/ListItemGroup的预加载数量。
默认值：1

 |

### editMode(deprecated)

editMode(value: boolean)

设置当前List组件是否处于可编辑模式。可参考[示例3](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#%E7%A4%BA%E4%BE%8B3)实现删除选中的list项。

从API version9开始废弃不再使用，无替代接口。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | boolean | 是 | 当前List组件是否处于可编辑模式。
默认值：false

 |

### edgeEffect

edgeEffect(value: EdgeEffect, options?: EdgeEffectOptions)

设置边缘滑动效果。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [EdgeEffect](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#edgeeffect) | 是 | List组件的边缘滑动效果，支持弹簧效果和阴影效果。
默认值：EdgeEffect.Spring

 |
| options11+ | [EdgeEffectOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scrollable-common-V5#edgeeffectoptions11%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | 否 | 组件内容大小小于组件自身时，是否开启滑动效果。设置为{ alwaysEnabled: true }会开启滑动效果，{ alwaysEnabled: false }不开启。

默认值：{ alwaysEnabled: false }

 |

### chainAnimation

chainAnimation(value: boolean)

设置当前List是否启用链式联动动效，开启后列表滑动以及顶部和底部拖拽时会有链式联动的效果。

链式联动效果：List内的list-item间隔一定距离，在基本的滑动交互行为下，主动对象驱动从动对象进行联动，驱动效果遵循弹簧物理动效。

链式动效生效后，List的分割线不显示。

链式动效生效需要满足以下前提条件：

1、List边缘效果为Spring类型。

2、List没有启用多列模式。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | boolean | 是 | 是否启用链式联动动效。
默认值：false，不启用链式联动。true，启用链式联动。

 |

### multiSelectable8+

multiSelectable(value: boolean)

设置是否开启鼠标框选。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | boolean | 是 | 是否开启鼠标框选。
默认值：false，关闭框选。true，开启框选。

 |

### lanes9+

lanes(value: number | LengthConstrain, gutter?: Dimension)

设置List组件的布局列数或行数。gutter为列间距，当列数大于1时生效。

规则如下：

*   lanes为指定的数量时，根据指定的数量与List组件的交叉轴尺寸除以列数作为列的宽度。
*   lanes设置了{minLength，maxLength}时，根据List组件的宽度自适应决定lanes数量（即列数），保证缩放过程中lane的宽度符合{minLength，maxLength}的限制。其中，minLength条件会被优先满足，即优先保证符合ListItem的交叉轴尺寸符合最小限制。
*   lanes设置了{minLength，maxLength}，如果父组件交叉轴方向尺寸约束为无穷大时，固定按一列排列，列宽度按显示区域内最大的ListItem计算。
*   ListItemGroup在多列模式下也是独占一行，ListItemGroup中的ListItem按照List组件的lanes属性设置值来布局。
*   lanes设置了{minLength，maxLength}时，计算列数会按照ListItemGroup的交叉轴尺寸计算。当ListItemGroup交叉轴尺寸与List交叉轴尺寸不一致时ListItemGroup中的列数与List中的列数可能不一样。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### alignListItem9+

alignListItem(value: ListItemAlign)

设置List交叉轴方向宽度大于ListItem交叉轴宽度 \* lanes时，ListItem在List交叉轴方向的布局方式。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [ListItemAlign](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#listitemalign9%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E) | 是 | 交叉轴方向的布局方式。
默认值：ListItemAlign.Start

 |

### sticky9+

sticky(value: StickyStyle)

配合[ListItemGroup](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitemgroup-V5)组件使用，设置ListItemGroup中header和footer是否要吸顶或吸底。sticky属性可以设置为 StickyStyle.Header | StickyStyle.Footer 以同时支持header吸顶和footer吸底。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [StickyStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#stickystyle9%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E) | 是 | ListItemGroup吸顶或吸底效果。
默认值：StickyStyle.None

 |

### scrollSnapAlign10+

scrollSnapAlign(value: ScrollSnapAlign)

设置列表项滚动结束对齐效果。

只支持ListItem等高情况下，设置列表项滚动结束对齐效果。

触控板和鼠标滑动List结束后不支持对齐效果。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### enableScrollInteraction10+

enableScrollInteraction(value: boolean)

设置是否支持滚动手势，当设置为false时，无法通过手指或者鼠标滚动，但不影响控制器的滚动接口。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | boolean | 是 | 是否支持滚动手势。
默认值：true

 |

### nestedScroll10+

nestedScroll(value: NestedScrollOptions)

设置向前向后两个方向上的嵌套滚动模式，实现与父组件的滚动联动。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### friction10+

friction(value: number | Resource)

设置摩擦系数，手动划动滚动区域时生效，只对惯性滚动过程有影响，对惯性滚动过程中的链式效果有间接影响。设置为小于等于0的值时，按默认值处理。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource) | 是 | 摩擦系数。
默认值：非可穿戴设备为0.6，可穿戴设备为0.9。

从API version 11开始，非可穿戴设备默认值为0.7。

从API version 12开始，非可穿戴设备默认值为0.75。

 |

### contentStartOffset11+

contentStartOffset(value: number)

设置内容区域起始偏移量。列表滚动到起始位置时，列表内容与列表显示区域边界保留指定距离。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | 是 | 内容区域起始偏移量。
默认值：0

单位：vp

 |

### contentEndOffset11+

contentEndOffset(value: number)

设置内容区末尾偏移量。列表滚动到末尾位置时，列表内容与列表显示区域边界保留指定距离。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | 是 | 内容区末尾偏移量。
默认值：0

单位：vp

 |

### childrenMainSize12+

childrenMainSize(value: ChildrenMainSize)

设置List组件的子组件在主轴方向的大小信息。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [ChildrenMainSize](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scrollable-common-V5#childrenmainsize12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | 是 | 1\. 作用：
通过ChildrenMainSize对象向List组件准确提供所有子组件在主轴方向的大小信息，能够使List组件在子组件的主轴大小不一致、增删子组件、使用[scrollToIndex](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scrolltoindex)等场景也能维护自己准确的滑动位置，进而使[scrollTo](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scrollto)能跳转到准确的指定位置，[currentOffset](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#currentoffset)能够获取到当前准确的滑动位置，内置滚动条能够平滑移动无跳变。

2.使用约束：

（1）提供的主轴方向大小必须与子组件实际在主轴方向的大小一致，子组件在主轴方向大小变化或者增删子组件时都必须通过ChildrenMainSize对象方法通知List组件。

（2）当子组件是ListItemGroup时，需要根据ListItemGroup的列数，ListItemGroup中ListItem在主轴方向的间距，ListItemGroup中header,footer,ListItem的大小准确计算出ListItemGroup整体在主轴方向的大小，并提供给List组件。

（3）如果子组件有ListItemGroup，必须给每一个ListItemGroup也设置childrenMainSize属性，List组件和每一个ListItemGroup组件都要通过childrenMainSize属性接口一对一绑定着一个ChildrenMainSize对象。

（4）多列场景使用LazyForEach生成子组件时，需确保LazyForEach全部生成ListItemGroup组件或者全部生成ListItem组件。

 |

ListItemAlign9+枚举说明
-------------------

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 名称 | 枚举值 | 描述 |
| --- | --- | --- |
| Start | 0 | ListItem在List中，交叉轴方向首部对齐。 |
| Center | 1 | ListItem在List中，交叉轴方向居中对齐。 |
| End | 2 | ListItem在List中，交叉轴方向尾部对齐。 |

StickyStyle9+枚举说明
-----------------

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 名称 | 枚举值 | 描述 |
| --- | --- | --- |
| None | 0 | ListItemGroup的header不吸顶，footer不吸底。 |
| Header | 1 | ListItemGroup的header吸顶，footer不吸底。 |
| Footer | 2 | ListItemGroup的footer吸底，header不吸顶。 |

设置列表项滚动结束对齐效果。

左右和上下这种两端对齐的样式：当列表位移至末端，则需要将末端的item完整显示，同时不能露出边界空白区域，此时另一端可以出现不限位对齐的现象。

只支持item等高场景限位，不等高场景可能存在不准确的情况。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 名称 | 枚举值 | 描述 |
| --- | --- | --- |
| NONE | 0 | 默认无项目滚动对齐效果。 |
| START | 1 | 视图中的第一项将在列表的开头对齐。
**说明：**

当列表位移至末端，需要将末端的item完整显示，可能出现开头不对齐的情况。

 |
| CENTER | 2 | 视图中的中间项将在列表中心对齐。

**说明：**

顶端和末尾的item都可以在列表中心对齐，列表显示可能露出空白，

第一个或最后一个item会对齐到中间位置。

 |
| END | 3 | 视图中的最后一项将在列表末尾对齐。

**说明：**

当列表位移至顶端，需要将顶端的item完整显示，可能出现末尾不对齐的情况。

 |

CloseSwipeActionOptions11+对象说明
------------------------------

收起[EXPANDED](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitem-V5#swipeactionstate11%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)状态[ListItem](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitem-V5)回调事件集合，用于设置收起动画完成后回调事件。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 名称 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| onFinish | ()=>void | 否 | 在收起动画完成后触发。 |

### onItemDelete(deprecated)

onItemDelete(event: (index: number) => boolean)

当List组件在编辑模式时，点击ListItem右边出现的删除按钮时触发。

从API version9开始废弃不再使用，无替代接口。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| index | number | 是 | 被删除的列表项的索引值。 |

**返回值：**

### onScrollIndex

onScrollIndex(event: (start: number, end: number, center: number) => void)

有子组件划入或划出List显示区域时触发。计算索引值时，ListItemGroup作为一个整体占一个索引值，不计算ListItemGroup内部ListItem的索引值。

List的边缘效果为弹簧效果时，在List划动到边缘继续划动和松手回弹过程不会触发onScrollIndex事件。

触发该事件的条件：列表初始化时会触发一次，List显示区域内第一个子组件的索引值或最后一个子组件的索引值有变化时会触发。

从API version 10开始，List显示区域中间位置子组件变化时也会触发该事件。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| start | number | 是 | List显示区域内第一个子组件的索引值 |
| end | number | 是 | List显示区域内最后一个子组件的索引值。 |
| center10+ | number | 是 | List显示区域内中间位置子组件的索引值。 |

### onReachStart

onReachStart(event: () => void)

列表到达起始位置时触发。

List初始化时如果initialIndex为0会触发一次，List滚动到起始位置时触发一次。List边缘效果为弹簧效果时，划动经过起始位置时触发一次，回弹回起始位置时再触发一次。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onReachEnd

onReachEnd(event: () => void)

列表到底末尾位置时触发。

List边缘效果为弹簧效果时，划动经过末尾位置时触发一次，回弹回末尾位置时再触发一次。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onScrollFrameBegin9+

onScrollFrameBegin(event: (offset: number, state: ScrollState) => { offsetRemain：number })

列表开始滑动时触发，事件参数传入即将发生的滑动量，事件处理函数中可根据应用场景计算实际需要的滑动量并作为事件处理函数的返回值返回，列表将按照返回值的实际滑动量进行滑动。

当listDirection的值为Axis.Vertical时，返回垂直方向滑动量，当listDirection的值为Axis.Horizontal时，返回水平方向滑动量。

触发该事件的条件：手指拖动List、List惯性划动时每帧开始时触发；List超出边缘回弹、使用滚动控制器和拖动滚动条的滚动不会触发。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| offset | number | 是 | 即将发生的滑动量，单位vp。 |
| state | [ScrollState](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#scrollstate%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E) | 是 | 当前滑动状态。 |

**返回值：**

| 类型 | 说明 |
| --- | --- |
| { offsetRemain: number } | 实际滑动量，单位vp。 |

### onScrollStart9+

onScrollStart(event: () => void)

列表滑动开始时触发。手指拖动列表或列表的滚动条触发的滑动开始时，会触发该事件。使用[Scroller](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scroller)滑动控制器触发的带动画的滑动，动画开始时会触发该事件

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onScrollStop

onScrollStop(event: () => void)

列表滑动停止时触发。手拖动列表或列表的滚动条触发的滑动，手离开屏幕并且滑动停止时会触发该事件。使用[Scroller](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scroller)滑动控制器触发的带动画的滑动，动画停止会触发该事件。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onItemMove

onItemMove(event: (from: number, to: number) => boolean)

列表元素发生移动时触发。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| from | number | 是 | 移动前索引值。 |
| to | number | 是 | 移动后索引值。 |

**返回值：**

### onItemDragStart8+

onItemDragStart(event: (event: ItemDragInfo, itemIndex: number) => ((() => any) | void))

开始拖拽列表元素时触发。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| event | [ItemDragInfo](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scrollable-common-V5#itemdraginfo%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | 是 | 拖拽点的信息。 |
| itemIndex | number | 是 | 被拖拽列表元素索引值。 |

### onItemDragEnter8+

onItemDragEnter(event: (event: ItemDragInfo) => void)

拖拽进入列表元素范围内时触发。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### onItemDragMove8+

onItemDragMove(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number) => void)

拖拽在列表元素范围内移动时触发。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| event | [ItemDragInfo](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scrollable-common-V5#itemdraginfo%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | 是 | 拖拽点的信息。 |
| itemIndex | number | 是 | 拖拽起始位置。 |
| insertIndex | number | 是 | 拖拽插入位置。 |

### onItemDragLeave8+

onItemDragLeave(event: (event: ItemDragInfo, itemIndex: number) => void)

拖拽离开列表元素时触发。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| event | [ItemDragInfo](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scrollable-common-V5#itemdraginfo%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | 是 | 拖拽点的信息。 |
| itemIndex | number | 是 | 拖拽离开的列表元素索引值。 |

### onItemDrop8+

onItemDrop(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number, isSuccess: boolean) => void)

绑定该事件的列表元素可作为拖拽释放目标，当在列表元素内停止拖拽时触发。

跨List拖拽时，当拖拽释放的位置绑定了onItemDrop时会返回true，否则为false。List内部拖拽时，isSuccess为onItemMove事件的返回值。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| event | [ItemDragInfo](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scrollable-common-V5#itemdraginfo%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | 是 | 拖拽点的信息。 |
| itemIndex | number | 是 | 拖拽起始位置。 |
| insertIndex | number | 是 | 拖拽插入位置。 |
| isSuccess | boolean | 是 | 是否成功释放 |

### onScroll(deprecated)

onScroll(event: (scrollOffset: number, scrollState: [ScrollState](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#scrollstate%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)) => void)

列表滑动时触发。

从API version 12开始废弃不再使用，推荐使用[onDidScroll](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#ondidscroll12)事件替代。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| scrollOffset | number | 是 | 每帧滚动的偏移量，List的内容向上滚动时偏移量为正，向下滚动时偏移量为负。
单位vp。

 |
| scrollState | [ScrollState](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#scrollstate%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E) | 是 | 当前滑动状态。 |

### onWillScroll12+

onWillScroll(handler: Optional<OnWillScrollCallback>)

列表滑动前触发。回调当前帧将要滑动的偏移量，当前滑动状态和滑动操作来源，其中回调的偏移量为计算得到的将要滑动的偏移量值，并非最终实际滑动偏移。可以通过该回调返回值指定列表将要滑动的偏移。

**卡片能力：** 从API version 12开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

说明

调用ScrollEdge和不带动画的ScrollToIndex时，不触发onWillScroll。

### onDidScroll12+

onDidScroll(handler: OnScrollCallback)

列表滑动时触发，返回当前帧滑动的偏移量和当前滑动状态。

**卡片能力：** 从API version 12开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### onScrollVisibleContentChange12+

onScrollVisibleContentChange(handler: OnScrollVisibleContentChangeCallback)

有子组件划入或划出List显示区域时触发。计算触发条件时，每一个ListItem/ListItemGroup中的header/ListItemGroup中的footer都算一个子组件。

List的边缘效果为弹簧效果时，在List划动到边缘继续划动和松手回弹过程不会触发onScrollVisibleContentChange事件。

触发该事件的条件：列表初始化时会触发一次，List显示区域内第一个子组件的索引值或最后一个子组件的索引值有变化时会触发。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 名称 | 枚举值 | 描述 |
| --- | --- | --- |
| Idle | 0 | 空闲状态。滚动状态回归空闲时触发，控制器提供的无动画方法控制滚动时触发。 |
| Scroll | 1 | 滚动状态。手指拖动List，拖动滚动条和滚动鼠标滚轮时触发。 |
| Fling | 2 | 惯性滚动状态。动画控制的滚动都会触发。包括快速划动松手后的惯性滚动，
划动到边缘回弹的滚动，快速拖动内置滚动条松手后的惯性滚动，

使用滚动控制器提供的带动画的方法控制的滚动。

 |

List组件的滚动控制器，通过它控制List组件的滚动，仅支持一对一绑定到List组件。

### 导入对象

1.  listScroller: ListScroller = new ListScroller()

### getItemRectInGroup11+

getItemRectInGroup(index: number, indexInGroup: number): RectResult

获取[ListItemGroup](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitemgroup-V5)中的[ListItem](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitem-V5)的大小和相对于List的位置。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 参数类型 | 必填 | 参数描述 |
| --- | --- | --- | --- |
| index | number | 是 | ListItemGroup在List中的索引值。 |
| indexInGroup | number | 是 | ListItem在ListItemGroup中的索引值。 |

说明

*   index必须是当前显示区域显示的子组件的索引值，否则视index为非法值。
*   索引值为index的子组件必须是ListItemGroup，否则视index为非法值。
*   indexInGroup必须是当前显示区域内ListItemGroup中显示的ListItem的索引值，否则视indexInGroup为非法值。
*   index或者indexInGroup为非法值时返回的大小和位置均为0。

**返回值：**

| 类型 | 说明 |
| --- | --- |
| [RectResult](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#rectresult10) | ListItemGroup中的ListItem的大小和相对于List的位置。
单位：vp。

 |

**错误码**：

以下错误码详细介绍请参考[通用错误码](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/errorcode-universal-V5)。

| 错误码ID | 错误信息 |
| --- | --- |
| 401 | Parameter error. Possible causes: 1. Mandatory parameters are left unspecified; 2.Incorrect parameter types; 3. Parameter verification failed. |
| 100004 | Controller not bound to component. |

### scrollToItemInGroup11+

scrollToItemInGroup(index: number, indexInGroup: number, smooth?: boolean, align?: ScrollAlign): void

滑动到指定的ListItemGroup中指定的ListItem。

开启smooth动效时，会对经过的所有item进行加载和布局计算，当大量加载item时会导致性能问题。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 参数类型 | 必填 | 参数描述 |
| --- | --- | --- | --- |
| index | number | 是 | 要滑动到的目标元素所在的ListItemGroup在当前容器中的索引值。
**说明：**

index值设置成负值或者大于当前容器子组件的最大索引值，视为异常值，本次跳转不生效。

 |
| indexInGroup | number | 是 | 要滑动到的目标元素在index指定的ListItemGroup中的索引值。

**说明：**

indexInGroup值设置成负值或者大于index指定的ListItemGroup容器子组件的最大索引值，视为异常值，本次跳转不生效。

 |
| smooth | boolean | 否 | 设置滑动到列表项在列表中的索引值时是否有动效，true表示有动效，false表示没有动效。

默认值：false。

 |
| align | [ScrollAlign](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-scroll-V5#scrollalign10%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E) | 否 | 指定滑动到的元素与当前容器的对齐方式。

默认值：ScrollAlign.START。

 |

**错误码**：

以下错误码详细介绍请参考[通用错误码](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/errorcode-universal-V5)。

| 错误码ID | 错误信息 |
| --- | --- |
| 401 | Parameter error. Possible causes: 1. Mandatory parameters are left unspecified; 2.Incorrect parameter types; 3. Parameter verification failed. |
| 100004 | Controller not bound to component. |

### closeAllSwipeActions11+

closeAllSwipeActions(options?: [CloseSwipeActionOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#closeswipeactionoptions11%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)): void

将[EXPANDED](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitem-V5#swipeactionstate11%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)状态的[ListItem](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-listitem-V5)收起，并设置回调事件。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

**错误码**：

以下错误码详细介绍请参考[通用错误码](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/errorcode-universal-V5)。

| 错误码ID | 错误信息 |
| --- | --- |
| 401 | Parameter error. Possible causes: 1. Mandatory parameters are left unspecified; 2.Incorrect parameter types; 3. Parameter verification failed. |
| 100004 | Controller not bound to component. |

说明

*   ListScroller必须绑定到List组件上。

OnScrollVisibleContentChangeCallback12+对象说明
-------------------------------------------

type OnScrollVisibleContentChangeCallback = (start: VisibleListContentInfo, end: VisibleListContentInfo) => void

有子组件划入或划出List显示区域时触发。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

VisibleListContentInfo12+对象说明
-----------------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| index | number | 是 | List显示区域内ListItem或ListItemGroup的索引值。 |
| itemGroupArea | [ListItemGroupArea](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-list-V5#listitemgrouparea12%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E) | 否 | 如果当前可视页面的上边或下边在某个ListItemGroup之中，将会显示它所处的位置。 |
| itemIndexInGroup | number | 否 | 如果当前可视页面的上边或下边在某个Group之中，将会显示Start或End的ListItem在Group中的索引。 |

ListItemGroupArea12+枚举说明
------------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 名称 | 枚举值 | 描述 |
| --- | --- | --- |
| NONE | 0 | 当前页面可视边处于none位置。例如，ListItemGroup中既没有header、footer，也没有ListItem。 |
| IN\_LIST\_ITEM\_AREA | 1 | 当前页面可视边处于ListItem位置。 |
| IN\_HEADER\_AREA | 2 | 当前页面可视边处于header位置。 |
| IN\_FOOTER\_AREA | 3 | 当前页面可视边处于footer位置。 |

示例
--

### 示例1

该示例实现了设置纵向列表，并在当前显示界面发生改变时回调索引。

2.  @Entry
3.  @Component
4.  struct ListExample {
5.    private arr: number\[\] = \[0, 1, 2, 3, 4, 5, 6, 7, 8, 9\]

7.    build() {
8.      Column() {
9.        List({ space: 20, initialIndex: 0 }) {
10.          ForEach(this.arr, (item: number) => {
11.            ListItem() {
12.              Text('' + item)
13.                .width('100%').height(100).fontSize(16)
14.                .textAlign(TextAlign.Center).borderRadius(10).backgroundColor(0xFFFFFF)
15.            }
16.          }, (item: string) => item)
17.        }
18.        .listDirection(Axis.Vertical) 
19.        .scrollBar(BarState.Off)
20.        .friction(0.6)
21.        .divider({ strokeWidth: 2, color: 0xFFFFFF, startMargin: 20, endMargin: 20 }) 
22.        .edgeEffect(EdgeEffect.Spring) 
23.        .onScrollIndex((firstIndex: number, lastIndex: number, centerIndex: number) => {
24.          console.info('first' + firstIndex)
25.          console.info('last' + lastIndex)
26.          console.info('center' + centerIndex)
27.        })
28.        .onScrollVisibleContentChange((start: VisibleListContentInfo, end: VisibleListContentInfo) => {
29.          console.log(' start index: ' + start.index +
30.                      ' start item group area: ' + start.itemGroupArea +
31.                      ' start index in group: ' + start.itemIndexInGroup)
32.          console.log(' end index: ' + end.index +
33.                      ' end item group area: ' + end.itemGroupArea +
34.                      ' end index in group: ' + end.itemIndexInGroup)
35.        })
36.        .onDidScroll((scrollOffset: number, scrollState: ScrollState) => {
37.          console.info(\`onScroll scrollState = ScrollState\` + scrollState + \`, scrollOffset = \` + scrollOffset)
38.        })
39.        .width('90%')
40.      }
41.      .width('100%')
42.      .height('100%')
43.      .backgroundColor(0xDCDCDC)
44.      .padding({ top: 5 })
45.    }
46.  }

![Image 1](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151257.58808873410199535945741144184057:50001231000000:2800:04022FDCABFC4604C5BEEEAA41A40ADF0FFDEB773E036518B9F6F8324ED0A925.gif?needInitFileName=true?needInitFileName=true)

### 示例2

2.  @Entry
3.  @Component
4.  struct ListLanesExample {
5.    @State arr: string\[\] = \["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19"\]
6.    @State alignListItem: ListItemAlign = ListItemAlign.Start

8.    build() {
9.      Column() {
10.        List({ space: 20, initialIndex: 0 }) {
11.          ForEach(this.arr, (item: string) => {
12.            ListItem() {
13.              Text('' + item)
14.                .width('100%')
15.                .height(100)
16.                .fontSize(16)
17.                .textAlign(TextAlign.Center)
18.                .borderRadius(10)
19.                .backgroundColor(0xFFFFFF)
20.            }
21.            .border({ width: 2, color: Color.Green })
22.          }, (item: string) => item)
23.        }
24.        .height(300)
25.        .width("90%")
26.        .friction(0.6)
27.        .border({ width: 3, color: Color.Red })
28.        .lanes({ minLength: 40, maxLength: 40 })
29.        .alignListItem(this.alignListItem)
30.        .scrollBar(BarState.Off)

32.        Button("点击更改alignListItem:" + this.alignListItem).onClick(() => {
33.          if (this.alignListItem == ListItemAlign.Start) {
34.            this.alignListItem = ListItemAlign.Center
35.          } else if (this.alignListItem == ListItemAlign.Center) {
36.            this.alignListItem = ListItemAlign.End
37.          } else {
38.            this.alignListItem = ListItemAlign.Start
39.          }
40.        })
41.      }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })
42.    }
43.  }

![Image 2](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151257.07154533328668263370898188167216:50001231000000:2800:5E1EA6F102DD6D90F0CFE1E6D3AF9E1C3362134B3B1A70CB648124BCA4B5A028.gif?needInitFileName=true?needInitFileName=true)

### 示例3

2.  @Entry
3.  @Component
4.  struct ListExample {
5.    @State arr: number\[\] = \[0, 1, 2, 3, 4, 5, 6, 7, 8, 9\]
6.    @State editFlag: boolean = false

8.    build() {
9.      Stack({ alignContent: Alignment.TopStart }) {
10.        Column() {
11.          List({ space: 20, initialIndex: 0 }) {
12.            ForEach(this.arr, (item: number, index?: number) => {
13.              ListItem() {
14.                Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Center }) {
15.                  Text('' + item)
16.                    .width('100%')
17.                    .height(80)
18.                    .fontSize(20)
19.                    .textAlign(TextAlign.Center)
20.                    .borderRadius(10)
21.                    .backgroundColor(0xFFFFFF)
22.                    .flexShrink(1)
23.                  if (this.editFlag) {
24.                    Button() {
25.                      Text("delete").fontSize(16)
26.                    }.width('30%').height(40)
27.                    .onClick(() => {
28.                      if (index != undefined) {
29.                        console.info(this.arr\[index\] + 'Delete')
30.                        this.arr.splice(index, 1)
31.                        console.info(JSON.stringify(this.arr))
32.                        this.editFlag = false
33.                      }
34.                    }).stateEffect(true)
35.                  }
36.                }
37.              }
38.            }, (item: string) => item)
39.          }.width('90%')
40.          .scrollBar(BarState.Off)
41.          .friction(0.6)
42.        }.width('100%')

44.        Button('edit list')
45.          .onClick(() => {
46.            this.editFlag = !this.editFlag
47.          }).margin({ top: 5, left: 20 })
48.      }.width('100%').height('100%').backgroundColor(0xDCDCDC).padding({ top: 5 })
49.    }
50.  }

![Image 3](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151258.80832911502846480407364803905124:50001231000000:2800:1D54925D862B5366B052C50F61CDD7622C9EABC955A828CF35900D72F4A24919.gif?needInitFileName=true?needInitFileName=true)

### 示例4

2.  @Entry
3.  @Component
4.  struct ListExample {
5.    private arr: number\[\] = \[\]
6.    private scrollerForList: Scroller = new Scroller()

8.    aboutToAppear() {
9.      for (let i = 0; i < 20; i++) {
10.        this.arr.push(i)
11.      }
12.    }
13.    build() {
14.      Column() {
15.        Row() {
16.          List({ space: 20, initialIndex: 3, scroller: this.scrollerForList }) {
17.            ForEach(this.arr, (item: number) => {
18.              ListItem() {
19.                Text('' + item)
20.                  .width('100%').height(100).fontSize(16)
21.                  .textAlign(TextAlign.Center)
22.              }
23.              .borderRadius(10).backgroundColor(0xFFFFFF)
24.              .width('60%')
25.              .height('80%')
26.            }, (item: number) => JSON.stringify(item))
27.          }
28.          .chainAnimation(true)
29.          .edgeEffect(EdgeEffect.Spring)
30.          .listDirection(Axis.Horizontal)
31.          .height('100%')
32.          .width('100%')
33.          .scrollSnapAlign(ScrollSnapAlign.CENTER)
34.          .borderRadius(10)
35.          .backgroundColor(0xDCDCDC)
36.        }
37.        .width('100%')
38.        .height('100%')
39.        .backgroundColor(0xDCDCDC)
40.        .padding({ top: 10 })
41.      }
42.    }
43.  }

![Image 4](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151258.81061716192941878172921832073089:50001231000000:2800:DABA6BCCD340B11AF265A88EA0B0481CA559E3BD377847D6555FCA93AE440D00.gif?needInitFileName=true?needInitFileName=true)

### 示例5

该示例通过设置childrenMainSize属性，实现了List在子组件高度不一致时调用scrollTo接口也可以跳转准确。

2.  @Entry
3.  @Component
4.  struct ListExample {
5.    private arr: number\[\] = \[\]
6.    private scroller: ListScroller = new ListScroller()
7.    @State listSpace: number = 10
8.    @State listChildrenSize: ChildrenMainSize = new ChildrenMainSize(100)
9.    aboutToAppear(){

11.      for (let i = 0; i < 10; i++) {
12.        this.arr.push(i)
13.      }

15.      this.listChildrenSize.splice(0, 5, \[300, 300, 300, 300, 300\])
16.    }
17.    build() {
18.      Column() {
19.        List({ space: this.listSpace, initialIndex: 4, scroller: this.scroller }) {
20.          ForEach(this.arr, (item: number) => {
21.            ListItem() {
22.              Text('item-' + item)
23.                .height( item < 5 ? 300 : this.listChildrenSize.childDefaultSize)
24.                .width('90%')
25.                .fontSize(16)
26.                .textAlign(TextAlign.Center)
27.                .borderRadius(10)
28.                .backgroundColor(0xFFFFFF)
29.            }
30.          }, (item: string) => item)
31.        }
32.        .backgroundColor(Color.Gray)
33.        .layoutWeight(1)
34.        .scrollBar(BarState.On)
35.        .childrenMainSize(this.listChildrenSize)
36.        .alignListItem(ListItemAlign.Center)
37.        Row(){
38.          Button() { Text('item size + 50') }.onClick(()=>{
39.            this.listChildrenSize.childDefaultSize += 50
40.          }).height('50%').width('30%')
41.          Button() { Text('item size - 50') }.onClick(()=>{
42.            if (this.listChildrenSize.childDefaultSize === 0) {
43.              return
44.            }
45.            this.listChildrenSize.childDefaultSize -= 50
46.          }).height('50%').width('30%')
47.          Button() { Text('scrollTo (0, 310)') }.onClick(()=>{

50.            this.scroller.scrollTo({xOffset: 0, yOffset: 310})
51.          }).height('50%').width('30%')
52.        }.height('20%')
53.      }
54.    }
55.  }

![Image 5](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151258.57989244420917599833662404390539:50001231000000:2800:EE7BA07664CD931C96275E52ECBE3016FD09691D33468187334EADFF212F98EC.gif?needInitFileName=true?needInitFileName=true)
