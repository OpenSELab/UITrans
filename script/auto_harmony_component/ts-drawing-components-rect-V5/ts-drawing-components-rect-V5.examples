/*\n实现思路：\n本示例展示了如何使用鸿蒙ArkUI框架创建具有渐变背景和圆角裁剪效果的矩形组件。通过使用Column布局和Rect组件，结合linearGradient和clip属性，实现视觉效果。\n\n总体功能与效果描述：\n示例包含两个矩形组件，第一个矩形具有线性渐变背景并应用了圆角裁剪，第二个矩形则展示了填充颜色、圆角和边框效果。\n*/\n\n// RectExample.ets\n@Entry\n@Component\nstruct RectExample {\n  build() {\n    Column({ space: 10 }) {\n      // 第一个矩形组件\n      Column()\n        .width(100) // 设置宽度为100\n        .height(100) // 设置高度为100\n        .linearGradient({\n          direction: GradientDirection.Right, // 设置渐变方向为从左到右\n          colors: [[0xff0000, 0.0], [0x0000ff, 0.3], [0xffff00, 1.0]] // 设置渐变颜色和位置\n        })\n        .clip(new Rect({ width: 100, height: 100, radius: 40 })) // 应用圆角裁剪效果\n\n      // 第二个矩形组件\n      Rect()\n        .width(100) // 设置宽度为100\n        .height(100) // 设置高度为100\n        .fill(Color.Pink) // 设置填充颜色为粉色\n        .radius(40) // 设置圆角半径为40\n        .stroke(Color.Black) // 设置边框颜色为黑色\n        .linearGradient({\n          direction: GradientDirection.Right, // 设置渐变方向为从左到右\n          colors: [[0xff0000, 0.0], [0x0000ff, 0.3], [0xffff00, 1.0]] // 设置渐变颜色和位置\n        })\n    }\n  }\n}


/*\n实现思路：\n本示例展示了如何使用Rect组件来创建不同样式的矩形，包括填充颜色、边框、圆角等效果。通过不同的属性和方法组合，实现多样化的矩形展示。\n总体功能与效果描述：\n展示不同样式的矩形，包括填充颜色、边框、圆角等效果。\n*/\n\n// RectExample.ets\n@Entry\n@Component\nstruct RectExample {\n  build() {\n    Column({ space: 10 }) {\n      Text('normal').fontSize(11).fontColor(0xCCCCCC).width('90%')\n      // 创建一个包含多个矩形的列组件，设置间距为5\n      Column({ space: 5 }) {\n        Text('normal').fontSize(9).fontColor(0xCCCCCC).width('90%')\n        // 创建一个填充为粉色的矩形\n        Rect({ width: '90%', height: 50 })\n          .fill(Color.Pink)\n        // 创建一个无填充、红色边框的矩形\n        Rect()\n          .width('90%')\n          .height(50)\n          .fillOpacity(0)\n          .stroke(Color.Red)\n          .strokeWidth(3)\n        // 创建一个带有圆角的矩形\n        Text('with rounded corners').fontSize(11).fontColor(0xCCCCCC).width('90%')\n        Rect({ width: '90%', height: 80 })\n          .radiusHeight(20)\n          .radiusWidth(40)\n          .fill(Color.Pink)\n        // 创建一个带有统一圆角的矩形\n        Rect({ width: '90%', height: 80 })\n          .radius(20)\n          .fill(Color.Pink)\n          .stroke(Color.Transparent)\n      }.width('100%').margin({ top: 10 })\n      // 创建一个带有不同圆角半径的矩形\n      Rect({ width: '90%', height: 80 })\n        .radius([[40, 40], [20, 20], [40, 40], [20, 20]])\n        .fill(Color.Pink)\n    }.width('100%').margin({ top: 5 })\n  }\n}