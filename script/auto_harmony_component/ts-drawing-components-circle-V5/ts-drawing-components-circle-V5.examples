/*\n实现思路：\n本示例展示了如何使用Circle组件绘制不同样式的圆形和圆环。通过设置不同的属性和样式，可以实现基本的圆形绘制和带有特定样式的圆环绘制。\n总体功能与效果描述：\n示例中包含两个功能块：第一个功能块绘制一个直径为150的实心圆；第二个功能块绘制一个直径为150的红色虚线圆环。\n*/\n\n// CircleExample.ets\n@Entry\n@Component\nstruct CircleExample {\n  build() {\n    Column({ space: 10 }) {\n      // 绘制一个直径为150的圆\n      Circle({ width: 150, height: 150 })\n      // 注释：创建一个Circle组件，设置其宽度和高度均为150，形成一个直径为150的实心圆。\n\n      // 绘制一个直径为150、线条为红色虚线的圆环（宽高设置不一致时以短边为直径）\n      Circle()\n        .width(150)\n        // 注释：设置Circle组件的宽度为150。\n        .height(200)\n        // 注释：设置Circle组件的高度为200，但由于宽高不一致，实际绘制的圆环直径为150（短边）。\n        .fillOpacity(0)\n        // 注释：设置填充透明度为0，使圆形不填充颜色，形成圆环效果。\n        .strokeWidth(3)\n        // 注释：设置圆环的线条宽度为3。\n        .stroke(Color.Red)\n        // 注释：设置圆环的线条颜色为红色。\n        .strokeDashArray([1, 2])\n        // 注释：设置圆环的线条样式为虚线，具体为1像素实线与2像素间隔交替。\n    }.width('100%')\n    // 注释：设置Column组件的宽度为100%，使其占满父容器的宽度。\n  }\n}