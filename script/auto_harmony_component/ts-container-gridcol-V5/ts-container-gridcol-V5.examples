/*\n实现思路：\n本示例展示了如何使用GridRow组件来创建一个栅格布局，通过设置不同的属性来调整栅格的列数、间距和对齐方式。\n总体功能与效果描述：\n通过GridRow和GridCol组件的组合，实现了一个响应式的栅格布局，能够根据屏幕宽度自动调整列的显示。\n*/\n\n// GridRowExample.ets\n@Entry\n@Component\nstruct GridRowExample {\n  build() {\n    Column({ space: 5 }) {\n      // 创建一个GridRow容器，设置列数为3，列间距为10，内容水平和垂直居中对齐\n      GridRow({ columns: 3, gutter: 10, alignContent: FlexAlign.Center, alignItems: VerticalAlign.Center }) {\n        // 第一个栅格列，设置背景色为蓝色，宽度为100，高度为50\n        GridCol() {\n          Text('Column 1')\n            .fontSize(16)\n            .fontColor(Color.White)\n        }\n        .backgroundColor(Color.Blue)\n        .width(100)\n        .height(50)\n\n        // 第二个栅格列，设置背景色为绿色，宽度为100，高度为50\n        GridCol() {\n          Text('Column 2')\n            .fontSize(16)\n            .fontColor(Color.White)\n        }\n        .backgroundColor(Color.Green)\n        .width(100)\n        .height(50)\n\n        // 第三个栅格列，设置背景色为红色，宽度为100，高度为50\n        GridCol() {\n          Text('Column 3')\n            .fontSize(16)\n            .fontColor(Color.White)\n        }\n        .backgroundColor(Color.Red)\n        .width(100)\n        .height(50)\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor(Color.Gray)\n\n      // 创建另一个GridRow容器，设置列数为2，列间距为5，内容水平和垂直居中对齐\n      GridRow({ columns: 2, gutter: 5, alignContent: FlexAlign.Center, alignItems: VerticalAlign.Center }) {\n        // 第一个栅格列，设置背景色为黄色，宽度为100，高度为50\n        GridCol() {\n          Text('Column 1')\n            .fontSize(16)\n            .fontColor(Color.Black)\n        }\n        .backgroundColor(Color.Yellow)\n        .width(100)\n        .height(50)\n\n        // 第二个栅格列，设置背景色为紫色，宽度为100，高度为50\n        GridCol() {\n          Text('Column 2')\n            .fontSize(16)\n            .fontColor(Color.White)\n        }\n        .backgroundColor(Color.Purple)\n        .width(100)\n        .height(50)\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor(Color.Gray)\n    }\n    .width('100%')\n    .height('100%')\n    .padding(10)\n  }\n}