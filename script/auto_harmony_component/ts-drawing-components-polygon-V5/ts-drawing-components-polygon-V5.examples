/*\n实现思路：\n本示例展示了如何使用Polygon组件绘制不同形状的多边形，并通过不同的属性设置来调整其外观。\n总体功能与效果描述：\n通过三个不同的Polygon实例，展示了如何绘制三角形、矩形和五边形，并分别设置了不同的填充颜色、边框样式和透明度。\n*/\n\n// PolygonExample.ets\n@Entry\n@Component\nstruct PolygonExample {\n  build() {\n    Column({ space: 10 }) {\n      // 第一个Polygon实例，绘制一个三角形\n      // 功能与效果描述：绘制一个绿色的三角形，顶点坐标分别为(0, 0), (50, 100), (100, 0)\n      Polygon({ width: 100, height: 100 })\n        .points([[0, 0], [50, 100], [100, 0]])\n        .fill(Color.Green)\n\n      // 第二个Polygon实例，绘制一个矩形\n      // 功能与效果描述：绘制一个蓝色边框的矩形，顶点坐标分别为(0, 0), (0, 100), (100, 100), (100, 0)，无填充颜色\n      Polygon().width(100).height(100)\n        .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n        .fillOpacity(0) // 设置填充透明度为0，即无填充颜色\n        .strokeWidth(5) // 设置边框宽度为5\n        .stroke(Color.Blue) // 设置边框颜色为蓝色\n\n      // 第三个Polygon实例，绘制一个五边形\n      // 功能与效果描述：绘制一个半透明的红色五边形，顶点坐标分别为(50, 0), (0, 50), (20, 100), (80, 100), (100, 50)\n      Polygon().width(100).height(100)\n        .points([[50, 0], [0, 50], [20, 100], [80, 100], [100, 50]])\n        .fill(Color.Red) // 设置填充颜色为红色\n        .fillOpacity(0.6) // 设置填充透明度为0.6，即半透明\n    }.width('100%').margin({ top: 10 })\n  }\n}