{
    "description": "WithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。",
    "details": null,
    "interfaces": [
        {
            "description": "WithTheme(options: WithThemeOptions)",
            "params": {
                "options": {
                    "type": "WithThemeOptions",
                    "required": false,
                    "description": "设置WithTheme作用域内组件缺省样式及深浅色模式。",
                    "default": null
                }
            }
        }
    ],
    "attributes": {
        "WithThemeOptions": {
            "description": "设置WithTheme作用域内组件缺省样式及深浅色模式。",
            "params": {
                "theme": {
                    "type": "CustomTheme",
                    "required": false,
                    "description": "用于自定义WithTheme作用域内组件缺省配色。",
                    "default": null
                },
                "colorMode": {
                    "type": "ThemeColorMode",
                    "required": false,
                    "description": "用于指定WithTheme作用域内组件深浅色模式。",
                    "default": "ThemeColorMode.System"
                }
            }
        }
    },
    "events": {},
    "rules": null,
    "examples": [
        "/*\\n实现思路：\\n本示例展示了如何在鸿蒙ArkUI中设置局部深浅色模式。通过创建dark.json资源文件，并在代码中引用这些资源，实现深浅色模式的切换。\\n\\n总体功能与效果描述：\\n通过配置dark.json文件，使得应用在深色模式和浅色模式下显示不同的颜色和样式。用户可以根据系统或应用的设置，动态切换深浅色模式。\\n*/\\n\\n// main.ets\\n@Entry\\n@Component\\nstruct LocalDarkModeExample {\\n  @State isDarkMode: boolean = false; // 定义一个状态变量，用于控制深浅色模式\\n\\n  build() {\\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\\n      Text('Hello World')\\n        .fontSize(50)\\n        .fontColor(this.isDarkMode ? Color.White : Color.Black) // 根据深浅色模式设置文本颜色\\n        .backgroundColor(this.isDarkMode ? Color.Black : Color.White) // 根据深浅色模式设置背景颜色\\n\\n      Button('Toggle Dark Mode')\\n        .onClick(() => {\\n          this.isDarkMode = !this.isDarkMode; // 切换深浅色模式\\n        })\\n    }\\n    .width('100%')\\n    .height('100%')\\n  }\\n}\\n\\n// dark.json\\n{\\n  \"color\": {\\n    \"background\": \"#000000\", // 深色模式下的背景颜色\\n    \"text\": \"#FFFFFF\" // 深色模式下的文本颜色\\n  }\\n}"
    ],
    "is_common_attrs": true
}