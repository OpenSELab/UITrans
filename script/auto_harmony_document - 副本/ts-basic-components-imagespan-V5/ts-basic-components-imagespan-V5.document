Title: ImageSpan-文本与输入-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-imagespan-V5

Markdown Content:
[Text](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-text-V5)、[ContainerSpan](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-containerspan-V5)组件的子组件，用于显示行内图片。

说明

该组件从API Version 10开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

ImageSpan(value: ResourceStr | PixelMap)

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceStr](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcestr) | [PixelMap](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-image-V5#pixelmap7)

是

图片的数据源，支持本地图片和网络图片。

当使用相对路径引用图片资源时，例如ImageSpan("common/test.jpg")，不支持跨包/跨模块调用该ImageSpan组件，建议使用$r方式来管理需全局使用的图片资源。

\- 支持的图片格式包括png、jpg、bmp、svg、gif和heif。

\- 支持Base64字符串。格式data:image/\[png|jpeg|bmp|webp|heif\];base64,\[base64 data\], 其中\[base64 data\]为Base64字符串数据。

\- 支持file:///data/storage路径前缀的字符串，用于读取本应用安装目录下files文件夹下的图片资源。需要保证目录包路径下的文件有可读权限。

### alt12+

alt(value: PixelMap)

设置图片加载时显示的占位图。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### verticalAlign

verticalAlign(value: ImageSpanAlignment)

设置图片基于行高的对齐方式。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### objectFit

objectFit(value: ImageFit)

设置图片的缩放类型。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ImageFit](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#imagefit)

是

图片的缩放类型。

默认值：ImageFit.Cover

### onComplete12+

onComplete(callback: ImageCompleteCallback)

图片数据加载成功和解码成功时均触发该回调，返回成功加载的图片尺寸。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### onError12+

onError(callback: ImageErrorCallback)

图片加载异常时触发该回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

ImageCompleteCallback12+
------------------------

type ImageCompleteCallback = (result: ImageLoadResult) =\> void

图片加载异常时触发的回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

ImageLoadResult12+对象说明
----------------------

图片数据加载成功和解码成功触发回调时返回的对象。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

width

number

是

图片的宽。

单位：像素

height

number

是

图片的高。

单位：像素

componentWidth

number

是

组件的宽。

单位：像素

componentHeight

number

是

组件的高。

单位：像素

loadingStatus

number

是

图片加载成功的状态值。

**说明：**

返回的状态值为0时，表示图片数据加载成功。返回的状态值为1时，表示图片解码成功。

contentWidth

number

是

图片实际绘制的宽度。

单位：像素

**说明：**

仅在loadingStatus返回1时有效。

contentHeight

number

是

图片实际绘制的高度。

单位：像素

**说明：**

仅在loadingStatus返回1时有效。

contentOffsetX

number

是

实际绘制内容相对于组件自身的x轴偏移。

单位：像素

**说明：**

仅在loadingStatus返回1时有效。

contentOffsetY

number

是

实际绘制内容相对于组件自身的y轴偏移。

单位：像素

**说明：**

仅在loadingStatus返回1时有效。

示例
--

### 示例1

该示例实现了设置ImageSpan的基本属性和图片基于文本的对齐方式。

2.  @Entry
3.  @Component
4.  struct SpanExample {
5.    build() {
6.      Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {
7.        Text() {
8.          Span('This is the Span and ImageSpan component').fontSize(25).textCase(TextCase.Normal)
9.            .decoration({ type: TextDecorationType.None, color: Color.Pink })
10.        }.width('100%').textAlign(TextAlign.Center)

12.        Text() {
13.          ImageSpan($r('app.media.icon'))
14.            .width('200px')
15.            .height('200px')
16.            .objectFit(ImageFit.Fill)
17.            .verticalAlign(ImageSpanAlignment.CENTER)
18.          Span('I am LineThrough-span')
19.            .decoration({ type: TextDecorationType.LineThrough, color: Color.Red }).fontSize(25)
20.          ImageSpan($r('app.media.icon'))
21.            .width('50px')
22.            .height('50px')
23.            .verticalAlign(ImageSpanAlignment.TOP)
24.          Span('I am Underline-span')
25.            .decoration({ type: TextDecorationType.Underline, color: Color.Red }).fontSize(25)
26.          ImageSpan($r('app.media.icon'))
27.            .size({ width: '100px', height: '100px' })
28.            .verticalAlign(ImageSpanAlignment.BASELINE)
29.          Span('I am Underline-span')
30.            .decoration({ type: TextDecorationType.Underline, color: Color.Red }).fontSize(25)
31.          ImageSpan($r('app.media.icon'))
32.            .width('70px')
33.            .height('70px')
34.            .verticalAlign(ImageSpanAlignment.BOTTOM)
35.          Span('I am Underline-span')
36.            .decoration({ type: TextDecorationType.Underline, color: Color.Red }).fontSize(50)
37.        }
38.        .width('100%')
39.        .textIndent(50)
40.      }.width('100%').height('100%').padding({ left: 0, right: 0, top: 0 })
41.    }
42.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114443.17924572321701794645366025464526:50001231000000:2800:FF52A2B76574F01D5FBAEAD276E490EDE5A36836ADBD5D522E5491D6C4AD75C3.png?needInitFileName=true?needInitFileName=true)

### 示例2

该示例实现了如何设置ImageSpan图片的背景样式。

2.  @Component
3.  @Entry
4.  struct Index {
5.    build() {
6.      Column() {
7.        Text() {
8.          ImageSpan($r('app.media.app\_icon'))
9.            .width('60vp')
10.            .height('60vp')
11.            .verticalAlign(ImageSpanAlignment.CENTER)
12.            .textBackgroundStyle({color: Color.Green, radius: "5vp"})
13.        }
14.      }.width('100%').alignItems(HorizontalAlign.Center)
15.    }
16.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114443.18567831572108703961865967437045:50001231000000:2800:A643052F5CA3712A5B8D9380AD0EDAA01BBBEC710144632034D8C3B2E93D6B1E.png?needInitFileName=true?needInitFileName=true)

### 示例3

ImageSpan设置图片成功加载解码和图片加载异常事件回调。

2.  @Entry
3.  @Component
4.  struct Index {
5.    @State src: ResourceStr = $r('app.media.icon');
6.    build(){
7.      Column(){
8.        Text(){
9.          ImageSpan(this.src)
10.            .width(100).height(100)
11.            .onError((err)=\>{
12.              console.log("onError:" + err.message)
13.            })
14.            .onComplete((event)=\>{
15.              console.log("onComplete: " + event.loadingStatus)
16.            })
17.        }
18.      }.width('100%').height('100%')
19.    }
20.  }

### 示例4

该示例实现了ImageSpan设置加载网络图片时占位图的效果。

2.  import { http } from '@kit.NetworkKit'
3.  import { image } from '@kit.ImageKit'
4.  import { BusinessError } from '@kit.BasicServicesKit'

6.  @Entry
7.  @Component
8.  struct SpanExample {
9.    @State imageAlt: PixelMap | undefined = undefined

11.    httpRequest() {

13.      http.createHttp().request("https://www.example.com/xxx.png", (error: BusinessError, data: http.HttpResponse) =\> {
14.        if (error) {
15.          console.error(\`http request failed with. Code: ${error.code}, message: ${error.message}\`)
16.        } else {
17.          console.log(\`http request success.\`)
18.          let imageData: ArrayBuffer = data.result as ArrayBuffer
19.          let imageSource: image.ImageSource = image.createImageSource(imageData)

21.          class tmp {
22.            height: number = 100
23.            width: number = 100
24.          }

26.          let option: Record<string, number | boolean | tmp\> = {
27.            'alphaType': 0, 
28.            'editable': false, 
29.            'pixelFormat': 3, 
30.            'scaleMode': 1, 
31.            'size': { height: 100, width: 100 }
32.          }

34.          imageSource.createPixelMap(option).then((pixelMap: PixelMap) =\> {
35.            this.imageAlt = pixelMap
36.          })
37.        }
38.      })
39.    }

41.    build() {
42.      Column() {
43.        Button("获取网络图片")
44.          .onClick(() =\> {
45.            this.httpRequest()
46.          })

48.        Text() {

50.          ImageSpan('https://www.example.com/xxx.png')
51.            .alt(this.imageAlt)
52.            .width(300)
53.            .height(300)
54.        }

56.      }.width('100%').height(250).padding({ left: 35, right: 35, top: 35 })
57.    }
58.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114443.78143154494641910225771019462249:50001231000000:2800:45CA68A1EA63F60B467FF243AB32AF574B824C1C175CE6426910686A3987654A.gif?needInitFileName=true?needInitFileName=true)
