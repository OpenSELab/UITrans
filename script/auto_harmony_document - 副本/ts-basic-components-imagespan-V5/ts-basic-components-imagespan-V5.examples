/*\n实现一个包含多个Text组件的页面，展示Span和ImageSpan组件的不同用法。\n第一个Text组件展示Span文本的装饰效果，第二个Text组件展示ImageSpan和Span的组合效果。\n*/\n\n@Entry\n@Component\nstruct SpanExample {\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Center }) {\n      // 第一个Text组件包含一个Span文本，展示文本的装饰效果\n      Text() {\n        Span('This is the Span and ImageSpan component').fontSize(25).textCase(TextCase.Normal)\n          .decoration({ type: TextDecorationType.None, color: Color.Pink })\n      }.width('100%').textAlign(TextAlign.Center)\n\n      // 第二个Text组件展示不同的ImageSpan和Span组合效果\n      Text() {\n        // 第一个ImageSpan展示图片并设置宽高和填充方式\n        ImageSpan($r('app.media.icon'))\n          .width('200px')\n          .height('200px')\n          .objectFit(ImageFit.Fill)\n          .verticalAlign(ImageSpanAlignment.CENTER)\n        // 第一个Span展示带有删除线的文本\n        Span('I am LineThrough-span')\n          .decoration({ type: TextDecorationType.LineThrough, color: Color.Red }).fontSize(25)\n        // 第二个ImageSpan展示图片并设置垂直对齐方式\n        ImageSpan($r('app.media.icon'))\n          .width('50px')\n          .height('50px')\n          .verticalAlign(ImageSpanAlignment.TOP)\n        // 第二个Span展示带有下划线的文本\n        Span('I am Underline-span')\n          .decoration({ type: TextDecorationType.Underline, color: Color.Red }).fontSize(25)\n        // 第三个ImageSpan展示图片并设置尺寸和垂直对齐方式\n        ImageSpan($r('app.media.icon'))\n          .size({ width: '100px', height: '100px' })\n          .verticalAlign(ImageSpanAlignment.BASELINE)\n        // 第三个Span展示带有下划线的文本\n        Span('I am Underline-span')\n          .decoration({ type: TextDecorationType.Underline, color: Color.Red }).fontSize(25)\n        // 第四个ImageSpan展示图片并设置宽高和垂直对齐方式\n        ImageSpan($r('app.media.icon'))\n          .width('70px')\n          .height('70px')\n          .verticalAlign(ImageSpanAlignment.BOTTOM)\n        // 第四个Span展示带有下划线的文本，字体大小更大\n        Span('I am Underline-span')\n          .decoration({ type: TextDecorationType.Underline, color: Color.Red }).fontSize(50)\n      }\n      .width('100%')\n      .textIndent(50)\n    }.width('100%').height('100%').padding({ left: 0, right: 0, top: 0 })\n  }\n}