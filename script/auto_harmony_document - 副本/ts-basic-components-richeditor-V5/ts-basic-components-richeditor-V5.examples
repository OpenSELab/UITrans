// 实现一个富文本编辑器示例，包含自定义键盘组件，点击按钮将字符插入到富文本编辑器中，并设置样式。\n// 富文本编辑器示例将展示一个带有自定义键盘的编辑器界面，用户可以通过点击按钮插入字符到编辑器中。\n\n@Entry\n@Component\nstruct RichEditorExample {\n  controller: RichEditorController = new RichEditorController() // 创建富文本编辑器控制器\n\n  // 自定义键盘组件\n  @Builder CustomKeyboardBuilder() {\n    // 定义自定义键盘布局\n    Column() {\n      // 创建网格布局\n      Grid() {\n        // 遍历数字和特殊字符数组，生成对应按钮\n        ForEach([1, 2, 3, 4, 5, 6, 7, 8, 9, '*', 0, '#'], (item: number | string) => {\n          GridItem() {\n            // 创建按钮，点击按钮将对应字符插入到富文本编辑器中\n            Button(item + "")\n              .width(110).onClick(() => {\n              // 在光标位置插入字符，并设置样式\n              this.controller.addTextSpan(item + '', {\n                offset: this.controller.getCaretOffset(),\n                style:\n                {\n                  fontColor: Color.Orange, // 设置字体颜色为橙色\n                  fontSize: 30 // 设置字体大小为30\n                }\n              })\n              this.controller.setCaretOffset(this.controller.getCaretOffset() + item.toString().length) // 移动光标位置\n            })\n          }\n        })\n      }.maxCount(3).columnsGap(10).rowsGap(10).padding(5) // 设置网格布局属性\n    }.backgroundColor(Color.Gray) // 设置自定义键盘背景颜色为灰色\n  }\n\n  build() {\n    // 构建富文本编辑器示例\n    Column() {\n      RichEditor({ controller: this.controller })\n        // 绑定自定义键盘\n        .customKeyboard(this.CustomKeyboardBuilder()).margin(10).border({ width: 1 }) // 设置边距和边框\n        .height(200) // 设置高度为200\n        .borderWidth(1) // 设置边框宽度为1\n        .borderColor(Color.Red) // 设置边框颜色为红色\n        .width("100%") // 设置宽度为100%\n    }\n  }\n}