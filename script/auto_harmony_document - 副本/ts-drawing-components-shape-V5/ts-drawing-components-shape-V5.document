Title: Shape-图形绘制-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-drawing-components-shape-V5

Markdown Content:
绘制组件的父组件，父组件中会描述所有绘制组件均支持的通用属性。

1、绘制组件使用Shape作为父组件，实现类似SVG的效果。

2、绘制组件单独使用，用于在页面上绘制指定的图形。

说明

该组件从API Version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

Shape(value?: PixelMap)

从API version 9开始，该接口支持在ArkTS卡片中使用，卡片中不支持使用PixelMap对象。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [PixelMap](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-image-V5#pixelmap7) | 否 | 绘制目标，可将图形绘制在指定的PixelMap对象中，若未设置，则在当前绘制目标中进行绘制。 |

### viewPort

viewPort(value: { x?: number | string; y?: number | string; width?: number | string; height?: number | string })

设置形状的视口。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | {
x?: number | string,

y?: number | string,

width?: number | string,

height?: number | string

}

 | 是 | 形状的视口。

默认值：{ x:0, y:0, width:0, height:0 }

 |

### fill

fill(value: ResourceColor)

设置填充区域颜色。异常值按照默认值处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### fillOpacity

fillOpacity(value: number | string | Resource)

设置填充区域透明度。取值范围是\[0.0, 1.0\]，若给定值小于0.0，则取值为0.0；若给定值大于1.0，则取值为1.0，其余异常值按1.0处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | string | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource) | 是 | 填充区域透明度。
默认值：1

 |

### stroke

stroke(value: ResourceColor)

设置边框颜色，不设置时，默认没有边框。异常值不会绘制边框。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### strokeDashArray

strokeDashArray(value: Array<any>)

设置边框间隙。异常值按照默认值处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | Array<any> | 是 | 边框间隙。
默认值：\[\]

 |

### strokeDashOffset

strokeDashOffset(value: number | string)

设置边框绘制起点的偏移量。异常值按照默认值处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | string | 是 | 边框绘制起点的偏移量。
默认值：0

 |

### strokeLineCap

strokeLineCap(value: LineCapStyle)

设置边框端点绘制样式。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [LineCapStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#linecapstyle) | 是 | 边框端点绘制样式。
默认值：LineCapStyle.Butt

 |

### strokeLineJoin

strokeLineJoin(value: LineJoinStyle)

设置边框拐角绘制样式。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [LineJoinStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#linejoinstyle) | 是 | 边框拐角绘制样式。
默认值：LineJoinStyle.Miter

 |

### strokeMiterLimit

strokeMiterLimit(value: number | string)

设置斜接长度与边框宽度比值的极限值。斜接长度表示外边框外边交点到内边交点的距离，边框宽度即strokeWidth属性的值。该属性取值需在strokeLineJoin属性取值LineJoinStyle.Miter时生效。

该属性的合法值范围应当大于等于1.0，当取值范围在\[0,1)时按1.0处理，其余异常值按默认值处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | string | 是 | 斜接长度与边框宽度比值的极限值。
默认值：4

 |

### strokeOpacity

strokeOpacity(value: number | string | Resource)

设置边框透明度。该属性的取值范围是\[0.0, 1.0\]，若给定值小于0.0，则取值为0.0；若给定值大于1.0，则取值为1.0，其余异常值按1.0处理 。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | string | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource) | 是 | 边框透明度。
默认值：1

 |

### strokeWidth

strokeWidth(value: Length)

设置边框宽度。该属性若为string类型, 暂不支持百分比，百分比按照1px处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length) | 是 | 边框宽度。
默认值：1

 |

### antiAlias

antiAlias(value: boolean)

设置是否开启抗锯齿效果。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | boolean | 是 | 是否开启抗锯齿效果。
默认值：true

 |

### mesh8+

mesh(value: Array<number>, column: number, row: number)

设置mesh效果。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | Array<number> | 是 | 长度（column + 1）\* （row + 1）\* 2的数组，它记录了扭曲后的位图各个顶点位置。 |
| column | number | 是 | mesh矩阵列数。 |
| row | number | 是 | mesh矩阵行数。 |

示例
--

2.  @Entry
3.  @Component
4.  struct ShapeExample {
5.    build() {
6.      Column({ space: 10 }) {
7.        Text('basic').fontSize(11).fontColor(0xCCCCCC).width(320)

11.        Shape() {
12.          Rect().width(300).height(50)
13.          Ellipse().width(300).height(50).offset({ x: 0, y: 60 })
14.          Path().width(300).height(10).commands('M0 0 L900 0').offset({ x: 0, y: 120 })
15.        }
16.        .width(350)
17.        .height(140)
18.        .viewPort({ x: -2, y: -2, width: 304, height: 130 })
19.        .fill(0x317AF7)
20.        .stroke(Color.Black)
21.        .strokeWidth(4)
22.        .strokeDashArray(\[20\])
23.        .strokeDashOffset(10)
24.        .strokeLineCap(LineCapStyle.Round)
25.        .strokeLineJoin(LineJoinStyle.Round)
26.        .antiAlias(true)

28.        Shape() {
29.          Rect().width(300).height(50)
30.        }
31.        .width(350)
32.        .height(80)
33.        .viewPort({ x: 0, y: 0, width: 320, height: 70 })
34.        .fill(0x317AF7)
35.        .stroke(Color.Black)
36.        .strokeWidth(10)

38.        Shape() {
39.          Rect().width(300).height(50)
40.        }
41.        .width(350)
42.        .height(80)
43.        .viewPort({ x: -5, y: -5, width: 320, height: 70 })
44.        .fill(0x317AF7)
45.        .stroke(Color.Black)
46.        .strokeWidth(10)

48.        Text('path').fontSize(11).fontColor(0xCCCCCC).width(320)

50.        Shape() {
51.          Path().width(300).height(10).commands('M0 0 L900 0')
52.        }
53.        .width(350)
54.        .height(20)
55.        .viewPort({ x: 0, y: -5, width: 300, height: 20 })
56.        .stroke(0xEE8443)
57.        .strokeWidth(10)
58.        .strokeDashArray(\[20\])

60.        Shape() {
61.          Path().width(300).height(10).commands('M0 0 L900 0')
62.        }
63.        .width(350)
64.        .height(20)
65.        .viewPort({ x: 0, y: -5, width: 300, height: 20 })
66.        .stroke(0xEE8443)
67.        .strokeWidth(10)
68.        .strokeDashArray(\[20\])
69.        .strokeDashOffset(10)

71.        Shape() {
72.          Path().width(300).height(10).commands('M0 0 L900 0')
73.        }
74.        .width(350)
75.        .height(20)
76.        .viewPort({ x: 0, y: -5, width: 300, height: 20 })
77.        .stroke(0xEE8443)
78.        .strokeWidth(10)
79.        .strokeOpacity(0.5)

81.        Shape() {
82.          Path().width(300).height(10).commands('M0 0 L900 0')
83.        }
84.        .width(350)
85.        .height(20)
86.        .viewPort({ x: 0, y: -5, width: 300, height: 20 })
87.        .stroke(0xEE8443)
88.        .strokeWidth(10)
89.        .strokeDashArray(\[20\])
90.        .strokeLineCap(LineCapStyle.Round)

92.        Shape() {
93.          Path().width(200).height(60).commands('M0 0 L400 0 L400 150 Z')
94.        }
95.        .width(300)
96.        .height(200)
97.        .viewPort({ x: -20, y: -5, width: 310, height: 90 })
98.        .fill(0x317AF7)
99.        .stroke(0xEE8443)
100.        .strokeWidth(10)
101.        .strokeLineJoin(LineJoinStyle.Miter)
102.        .strokeMiterLimit(5)
103.      }.width('100%').margin({ top: 15 })
104.    }
105.  }

![Image 1](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240829194707.64210695408792429888855043432589:50001231000000:2800:C2BCC2F668EA975B5B39A23470ED92F4E3848928EBF9A4E190232FB793926033.png?needInitFileName=true?needInitFileName=true)

、
