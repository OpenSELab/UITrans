Title: Path-图形绘制-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-drawing-components-path-V5

Markdown Content:
路径绘制组件，根据绘制路径生成封闭的自定义形状。

说明

该组件从API Version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

Path(value?: { width?: number | string; height?: number | string; commands?: string })

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**参数:**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| width | number | string | 否 | 路径所在矩形的宽度
值为异常值或缺省时按照自身内容需要的宽度处理。

 |
| height | number | string | 否 | 路径所在矩形的高度

值为异常值或缺省时按照自身内容需要的高度处理。

 |
| [commands](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-drawing-components-path-V5#commands) | string | 否 | 路径绘制的命令字符串

默认值：''

异常值按照默认值处理。

 |

### commands

commands(value: string)

设置路径绘制的命令字符串，单位为px。像素单位转换方法请参考[像素单位转换](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-pixel-units-V5)。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | string | 是 | 线条绘制的路径。
默认值：''

 |

### fill

fill(value: ResourceColor)

设置填充区域颜色。异常值按照默认值处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### fillOpacity

fillOpacity(value: number | string | Resource)

设置填充区域透明度。取值范围是\[0.0, 1.0\]，若给定值小于0.0，则取值为0.0；若给定值大于1.0，则取值为1.0，其余异常值按1.0处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | string | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource) | 是 | 填充区域透明度。
默认值：1

 |

### stroke

stroke(value: ResourceColor)

设置边框颜色，不设置时，默认没有边框线条。异常值不会绘制边框线条。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### strokeDashArray

strokeDashArray(value: Array<any>)

设置线条间隙。线段相交时可能会出现重叠现象。异常值按照默认值处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | Array<any> | 是 | 线条间隙。
默认值：\[\]

 |

### strokeDashOffset

strokeDashOffset(value: number | string)

设置线条绘制起点的偏移量。异常值按照默认值处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | string | 是 | 线条绘制起点的偏移量。
默认值：0

 |

### strokeLineCap

strokeLineCap(value: LineCapStyle)

设置线条端点绘制样式。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [LineCapStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#linecapstyle) | 是 | 线条端点绘制样式。
默认值：LineCapStyle.Butt

 |

### strokeLineJoin

strokeLineJoin(value: LineJoinStyle)

设置线条拐角绘制样式。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [LineJoinStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#linejoinstyle) | 是 | 线条拐角绘制样式。
默认值：LineJoinStyle.Miter

 |

### strokeMiterLimit

strokeMiterLimit(value: number | string)

设置斜接长度与边框宽度比值的极限值。斜接长度表示外边框外边交点到内边交点的距离，边框宽度即strokeWidth属性的值。该属性取值需在strokeLineJoin属性取值LineJoinStyle.Miter时生效。

该属性的合法值范围应当大于等于1.0，当取值范围在\[0,1)时按1.0处理，其余异常值按默认值处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | string | 是 | 斜接长度与边框宽度比值的极限值。
默认值：4

 |

### strokeOpacity

strokeOpacity(value: number | string | Resource)

设置线条透明度。该属性的取值范围是\[0.0, 1.0\]，若给定值小于0.0，则取值为0.0；若给定值大于1.0，则取值为1.0，其余异常值按1.0处理 。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | string | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource) | 是 | 线条透明度。
默认值：1

 |

### strokeWidth

strokeWidth(value: Length)

设置线条宽度。该属性若为string类型, 暂不支持百分比，百分比按照1px处理。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | [Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length) | 是 | 线条宽度。
默认值：1

 |

### antiAlias

antiAlias(value: boolean)

设置是否开启抗锯齿效果。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | boolean | 是 | 是否开启抗锯齿效果。
默认值：true

 |

Commands
--------

commands支持的绘制命令如下：

| 命令 | 名称 | 参数 | 说明 |
| --- | --- | --- | --- |
| M | moveto | （x y） | 在给定的 (x, y) 坐标处开始一个新的子路径。例如，M 0 0 表示将（0, 0）点作为新子路径的起始点。 |
| L | lineto | （x y） | 从当前点到给定的 (x, y) 坐标画一条线，该坐标成为新的当前点。例如，L 50 50 表示绘制当前点到（50, 50）点的直线，并将（50, 50）点作为新子路径的起始点。 |
| H | horizontal lineto | x | 从当前点绘制一条水平线，等效于将y坐标指定为0的L命令。例如，H 50 表示绘制当前点到（50, 0）点的直线，并将（50, 0）点作为新子路径的起始点。 |
| V | vertical lineto | y | 从当前点绘制一条垂直线，等效于将x坐标指定为0的L命令。例如，V 50 表示绘制当前点到（0, 50）点的直线，并将（0, 50）点作为新子路径的起始点。 |
| C | curveto | (x1 y1 x2 y2 x y) | 使用 (x1, y1) 作为曲线起点的控制点， (x2, y2) 作为曲线终点的控制点，从当前点到 (x, y) 绘制三次贝塞尔曲线。例如，C100 100 250 100 250 200 表示绘制当前点到（250, 200）点的三次贝塞尔曲线，并将（250, 200）点作为新子路径的起始点。 |
| S | smooth curveto | (x2 y2 x y) | (x2, y2) 作为曲线终点的控制点，绘制从当前点到 (x, y) 绘制三次贝塞尔曲线。若前一个命令是C或S，则起点控制点是上一个命令的终点控制点相对于起点的映射。 例如，C100 100 250 100 250 200 S400 300 400 200第二段贝塞尔曲线的起点控制点为（250, 300）。如果没有前一个命令或者前一个命令不是 C或S，则第一个控制点与当前点重合。 |
| Q | quadratic Belzier curve | (x1 y1 x y) | 使用 (x1, y1) 作为控制点，从当前点到 (x, y) 绘制二次贝塞尔曲线。例如，Q400 50 600 300 表示绘制当前点到（600, 300）点的二次贝塞尔曲线，并将（600, 300）点作为新子路径的起始点。 |
| T | smooth quadratic Belzier curveto | (x y) | 绘制从当前点到 (x, y) 绘制二次贝塞尔曲线。若前一个命令是Q或T，则控制点是上一个命令的终点控制点相对于起点的映射。 例如，Q400 50 600 300 T1000 300第二段贝塞尔曲线的控制点为（800, 350）。 如果没有前一个命令或者前一个命令不是 Q或T，则第一个控制点与当前点重合。 |
| A | elliptical Arc | (rx ry x-axis-rotation large-arc-flag sweep-flag x y) | 从当前点到 (x, y) 绘制一条椭圆弧。椭圆的大小和方向由两个半径 (rx, ry) 和x-axis-rotation定义，指示整个椭圆相对于当前坐标系如何旋转（以度为单位）。 large-arc-flag 和 sweep-flag确定弧的绘制方式。 |
| Z | closepath | none | 通过将当前路径连接回当前子路径的初始点来关闭当前子路径。 |

例如： commands('M0 20 L50 50 L50 100 Z')定义了一个三角形，起始于位置（0，20），接着绘制点（0，20）到点（50，50）的直线，再绘制点（50，50）到点（50，100）的直线，最后绘制点（50，100）到（0，20）的直线关闭路径，形成封闭三角形。

示例
--

2.  @Entry
3.  @Component
4.  struct PathExample {
5.    build() {
6.      Column({ space: 10 }) {
7.        Text('Straight line')
8.          .fontSize(11)
9.          .fontColor(0xCCCCCC)
10.          .width('90%')

12.        Path()
13.          .width('600px')
14.          .height('10px')
15.          .commands('M0 0 L600 0')
16.          .stroke(Color.Black)
17.          .strokeWidth(3)

19.        Text('Straight line graph')
20.          .fontSize(11)
21.          .fontColor(0xCCCCCC)
22.          .width('90%')

24.        Flex({ justifyContent: FlexAlign.SpaceBetween }) {
25.          Path()
26.            .width('210px')
27.            .height('310px')
28.            .commands('M100 0 L200 240 L0 240 Z')
29.            .fillOpacity(0)
30.            .stroke(Color.Black)
31.            .strokeWidth(3)
32.          Path()
33.            .width('210px')
34.            .height('310px')
35.            .commands('M0 0 H200 V200 H0 Z')
36.            .fillOpacity(0)
37.            .stroke(Color.Black)
38.            .strokeWidth(3)
39.          Path()
40.            .width('210px')
41.            .height('310px')
42.            .commands('M100 0 L0 100 L50 200 L150 200 L200 100 Z')
43.            .fillOpacity(0)
44.            .stroke(Color.Black)
45.            .strokeWidth(3)
46.        }.width('95%')

48.        Text('Curve graphics').fontSize(11).fontColor(0xCCCCCC).width('90%')

50.        Flex({ justifyContent: FlexAlign.SpaceBetween }) {
51.          Path()
52.            .width('250px')
53.            .height('310px')
54.            .commands("M0 300 S100 0 240 300 Z")
55.            .fillOpacity(0)
56.            .stroke(Color.Black)
57.            .strokeWidth(3)
58.          Path()
59.            .width('210px')
60.            .height('310px')
61.            .commands('M0 150 C0 100 140 0 200 150 L100 300 Z')
62.            .fillOpacity(0)
63.            .stroke(Color.Black)
64.            .strokeWidth(3)
65.          Path()
66.            .width('210px')
67.            .height('310px')
68.            .commands('M0 100 A30 20 20 0 0 200 100 Z')
69.            .fillOpacity(0)
70.            .stroke(Color.Black)
71.            .strokeWidth(3)
72.        }.width('95%')
73.      }.width('100%')
74.      .margin({ top: 5 })
75.    }
76.  }

![Image 1](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240829194706.46144346623712964115171889251844:50001231000000:2800:B726306652BEEF710B42BE7B5C45401EC50C80629F88A23F88205974629FFD32.png?needInitFileName=true?needInitFileName=true)
