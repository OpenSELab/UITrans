/*\n实现一个嵌入式的侧边栏容器组件，侧边栏中包含一个可点击的图标和文本列表，点击图标或文本可以切换当前选中的项。侧边栏的内容区域显示两行文本。侧边栏的宽度、最小宽度和最大宽度可配置，并且可以通过控制按钮隐藏或显示侧边栏。侧边栏和内容区域之间有一个分隔线。\n*/\n\n@Entry\n@Component\nstruct SideBarContainerExample {\n  // 定义普通状态下的图标资源\n  normalIcon: Resource = $r("app.media.icon")\n  // 定义选中状态下的图标资源\n  selectedIcon: Resource = $r("app.media.icon")\n  // 定义一个状态变量，存储侧边栏中的选项数组\n  @State arr: number[] = [1, 2, 3]\n  // 定义一个状态变量，存储当前选中的选项\n  @State current: number = 1\n\n  build() {\n    // 创建一个嵌入式的侧边栏容器\n    SideBarContainer(SideBarContainerType.Embed) {\n      // 创建一个列布局，用于放置侧边栏中的选项\n      Column() {\n        // 使用ForEach循环遍历选项数组，生成每个选项的UI\n        ForEach(this.arr, (item: number) => {\n          // 创建一个列布局，用于放置每个选项的图标和文本\n          Column({ space: 5 }) {\n            // 根据当前选中的选项，显示不同的图标\n            Image(this.current === item ? this.selectedIcon : this.normalIcon)\n              .width(64)\n              .height(64)\n            // 显示选项的文本，并根据当前选中的选项，设置不同的字体颜色\n            Text("Index0" + item)\n              .fontSize(25)\n              .fontColor(this.current === item ? '#0A59F7' : '#999')\n              .fontFamily('source-sans-pro,cursive,sans-serif')\n          }\n          // 为每个选项添加点击事件，点击后更新当前选中的选项\n          .onClick(() => {\n            this.current = item\n          })\n        }, (item: string) => item) // 使用选项的值作为键\n      }\n      .width('100%') // 设置列布局的宽度为100%\n      .justifyContent(FlexAlign.SpaceEvenly) // 设置列布局的对齐方式为均匀分布\n      .backgroundColor('#19000000') // 设置列布局的背景颜色为半透明黑色\n\n      // 创建一个列布局，用于放置侧边栏的内容区域\n      Column() {\n        // 显示两行文本\n        Text('SideBarContainer content text1').fontSize(25)\n        Text('SideBarContainer content text2').fontSize(25)\n      }\n      .margin({ top: 50, left: 20, right: 30 }) // 设置内容区域的边距\n    }\n    // 配置侧边栏容器的控制按钮图标\n    .controlButton({\n      icons: {\n        hidden: $r('app.media.drawer'), // 隐藏状态下的图标\n        shown: $r('app.media.drawer'), // 显示状态下的图标\n        switching: $r('app.media.drawer') // 切换状态下的图标\n      }\n    })\n    // 设置侧边栏的宽度为150vp\n    .sideBarWidth(150)\n    // 设置侧边栏的最小宽度为50vp\n    .minSideBarWidth(50)\n    // 设置侧边栏的最大宽度为300vp\n    .maxSideBarWidth(300)\n    // 设置内容区域的最小宽度为0\n    .minContentWidth(0)\n    // 添加侧边栏状态变化的事件监听器，打印当前状态\n    .onChange((value: boolean) => {\n      console.info('status:' + value)\n    })\n    // 配置侧边栏和内容区域之间的分隔线\n    .divider({ strokeWidth: '1vp', color: Color.Gray, startMargin: '4vp', endMargin: '4vp' })\n  }\n}