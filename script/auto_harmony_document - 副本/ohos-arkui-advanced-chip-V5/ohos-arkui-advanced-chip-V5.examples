/*\n实现一个包含Chip组件的垂直布局，Chip组件具有前缀图标、标签文本、背景颜色和边框圆角等样式属性，支持交互功能和关闭图标显示。\n*/\n\nimport { Chip, ChipSize } from '@kit.ArkUI'; // 导入Chip组件及其尺寸枚举\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局，组件间距为10\n      Chip({\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置前缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置前缀图标的尺寸\n          fillColor: Color.Blue // 设置前缀图标的填充颜色为蓝色\n        },\n        label: {\n          text: "操作块", // 设置标签文本内容\n          fontSize: 12, // 设置标签文本的字体大小\n          fontColor: Color.Blue, // 设置标签文本的颜色为蓝色\n          fontFamily: "HarmonyOS Sans", // 设置标签文本的字体族\n          labelMargin: { left: 20, right: 30 } // 设置标签文本的左右边距\n        },\n        size: ChipSize.NORMAL, // 设置Chip组件的尺寸为正常大小\n        allowClose: True, // 允许Chip组件显示关闭图标\n        enabled: True, // 启用Chip组件的交互功能\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 设置Chip组件的背景颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button') // 设置Chip组件的边框圆角\n      })\n    }\n  }\n}


/*\n实现一个Chip组件，该组件包含一个前缀图标和一个标签文本。Chip的大小、颜色、边框圆角等样式属性可以自定义。Chip组件支持点击事件和关闭事件的回调处理。\n*/\n\nimport { Chip, ChipSize } from '@kit.ArkUI'; // 导入Chip组件及其相关属性\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局的容器，子组件之间的间距为10\n      Chip({\n        // 设置Chip的前缀图标\n        prefixIcon: {\n          src: $r('app.media.chips'), // 图标的资源路径\n          size: { width: 16, height: 16 }, // 图标的尺寸\n          fillColor: Color.Blue // 图标的填充颜色\n        },\n        // 设置Chip的标签文本\n        label: {\n          text: "操作块", // 标签文本内容\n          fontSize: 12, // 文本字体大小\n          fontColor: Color.Blue, // 文本颜色\n          fontFamily: "HarmonyOS Sans", // 文本字体\n          labelMargin: { left: 20, right: 30 } // 文本的左右边距\n        },\n        size: ChipSize.SMALL, // Chip的大小，这里设置为小尺寸\n        allowClose: False, // 不允许显示删除图标\n        enabled: True, // Chip是否启用\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // Chip的背景颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button'), // Chip的边框圆角\n        onClose:()=>{\n          console.log("chip on close") // 当Chip被关闭时的回调函数\n        }\n      })\n    }\n  }\n}


/*\n实现一个自定义的操作块组件，该组件包含前缀图标、标签文本和后缀图标。组件支持配置图标的大小、颜色、文本的字体、颜色、边距等属性。组件的大小、背景颜色、边框圆角等也可以自定义。\n*/\n\nimport { Chip, ChipSize } from '@kit.ArkUI'; // 导入Chip组件及其相关属性\n\n@Entry // 标记该组件为入口组件\n@Component // 标记该结构体为ArkUI组件\nstruct Index {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局的容器，子组件之间的间距为10\n      Chip({\n        // 配置前缀图标\n        prefixIcon: {\n          src: $r('app.media.chips'), // 图标资源路径\n          size: { width: 16, height: 16 }, // 图标大小\n          fillColor: Color.Red // 图标填充颜色\n        },\n        // 配置标签文本\n        label: {\n          text: "操作块", // 标签文本内容\n          fontSize: 12, // 字体大小\n          fontColor: Color.Blue, // 字体颜色\n          fontFamily: "HarmonyOS Sans", // 字体家族\n          labelMargin: { left: 20, right: 30 } // 标签文本的左右边距\n        },\n        // 配置后缀图标\n        suffixIcon: {\n          src: $r('app.media.close'), // 图标资源路径\n          size: { width: 16, height: 16 }, // 图标大小\n          fillColor: Color.Red // 图标填充颜色\n        },\n        size: ChipSize.NORMAL, // 操作块的大小，NORMAL表示正常大小\n        allowClose: False, // 是否允许关闭操作块，False表示不允许关闭\n        enabled: True, // 操作块是否启用，True表示启用\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 背景颜色，使用系统默认的按钮背景颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button') // 边框圆角，使用系统默认的按钮圆角\n      })\n    }\n  }\n}


/*\n实现一个Chip组件，该组件包含前缀图标、标签文本和后缀图标，并支持自定义布局方向、图标大小、颜色、字体样式、背景颜色、边框半径等属性。整个组件放置在一个居中对齐的Column容器中，宽度与高度均为100%。\n*/\n\nimport { Chip, ChipSize, LengthMetrics } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct ChipPage {\n  @State message: string = 'Hello World'; // 定义一个状态变量message，初始值为'Hello World'\n\n  build() {\n    Column() {\n      Chip({\n        direction: Direction.Rtl, // 设置Chip组件的布局方向为从右到左\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置前缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置前缀图标的大小\n          fillColor: Color.Red, // 设置前缀图标的填充颜色\n        },\n        label: {\n          text: "操作块", // 设置标签的文本内容\n          fontSize: 12, // 设置标签的字体大小\n          fontColor: Color.Blue, // 设置标签的字体颜色\n          fontFamily: "HarmonyOS Sans", // 设置标签的字体家族\n          localizedLabelMargin: { start: LengthMetrics.vp(20), end: LengthMetrics.vp(20) }, // 设置标签的边距\n        },\n        suffixIcon: {\n          src: $r('app.media.close'), // 设置后缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置后缀图标的大小\n          fillColor: Color.Red, // 设置后缀图标的填充颜色\n        },\n        size: ChipSize.NORMAL, // 设置Chip组件的大小\n        allowClose: False, // 设置是否允许关闭Chip组件\n        enabled: True, // 设置Chip组件是否启用\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 设置Chip组件的背景颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button') // 设置Chip组件的边框半径\n      })\n    }.justifyContent(FlexAlign.Center) // 设置Column组件的内容对齐方式为居中\n    .width('100%') // 设置Column组件的宽度为100%\n    .height('100%') // 设置Column组件的高度为100%\n  }\n}


/*\n实现一个包含Chip组件的页面，Chip组件具有前缀图标、文本标签、可关闭按钮等功能。通过按钮可以切换Chip的激活状态，并在控制台输出相应的事件信息。\n*/\n\nimport { Chip, ChipSize } from '@kit.ArkUI'; // 导入Chip组件及其相关属性\n\n@Entry\n@Component\nstruct Index {\n  @State isActivated: boolean = False; // 定义一个状态变量，用于控制Chip的激活状态\n\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局，组件间距为10\n      Chip({\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置Chip的前缀图标资源路径\n          size: { width: 16, height: 16 }, // 设置图标的大小\n          fillColor: Color.Blue, // 设置图标的填充颜色\n          activatedFillColor: $r('sys.color.ohos_id_color_text_primary_contrary') // 设置激活状态下的图标填充颜色\n        },\n        label: {\n          text: "操作块", // 设置Chip的文本内容\n          fontSize: 12, // 设置文本的字体大小\n          fontColor: Color.Blue, // 设置文本的颜色\n          activatedFontColor: $r('sys.color.ohos_id_color_text_primary_contrary'), // 设置激活状态下的文本颜色\n          fontFamily: "HarmonyOS Sans", // 设置文本的字体家族\n          labelMargin: { left: 20, right: 30 } // 设置文本的左右边距\n        },\n        size: ChipSize.NORMAL, // 设置Chip的大小为正常尺寸\n        allowClose: True, // 允许Chip显示关闭按钮\n        enabled: True, // 启用Chip的交互功能\n        activated: this.isActivated, // 根据状态变量设置Chip的激活状态\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 设置Chip的背景颜色\n        activatedBackgroundColor: $r('sys.color.ohos_id_color_emphasize'), // 设置激活状态下的背景颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button'), // 设置Chip的边框圆角\n        onClose:()=>{\n          console.log("chip on close") // 定义Chip关闭事件的回调函数\n        },\n        onClicked:()=>{\n          console.log("chip on clicked") // 定义Chip点击事件的回调函数\n        }\n      })\n\n      Button('改变激活状态').onClick(()=>{\n        this.isActivated = !this.isActivated; // 定义按钮点击事件的回调函数，切换Chip的激活状态\n      })\n    }\n  }\n}


/*\n实现一个包含Chip组件和Button组件的界面。Chip组件用于显示一个可点击的操作块，支持激活状态切换和关闭操作。Button组件用于切换Chip的激活状态。\n*/\n\nimport { Chip, ChipSize, SymbolGlyphModifier } from '@kit.ArkUI'; // 导入ArkUI库中的Chip组件及相关枚举和类\n\n@Entry\n@Component\nstruct Index {\n  @State isActivated: boolean = False; // 定义一个状态变量，用于控制Chip的激活状态\n\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局，组件间距为10\n      Chip({\n        prefixIcon: {\n          src: $r('app.media.chips'), // 设置前缀图标的资源路径\n          size: { width: 16, height: 16 }, // 设置前缀图标的大小\n          fillColor: Color.Blue, // 设置前缀图标的填充颜色\n          activatedFillColor: $r('sys.color.ohos_id_color_text_primary_contrary') // 设置激活状态下的前缀图标填充颜色\n        },\n        prefixSymbol: {\n          normal: new SymbolGlyphModifier($r('sys.symbol.ohos_star')).fontSize(16).fontColor([Color.Green]), // 设置前缀symbol图标在正常状态下的样式\n          activated: new SymbolGlyphModifier($r('sys.symbol.ohos_star')).fontSize(16).fontColor([Color.Red]), // 设置前缀symbol图标在激活状态下的样式\n        },\n        label: {\n          text: "操作块", // 设置Chip的标签文本\n          fontSize: 12, // 设置标签文本的字体大小\n          fontColor: Color.Blue, // 设置标签文本的颜色\n          activatedFontColor: $r('sys.color.ohos_id_color_text_primary_contrary'), // 设置激活状态下的标签文本颜色\n          fontFamily: "HarmonyOS Sans", // 设置标签文本的字体家族\n          labelMargin: { left: 20, right: 30 }, // 设置标签文本的边距\n        },\n        size: ChipSize.NORMAL, // 设置Chip的大小\n        allowClose: True, // 允许Chip关闭\n        enabled: True, // 启用Chip\n        activated: this.isActivated, // 设置Chip的激活状态\n        backgroundColor: $r('sys.color.ohos_id_color_button_normal'), // 设置Chip的背景颜色\n        activatedBackgroundColor: $r('sys.color.ohos_id_color_emphasize'), // 设置激活状态下的Chip背景颜色\n        borderRadius: $r('sys.float.ohos_id_corner_radius_button'), // 设置Chip的边框圆角\n        onClose:()=>{\n          console.log("chip on close") // 定义Chip关闭事件的处理函数\n        },\n        onClicked:()=>{\n          console.log("chip on clicked") // 定义Chip点击事件的处理函数\n        }\n      })\n\n      Button('改变激活状态').onClick(()=>{\n        this.isActivated = !this.isActivated; // 定义按钮点击事件，切换Chip的激活状态\n      })\n    }\n  }\n}