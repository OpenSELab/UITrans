Title: Search-文本与输入-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5

Markdown Content:
搜索框组件，适用于浏览器的搜索内容输入框等应用场景。

说明

该组件从API Version 8开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

Search(options?: { value?: string, placeholder?: ResourceStr, icon?: string, controller?: SearchController })

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

value

string

否

设置当前显示的搜索文本内容。

从API version 10开始，该参数支持[$$](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-two-way-sync-V5)双向绑定变量。

placeholder

[ResourceStr](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcestr)10+

否

设置无输入时的提示文本。

icon

string

否

设置搜索图标路径，默认使用系统搜索图标。

**说明：**

icon的数据源支持本地图片和网络图片。

\- 支持的图片格式包括png、jpg、bmp、svg、gif、pixelmap和heif。

\- 支持Base64字符串。格式data:image/\[png|jpeg|bmp|webp|heif\];base64,\[base64 data\], 其中\[base64 data\]为Base64字符串数据。

如果与属性searchIcon同时设置，则searchIcon优先。

controller

[SearchController](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5#searchcontroller)

否

设置Search组件控制器。

### searchButton

searchButton(value: string, option?: SearchButtonOptions)

设置搜索框末尾搜索按钮。

点击搜索按钮，同时触发onSubmit与onClick回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string

是

搜索框末尾搜索按钮文本内容。

option

[SearchButtonOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5#searchbuttonoptions10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

否

配置搜索框文本样式。

默认值：

{

fontSize: '16fp',

fontColor: '#ff3f97e9'

}

### placeholderColor

placeholderColor(value: ResourceColor)

设置placeholder文本颜色。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

placeholder文本颜色。

默认值：'#99182431'。

### placeholderFont

placeholderFont(value?: Font)

设置placeholder文本样式，包括字体大小，字体粗细，字体族，字体风格。当前支持'HarmonyOS Sans'字体和[注册自定义字体](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-font-V5)。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Font](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#font)

否

placeholder文本样式。

### textFont

textFont(value?: Font)

设置搜索框内输入文本样式，包括字体大小，字体粗细，字体族，字体风格。目前仅支持默认字体族。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Font](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#font)

否

搜索框内输入文本样式。

### textAlign9+

textAlign(value: TextAlign)

设置文本在搜索框中的对齐方式。目前支持的对齐方式有：Start、Center、End。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[TextAlign](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#textalign)

是

文本在搜索框中的对齐方式。

默认值：TextAlign.Start

### copyOption9+

copyOption(value: CopyOptions)

设置输入的文本是否可复制。设置CopyOptions.None时，当前Search中的文字无法被复制或剪切，仅支持粘贴。

设置CopyOptions.None时，不允许拖拽。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[CopyOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#copyoptions9)

是

输入的文本是否可复制。

默认值：CopyOptions.LocalDevice，支持设备内复制。

### searchIcon10+

searchIcon(value: IconOptions | SymbolGlyphModifier)

设置左侧搜索图标样式。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[IconOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5#iconoptions10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | [SymbolGlyphModifier](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-attribute-modifier-V5)

是

左侧搜索图标样式。

浅色模式默认值：

{

size: '16vp',

color: '#99000000',

src: ' '

}

深色模式默认值：

{

size: '16vp',

color: '#99ffffff',

src: ' '

}

### cancelButton10+

cancelButton(value: CancelButtonOptions | CancelButtonSymbolOptions)

设置右侧清除按钮样式。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### fontColor10+

fontColor(value: ResourceColor)

设置输入文本的字体颜色。[文本通用属性](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-text-style-V5)fontSize、fontStyle、fontWeight和fontFamily在[textFont](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5#textfont)属性中设置。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### caretStyle10+

caretStyle(value: CaretStyle)

设置光标样式。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[CaretStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-text-common-V5#caretstyle10)

是

光标样式。

默认值：

{

width: '1.5vp',

color: '#007DFF'

}

说明

从API version 12开始，此接口支持设置文本手柄颜色，光标和文本手柄颜色保持一致。

### enableKeyboardOnFocus10+

enableKeyboardOnFocus(value: boolean)

设置Search通过点击以外的方式获焦时，是否绑定输入法。

从API version 10开始，获焦默认绑定输入法。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

Search获焦时，是否绑定输入法

默认值：true。

selectionMenuHidden(value: boolean)

设置是否不弹出系统文本选择菜单。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

是否不弹出系统文本选择菜单。

设置为true时，单击输入框光标、长按输入框、双击输入框、三击输入框或者右键输入框，不弹出系统文本选择菜单。

设置为false时，弹出系统文本选择菜单。

默认值：false

### customKeyboard10+

customKeyboard(value: CustomBuilder, options?: KeyboardOptions)

设置自定义键盘。

当设置自定义键盘时，输入框激活后不会打开系统输入法，而是加载指定的自定义组件。

自定义键盘的高度可以通过自定义组件根节点的height属性设置，宽度不可设置，使用系统默认值。

自定义键盘采用覆盖原始界面的方式呈现，当没有开启避让模式或者输入框不需要避让的场景不会对应用原始界面产生压缩或者上提。

自定义键盘无法获取焦点，但是会拦截手势事件。

默认在输入控件失去焦点时，关闭自定义键盘，开发者也可以通过[stopEditing](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5#stopediting10)方法控制键盘关闭。

如果设备支持拍摄输入，设置自定义键盘后，该输入框会不支持拍摄输入。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### type11+

type(value: SearchType)

设置输入框类型。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[SearchType](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5#searchtype11%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

输入框类型。

默认值：SearchType.Normal

### maxLength11+

maxLength(value: number)

设置文本的最大输入字符数。默认不设置最大输入字符数限制。到达文本最大字符限制，将无法继续输入字符。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number

是

文本的最大输入字符数。

### enterKeyType12+

enterKeyType(value: EnterKeyType)

设置输入法回车键类型。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[EnterKeyType](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#enterkeytype%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

输入法回车键类型。

默认值：EnterKeyType.Search

### lineHeight12+

lineHeight(value: number | string | Resource)

设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小，number类型时单位为fp。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | string | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource)

是

文本的文本行高。

### decoration12+

decoration(value: TextDecorationOptions)

设置文本装饰线类型样式及其颜色。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[TextDecorationOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#textdecorationoptions12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

是

文本装饰线对象。

默认值：{

type: TextDecorationType.None,

color: Color.Black,

style: TextDecorationStyle.SOLID

}

### letterSpacing12+

letterSpacing(value: number | string | Resource)

设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。

当取值为负值时，文字会发生压缩，负值过小时会将组件内容区大小压缩为0，导致无内容显示。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | string | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource)

是

文本字符间距。

### selectedBackgroundColor12+

selectedBackgroundColor(value: ResourceColor)

设置文本选中底板颜色。如果未设置不透明度，默认为20%不透明度。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### inputFilter12+

inputFilter(value: ResourceStr, error?: Callback< string \>)

通过正则表达式设置输入过滤器。匹配表达式的输入允许显示，不匹配的输入将被过滤。仅支持单个字符匹配，不支持字符串匹配。

设置inputFilter且输入的字符不为空字符，会导致设置输入框类型(即type接口)附带的文本过滤效果失效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceStr](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcestr)

是

正则表达式。

error

Callback< string \>

否

正则匹配失败时，返回被过滤的内容。

### textIndent12+

textIndent(value: Dimension)

设置首行文本缩进。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### minFontSize12+

minFontSize(value: number | string | Resource)

设置文本最小显示字号。

需配合[maxFontSize](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5#maxfontsize12)以及布局大小限制使用，单独设置不生效。

自适应字号生效时，fontSize设置不生效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | string | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource)

是

文本最小显示字号。

### maxFontSize12+

maxFontSize(value: number | string | Resource)

设置文本最大显示字号。

需配合[minFontSize](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-search-V5#minfontsize12)以及布局大小限制使用，单独设置不生效。

自适应字号生效时，fontSize设置不生效。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | string | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource)

是

文本最大显示字号。

editMenuOptions(editMenu: EditMenuOptions)

设置自定义菜单扩展项，允许用户设置扩展项的文本内容、图标、回调方法。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### enablePreviewText12+

enablePreviewText(enable: boolean)

设置是否开启输入预上屏。

预上屏内容定义为文字暂存态，目前不支持文字拦截功能，因此不触发onWillInsert、onDidInsert、onWillDelete、onDidDelete回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

enable

boolean

是

是否开启输入预上屏。

默认值：true

说明

该接口在CAPI场景使用时下，默认关闭。可以在工程的module.json5中配置[metadata](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/module-structure-V5#metadata%E5%AF%B9%E8%B1%A1%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84)字段控制是否启用预上屏，配置如下：

1.  "metadata": \[
2.   {
3.      "name": "can\_preview\_text",
4.      "value": "true",
5.   }
6.  \]

IconOptions10+对象说明
------------------

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

SearchButtonOptions10+对象说明
--------------------------

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

CancelButtonStyle10+枚举说明
------------------------

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

描述

CONSTANT

清除按钮常显样式。

INVISIBLE

清除按钮常隐样式。

INPUT

清除按钮输入样式。

SearchType11+枚举说明
-----------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

值

描述

NORMAL

0

基本输入模式。

支持输入数字、字母、下划线、空格、特殊字符。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

NUMBER

2

纯数字输入模式。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

PHONE\_NUMBER

3

电话号码输入模式。

支持输入数字、空格、+ 、-、\*、#、(、)，长度不限。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

EMAIL

5

邮箱地址输入模式。

支持数字，字母，下划线、小数点、!、#、$、%、&、'、\*、+、-、/、=、?、^、\`、{、|、}、~，以及@字符（只能存在一个@字符）。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

NUMBER\_DECIMAL12+

12

带小数点的数字输入模式。

支持数字，小数点（只能存在一个小数点）。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

URL12+

13

带URL的输入模式。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

CancelButtonOptions12+对象说明
--------------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

CancelButtonSymbolOptions12+对象说明
--------------------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onSubmit

onSubmit(callback: (value: string) =\> void)

点击搜索图标、搜索按钮或者按下软键盘搜索按钮时触发该回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string

是

当前搜索框中输入的文本内容。

### onChange

onChange(callback: EditableTextOnChangeCallback)

输入内容发生变化时，触发该回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### onCopy

onCopy(callback: (value: string) =\> void)

进行复制操作时，触发该回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string

是

复制的文本内容。

### onCut

onCut(callback: (value: string) =\> void)

进行剪切操作时，触发该回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string

是

剪切的文本内容。

### onPaste

onPaste(callback: (value: string, event: PasteEvent) =\> void)

进行粘贴操作时，触发该回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string

是

粘贴的文本内容。

event11+

[PasteEvent](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-richeditor-V5#pasteevent11)

是

用户自定义的粘贴事件。

### onTextSelectionChange10+

onTextSelectionChange(callback: (selectionStart: number, selectionEnd: number) =\> void)

文本选择的位置发生变化或编辑状态下光标位置发生变化时，触发该回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

selectionStart

number

是

文本选择区域起始位置，文本框中文字的起始位置为0。

selectionEnd

number

是

文本选择区域结束位置。

### onContentScroll10+

onContentScroll(callback: (totalOffsetX: number, totalOffsetY: number) =\> void)

文本内容滚动时，触发该回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

totalOffsetX

number

是

文本在内容区的横坐标偏移，单位px。

totalOffsetY

number

是

文本在内容区的纵坐标偏移，单位px。

### onEditChange12+

onEditChange(callback: Callback< boolean \>)

输入状态变化时，触发该回调。有光标时为编辑态，无光标时为非编辑态。isEditing为true表示正在输入。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

isEditing

Callback< boolean \>

是

为true表示正在输入。

### onWillInsert12+

onWillInsert(callback: Callback<InsertValue, boolean\>)

在将要输入时，触发该回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

callback

Callback<[InsertValue](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-text-common-V5#insertvalue12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E), boolean\>

是

在将要输入时调用的回调。

在返回true时，表示正常插入，返回false时，表示不插入。

在预上屏操作时，该回调不触发。

仅支持系统输入法输入的场景。

### onDidInsert12+

onDidInsert(callback: Callback<InsertValue\>)

在输入完成时，触发该回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

callback

Callback<[InsertValue](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-text-common-V5#insertvalue12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)\>

是

在输入完成时调用的回调。

仅支持系统输入法输入的场景。

### onWillDelete12+

onWillDelete(callback: Callback<DeleteValue, boolean\>)

在将要删除时，触发该回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

callback

Callback<[DeleteValue](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-text-common-V5#deletevalue12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E), boolean\>

是

在将要删除时调用的回调。

在返回true时，表示正常删除，返回false时，表示不删除。

在预上屏删除操作时，该回调不触发。

仅支持系统输入法输入的场景。

### onDidDelete12+

onDidDelete(callback: Callback<DeleteValue\>)

在删除完成时，触发该回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

callback

Callback<[DeleteValue](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-text-common-V5#deletevalue12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)\>

是

在删除完成时调用的回调。

仅支持系统输入法输入的场景。

### 导入对象

1.  controller: SearchController = new SearchController()

### constructor8+

constructor()

SearchController的构造函数。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### caretPosition8+

caretPosition(value: number): void

设置输入光标的位置。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数:**

参数名

类型

必填

说明

value

number

是

从字符串开始到光标所在位置的长度。

### stopEditing10+

stopEditing(): void

退出编辑态。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### setTextSelection12+

setTextSelection(selectionStart: number, selectionEnd: number, options?: SelectionOptions): void;

组件在获焦状态下，调用该接口设置文本选择区域并高亮显示，且只有在selectionStart小于selectionEnd时，文字才会被选取、高亮显示。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

selectionStart

number

是

文本选择区域起始位置，文本框中文字的起始位置为0。

当selectionStart小于0时、按照0处理；当selectionStart大于文字最大长度时、按照文字最大长度处理。

selectionEnd

number

是

文本选择区域结束位置。

当selectionEnd小于0时、按照0处理；当selectionEnd大于文字最大长度时、按照文字最大长度处理。

options

[SelectionOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#selectionoptions12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

否

选中文字时的配置。

默认值：MenuPolicy.DEFAULT。

说明

如果selectionStart或selectionEnd被赋值为undefined时，当作0处理。

如果selectionMenuHidden被赋值为true或设备为2in1时，即使options被赋值为MenuPolicy.SHOW，调用setTextSelection也不弹出菜单。

如果选中的文本含有emoji表情时，表情的起始位置包含在设置的文本选中区域内就会被选中。

示例
--

### 示例1

Search基本使用示例。

2.  @Entry
3.  @Component
4.  struct SearchExample {
5.    @State changeValue: string = ''
6.    @State submitValue: string = ''
7.    @State positionInfo: CaretOffset = { index: 0, x: 0, y: 0 }
8.    controller: SearchController = new SearchController()

10.    build() {
11.      Column({space: 10}) {
12.        Text('onSubmit:' + this.submitValue).fontSize(18).margin(15)
13.        Text('onChange:' + this.changeValue).fontSize(18).margin(15)
14.        Search({ value: this.changeValue, placeholder: 'Type to search...', controller: this.controller })
15.          .searchButton('SEARCH')
16.          .width('95%')
17.          .height(40)
18.          .backgroundColor('#F5F5F5')
19.          .placeholderColor(Color.Grey)
20.          .placeholderFont({ size: 14, weight: 400 })
21.          .textFont({ size: 14, weight: 400 })
22.          .onSubmit((value: string) =\> {
23.            this.submitValue = value
24.          })
25.          .onChange((value: string) =\> {
26.            this.changeValue = value
27.          })
28.          .margin(20)
29.        Button('Set caretPosition 1')
30.          .onClick(() =\> {

32.            this.controller.caretPosition(1)
33.          })
34.        Button('Get CaretOffset')
35.          .onClick(() =\> {
36.            this.positionInfo = this.controller.getCaretOffset()
37.          })
38.      }.width('100%')
39.    }
40.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.17439492544737931786765048809536:50001231000000:2800:4C9EB941145AA526BA0A6D1B254CAF266F604E2E7AF91724188B4013A6E7A6BD.gif?needInitFileName=true?needInitFileName=true)

### 示例2

searchButton、searchIcon、cancelButton属性接口使用示例。

2.  @Entry
3.  @Component
4.  struct SearchExample {
5.    @State changeValue: string = ''
6.    @State submitValue: string = ''

8.    build() {
9.      Column() {
10.        Text('onSubmit:' + this.submitValue).fontSize(18).margin(15)
11.        Search({ value: this.changeValue, placeholder: 'Type to search...' })
12.          .searchButton('SEARCH')
13.          .searchIcon({
14.            src: $r('app.media.search')
15.          })
16.          .cancelButton({
17.            style: CancelButtonStyle.CONSTANT,
18.            icon: {
19.              src: $r('app.media.cancel')
20.            }
21.          })
22.          .width('90%')
23.          .height(40)
24.          .maxLength(20)
25.          .backgroundColor('#F5F5F5')
26.          .placeholderColor(Color.Grey)
27.          .placeholderFont({ size: 14, weight: 400 })
28.          .textFont({ size: 14, weight: 400 })
29.          .onSubmit((value: string) =\> {
30.            this.submitValue = value
31.          })
32.          .onChange((value: string) =\> {
33.            this.changeValue = value
34.          })
35.          .margin(20)
36.      }.width('100%')
37.    }
38.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.67040112355240969243041847898769:50001231000000:2800:F7CCBA1FB9C8ED08444301BF246C060E20B3F7BA2F2075DEE22A8AD7D7D0FFE6.gif?needInitFileName=true?needInitFileName=true)

### 示例3

Search绑定自定义键盘使用示例。

2.  @Entry
3.  @Component
4.  struct SearchExample {
5.    controller: SearchController = new SearchController()
6.    @State inputValue: string = ""

9.    @Builder CustomKeyboardBuilder() {
10.      Column() {
11.        Button('x').onClick(() =\> {

13.          this.controller.stopEditing()
14.        })
15.        Grid() {
16.          ForEach(\[1, 2, 3, 4, 5, 6, 7, 8, 9, '\*', 0, '#'\], (item: number | string) =\> {
17.            GridItem() {
18.              Button(item + "")
19.                .width(110).onClick(() =\> {
20.                this.inputValue += item
21.              })
22.            }
23.          })
24.        }.maxCount(3).columnsGap(10).rowsGap(10).padding(5)
25.      }.backgroundColor(Color.Gray)
26.    }

28.    build() {
29.      Column() {
30.        Search({ controller: this.controller, value: this.inputValue})

32.          .customKeyboard(this.CustomKeyboardBuilder()).margin(10).border({ width: 1 })
33.      }
34.    }
35.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.88038498152869053293747196781364:50001231000000:2800:88E03514778A9F13622C47A19E1FCF4D42A9792B9E3DC834BEA964B032FFD0E3.png?needInitFileName=true?needInitFileName=true)

### 示例4

enterKeyType属性接口使用示例。

2.  @Entry
3.  @Component
4.  struct SearchExample {
5.    @State Text: string = ''
6.    @State enterTypes: Array<EnterKeyType\> = \[EnterKeyType.Go, EnterKeyType.Search, EnterKeyType.Send, EnterKeyType.Done, EnterKeyType.Next, EnterKeyType.PREVIOUS, EnterKeyType.NEW\_LINE\]
7.    @State index: number = 0
8.    build() {
9.      Column({ space: 20 }) {
10.        Search({ placeholder: '请输入文本', value: this.Text })
11.          .width(380)
12.          .enterKeyType(this.enterTypes\[this.index\])
13.          .onChange((value: string) =\> {
14.            this.Text = value
15.          })
16.          .onSubmit((value: String) =\> {
17.            console.log("trigger search onsubmit" + value);
18.          })

20.        Button('改变EnterKeyType').onClick(() =\> {
21.          this.index = (this.index + 1) % this.enterTypes.length;
22.        })
23.      }.width('100%')
24.    }
25.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.43211662228801026802026345719203:50001231000000:2800:CBDA1A0A7637244C3B922DB94FA820FB3DECCEF125B75FA119CD638D40F9BB99.gif?needInitFileName=true?needInitFileName=true)

### 示例5

该示例实现了使用lineHeight设置文本的文本行高，使用letterSpacing设置文本字符间距，使用decoration设置文本装饰线样式。

2.  @Entry
3.  @Component
4.  struct SearchExample {
5.    build() {
6.      Row() {
7.        Column() {
8.          Text('lineHeight').fontSize(9).fontColor(0xCCCCCC)
9.          Search({value: 'lineHeight unset'})
10.            .border({ width: 1 }).padding(10)
11.          Search({value: 'lineHeight 15'})
12.            .border({ width: 1 }).padding(10).lineHeight(15)
13.          Search({value: 'lineHeight 30'})
14.            .border({ width: 1 }).padding(10).lineHeight(30)

16.          Text('letterSpacing').fontSize(9).fontColor(0xCCCCCC)
17.          Search({value: 'letterSpacing 0'})
18.            .border({ width: 1 }).padding(5).letterSpacing(0)
19.          Search({value: 'letterSpacing 3'})
20.            .border({ width: 1 }).padding(5).letterSpacing(3)
21.          Search({value: 'letterSpacing -1'})
22.            .border({ width: 1 }).padding(5).letterSpacing(-1)

24.          Text('decoration').fontSize(9).fontColor(0xCCCCCC)
25.          Search({value: 'LineThrough, Red'})
26.            .border({ width: 1 }).padding(5)
27.            .decoration({type: TextDecorationType.LineThrough, color: Color.Red})
28.          Search({value: 'Overline, Red, DOTTED'})
29.            .border({ width: 1 }).padding(5)
30.            .decoration({type: TextDecorationType.Overline, color: Color.Red, style: TextDecorationStyle.DOTTED})
31.          Search({value: 'Underline, Red, WAVY'})
32.            .border({ width: 1 }).padding(5)
33.            .decoration({type: TextDecorationType.Underline, color: Color.Red, style: TextDecorationStyle.WAVY})
34.        }.height('90%')
35.      }
36.      .width('90%')
37.      .margin(10)
38.    }
39.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.83429672833898820848448386453072:50001231000000:2800:2B2FB93C6DC57B7B1512697A31461716D824EA1478C713E9A012AB35E7D32C41.png?needInitFileName=true?needInitFileName=true)

### 示例6

fontFeature属性使用示例，对比了fontFeature使用ss01属性和不使用ss01属性的效果。

1.  @Entry
2.  @Component
3.  struct search {
4.    @State text1: string = 'This is ss01 on : 0123456789'
5.    @State text2: string = 'This is ss01 off: 0123456789'

7.    build() {
8.      Column(){
9.        Search({value: this.text1})
10.          .margin({top:200})
11.          .fontFeature("\\"ss01\\" on")
12.        Search({value: this.text2})
13.          .margin({top:10})
14.          .fontFeature("\\"ss01\\" off")
15.      }
16.      .width("90%")
17.      .margin("5%")
18.    }
19.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.09816242814735483775886070956929:50001231000000:2800:8C57CF47C57FF601D022B95AEEBD366F83F7BA7B0977A1886BF8BD49DEDD88DB.png?needInitFileName=true?needInitFileName=true)

### 示例7

自定义键盘弹出发生避让示例。

1.  @Entry
2.  @Component
3.  struct SearchExample {
4.    controller: SearchController = new SearchController()
5.    @State inputValue: string = ""
6.    @State height1: string | number = '80%'
7.    @State supportAvoidance: boolean = true

10.    @Builder
11.    CustomKeyboardBuilder() {
12.      Column() {
13.        Row() {
14.          Button('x').onClick(() =\> {

16.            this.controller.stopEditing()
17.          }).margin(10)
18.        }

20.        Grid() {
21.          ForEach(\[1, 2, 3, 4, 5, 6, 7, 8, 9, '\*', 0, '#'\], (item: number | string) =\> {
22.            GridItem() {
23.              Button(item + "")
24.                .width(110).onClick(() =\> {
25.                this.inputValue += item
26.              })
27.            }
28.          })
29.        }.maxCount(3).columnsGap(10).rowsGap(10).padding(5)
30.      }
31.      .backgroundColor(Color.Gray)
32.    }

34.    build() {
35.      Column() {
36.        Row() {
37.          Button("20%")
38.            .fontSize(24)
39.            .onClick(() =\> {
40.              this.height1 = "20%"
41.            })
42.          Button("80%")
43.            .fontSize(24)
44.            .margin({ left: 20 })
45.            .onClick(() =\> {
46.              this.height1 = "80%"
47.            })
48.        }
49.        .justifyContent(FlexAlign.Center)
50.        .alignItems(VerticalAlign.Bottom)
51.        .height(this.height1)
52.        .width("100%")
53.        .padding({ bottom: 50 })

55.        Search({ controller: this.controller, value: this.inputValue })
56.          .customKeyboard(this.CustomKeyboardBuilder(), { supportAvoidance: this.supportAvoidance })
57.          .margin(10)
58.          .border({ width: 1 })
59.          .onChange((value: string) =\> {
60.            this.inputValue = value
61.          })
62.      }
63.    }
64.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.01005754218589021577828512155173:50001231000000:2800:5D58479AE41334F7C526E740D329DFC958CC9E3769DD591045AECFB0088C224F.gif?needInitFileName=true?needInitFileName=true)

### 示例8

该示例实现了使用minFontSize及maxFontSize设置文本自适应字号。

2.  @Entry
3.  @Component
4.  struct SearchExample {
5.    build() {
6.      Row() {
7.        Column() {
8.          Text('adaptive font').fontSize(9).fontColor(0xCCCCCC)

10.          Search({value: 'This is the text without the adaptive font'})
11.            .width('80%').height(90).borderWidth(1)
12.          Search({value: 'This is the text without the adaptive font'})
13.            .width('80%').height(90).borderWidth(1)
14.            .minFontSize(4)
15.            .maxFontSize(40)
16.        }.height('90%')
17.      }
18.      .width('90%')
19.      .margin(10)
20.    }
21.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.59227243131460805627042643381378:50001231000000:2800:FEAC6982493CA87FA0B58FE465AA51EA8D3F3F1D806B5E51D8C6F5B8C0872651.png?needInitFileName=true?needInitFileName=true)

### 示例9

该实例展示输入框支持插入和删除回调。

2.  @Entry
3.  @Component
4.  struct SearchExample {
5.    @State insertValue: string = ""
6.    @State deleteValue: string = ""
7.    @State insertOffset: number = 0
8.    @State deleteOffset: number = 0
9.    @State deleteDirection: number = 0

11.    build() {
12.      Row() {
13.        Column() {
14.          Search({ value: "Search支持插入回调文本" })
15.            .height(60)
16.            .onWillInsert((info: InsertValue) =\> {
17.              this.insertValue = info.insertValue
18.              return true;
19.            })
20.            .onDidInsert((info: InsertValue) =\> {
21.              this.insertOffset = info.insertOffset
22.            })

24.          Text("insertValue:" + this.insertValue + "  insertOffset:" + this.insertOffset).height(30)

26.          Search({ value: "Search支持删除回调文本b" })
27.            .height(60)
28.            .onWillDelete((info: DeleteValue) =\> {
29.              this.deleteValue = info.deleteValue
30.              info.direction
31.              return true;
32.            })
33.            .onDidDelete((info: DeleteValue) =\> {
34.              this.deleteOffset = info.deleteOffset
35.              this.deleteDirection = info.direction
36.            })

38.          Text("deleteValue:" + this.deleteValue + "  deleteOffset:" + this.deleteOffset).height(30)
39.          Text("deleteDirection:" + (this.deleteDirection == 0 ? "BACKWARD" : "FORWARD")).height(30)

41.        }.width('100%')
42.      }
43.      .height('100%')
44.    }
45.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.97127197756892398580470278871810:50001231000000:2800:A833A8B1B60CDCAB7D680A3518B4AA979C1FEC88D38AB27C1AB4BFBEFB394F36.png?needInitFileName=true?needInitFileName=true)

### 示例10

editMenuOptions使用示例，展示设置自定义菜单扩展项的文本内容、图标、回调方法。

2.  @Entry
3.  @Component
4.  struct Index {
5.    @State text: string = 'Search editMenuOptions'

7.    onCreateMenu(menuItems: Array<TextMenuItem\>) {
8.      menuItems.forEach((value, index) =\> {
9.        value.icon = $r('app.media.startIcon')
10.        if (value.id.equals(TextMenuItemId.COPY)) {
11.          value.content = "复制change"
12.        }
13.        if (value.id.equals(TextMenuItemId.SELECT\_ALL)) {
14.          value.content = "全选change"
15.        }
16.      })
17.      let item1: TextMenuItem = {
18.        content: 'custom1',
19.        icon: $r('app.media.startIcon'),
20.        id: TextMenuItemId.of('custom1'),
21.      }
22.      let item2: TextMenuItem = {
23.        content: 'custom2',
24.        id: TextMenuItemId.of('custom2'),
25.        icon: $r('app.media.startIcon'),
26.      }
27.      menuItems.push(item1)
28.      menuItems.unshift(item2)
29.      return menuItems
30.    }

32.    build() {
33.      Column() {
34.        Search({ value: this.text })
35.          .width('95%')
36.          .editMenuOptions({
37.            onCreateMenu: this.onCreateMenu, onMenuItemClick: (menuItem: TextMenuItem, textRange: TextRange) =\> {
38.              if (menuItem.id.equals(TextMenuItemId.of("custom2"))) {
39.                console.log("拦截 id: custom2 start:" + textRange.start + "; end:" + textRange.end)
40.                return true;
41.              }
42.              if (menuItem.id.equals(TextMenuItemId.COPY)) {
43.                console.log("拦截 COPY start:" + textRange.start + "; end:" + textRange.end)
44.                return true;
45.              }
46.              if (menuItem.id.equals(TextMenuItemId.SELECT\_ALL)) {
47.                console.log("不拦截 SELECT\_ALL start:" + textRange.start + "; end:" + textRange.end)
48.                return false;
49.              }
50.              return false;
51.            }
52.          })
53.          .margin({ top: 100 })
54.      }
55.      .width("90%")
56.      .margin("5%")
57.    }
58.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.97713370795611461928444964515492:50001231000000:2800:E92018B7762ADA72A4B666D4640C4E0EBC187F6BB9668150F1B22B045C9CC426.gif?needInitFileName=true?needInitFileName=true)

### 示例11

searchIcon和cancelButton使用SymbolGlyphModifier设置图标样式示例。

2.  import { SymbolGlyphModifier } from '@kit.ArkUI'

4.  @Entry
5.  @Component
6.  struct SearchExample {
7.    controller: SearchController = new SearchController()
8.    @State changeValue: string = ''
9.    @State submitValue: string = ''

11.    build() {
12.      Column() {
13.        Search({ value: this.changeValue, placeholder: 'Type to search...', controller: this.controller })
14.          .searchIcon(new SymbolGlyphModifier($r('sys.symbol.magnifyingglass')).fontColor(\[Color.Red\]))
15.          .cancelButton({
16.            style: CancelButtonStyle.CONSTANT,
17.            icon: new SymbolGlyphModifier($r('sys.symbol.xmark')).fontColor(\[Color.Green\])
18.          })
19.          .searchButton('SEARCH')
20.          .width('95%')
21.          .height(40)
22.          .backgroundColor('#F5F5F5')
23.          .placeholderColor(Color.Grey)
24.          .placeholderFont({ size: 14, weight: 400 })
25.          .textFont({ size: 14, weight: 400 })
26.          .margin(10)
27.      }
28.      .width('100%')
29.      .height('100%')
30.    }
31.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114442.02050171923179186209361759583875:50001231000000:2800:9879EE3509E5230F8AFA2388F8E1475D29EDFFC3679A037A85382BACC0F61B06.png?needInitFileName=true?needInitFileName=true)
