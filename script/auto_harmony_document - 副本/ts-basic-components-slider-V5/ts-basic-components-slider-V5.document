Title: Slider-按钮与选择-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5

Markdown Content:
滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。

说明

该组件从API Version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

Slider(options?: SliderOptions)

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

SliderOptions对象说明
-----------------

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

value

number

否

当前进度值。

默认值：与参数min的取值一致。

从API version 10开始，该参数支持[$$](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-two-way-sync-V5)双向绑定变量。

min

number

否

设置最小值。

默认值：0

max

number

否

设置最大值。

默认值：100

**说明：**

min \>\= max异常情况，min取默认值0，max取默认值100。

value不在\[min, max\]范围之内，取min或者max，靠近min取min，靠近max取max。

step

number

否

设置Slider滑动步长。

默认值：1

取值范围：\[0.01, max - min\]

**说明：**

若设置的step值小于0或大于max值时，则按默认值显示。

style

[SliderStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderstyle%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

否

设置Slider的滑块与滑轨显示样式。

默认值：SliderStyle.OutSet

direction8+

[Axis](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-appendix-enums-V5#axis)

否

设置滑动条滑动方向为水平或竖直方向。

默认值：Axis.Horizontal

reverse8+

boolean

否

设置滑动条取值范围是否反向，横向Slider默认为从左往右滑动，竖向Slider默认为从上往下滑动。

默认值：false

SliderStyle枚举说明
---------------

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

描述

OutSet

滑块在滑轨上。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

InSet

滑块在滑轨内。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

NONE12+

无滑块

**卡片能力：** 从API version 12开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

### blockColor

blockColor(value: ResourceColor)

设置滑块的颜色。

当滑块形状设置为SliderBlockType.DEFAULT时，blockColor可设置默认圆形滑块颜色。

当滑块形状设置为SliderBlockType.IMAGE时，滑块无填充，设置blockColor不生效。

当滑块形状设置为SliderBlockType.SHAPE时，blockColor可设置自定义形状的填充颜色。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

滑块的颜色。

默认值：$r('sys.color.ohos\_id\_color\_foreground\_contrary')

### trackColor

trackColor(value: ResourceColor | LinearGradient)

设置滑轨的背景颜色。

从API version 12开始支持利用LinearGradient设置滑轨的渐变色。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor) | [LinearGradient12+](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datapanel-V5#lineargradient10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

是

滑轨的背景颜色。

**说明：** 设置渐变色时，若颜色断点颜色值为非法值或者渐变色断点为空时，渐变色不起效果。

默认值：$r('sys.color.ohos\_id\_color\_component\_normmal')

该接口中的LinearGradient类型不支持在元服务中使用。

### selectedColor

selectedColor(value: ResourceColor)

设置滑轨的已滑动部分颜色。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

滑轨的已滑动部分颜色。

默认值：$r('sys.color.ohos\_id\_color\_emphasize')

### showSteps

showSteps(value: boolean)

设置当前是否显示步长刻度值。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

当前是否显示步长刻度值。

默认值：false

### showTips

showTips(value: boolean, content?: ResourceStr)

设置滑动时是否显示气泡提示。

当direction的值为Axis.Horizontal时，tip显示在滑块上方，如果上方空间不够，则在下方显示。值为Axis.Vertical时，tip显示在滑块左边，如果左边空间不够，则在右边显示。不设置周边边距或者周边边距比较小时，tip会被截断。

tip的绘制区域为Slider自身节点的overlay。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

滑动时是否显示气泡提示。

默认值：false

content10+

[ResourceStr](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcestr)

否

气泡提示的文本内容，默认显示当前百分比。

### trackThickness8+

trackThickness(value: Length)

设置滑轨的粗细。设置为小于等于0的值时，取默认值。

为保证滑块和滑轨的[SliderStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderstyle%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)样式，[blockSize](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#blocksize10)跟随trackThickness同比例增减。

当style为[SliderStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderstyle%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E).OutSet时，trackThickness ：[blockSize](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#blocksize10) = 1 ：4，当style为[SliderStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderstyle%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E).InSet时，trackThickness ：[blockSize](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#blocksize10) = 5 ：3。

在变更trackThickness过程中，若trackThickness的大小或者[blockSize](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#blocksize10)的大小超过slider组件的width或者height([SliderStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderstyle%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E).OutSet时可能trackThickness没超过，但是[blockSize](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#blocksize10)超过了)，取默认值。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### blockBorderColor10+

blockBorderColor(value: ResourceColor)

设置滑块描边颜色。

当滑块形状设置为SliderBlockType.DEFAULT时，blockBorderColor可设置默认圆形滑块描边颜色。

当滑块形状设置为SliderBlockType.IMAGE时，滑块无描边，设置blockBorderColor不生效。

当滑块形状设置为SliderBlockType.SHAPE时，blockBorderColor可设置自定义形状中线的颜色。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### blockBorderWidth10+

blockBorderWidth(value: Length)

设置滑块描边粗细。

当滑块形状设置为SliderBlockType.DEFAULT时，blockBorderWidth可设置默认圆形滑块描边粗细。

当滑块形状设置为SliderBlockType.IMAGE时，滑块无描边，设置blockBorderWidth不生效。

当滑块形状设置为SliderBlockType.SHAPE时，blockBorderWidth可设置自定义形状中线的粗细。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

滑块描边粗细。

### stepColor10+

stepColor(value: ResourceColor)

设置刻度颜色。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

是

刻度颜色。

默认值：

$r('sys.color.ohos\_id\_color\_foreground')混合

$r('sys.color.ohos\_id\_alpha\_normal\_bg')透明度的颜色

### trackBorderRadius10+

trackBorderRadius(value: Length)

设置底板圆角半径。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

底板圆角半径。

默认值：

style值为SliderStyle.OutSet默认值为'2vp'

style值为SliderStyle.InSet默认值为'10vp'。

### selectedBorderRadius12+

selectedBorderRadius(value: Dimension)

设置已滑动部分（高亮）圆角半径。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10)

是

已选择部分圆角半径。

默认值：style值为SliderStyle.InSet或SliderStyle.OutSet时，跟随底板圆角；style值为SliderStyle.NONE时，为0。

### blockSize10+

blockSize(value: SizeOptions)

设置滑块大小。

当滑块形状设置为SliderBlockType.DEFAULT时，取宽高的最小值作为圆形半径。

当滑块形状设置为SliderBlockType.IMAGE时，用于设置图片的尺寸大小，图片采用ObjectFit.Cover策略进行缩放。

当滑块形状设置为SliderBlockType.SHAPE时，用于设置自定义形状的大小，自定义形状也会采用ObjectFit.Cover策略进行缩放。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[SizeOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#sizeoptions)

是

滑块大小。

默认值：当参数style的值设置为[SliderStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderstyle%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E).OutSet时为{width: 16, height: 16}，当参数style的值设置为[SliderStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderstyle%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E).InSet时为{width: 12, height: 12}，当参数style的值设置为[SliderStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderstyle%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E).NONE时为，此字段不生效。

当设置的blockSize的宽高值不相等时，取较小值的尺寸，当设置的宽高值中有一个或两个都小于等于0的时候，取默认值。

### blockStyle10+

blockStyle(value: SliderBlockStyle)

设置滑块形状参数。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[SliderBlockStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderblockstyle10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

是

滑块形状参数。

默认值：SliderBlockType.DEFAULT，使用圆形滑块。

### stepSize10+

stepSize(value: Length)

设置刻度大小（直径）。当值为0时，刻度点不显示，当值小于0时，取默认值。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

是

刻度大小（直径）。

默认值：'4vp'

取值范围：\[0, trackThickness)

### minLabel(deprecated)

minLabel(value: string)

设置最小值。

从API Version 9开始废弃，使用min替代。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string

是

最小值。

### maxLabel(deprecated)

maxLabel(value: string)

设置最大值。

从API Version 9开始废弃，使用max替代。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string

是

最大值。

说明

*   Slider无默认padding。
*   当Slider为水平滑动条时，Slider默认高度为40vp，宽度为父容器的宽度，滑动条居中显示，左右间距为分别为10vp，若设置padding，padding不会覆盖左右间距。
*   当Slider为竖直滑动条时，Slider默认宽度为40vp，高度为父容器的高度，滑动条居中显示，上下间距为分别为6vp，若设置padding，padding不会覆盖上下间距。

### sliderInteractionMode12+

sliderInteractionMode(value: SliderInteraction)

设置用户与滑动条组件交互方式。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[SliderInteraction](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderinteraction12%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

用户与滑动条组件交互方式。

默认值：SliderInteraction.SLIDE\_AND\_CLICK。

### minResponsiveDistance12+

minResponsiveDistance(value: number)

设置滑动响应的最小距离。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number

是

设置滑动响应的最小距离，滑动超过此距离后才响应使滑块滑动。

**说明：**

单位与参数min和max一致。

当value小于0、大于MAX-MIN或非法值时，取默认值。

默认值：0。

### contentModifier12+

contentModifier(modifier: ContentModifier<SliderConfiguration\>)

定制Slider内容区的方法。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

说明

*   如果设置了contentModifier，则在自定义区域内点击和手势滑动均不可触发原slider组件的onChange事件。
*   仅当调用triggerChange函数且传递正确的参数值时才可以触发原slider组件的onChange事件。

### slideRange12+

slideRange(value: SlideRange)

设置有效滑动区间。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

SliderBlockStyle10+对象说明
-----------------------

Slider组件滑块形状参数。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

SliderBlockType10+枚举说明
----------------------

Slider组件滑块形状枚举。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

描述

DEFAULT

使用默认滑块（圆形）。

IMAGE

使用图片资源作为滑块。

SHAPE

使用自定义形状作为滑块。

SliderInteraction12+枚举说明
------------------------

用户与滑动条组件交互方式

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

描述

SLIDE\_AND\_CLICK

用户可拖拽滑块或者点击滑轨使滑块移动，鼠标或手指按下即发生移动。

SLIDE\_ONLY

不允许用户通过点击滑轨使滑块移动。

SLIDE\_AND\_CLICK\_UP

用户可拖拽滑块或者点击滑轨使滑块移动，鼠标或手指抬起时，若与屏幕按压位置一致，则触发移动。

SlideRange12+对象说明
-----------------

定义SlideRange中使用的回调类型。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

from

number

是

设置有效滑动区间的开始。

to

number

是

设置有效滑动区间的结束。

说明

*   当前仅当MIN<\=from<\=to<\=MAX时该接口生效(MIN和MAX不依赖于其设置的值, 而取决于其实际生效的值)。
*   可只设置from或者to, 也可以同时设置from和to。
*   当接口生效, 设置的from处于紧邻的step整数倍的值之间, 则from实际取左区间step整数倍的那个值或者MIN作为修正后的值。
*   当接口生效, 设置的to处于紧邻的step整数倍的值之间, 则to实际取右区间step整数倍的那个值或者MAX作为修正后的值。
*   在from和to取修正值后, 当value是undefined或null时, 其取值与from一致; 当value是数值型, 且value <\= from, 则取from; value \> to, 则取to。

### onChange

onChange(callback: (value: number, mode: SliderChangeMode) =\> void)

Slider拖动或点击时触发事件回调。

Begin和End状态当手势点击时都会触发，Moving和Click状态当value值发生变化时触发。

当连贯动作为拖动动作时，不触发Click状态。

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number

是

当前滑动进度值，变化范围为对应步长steps数组。若返回值有小数，可使用number.toFixed()方法将数据处理为预期的精度。

mode

[SliderChangeMode](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderchangemode%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

是

事件触发的相关状态值。

SliderChangeMode枚举说明
--------------------

**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

值

描述

Begin

0

手势/鼠标接触或者按下滑块。

Moving

1

正在拖动滑块过程中。

End

2

手势/鼠标离开滑块。

**说明：**

异常值恢复成默认值时触发，即value设置小于min或大于max。

Click8+

3

点击滑动条使滑块位置移动。

SliderConfiguration12+对象说明
--------------------------

开发者需要自定义class实现ContentModifier接口。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

只读

可选

说明

value

number

否

否

当前进度值。

min

number

否

否

最小值。

max

number

否

否

最大值。

step

number

否

否

Slider滑动步长。

triggerChange

[SliderTriggerChangeCallback](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#slidertriggerchangecallback12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)

否

否

触发Slider变化。

SliderTriggerChangeCallback12+对象说明
----------------------------------

type SliderTriggerChangeCallback = (value: number, mode: SliderChangeMode) =\> void

定义SliderConfiguration中使用的回调类型。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

参数名

类型

只读

可选

说明

value

number

否

否

设置当前的进度值。

mode

[SliderChangeMode](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-slider-V5#sliderchangemode%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

否

否

设置事件触发的相关状态值。

示例
--

### 示例1

2.  @Entry
3.  @Component
4.  struct SliderExample {
5.    @State outSetValueOne: number = 40
6.    @State inSetValueOne: number = 40
7.    @State noneValueOne: number = 40
8.    @State outSetValueTwo: number = 40
9.    @State inSetValueTwo: number = 40
10.    @State vOutSetValueOne: number = 40
11.    @State vInSetValueOne: number = 40
12.    @State vOutSetValueTwo: number = 40
13.    @State vInSetValueTwo: number = 40

15.    build() {
16.      Column({ space: 8 }) {
17.        Text('outset slider').fontSize(9).fontColor(0xCCCCCC).width('90%').margin(15)
18.        Row() {
19.          Slider({
20.            value: this.outSetValueOne,
21.            min: 0,
22.            max: 100,
23.            style: SliderStyle.OutSet
24.          })
25.            .showTips(true)
26.            .onChange((value: number, mode: SliderChangeMode) =\> {
27.              this.outSetValueOne = value
28.              console.info('value:' + value + 'mode:' + mode.toString())
29.            })

31.          Text(this.outSetValueOne.toFixed(0)).fontSize(12)
32.        }
33.        .width('80%')
34.        Row() {
35.          Slider({
36.            value: this.outSetValueTwo,
37.            step: 10,
38.            style: SliderStyle.OutSet
39.          })
40.            .showSteps(true)
41.            .onChange((value: number, mode: SliderChangeMode) =\> {
42.              this.outSetValueTwo = value
43.              console.info('value:' + value + 'mode:' + mode.toString())
44.            })
45.          Text(this.outSetValueTwo.toFixed(0)).fontSize(12)
46.        }
47.        .width('80%')

49.        Text('inset slider').fontSize(9).fontColor(0xCCCCCC).width('90%').margin(15)
50.        Row() {
51.          Slider({
52.            value: this.inSetValueOne,
53.            min: 0,
54.            max: 100,
55.            style: SliderStyle.InSet
56.          })
57.            .blockColor('#191970')
58.            .trackColor('#ADD8E6')
59.            .selectedColor('#4169E1')
60.            .showTips(true)
61.            .onChange((value: number, mode: SliderChangeMode) =\> {
62.              this.inSetValueOne = value
63.              console.info('value:' + value + 'mode:' + mode.toString())
64.            })
65.          Text(this.inSetValueOne.toFixed(0)).fontSize(12)
66.        }
67.        .width('80%')
68.        Row() {
69.          Slider({
70.            value: this.inSetValueTwo,
71.            step: 10,
72.            style: SliderStyle.InSet
73.          })
74.            .blockColor('#191970')
75.            .trackColor('#ADD8E6')
76.            .selectedColor('#4169E1')
77.            .showSteps(true)
78.            .onChange((value: number, mode: SliderChangeMode) =\> {
79.              this.inSetValueTwo = value
80.              console.info('value:' + value + 'mode:' + mode.toString())
81.            })
82.          Text(this.inSetValueTwo.toFixed(0)).fontSize(12)
83.        }
84.        .width('80%')

86.        Text('none slider').fontSize(9).fontColor(0xCCCCCC).width('90%').margin(15)
87.        Row() {
88.          Slider({
89.            value: this.noneValueOne,
90.            min: 0,
91.            max: 100,
92.            style: SliderStyle.NONE
93.          })
94.            .blockColor('#191970')
95.            .trackColor('#ADD8E6')
96.            .selectedColor('#4169E1')
97.            .showTips(true)
98.            .onChange((value: number, mode: SliderChangeMode) =\> {
99.              this.noneValueOne = value
100.              console.info('value:' + value + 'mode:' + mode.toString())
101.            })
102.          Text(this.noneValueOne.toFixed(0)).fontSize(12)
103.        }
104.        .width('80%')

106.        Row() {
107.          Column() {
108.            Text('vertical outset slider').fontSize(9).fontColor(0xCCCCCC).width('50%').margin(15)
109.            Row() {
110.              Text().width('10%')
111.              Slider({
112.                value: this.vOutSetValueOne,
113.                style: SliderStyle.OutSet,
114.                direction: Axis.Vertical
115.              })
116.                .blockColor('#191970')
117.                .trackColor('#ADD8E6')
118.                .selectedColor('#4169E1')
119.                .showTips(true)
120.                .onChange((value: number, mode: SliderChangeMode) =\> {
121.                  this.vOutSetValueOne = value
122.                  console.info('value:' + value + 'mode:' + mode.toString())
123.                })
124.              Slider({
125.                value: this.vOutSetValueTwo,
126.                step: 10,
127.                style: SliderStyle.OutSet,
128.                direction: Axis.Vertical
129.              })
130.                .blockColor('#191970')
131.                .trackColor('#ADD8E6')
132.                .selectedColor('#4169E1')
133.                .showSteps(true)
134.                .onChange((value: number, mode: SliderChangeMode) =\> {
135.                  this.vOutSetValueTwo = value
136.                  console.info('value:' + value + 'mode:' + mode.toString())
137.                })
138.            }
139.          }.width('50%').height(300)

141.          Column() {
142.            Text('vertical inset slider').fontSize(9).fontColor(0xCCCCCC).width('50%').margin(15)
143.            Row() {
144.              Slider({
145.                value: this.vInSetValueOne,
146.                style: SliderStyle.InSet,
147.                direction: Axis.Vertical,
148.                reverse: true 
149.              })
150.                .showTips(true)
151.                .onChange((value: number, mode: SliderChangeMode) =\> {
152.                  this.vInSetValueOne = value
153.                  console.info('value:' + value + 'mode:' + mode.toString())
154.                })
155.              Slider({
156.                value: this.vInSetValueTwo,
157.                step: 10,
158.                style: SliderStyle.InSet,
159.                direction: Axis.Vertical,
160.                reverse: true
161.              })
162.                .showSteps(true)
163.                .onChange((value: number, mode: SliderChangeMode) =\> {
164.                  this.vInSetValueTwo = value
165.                  console.info('value:' + value + 'mode:' + mode.toString())
166.                })
167.            }
168.          }.width('50%').height(300)
169.        }
170.      }.width('100%')
171.    }
172.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114429.43295724740143535108680184937909:50001231000000:2800:C75F5A84A2B76085D5F604B6F2022E75886AE65DF17D9C9CE97C467FC903510B.gif?needInitFileName=true?needInitFileName=true)

### 示例2

1.  @Entry
2.  @Component
3.  struct SliderExample {
4.    @State tipsValue: number = 40

6.    build() {
7.      Column({ space: 8 }) {
8.        Text('block').fontSize(9).fontColor(0xCCCCCC).margin(15).width('90%')
9.        Slider({ style: SliderStyle.OutSet, value: 40 })
10.          .blockSize({ width: 40, height: 40 })
11.          .blockBorderColor(Color.Red)
12.          .blockBorderWidth(5)
13.        Divider()
14.        Text('step').fontSize(9).fontColor(0xCCCCCC).margin(15).width('90%')
15.        Slider({ style: SliderStyle.InSet, value: 40, step: 10 })
16.          .showSteps(true)
17.          .stepSize(8)
18.          .stepColor(Color.Yellow)
19.        Divider()
20.        Text('track').fontSize(9).fontColor(0xCCCCCC).margin(15).width('90%')
21.        Slider({ style: SliderStyle.InSet, value: 40 })
22.          .trackBorderRadius(2)
23.        Divider()
24.        Text('selected').fontSize(9).fontColor(0xCCCCCC).margin(15).width('90%')
25.        Slider({ style: SliderStyle.InSet, value: 40 })
26.          .selectedBorderRadius(2)
27.        Divider()
28.        Text('blockStyle').fontSize(9).fontColor(0xCCCCCC).margin(15).width('90%')
29.        Slider({ style: SliderStyle.OutSet, value: 40 })
30.          .blockStyle({ type: SliderBlockType.DEFAULT })
31.        Slider({ style: SliderStyle.OutSet, value: 40 })
32.          .blockStyle({ type: SliderBlockType.IMAGE, image: $r('sys.media.ohos\_app\_icon') })
33.        Slider({ style: SliderStyle.OutSet, value: 40 })
34.          .blockSize({ width: '60px', height: '60px' })
35.          .blockColor(Color.Red)
36.          .blockStyle({ type: SliderBlockType.SHAPE, shape: new Path({ commands: 'M60 60 M30 30 L15 56 L45 56 Z' }) })
37.        Divider()
38.        Text('tips').fontSize(9).fontColor(0xCCCCCC).margin(15).width('90%')
39.        Slider({ style: SliderStyle.InSet, value: this.tipsValue })
40.          .showTips(true, this.tipsValue.toFixed())
41.          .onChange(value =\> {
42.            this.tipsValue = value
43.          })
44.      }
45.    }
46.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114429.43074487704892270311735424194162:50001231000000:2800:056A21007278193BC439BED05BCDF04AB962BE37B6697C0A771CB83156776A13.png?needInitFileName=true?needInitFileName=true)

### 示例3

3.  @Builder function buildSlider(config: SliderConfiguration) {
4.    Row() {
5.      Column({space: 30}) {
6.        Progress({value: config.value, total: config.max, type:ProgressType.Ring})
7.          .margin({ top:20 })

9.        Button('增加').onClick(() =\> {
10.          config.value = config.value + config.step
11.          config.triggerChange(config.value, SliderChangeMode.Click)
12.        })
13.          .width(100)
14.          .height(25)
15.          .fontSize(10)
16.          .enabled(config.value<config.max)

18.        Button('减少').onClick(() =\> {
19.          config.value\=config.value\-config.step
20.          config.triggerChange(config.value, SliderChangeMode.Click)
21.        })
22.          .width(100)
23.          .height(25)
24.          .fontSize(10)
25.          .enabled(config.value\>config.min)

27.        Slider({
28.          value: config.value,
29.          min: config.min,
30.          max: config.max,
31.          step:config.step,
32.        })
33.          .width(config.max)
34.          .visibility((config.contentModifier as MySliderStyle).showSlider?Visibility.Visible:Visibility.Hidden)
35.          .showSteps(true)
36.          .onChange((value: number, mode: SliderChangeMode) =\> {
37.            config.triggerChange(value, mode)
38.          })
39.        Text('当前状态：'\+ ((config.contentModifier as MySliderStyle).sliderChangeMode\==0?"Begin"
40.          :((config.contentModifier as MySliderStyle).sliderChangeMode\==1?"Moving"
41.            :((config.contentModifier as MySliderStyle).sliderChangeMode\==2?"End"
42.              :((config.contentModifier as MySliderStyle).sliderChangeMode\==3?"Click":"无")))))
43.          .fontSize(10)
44.        Text('进度值：'\+ config.value)
45.          .fontSize(10)
46.        Text('最小值：'\+ config.min)
47.          .fontSize(10)
48.        Text('最大值：'\+ config.max)
49.          .fontSize(10)
50.        Text('步长：'\+ config.step)
51.          .fontSize(10)
52.      }
53.      .width('80%')

55.    }
56.    .width('100%')
57.  }

59.  class MySliderStyle implements ContentModifier<SliderConfiguration\> {
60.    showSlider:boolean\=true
61.    sliderChangeMode:number\=0
62.    constructor(showSlider: boolean,sliderChangeMode:number) {
63.      this.showSlider = showSlider
64.      this.sliderChangeMode = sliderChangeMode
65.    }
66.    applyContent() : WrappedBuilder<\[SliderConfiguration\]\> {
67.      return wrapBuilder(buildSlider)
68.    }
69.  }

72.  @Entry
73.  @Component
74.  struct SliderExample {
75.    @State showSlider:boolean\=true
76.    @State sliderValue: number = 0
77.    @State sliderMin: number = 10
78.    @State sliderMax: number = 100
79.    @State sliderStep: number = 20
80.    @State sliderChangeMode: number = 0

82.    build() {
83.      Column({ space: 8 }) {

85.        Row() {
86.          Slider({
87.            value: this.sliderValue,
88.            min: this.sliderMin,
89.            max: this.sliderMax,
90.            step:this.sliderStep,
91.          })
92.            .showSteps(true)
93.            .onChange((value: number, mode: SliderChangeMode) =\> {
94.              this.sliderValue = value
95.              this.sliderChangeMode\=mode
96.              console.info('【SliderLog】value:' + value + 'mode:' + mode.toString())
97.            })
98.            .contentModifier(new MySliderStyle(this.showSlider,this.sliderChangeMode))

100.        }
101.        .width('100%')

103.      }.width('100%')
104.    }
105.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114429.93290096392279282138160578022317:50001231000000:2800:F2F8E90ABB9F2601C86D3E52CF44C164CA5B2543A2069EC0F65DBC7CB85BBE13.gif?needInitFileName=true?needInitFileName=true)
