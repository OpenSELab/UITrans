Title: InterstitialDialogAction-原子化服务-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-atomicservice-interstitialdialogaction-V5

Markdown Content:
InterstitialDialogAction弹框在元服务中用于在保持当前的上下文环境时，临时展示用户需关注的信息或待处理的操作，用户点击弹框的不同区域可以触发相应的动作。

说明

该组件从API Version 12开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

导入模块
----

1.  import { InterstitialDialogAction, IconStyle, TitlePosition, BottomOffset } from '@kit.ArkUI';

1.  InterstitialDialogAction {
2.      uiContext: UIContext,
3.      contentNode: ComponentContent<object\>,
4.      dialogParam: DialogParams,
5.      bottomOffsetType?: BottomOffset,
6.      constructor: (dialogOptions: DialogOptions),
7.      openDialog(): Callback<void\>,
8.      closeDialog(): Callback<void\>
9.  }

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数**：

DialogParams
------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

设置弹框的特有属性以及默认关闭动作函数。

名称

类型

必填

说明

dialogOptions

[DialogOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-atomicservice-interstitialdialogaction-V5#dialogoptions)

是

为弹框组件设置除了基础属性外的属性。

defaultCloseAction

Callback<void\>

是

点击弹框以及关闭按钮后执行的默认关闭行为。

DialogOptions
-------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

设置弹框特有的属性以及提供给用户自定义的点击触发动作。

IconStyle
---------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

设置关闭按钮的色调样式，默认设置关闭按钮为亮色。

名称

值

说明

DARK

0

设置关闭按钮为暗色调。

LIGHT

1

设置关闭按钮为亮色调。

默认值。

TitlePosition
-------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

设置主副标题之间的上下相对位置，默认设置为主标题在副标题之上。

名称

值

说明

TOP

0

设置主标题位于副标题之上。

默认值。

BOTTOM

1

设置副标题位于主标题之上。

BottomOffset
------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

设置不同情景模式下弹框距离底部的距离，判断依据为是否存在菜单栏，默认显示为不存在菜单栏情况下的距离。

名称

值

说明

OFFSET\_FOR\_BAR

0

存在菜单栏情况下与窗口底部的距离。

默认值，设置后弹框距离底部88vp。

OFFSET\_FOR\_NONE

1

不存在菜单栏情况下与窗口底部的距离。

设置后弹框距离底部44vp。

示例
--

### 示例1

为可选属性设置相应值，用两种不同参数类型分别为主标题、副标题设置颜色值，关闭按钮设置为暗色调，

主副标题相对位置设置为主标题在副标题上方，底部距离类型设置为不存在菜单栏情况下的距离。

2.  import { AbilityConstant, UIAbility, Want } from '@kit.AbilityKit';
3.  import { hilog } from '@kit.PerformanceAnalysisKit';
4.  import { window } from '@kit.ArkUI';
5.  import { BusinessError } from '@kit.BasicServicesKit';

7.  let dialogUIContext: UIContext | null = null;

9.  export function getDialogUIContext(): UIContext | null {
10.    return dialogUIContext;
11.  }

13.  export default class EntryAbility extends UIAbility {
14.    onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {
15.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onCreate');
16.    }

18.    onDestroy(): void {
19.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onDestroy');
20.    }

22.    onWindowStageCreate(windowStage: window.WindowStage): void {

24.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageCreate');

26.      windowStage.loadContent('pages/Index', (err) =\> {
27.        if (err.code) {
28.          hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');
29.          return;
30.        }
31.        hilog.info(0x0000, 'testTag', 'Succeeded in loading the content.');
32.      });

34.      let windowClass: window.Window | undefined = undefined;
35.      windowStage.getMainWindow((err: BusinessError, data) =\> {
36.        let errCode: number = err.code;
37.        if (errCode) {
38.          console.error('Failed to obtain the main window. Cause: ' + JSON.stringify(err));
39.          return;
40.        }
41.        windowClass = data;
42.        console.info('Succeeded in obtaining the main window. Data: ' + JSON.stringify(data));
43.        dialogUIContext = windowClass.getUIContext();
44.      })

47.      windowStage.getMainWindow((err, data) =\> {
48.        if (err.code) {
49.          console.error('Failed to obtain the main window. Cause: ' + JSON.stringify(err));
50.          return;
51.        }
52.        windowClass = data;
53.        console.info('Succeeded in obtaining the main window. Data: ' + JSON.stringify(data));

55.        windowClass.setWindowLayoutFullScreen(false)
56.      })
57.    }

59.    onWindowStageDestroy(): void {

61.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageDestroy');
62.    }

64.    onForeground(): void {

66.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onForeground');
67.    }

69.    onBackground(): void {

71.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onBackground');
72.    }
73.  }

2.  import { getMyUiContext } from '../entryability/EntryAbility';
3.  import { UIContext, InterstitialDialogAction, IconStyle, TitlePosition, BottomOffset } from '@kit.ArkUI';

5.  @Entry
6.  @Component
7.  struct Index {
8.    build() {
9.      Row() {
10.        Column() {
11.          Text("show dialog")
12.            .fontSize(50)
13.            .fontWeight(FontWeight.Bold)
14.            .onClick(() =\> {
15.              let ctx: UIContext | null = getMyUiContext();
16.              let interstitialDialogAction: InterstitialDialogAction = new InterstitialDialogAction({
17.                uiContext: ctx as UIContext,
18.                title: "主标题",
19.                subtitle: "副标题",
20.                titleColor: 'rgb(255, 192, 0)',
21.                subtitleColor: Color.Red,
22.                backgroundImage: $r('app.media.testBackgroundImg'),
23.                foregroundImage: $r('app.media.testForegroundImg'),
24.                iconStyle: IconStyle.DARK,
25.                titlePosition: TitlePosition.TOP,
26.                bottomOffsetType: BottomOffset.OFFSET\_FOR\_NONE,
27.                onDialogClick: () =\> { console.log('outer dialog click action') },
28.                onDialogClose: () =\> { console.log('outer close action') }
29.              });
30.              interstitialDialogAction.openDialog();
31.            })
32.        }
33.        .width('100%')
34.      }
35.      .height('100%')
36.      .backgroundColor('rgba(0, 0, 0, 0.1)')
37.    }
38.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114531.77801399043504103074372852131684:50001231000000:2800:501AA8C65BE31E5D10ACBF2211AF965A12A8E577F52EF8F2FB87B01F11BE808A.png?needInitFileName=true?needInitFileName=true)

### 示例2

为可选属性设置相应值，用两种不同参数类型分别为主标题，副标题设置颜色值，关闭按钮设置为亮色调，主副标题相对位置设置为主标题在副标题下方，底部距离类型设置为存在菜单栏情况下的距离。

2.  import { AbilityConstant, UIAbility, Want } from '@kit.AbilityKit';
3.  import { hilog } from '@kit.PerformanceAnalysisKit';
4.  import { window } from '@kit.ArkUI';
5.  import { BusinessError } from '@kit.BasicServicesKit';

7.  let dialogUIContext: UIContext | null = null;

9.  export function getDialogUIContext(): UIContext | null {
10.    return dialogUIContext;
11.  }

13.  export default class EntryAbility extends UIAbility {
14.    onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {
15.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onCreate');
16.    }

18.    onDestroy(): void {
19.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onDestroy');
20.    }

22.    onWindowStageCreate(windowStage: window.WindowStage): void {

24.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageCreate');

26.      windowStage.loadContent('pages/Index', (err) =\> {
27.        if (err.code) {
28.          hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');
29.          return;
30.        }
31.        hilog.info(0x0000, 'testTag', 'Succeeded in loading the content.');
32.      });

34.      let windowClass: window.Window | undefined = undefined;
35.      windowStage.getMainWindow((err: BusinessError, data) =\> {
36.        let errCode: number = err.code;
37.        if (errCode) {
38.          console.error('Failed to obtain the main window. Cause: ' + JSON.stringify(err));
39.          return;
40.        }
41.        windowClass = data;
42.        console.info('Succeeded in obtaining the main window. Data: ' + JSON.stringify(data));
43.        dialogUIContext = windowClass.getUIContext();
44.      })

47.      windowStage.getMainWindow((err, data) =\> {
48.        if (err.code) {
49.          console.error('Failed to obtain the main window. Cause: ' + JSON.stringify(err));
50.          return;
51.        }
52.        windowClass = data;
53.        console.info('Succeeded in obtaining the main window. Data: ' + JSON.stringify(data));

55.        windowClass.setWindowLayoutFullScreen(false)
56.      })
57.    }

59.    onWindowStageDestroy(): void {

61.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageDestroy');
62.    }

64.    onForeground(): void {

66.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onForeground');
67.    }

69.    onBackground(): void {

71.      hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onBackground');
72.    }
73.  }

2.  import { getMyUiContext } from '../entryability/EntryAbility';
3.  import { UIContext, InterstitialDialogAction, IconStyle, TitlePosition, BottomOffset } from '@kit.ArkUI';

5.  @Entry
6.  @Component
7.  struct Index {
8.    build() {
9.      Row() {
10.        Column() {
11.          Text("show dialog")
12.            .fontSize(50)
13.            .fontWeight(FontWeight.Bold)
14.            .onClick(() =\> {
15.              let ctx: UIContext | null = getMyUiContext();
16.              let interstitialDialogAction: InterstitialDialogAction = new InterstitialDialogAction({
17.                uiContext: ctx as UIContext,
18.                title: "主标题",
19.                subtitle: "副标题",
20.                titleColor: 'rgb(255, 192, 0)',
21.                subtitleColor: Color.Red,
22.                backgroundImage: $r('app.media.testBackgroundImg'),
23.                foregroundImage: $r('app.media.testForegroundImg'),
24.                iconStyle: IconStyle.LIGHT,
25.                titlePosition: TitlePosition.BOTTOM,
26.                bottomOffsetType: BottomOffset.OFFSET\_FOR\_BAR,
27.                onDialogClick: () =\> { console.log('outer dialog click action') },
28.                onDialogClose: () =\> { console.log('outer close action') }
29.              });
30.              interstitialDialogAction.openDialog();
31.            })
32.        }
33.        .width('100%')
34.      }
35.      .height('100%')
36.      .backgroundColor('rgba(0, 0, 0, 0.1)')
37.    }
38.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114531.36591177287498249221930476778674:50001231000000:2800:6FA3E4000FB0B96AB596A3D1CAB4A5C3880153ADAE81F6E3EF384796A91128E5.png?needInitFileName=true?needInitFileName=true)
