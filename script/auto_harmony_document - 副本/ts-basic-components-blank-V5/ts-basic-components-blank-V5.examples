/*\n实现一个简单的蓝牙开关界面，包含一个文本标签和一个开关控件。通过使用Blank组件在文本和开关之间创建空白间隔，以改善布局美观性。整体布局使用Column和Row组件进行嵌套，设置背景颜色、边距和圆角以增强视觉效果。\n*/\n\n@Entry\n@Component\nstruct BlankExample {\n  build() {\n    Column() {\n      Row() {\n        Text('Bluetooth').fontSize(18) // 显示蓝牙文本，字体大小设置为18\n        Blank() // 使用Blank组件在文本和开关之间创建空白间隔，以改善布局美观性\n        Toggle({ type: ToggleType.Switch }).margin({ top: 14, bottom: 14, left: 6, right: 6 }) // 创建一个开关类型的Toggle控件，设置其上下左右边距以调整布局\n      }.width('100%').backgroundColor(0xFFFFFF).borderRadius(15).padding({ left: 12 }) // 设置Row组件的宽度为100%，背景颜色为白色，边框圆角为15，左侧内边距为12\n    }.backgroundColor(0xEFEFEF).padding(20) // 设置Column组件的背景颜色为浅灰色，内边距为20\n  }\n}


/*\n实现一个包含两个Row组件的Column布局，每个Row组件内包含一个Text组件、一个Blank组件和一个Toggle组件。Blank组件用于在Text和Toggle之间创建空白间隔，并可以设置最小宽度。整个Column组件的背景颜色为浅灰色，内边距为20，宽度为100%。\n*/\n\n@Entry\n@Component\nstruct BlankExample {\n  build() {\n    Column({ space: 20 }) {\n      // 第一个Row组件，包含一个Text组件、一个Blank组件和一个Toggle组件\n      Row() {\n        Text('Bluetooth').fontSize(18) // 显示蓝牙文本，字体大小设置为18\n        Blank().color(Color.Yellow) // 使用Blank组件在文本和开关之间创建空白间隔，并设置颜色为黄色\n        Toggle({ type: ToggleType.Switch }).margin({ top: 14, bottom: 14, left: 6, right: 6 }) // 创建一个开关类型的Toggle控件，设置其上下左右边距以调整布局\n      }.backgroundColor(0xFFFFFF).borderRadius(15).padding({ left: 12 }) // 设置Row组件的背景颜色为白色，边框圆角为15，左侧内边距为12\n\n      // 第二个Row组件，包含一个Text组件、一个Blank组件和一个Toggle组件\n      Row() {\n        Text('Bluetooth').fontSize(18) // 显示蓝牙文本，字体大小设置为18\n        // 设置最小宽度为160\n        Blank('160').color(Color.Yellow) // 使用Blank组件在文本和开关之间创建空白间隔，并设置最小宽度为160，颜色为黄色\n        Toggle({ type: ToggleType.Switch }).margin({ top: 14, bottom: 14, left: 6, right: 6 }) // 创建一个开关类型的Toggle控件，设置其上下左右边距以调整布局\n      }.backgroundColor(0xFFFFFF).borderRadius(15).padding({ left: 12 }) // 设置Row组件的背景颜色为白色，边框圆角为15，左侧内边距为12\n\n    }.backgroundColor(0xEFEFEF).padding(20).width('100%') // 设置Column组件的背景颜色为浅灰色，内边距为20，宽度为100%\n  }\n}