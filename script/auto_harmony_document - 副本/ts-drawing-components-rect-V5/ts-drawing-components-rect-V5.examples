/*\n实现一个包含两个矩形组件的示例，第一个矩形使用线性渐变填充并应用圆角裁剪，第二个矩形使用纯色填充并应用圆角边框。\n*/\n\n@Entry // 标记该组件为入口组件，即应用的入口界面\n@Component // 标记该结构体为一个自定义组件\nstruct RectExample {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局的容器，子组件之间的间距为10\n      Column() // 创建一个垂直布局的容器\n        .width(100) // 设置容器的宽度为100\n        .height(100) // 设置容器的高度为100\n        .linearGradient({ // 应用线性渐变填充\n          direction: GradientDirection.Right, // 渐变方向为从左到右\n          colors: [[0xff0000, 0.0], [0x0000ff, 0.3], [0xffff00, 1.0]] // 渐变颜色数组，从红色到蓝色再到黄色\n        })\n        .clip(new Rect({ width: 100, height: 100, radius: 40 })) // 应用圆角裁剪，裁剪成一个圆角矩形\n\n      Rect() // 创建一个矩形组件\n        .width(100) // 设置矩形的宽度为100\n        .height(100) // 设置矩形的高度为100\n        .fill(Color.Pink) // 设置矩形的填充颜色为粉色\n        .radius(40) // 设置矩形的圆角半径为40\n        .stroke(Color.Black) // 设置矩形的边框颜色为黑色\n        .linearGradient({ // 应用线性渐变填充\n          direction: GradientDirection.Right, // 渐变方向为从左到右\n          colors: [[0xff0000, 0.0], [0x0000ff, 0.3], [0xffff00, 1.0]] // 渐变颜色数组，从红色到蓝色再到黄色\n        })\n    }\n  }\n}


/*\n实现一个展示不同样式矩形的示例组件。组件包含多个矩形，每个矩形展示不同的样式，包括填充颜色、边框、圆角等。通过不同的属性和方法设置矩形的外观，展示鸿蒙ArkUI中矩形组件的灵活性和多样性。\n*/\n\n@Entry\n@Component\nstruct RectExample {\n  build() {\n    Column({ space: 10 }) { // 创建一个垂直布局，组件间距为10\n      Text('normal').fontSize(11).fontColor(0xCCCCCC).width('90%') // 创建一个文本组件，字体大小为11，颜色为灰色，宽度为90%\n\n      Column({ space: 5 }) { // 创建一个垂直布局，组件间距为5\n        Text('normal').fontSize(9).fontColor(0xCCCCCC).width('90%') // 创建一个文本组件，字体大小为9，颜色为灰色，宽度为90%\n\n        Rect({ width: '90%', height: 50 }) // 创建一个矩形组件，宽度为90%，高度为50\n          .fill(Color.Pink) // 设置矩形的填充颜色为粉色\n\n        Rect() // 创建一个矩形组件\n          .width('90%') // 设置矩形的宽度为90%\n          .height(50) // 设置矩形的高度为50\n          .fillOpacity(0) // 设置矩形的填充透明度为0（即无填充颜色）\n          .stroke(Color.Red) // 设置矩形的边框颜色为红色\n          .strokeWidth(3) // 设置矩形的边框宽度为3\n\n        Text('with rounded corners').fontSize(11).fontColor(0xCCCCCC).width('90%') // 创建一个文本组件，字体大小为11，颜色为灰色，宽度为90%\n\n        Rect({ width: '90%', height: 80 }) // 创建一个矩形组件，宽度为90%，高度为80\n          .radiusHeight(20) // 设置矩形的圆角高度为20\n          .radiusWidth(40) // 设置矩形的圆角宽度为40\n          .fill(Color.Pink) // 设置矩形的填充颜色为粉色\n\n        Rect({ width: '90%', height: 80 }) // 创建一个矩形组件，宽度为90%，高度为80\n          .radius(20) // 设置矩形的圆角为20（等宽等高圆角）\n          .fill(Color.Pink) // 设置矩形的填充颜色为粉色\n          .stroke(Color.Transparent) // 设置矩形的边框颜色为透明（即无边框）\n      }.width('100%').margin({ top: 10 }) // 设置内部垂直布局的宽度为100%，顶部外边距为10\n\n      Rect({ width: '90%', height: 80 }) // 创建一个矩形组件，宽度为90%，高度为80\n        .radius([[40, 40], [20, 20], [40, 40], [20, 20]]) // 设置矩形的圆角，分别为左上、右上、右下、左下的圆角\n        .fill(Color.Pink) // 设置矩形的填充颜色为粉色\n    }.width('100%').margin({ top: 5 }) // 设置外部垂直布局的宽度为100%，顶部外边距为5\n  }\n}