/*\n实现一个栅格布局容器，支持多列布局，每列宽度可自定义，支持子组件的自动排列和对齐。\n*/\n\n// 导入必要的模块\nimport { GridRow, GridCol } from '@ohos/grid';\n\n@Entry\n@Component\nstruct GridRowExample {\n  build() {\n    Column({ space: 10 }) {\n      // 创建一个GridRow容器，设置列数为3，列间距为10\n      GridRow({ columns: 3, gutter: 10 }) {\n        // 创建一个GridCol子组件，设置跨度为1，背景颜色为蓝色\n        GridCol({ span: 1 }) {\n          Text('Column 1')\n            .fontSize(20)\n            .fontColor(Color.White)\n        }\n        .backgroundColor(Color.Blue)\n\n        // 创建一个GridCol子组件，设置跨度为2，背景颜色为绿色\n        GridCol({ span: 2 }) {\n          Text('Column 2')\n            .fontSize(20)\n            .fontColor(Color.White)\n        }\n        .backgroundColor(Color.Green)\n\n        // 创建一个GridCol子组件，设置跨度为3，背景颜色为红色\n        GridCol({ span: 3 }) {\n          Text('Column 3')\n            .fontSize(20)\n            .fontColor(Color.White)\n        }\n        .backgroundColor(Color.Red)\n      }\n      .width('100%')\n      .height(200)\n      .backgroundColor(Color.Gray)\n\n      // 创建另一个GridRow容器，设置列数为2，列间距为5\n      GridRow({ columns: 2, gutter: 5 }) {\n        // 创建一个GridCol子组件，设置跨度为1，背景颜色为黄色\n        GridCol({ span: 1 }) {\n          Text('Column 4')\n            .fontSize(20)\n            .fontColor(Color.Black)\n        }\n        .backgroundColor(Color.Yellow)\n\n        // 创建一个GridCol子组件，设置跨度为1，背景颜色为紫色\n        GridCol({ span: 1 }) {\n          Text('Column 5')\n            .fontSize(20)\n            .fontColor(Color.White)\n        }\n        .backgroundColor(Color.Purple)\n      }\n      .width('100%')\n      .height(150)\n      .backgroundColor(Color.LightGray)\n    }\n    .width('100%')\n    .height('100%')\n    .padding(10)\n  }\n}