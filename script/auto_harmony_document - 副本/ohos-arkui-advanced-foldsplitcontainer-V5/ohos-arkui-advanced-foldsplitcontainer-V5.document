Title: FoldSplitContainer-栅格与分栏-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-arkui-advanced-foldsplitcontainer-V5

Markdown Content:
FoldSplitContainer({

primary: Callback<void\>,

secondary: Callback<void\>,

extra?: Callback<void\>,

expandedLayoutOptions?: ExpandedRegionLayoutOptions,

hoverModeLayoutOptions?: HoverModeRegionLayoutOptions,

foldedLayoutOptions?: FoldedRegionLayoutOptions,

animationOptions?: AnimateParam,

onHoverStatusChange?: onHoverStatusChangeHandler

})

**装饰器类型：**@Component

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

ExpandedRegionLayoutOptions
---------------------------

**装饰器类型：**@Prop

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

展开态布局信息。

名称

类型

必填

说明

isExtraRegionPerpendicular

boolean

否

扩展区域是否从上到下贯穿整个组件，当且仅当extra有效时此字段才生效。默认值：true。

verticalSplitRatio

number

否

主要区域与次要区域之间的高度比例。默认值：PresetSplitRatio.LAYOUT\_1V1。

horizontalSplitRatio

number

否

主要区域与扩展区域之间的宽度比例，当且仅当extra有效时此字段才生效。默认值：PresetSplitRatio.LAYOUT\_3V2。

extraRegionPosition

[ExtraRegionPosition](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-arkui-advanced-foldsplitcontainer-V5#extraregionposition)

否

扩展区域的位置信息，当且仅当isExtraRegionPerpendicular = false有效时此字段才生效。默认值：ExtraRegionPosition.top。

HoverModeRegionLayoutOptions
----------------------------

**装饰器类型：**@Prop

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

悬停态布局信息。

名称

类型

必填

说明

showExtraRegion

boolean

否

可折叠屏幕在半折叠状态下是否显示扩展区域。默认值：false。

horizontalSplitRatio

number

否

主要区域与扩展区域之间的宽度比例，当且仅当extra有效时此字段才生效。默认值：PresetSplitRatio.LAYOUT\_3V2。

extraRegionPosition

[ExtraRegionPosition](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-arkui-advanced-foldsplitcontainer-V5#extraregionposition)

否

扩展区域的位置信息，当且仅当showExtraRegion时此字段才生效。默认值：ExtraRegionPosition.top。

说明

1.设备处于悬停态时，存在避让区域，布局计算需要考虑避让区域对布局的影响。

2.在悬停模式下，屏幕上半部分用于显示，下半部分用于操作。

FoldedRegionLayoutOptions
-------------------------

**装饰器类型：**@Prop

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

折叠态布局信息。

名称

类型

必填

说明

verticalSplitRatio

number

是

主要区域与次要区域之间的高度比例。默认值：PresetSplitRatio.LAYOUT\_1V1。

onHoverStatusChangeHandler
--------------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

onHoverStatusChange事件处理。

名称

类型

必填

说明

callback

(status: [HoverModeStatus](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-arkui-advanced-foldsplitcontainer-V5#hovermodestatus)) =\> void

是

折叠屏进入或退出悬停模式时触发的回调函数。

HoverModeStatus
---------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

折叠态布局信息。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

扩展区域位置信息。

名称

值

描述

top

1

扩展区域在组件上半区域。

bottom

2

扩展区域在组件下半区域。

PresetSplitRatio
----------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

区域比例。

名称

值

描述

LAYOUT\_1V1

1/1

1:1比例。

LAYOUT\_3V2

3/2

3:2比例。

LAYOUT\_2V3

2/3

2:3比例。

### 示例1

1.  import { FoldSplitContainer } from '@kit.ArkUI';

3.  @Entry
4.  @Component
5.  struct TwoColumns {
6.    @Builder
7.    privateRegion() {
8.      Text("Primary")
9.        .backgroundColor('rgba(255, 0, 0, 0.1)')
10.        .fontSize(28)
11.        .textAlign(TextAlign.Center)
12.        .height('100%')
13.        .width('100%')
14.    }

16.    @Builder
17.    secondaryRegion() {
18.      Text("Secondary")
19.        .backgroundColor('rgba(0, 255, 0, 0.1)')
20.        .fontSize(28)
21.        .textAlign(TextAlign.Center)
22.        .height('100%')
23.        .width('100%')
24.    }

26.    build() {
27.      RelativeContainer() {
28.        FoldSplitContainer({
29.          primary: () =\> {
30.            this.privateRegion()
31.          },
32.          secondary: () =\> {
33.            this.secondaryRegion()
34.          }
35.        })
36.      }
37.      .height('100%')
38.      .width('100%')
39.    }
40.  }

### 示例2

1.  import { FoldSplitContainer } from '@kit.ArkUI';

3.  @Entry
4.  @Component
5.  struct ThreeColumns {
6.    @Builder
7.    privateRegion() {
8.      Text("Primary")
9.        .backgroundColor('rgba(255, 0, 0, 0.1)')
10.        .fontSize(28)
11.        .textAlign(TextAlign.Center)
12.        .height('100%')
13.        .width('100%')
14.    }

16.    @Builder
17.    secondaryRegion() {
18.      Text("Secondary")
19.        .backgroundColor('rgba(0, 255, 0, 0.1)')
20.        .fontSize(28)
21.        .textAlign(TextAlign.Center)
22.        .height('100%')
23.        .width('100%')
24.    }

26.    @Builder
27.    extraRegion() {
28.      Text("Extra")
29.        .backgroundColor('rgba(0, 0, 255, 0.1)')
30.        .fontSize(28)
31.        .textAlign(TextAlign.Center)
32.        .height('100%')
33.        .width('100%')
34.    }

36.    build() {
37.      RelativeContainer() {
38.        FoldSplitContainer({
39.          primary: () =\> {
40.            this.privateRegion()
41.          },
42.          secondary: () =\> {
43.            this.secondaryRegion()
44.          },
45.          extra: () =\> {
46.            this.extraRegion()
47.          }
48.        })
49.      }
50.      .height('100%')
51.      .width('100%')
52.    }
53.  }

### 示例3

1.  import {
2.    FoldSplitContainer,
3.    PresetSplitRatio,
4.    ExtraRegionPosition,
5.    ExpandedRegionLayoutOptions,
6.    HoverModeRegionLayoutOptions,
7.    FoldedRegionLayoutOptions
8.  } from '@kit.ArkUI';

10.  @Component
11.  struct Region {
12.    @Prop title: string;
13.    @BuilderParam content: () =\> void;
14.    @Prop compBackgroundColor: string;

16.    build() {
17.      Column({ space: 8 }) {
18.        Text(this.title)
19.          .fontSize("24fp")
20.          .fontWeight(600)

22.        Scroll() {
23.          this.content()
24.        }
25.        .layoutWeight(1)
26.        .width("100%")
27.      }
28.      .backgroundColor(this.compBackgroundColor)
29.      .width("100%")
30.      .height("100%")
31.      .padding(12)
32.    }
33.  }

35.  const noop = () =\> {
36.  };

38.  @Component
39.  struct SwitchOption {
40.    @Prop label: string = ""
41.    @Prop value: boolean = false
42.    public onChange: (checked: boolean) =\> void = noop;

44.    build() {
45.      Row() {
46.        Text(this.label)
47.        Blank()
48.        Toggle({ type: ToggleType.Switch, isOn: this.value })
49.          .onChange((isOn) =\> {
50.            this.onChange(isOn);
51.          })
52.      }
53.      .backgroundColor(Color.White)
54.      .borderRadius(8)
55.      .padding(8)
56.      .width("100%")
57.    }
58.  }

60.  interface RadioOptions {
61.    label: string;
62.    value: Object | undefined | null;
63.    onChecked: () =\> void;
64.  }

66.  @Component
67.  struct RadioOption {
68.    @Prop label: string;
69.    @Prop value: Object | undefined | null;
70.    @Prop options: Array<RadioOptions\>;

72.    build() {
73.      Row() {
74.        Text(this.label)
75.        Blank()
76.        Column({ space: 4 }) {
77.          ForEach(this.options, (option: RadioOptions) =\> {
78.            Row() {
79.              Radio({
80.                group: this.label,
81.                value: JSON.stringify(option.value),
82.              })
83.                .checked(this.value === option.value)
84.                .onChange((checked) =\> {
85.                  if (checked) {
86.                    option.onChecked();
87.                  }
88.                })
89.              Text(option.label)
90.            }
91.          })
92.        }
93.        .alignItems(HorizontalAlign.Start)
94.      }
95.      .alignItems(VerticalAlign.Top)
96.      .backgroundColor(Color.White)
97.      .borderRadius(8)
98.      .padding(8)
99.      .width("100%")
100.    }
101.  }

103.  @Entry
104.  @Component
105.  struct Index {
106.    @State expandedRegionLayoutOptions: ExpandedRegionLayoutOptions = {
107.      horizontalSplitRatio: PresetSplitRatio.LAYOUT\_3V2,
108.      verticalSplitRatio: PresetSplitRatio.LAYOUT\_1V1,
109.      isExtraRegionPerpendicular: true,
110.      extraRegionPosition: ExtraRegionPosition.TOP
111.    };
112.    @State foldingRegionLayoutOptions: HoverModeRegionLayoutOptions = {
113.      horizontalSplitRatio: PresetSplitRatio.LAYOUT\_3V2,
114.      showExtraRegion: false,
115.      extraRegionPosition: ExtraRegionPosition.TOP
116.    };
117.    @State foldedRegionLayoutOptions: FoldedRegionLayoutOptions = {
118.      verticalSplitRatio: PresetSplitRatio.LAYOUT\_1V1
119.    };

121.    @Builder
122.    MajorRegion() {
123.      Region({
124.        title: "折叠态配置",
125.        compBackgroundColor: "rgba(255, 0, 0, 0.1)",
126.      }) {
127.        Column({ space: 4 }) {
128.          RadioOption({
129.            label: "折叠态垂直高度度比",
130.            value: this.foldedRegionLayoutOptions.verticalSplitRatio,
131.            options: \[
132.              {
133.                label: "1:1",
134.                value: PresetSplitRatio.LAYOUT\_1V1,
135.                onChecked: () =\> {
136.                  this.foldedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT\_1V1
137.                }
138.              },
139.              {
140.                label: "2:3",
141.                value: PresetSplitRatio.LAYOUT\_2V3,
142.                onChecked: () =\> {
143.                  this.foldedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT\_2V3
144.                }
145.              },
146.              {
147.                label: "3:2",
148.                value: PresetSplitRatio.LAYOUT\_3V2,
149.                onChecked: () =\> {
150.                  this.foldedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT\_3V2
151.                }
152.              },
153.              {
154.                label: "未定义",
155.                value: undefined,
156.                onChecked: () =\> {
157.                  this.foldedRegionLayoutOptions.verticalSplitRatio = undefined
158.                }
159.              }
160.            \]
161.          })
162.        }
163.        .constraintSize({ minHeight: "100%" })
164.      }
165.    }

167.    @Builder
168.    MinorRegion() {
169.      Region({
170.        title: "悬停态配置",
171.        compBackgroundColor: "rgba(0, 255, 0, 0.1)"
172.      }) {
173.        Column({ space: 4 }) {
174.          RadioOption({
175.            label: "悬停态水平宽度比",
176.            value: this.foldingRegionLayoutOptions.horizontalSplitRatio,
177.            options: \[
178.              {
179.                label: "1:1",
180.                value: PresetSplitRatio.LAYOUT\_1V1,
181.                onChecked: () =\> {
182.                  this.foldingRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT\_1V1
183.                }
184.              },
185.              {
186.                label: "2:3",
187.                value: PresetSplitRatio.LAYOUT\_2V3,
188.                onChecked: () =\> {
189.                  this.foldingRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT\_2V3
190.                }
191.              },
192.              {
193.                label: "3:2",
194.                value: PresetSplitRatio.LAYOUT\_3V2,
195.                onChecked: () =\> {
196.                  this.foldingRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT\_3V2
197.                }
198.              },
199.              {
200.                label: "未定义",
201.                value: undefined,
202.                onChecked: () =\> {
203.                  this.foldingRegionLayoutOptions.horizontalSplitRatio = undefined
204.                }
205.              },
206.            \]
207.          })

209.          SwitchOption({
210.            label: "悬停态是否显示扩展区",
211.            value: this.foldingRegionLayoutOptions.showExtraRegion,
212.            onChange: (checked) =\> {
213.              this.foldingRegionLayoutOptions.showExtraRegion = checked;
214.            }
215.          })

217.          if (this.foldingRegionLayoutOptions.showExtraRegion) {
218.            RadioOption({
219.              label: "悬停态扩展区位置",
220.              value: this.foldingRegionLayoutOptions.extraRegionPosition,
221.              options: \[
222.                {
223.                  label: "顶部",
224.                  value: ExtraRegionPosition.TOP,
225.                  onChecked: () =\> {
226.                    this.foldingRegionLayoutOptions.extraRegionPosition = ExtraRegionPosition.TOP
227.                  }
228.                },
229.                {
230.                  label: "底部",
231.                  value: ExtraRegionPosition.BOTTOM,
232.                  onChecked: () =\> {
233.                    this.foldingRegionLayoutOptions.extraRegionPosition = ExtraRegionPosition.BOTTOM
234.                  }
235.                },
236.                {
237.                  label: "未定义",
238.                  value: undefined,
239.                  onChecked: () =\> {
240.                    this.foldingRegionLayoutOptions.extraRegionPosition = undefined
241.                  }
242.                },
243.              \]
244.            })
245.          }
246.        }
247.        .constraintSize({ minHeight: "100%" })
248.      }
249.    }

251.    @Builder
252.    ExtraRegion() {
253.      Region({
254.        title: "展开态配置",
255.        compBackgroundColor: "rgba(0, 0, 255, 0.1)"
256.      }) {
257.        Column({ space: 4 }) {
258.          RadioOption({
259.            label: "展开态水平宽度比",
260.            value: this.expandedRegionLayoutOptions.horizontalSplitRatio,
261.            options: \[
262.              {
263.                label: "1:1",
264.                value: PresetSplitRatio.LAYOUT\_1V1,
265.                onChecked: () =\> {
266.                  this.expandedRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT\_1V1
267.                }
268.              },
269.              {
270.                label: "2:3",
271.                value: PresetSplitRatio.LAYOUT\_2V3,
272.                onChecked: () =\> {
273.                  this.expandedRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT\_2V3
274.                }
275.              },
276.              {
277.                label: "3:2",
278.                value: PresetSplitRatio.LAYOUT\_3V2,
279.                onChecked: () =\> {
280.                  this.expandedRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT\_3V2
281.                }
282.              },
283.              {
284.                label: "未定义",
285.                value: undefined,
286.                onChecked: () =\> {
287.                  this.expandedRegionLayoutOptions.horizontalSplitRatio = undefined
288.                }
289.              },
290.            \]
291.          })

293.          RadioOption({
294.            label: "展开态垂直高度度比",
295.            value: this.expandedRegionLayoutOptions.verticalSplitRatio,
296.            options: \[
297.              {
298.                label: "1:1",
299.                value: PresetSplitRatio.LAYOUT\_1V1,
300.                onChecked: () =\> {
301.                  this.expandedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT\_1V1
302.                }
303.              },
304.              {
305.                label: "2:3",
306.                value: PresetSplitRatio.LAYOUT\_2V3,
307.                onChecked: () =\> {
308.                  this.expandedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT\_2V3
309.                }
310.              },
311.              {
312.                label: "3:2",
313.                value: PresetSplitRatio.LAYOUT\_3V2,
314.                onChecked: () =\> {
315.                  this.expandedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT\_3V2
316.                }
317.              },
318.              {
319.                label: "未定义",
320.                value: undefined,
321.                onChecked: () =\> {
322.                  this.expandedRegionLayoutOptions.verticalSplitRatio = undefined
323.                }
324.              }
325.            \]
326.          })

328.          SwitchOption({
329.            label: "展开态扩展区是否上下贯穿",
330.            value: this.expandedRegionLayoutOptions.isExtraRegionPerpendicular,
331.            onChange: (checked) =\> {
332.              this.expandedRegionLayoutOptions.isExtraRegionPerpendicular = checked;
333.            }
334.          })

336.          if (!this.expandedRegionLayoutOptions.isExtraRegionPerpendicular) {
337.            RadioOption({
338.              label: "展开态扩展区位置",
339.              value: this.expandedRegionLayoutOptions.extraRegionPosition,
340.              options: \[
341.                {
342.                  label: "顶部",
343.                  value: ExtraRegionPosition.TOP,
344.                  onChecked: () =\> {
345.                    this.expandedRegionLayoutOptions.extraRegionPosition = ExtraRegionPosition.TOP
346.                  }
347.                },
348.                {
349.                  label: "底部",
350.                  value: ExtraRegionPosition.BOTTOM,
351.                  onChecked: () =\> {
352.                    this.expandedRegionLayoutOptions.extraRegionPosition = ExtraRegionPosition.BOTTOM
353.                  }
354.                },
355.                {
356.                  label: "未定义",
357.                  value: undefined,
358.                  onChecked: () =\> {
359.                    this.expandedRegionLayoutOptions.extraRegionPosition = undefined
360.                  }
361.                },
362.              \]
363.            })
364.          }
365.        }
366.        .constraintSize({ minHeight: "100%" })
367.      }
368.    }

370.    build() {
371.      Column() {
372.        FoldSplitContainer({
373.          primary: () =\> {
374.            this.MajorRegion()
375.          },
376.          secondary: () =\> {
377.            this.MinorRegion()
378.          },
379.          extra: () =\> {
380.            this.ExtraRegion()
381.          },
382.          expandedLayoutOptions: this.expandedRegionLayoutOptions,
383.          hoverModeLayoutOptions: this.foldingRegionLayoutOptions,
384.          foldedLayoutOptions: this.foldedRegionLayoutOptions,
385.        })
386.      }
387.      .width("100%")
388.      .height("100%")
389.    }
390.  }
