            this.foldingRegionLayoutOptions.showExtraRegion = checked; // 设置悬停态是否显示扩展区\n          }\n        })\n\n        if (this.foldingRegionLayoutOptions.showExtraRegion) { // 如果悬停态显示扩展区\n          RadioOption({ // 创建一个单选框组件\n            label: "悬停态扩展区位置", // 设置标签为"悬停态扩展区位置"\n            value: this.foldingRegionLayoutOptions.extraRegionPosition, // 设置值为悬停态扩展区位置\n            options: [ // 设置单选框选项\n              {\n                label: "顶部", // 标签为"顶部"\n                value: ExtraRegionPosition.TOP, // 值为顶部\n                onChecked: () => { // 选中时的回调函数\n                  this.foldingRegionLayoutOptions.extraRegionPosition = ExtraRegionPosition.TOP // 设置悬停态扩展区位置为顶部\n                }\n              },\n              {\n                label: "底部", // 标签为"底部"\n                value: ExtraRegionPosition.BOTTOM, // 值为底部\n                onChecked: () => { // 选中时的回调函数\n                  this.foldingRegionLayoutOptions.extraRegionPosition = ExtraRegionPosition.BOTTOM // 设置悬停态扩展区位置为底部\n                }\n              },\n              {\n                label: "未定义", // 标签为"未定义"\n                value: undefined, // 值为undefined\n                onChecked: () => { // 选中时的回调函数\n                  this.foldingRegionLayoutOptions.extraRegionPosition = undefined // 设置悬停态扩展区位置为undefined\n                }\n              },\n            ]\n          })\n        }\n      }\n      .constraintSize({ minHeight: "100%" }) // 设置最小高度为100%\n    }\n  }\n\n  @Builder // 定义一个Builder方法，用于构建UI\n  ExtraRegion() {\n    Region({ // 创建一个Region组件\n      title: "展开态配置", // 设置标题为"展开态配置"\n      compBackgroundColor: "rgba(0, 0, 255, 0.1)" // 设置背景颜色为蓝色，透明度为0.1\n    }) {\n      Column({ space: 4 }) { // 创建一个列布局容器，间距为4\n        RadioOption({ // 创建一个单选框组件\n          label: "展开态水平宽度比", // 设置标签为"展开态水平宽度比"\n          value: this.expandedRegionLayoutOptions.horizontalSplitRatio, // 设置值为展开态水平分割比例\n          options: [ // 设置单选框选项\n            {\n              label: "1:1", // 标签为"1:1"\n              value: PresetSplitRatio.LAYOUT_1V1, // 值为1:1\n              onChecked: () => { // 选中时的回调函数\n                this.expandedRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT_1V1 // 设置展开态水平分割比例为1:1\n              }\n            },\n            {\n              label: "2:3", // 标签为"2:3"\n              value: PresetSplitRatio.LAYOUT_2V3, // 值为2:3\n              onChecked: () => { // 选中时的回调函数\n                this.expandedRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT_2V3 // 设置展开态水平分割比例为2:3\n              }\n            },\n            {\n              label: "3:2", // 标签为"3:2"\n              value: PresetSplitRatio.LAYOUT_3V2, // 值为3:2\n              onChecked: () => { // 选中时的回调函数\n                this.expandedRegionLayoutOptions.horizontalSplitRatio = PresetSplitRatio.LAYOUT_3V2 // 设置展开态水平分割比例为3:2\n              }\n            },\n            {\n              label: "未定义", // 标签为"未定义"\n              value: undefined, // 值为undefined\n              onChecked: () => { // 选中时的回调函数\n                this.expandedRegionLayoutOptions.horizontalSplitRatio = undefined // 设置展开态水平分割比例为undefined\n              }\n            },\n          ]\n        })\n\n        RadioOption({ // 创建一个单选框组件\n          label: "展开态垂直高度度比", // 设置标签为"展开态垂直高度度比"\n          value: this.expandedRegionLayoutOptions.verticalSplitRatio, // 设置值为展开态垂直分割比例\n          options: [ // 设置单选框选项\n            {\n              label: "1:1", // 标签为"1:1"\n              value: PresetSplitRatio.LAYOUT_1V1, // 值为1:1\n              onChecked: () => { // 选中时的回调函数\n                this.expandedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT_1V1 // 设置展开态垂直分割比例为1:1\n              }\n            },\n            {\n              label: "2:3", // 标签为"2:3"\n              value: PresetSplitRatio.LAYOUT_2V3, // 值为2:3\n              onChecked: () => { // 选中时的回调函数\n                this.expandedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT_2V3 // 设置展开态垂直分割比例为2:3\n              }\n            },\n            {\n              label: "3:2", // 标签为"3:2"\n              value: PresetSplitRatio.LAYOUT_3V2, // 值为3:2\n              onChecked: () => { // 选中时的回调函数\n                this.expandedRegionLayoutOptions.verticalSplitRatio = PresetSplitRatio.LAYOUT_3V2 // 设置展开态垂直分割比例为3:2\n              }\n            },\n            {\n              label: "未定义", // 标签为"未定义"\n              value: undefined, // 值为undefined\n              onChecked: () => { // 选中时的回调函数\n                this.expandedRegionLayoutOptions.verticalSplitRatio = undefined // 设置展开态垂直分割比例为undefined\n              }\n            }\n          ]\n        })\n\n        SwitchOption({ // 创建一个开关组件\n          label: "展开态扩展区是否上下贯穿", // 设置标签为"展开态扩展区是否上下贯穿"\n          value: this.expandedRegionLayoutOptions.isExtraRegionPerpendicular, // 设置值为展开态扩展区是否上下贯穿\n          onChange: (checked) => { // 监听开关状态变化\n            this.expandedRegionLayoutOptions.isExtraRegionPerpendicular = checked; // 设置展开态扩展区是否上下贯穿\n          }\n        })\n\n        if (!this.expandedRegionLayoutOptions.isExtraRegionPerpendicular) { // 如果展开态扩展区不上下贯穿\n          RadioOption({ // 创建一个单选框组件\n            label: "展开态扩展区位置", // 设置标签为"展开态扩展区位置"\n            value: this.expandedRegionLayoutOptions.extraRegionPosition, // 设置值为展开态扩展区位置\n            options: [ // 设置单选框选项\n              {\n                label: "顶部", // 标签为"顶部"\n                value: ExtraRegionPosition.TOP, // 值为顶部\n                onChecked: () => { // 选中时的回调函数\n                  this.expandedRegionLayoutOptions.extraRegionPosition = ExtraRegionPosition.TOP // 设置展开态扩展区位置为顶部\n                }\n              },\n              {\n                label: "底部", // 标签为"底部"\n                value: ExtraRegionPosition.BOTTOM, // 值为底部\n                onChecked: () => { // 选中时的回调函数\n                  this.expandedRegionLayoutOptions.extraRegionPosition = ExtraRegionPosition.BOTTOM // 设置展开态扩展区位置为底部\n                }\n              },\n              {\n                label: "未定义", // 标签为"未定义"\n                value: undefined, // 值为undefined\n                onChecked: () => { // 选中时的回调函数\n                  this.expandedRegionLayoutOptions.extraRegionPosition = undefined // 设置展开态扩展区位置为undefined\n                }\n              },\n            ]\n          })\n        }\n      }\n      .constraintSize({ minHeight: "100%" }) // 设置最小高度为100%\n    }\n  }\n\n  build() {\n    Column() { // 创建一个列布局容器\n      FoldSplitContainer({ // 创建一个FoldSplitContainer组件\n        primary: () => { // 定义主区域的内容\n          this.MajorRegion() // 调用MajorRegion方法，显示主区域内容\n        },\n        secondary: () => { // 定义次区域的内容\n          this.MinorRegion() // 调用MinorRegion方法，显示次区域内容\n        },\n        extra: () => { // 定义额外区域的内容\n          this.ExtraRegion() // 调用ExtraRegion方法，显示额外区域内容\n        },\n        expandedLayoutOptions: this.expandedRegionLayoutOptions, // 设置展开态布局选项\n        hoverModeLayoutOptions: this.foldingRegionLayoutOptions, // 设置悬停态布局选项\n        foldedLayoutOptions: this.foldedRegionLayoutOptions, // 设置折叠态布局选项\n      })\n    }\n    .width("100%") // 设置容器宽度为100%\n    .height("100%") // 设置容器高度为100%\n  }\n}