Title: Refresh-容器组件-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-refresh-V5

Markdown Content:
可以进行页面下拉操作并显示刷新动效的容器组件。

说明

*   该组件从API Version 8开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。
    
*   该组件从API Version 12开始支持与垂直滚动的Swiper和Web的联动。当Swiper设置loop属性为true时，Refresh无法和Swiper产生联动。
    

子组件
---

支持单个子组件。

从API version 11开始，Refresh子组件会跟随手势下拉而下移。

接口
--

Refresh(value: RefreshOptions)

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

RefreshOptions对象说明
------------------

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 参数 | 参数名 | 必填 | 参数描述 |
| --- | --- | --- | --- |
| refreshing | boolean | 是 | 当前组件是否正在刷新。
默认值：false

该参数支持[$$](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-two-way-sync-V5)双向绑定变量。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

 |
| offset(deprecated) | string | number | 否 | 下拉起点距离组件顶部的距离。

默认值：16，单位vp

从API version 11开始废弃，无替代接口

**说明：**

offset取值范围\[0vp,64vp\]。大于64vp按照64vp处理。不支持百分比，不支持负数 。

 |
| friction(deprecated) | number | string | 否 | 下拉摩擦系数，取值范围为0到100。

默认值：62

\- 0表示下拉刷新容器不跟随手势下拉而下拉。

\- 100表示下拉刷新容器紧紧跟随手势下拉而下拉。

\- 数值越大，下拉刷新容器跟随手势下拉的反应越灵敏。

从API version 11开始废弃，从API version 12开始，可用[pullDownRatio](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-refresh-V5#pulldownratio12)属性替代。

 |
| builder10+ | [CustomBuilder](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#custombuilder8) | 否 | 自定义刷新区域显示内容。

**说明：**

API version 10及之前版本，自定义组件的高度限制在64vp之内。API version 11及以后版本没有此限制。

自定义组件设置了固定高度时，自定义组件会以固定高度显示在刷新区域下方；自定义组件未设置高度时，自定义组件高度会自适应刷新区域高度，会发生自定义组件高度跟随刷新区域变化至0的现象。建议对自定义组件设置最小高度约束来避免自定义组件高度小于预期的情况发生，具体可参照[示例2](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-refresh-V5#%E7%A4%BA%E4%BE%8B2)。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

 |
| promptText12+ | [ResourceStr](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcestr) | 否 | 设置刷新区域底部显示的自定义文本。

**说明：**

输入文本的限制参考Text组件，使用builder自定义刷新区域显示内容时，promptText不显示。

promptText设置有效时，[refreshOffset](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-refresh-V5#refreshoffset12)属性默认值为96vp。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

 |

### refreshOffset12+

refreshOffset(value: number)

设置触发刷新的下拉偏移量。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | 是 | 下拉偏移量，单位vp。
默认值：未设置[promptText](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-refresh-V5#refreshoptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)参数时为64vp，设置了[promptText](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-container-refresh-V5#refreshoptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)参数时为96vp。

如果取值为0或负数的时候此接口采用默认值。

 |

### pullToRefresh12+

pullToRefresh(value: boolean)

设置当下拉距离超过refreshOffset时是否触发刷新。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | boolean | 是 | 是否触发刷新。
默认值：true

 |

### pullDownRatio12+

pullDownRatio(ratio: [Optional](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-custom-property-V5#optional12)<number>)

设置下拉跟手系数。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| ratio | [Optional](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-universal-attributes-custom-property-V5#optional12)<number> | 是 | 下拉跟手系数。数值越大，跟随手势下拉的反应越灵敏。0表示不跟随手势下拉，1表示等比例跟随手势下拉。
没有设置或设置为undefined时，默认使用动态下拉跟手系数，下拉距离越大，跟手系数越小。

有效值为0-1之间的值，小于0的值会被视为0，大于1的值会被视为1。

 |

### onStateChange

onStateChange(callback: (state: RefreshStatus) => void)

当前刷新状态变更时，触发回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

### onRefreshing

onRefreshing(callback: () => void)

进入刷新状态时触发回调。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onOffsetChange12+

onOffsetChange(callback: Callback<number>)

下拉距离发生变化时触发回调。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

| 参数名 | 类型 | 必填 | 说明 |
| --- | --- | --- | --- |
| value | number | 是 | 下拉距离。
单位：vp

 |

RefreshStatus枚举说明
-----------------

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

| 名称 | 值 | 描述 |
| --- | --- | --- |
| Inactive | 0 | 默认未下拉状态。 |
| Drag | 1 | 下拉中，下拉距离小于刷新距离。 |
| OverDrag | 2 | 下拉中，下拉距离超过刷新距离。 |
| Refresh | 3 | 下拉结束，回弹至刷新距离，进入刷新状态。 |
| Done | 4 | 刷新结束，返回初始状态（顶部）。 |

示例
--

### 示例1

刷新区域使用默认样式。

2.  @Entry
3.  @Component
4.  struct RefreshExample {
5.    @State isRefreshing: boolean = false
6.    @State arr: String\[\] = \['0', '1', '2', '3', '4','5','6','7','8','9','10'\]

8.    build() {
9.      Column() {
10.        Refresh({ refreshing: $$this.isRefreshing}) {
11.          List() {
12.            ForEach(this.arr, (item: string) => {
13.              ListItem() {
14.                Text('' + item)
15.                  .width('70%').height(80).fontSize(16).margin(10)
16.                  .textAlign(TextAlign.Center).borderRadius(10).backgroundColor(0xFFFFFF)
17.              }
18.            }, (item: string) => item)
19.          }
20.          .onScrollIndex((first: number) => {
21.            console.info(first.toString())
22.          })
23.          .width('100%')
24.          .height('100%')
25.          .alignListItem(ListItemAlign.Center)
26.          .scrollBar(BarState.Off)
27.        }
28.        .onStateChange((refreshStatus: RefreshStatus) => {
29.          console.info('Refresh onStatueChange state is ' + refreshStatus)
30.        })
31.        .onOffsetChange((value: number) => {
32.          console.info('Refresh onOffsetChange offset:' + value)
33.        })
34.        .onRefreshing(() => {
35.          setTimeout(() => {
36.            this.isRefreshing = false
37.          }, 2000)
38.          console.log('onRefreshing test')
39.        })
40.        .backgroundColor(0x89CFF0)
41.        .refreshOffset(64)
42.        .pullToRefresh(true)
43.      }
44.    }
45.  }

![Image 1](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151259.81440621677107275562276519000228:50001231000000:2800:83DFD1E9A15AAEB3AF440122E272868898FECD4F5AFB33B201D2C002E68215A1.gif?needInitFileName=true?needInitFileName=true)

### 示例2

通过builder参数自定义刷新区域显示内容。

2.  @Entry
3.  @Component
4.  struct RefreshExample {
5.    @State isRefreshing: boolean = false
6.    @State arr: String\[\] = \['0', '1', '2', '3', '4','5','6','7','8','9','10'\]
7.    @Builder
8.    customRefreshComponent()
9.    {
10.      Stack()
11.      {
12.        Row()
13.        {
14.          LoadingProgress().height(32)
15.          Text("Refreshing...").fontSize(16).margin({left:20})
16.        }
17.        .alignItems(VerticalAlign.Center)
18.      }
19.      .align(Alignment.Center)
20.      .clip(true)
21.      .constraintSize({minHeight:32}) 
22.      .width("100%")
23.    }

25.    build() {
26.      Column() {
27.        Refresh({ refreshing: $$this.isRefreshing,builder:this.customRefreshComponent()}) {
28.          List() {
29.            ForEach(this.arr, (item: string) => {
30.              ListItem() {
31.                Text('' + item)
32.                  .width('70%').height(80).fontSize(16).margin(10)
33.                  .textAlign(TextAlign.Center).borderRadius(10).backgroundColor(0xFFFFFF)
34.              }
35.            }, (item: string) => item)
36.          }
37.          .onScrollIndex((first: number) => {
38.            console.info(first.toString())
39.          })
40.          .width('100%')
41.          .height('100%')
42.          .alignListItem(ListItemAlign.Center)
43.          .scrollBar(BarState.Off)
44.        }
45.        .backgroundColor(0x89CFF0)
46.        .pullToRefresh(true)
47.        .refreshOffset(64)
48.        .onStateChange((refreshStatus: RefreshStatus) => {
49.          console.info('Refresh onStatueChange state is ' + refreshStatus)
50.        })
51.        .onRefreshing(() => {
52.          setTimeout(() => {
53.            this.isRefreshing = false
54.          }, 2000)
55.          console.log('onRefreshing test')
56.        })
57.      }
58.    }
59.  }

![Image 2](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151259.29767376908582007414474813984202:50001231000000:2800:18FD0DACDFE0975A0B0578BD5E32D2453C1AB93E3F5A9BC7CEBAB0CDD46B292E.gif?needInitFileName=true?needInitFileName=true)

### 示例3

边界刷新回弹效果。

2.  @Entry
3.  @Component
4.  struct ListRefreshLoad {
5.    @State arr: Array<number\> = \[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\];
6.    @State refreshing: boolean = false;
7.    @State refreshOffset: number = 0;
8.    @State refreshState: RefreshStatus = RefreshStatus.Inactive;
9.    @State canLoad: boolean = false;
10.    @State isLoading: boolean = false;

12.    @Builder
13.    refreshBuilder() {
14.      Stack({ alignContent: Alignment.Bottom }) {

17.        if (this.refreshState != RefreshStatus.Inactive && this.refreshState != RefreshStatus.Done) {
18.          Progress({ value: this.refreshOffset, total: 64, type: ProgressType.Ring })
19.            .width(32).height(32)
20.            .style({ status: this.refreshing ? ProgressStatus.LOADING : ProgressStatus.PROGRESSING })
21.            .margin(10)
22.        }
23.      }
24.      .clip(true)
25.      .height("100%")
26.      .width("100%")
27.    }

29.    @Builder
30.    footer() {
31.      Row() {
32.        LoadingProgress().height(32).width(48)
33.        Text("加载中")
34.      }.width("100%")
35.      .height(64)
36.      .justifyContent(FlexAlign.Center)

38.      .visibility(this.isLoading ? Visibility.Visible : Visibility.Hidden)
39.    }

41.    build() {
42.      Refresh({ refreshing: $$this.refreshing, builder: this.refreshBuilder() }) {
43.        List() {
44.          ForEach(this.arr, (item: number) => {
45.            ListItem() {
46.              Text('' + item)
47.                .width('100%')
48.                .height(80)
49.                .fontSize(16)
50.                .textAlign(TextAlign.Center)
51.                .backgroundColor(0xFFFFFF)
52.            }.borderWidth(1)
53.          }, (item: string) => item)

55.          ListItem() {
56.            this.footer();
57.          }
58.        }
59.        .onScrollIndex((start: number, end: number) => {

61.          if (this.canLoad && end >= this.arr.length - 1) {
62.            this.canLoad = false;
63.            this.isLoading = true;

65.            setTimeout(() => {
66.              for (let i = 0; i < 10; i++) {
67.                this.arr.push(this.arr.length);
68.                this.isLoading = false;
69.              }
70.            }, 700)
71.          }
72.        })
73.        .onScrollFrameBegin((offset: number, state: ScrollState) => {

75.          if (offset > 5 && !this.isLoading) {
76.            this.canLoad = true;
77.          }
78.          return { offsetRemain: offset };
79.        })
80.        .scrollBar(BarState.Off)

82.        .edgeEffect(EdgeEffect.Spring, { alwaysEnabled: true })
83.      }
84.      .width('100%')
85.      .height('100%')
86.      .backgroundColor(0xDCDCDC)
87.      .onOffsetChange((offset: number) => {
88.        this.refreshOffset = offset;
89.      })
90.      .onStateChange((state: RefreshStatus) => {
91.        this.refreshState = state;
92.      })
93.      .onRefreshing(() => {

95.        setTimeout(() => {
96.          this.refreshing = false;
97.        }, 2000)
98.      })
99.    }
100.  }

![Image 3](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151259.84474607186662713076422833392713:50001231000000:2800:263709C7A7821E06D0E70213C7591B47EDCBCE6149AC9C666790A23FC0580C4D.gif?needInitFileName=true?needInitFileName=true)

### 示例4

通过promptText参数设置刷新区域显示文本。

2.  @Entry
3.  @Component
4.  struct RefreshExample {
5.    @State isRefreshing: boolean = false
6.    @State promptText: string = "Refreshing..."
7.    @State arr: String\[\] = \['0', '1', '2', '3', '4','5','6','7','8','9','10'\]

9.    build() {
10.      Column() {
11.        Refresh({ refreshing: $$this.isRefreshing, promptText: this.promptText}) {
12.          List() {
13.            ForEach(this.arr, (item: string) => {
14.              ListItem() {
15.                Text('' + item)
16.                  .width('70%').height(80).fontSize(16).margin(10)
17.                  .textAlign(TextAlign.Center).borderRadius(10).backgroundColor(0xFFFFFF)
18.              }
19.            }, (item: string) => item)
20.          }
21.          .onScrollIndex((first: number) => {
22.            console.info(first.toString())
23.          })
24.          .width('100%')
25.          .height('100%')
26.          .alignListItem(ListItemAlign.Center)
27.          .scrollBar(BarState.Off)
28.        }
29.        .backgroundColor(0x89CFF0)
30.        .pullToRefresh(true)
31.        .refreshOffset(96)
32.        .onStateChange((refreshStatus: RefreshStatus) => {
33.          console.info('Refresh onStatueChange state is ' + refreshStatus)
34.        })
35.        .onOffsetChange((value: number) => {
36.          console.info('Refresh onOffsetChange offset:' + value)
37.        })
38.        .onRefreshing(() => {
39.          setTimeout(() => {
40.            this.isRefreshing = false
41.          }, 2000)
42.          console.log('onRefreshing test')
43.        })
44.      }
45.    }
46.  }

![Image 4](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240816151259.87712084762249679281054690648905:50001231000000:2800:CA74AE158DC88832464373D543BB7687A763FF8C8F07B062C2FE760BCC042AD5.gif?needInitFileName=true?needInitFileName=true)
