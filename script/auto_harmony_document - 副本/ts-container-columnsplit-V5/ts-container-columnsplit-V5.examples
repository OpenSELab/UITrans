/*\n实现一个垂直分割的列布局组件，其中包含五个文本组件，每个文本组件占据一行。用户可以通过拖动分割线来调整每个文本组件的高度。\n*/\n\n// xxx.ets\n@Entry\n@Component\nstruct ColumnSplitExample {\n  build() {\n    Column() {\n      // 显示提示文本，说明用户可以拖动分割线\n      Text('The secant line can be dragged')\n        .fontSize(9) // 设置字体大小为9\n        .fontColor(0xCCCCCC) // 设置字体颜色为浅灰色\n        .width('90%') // 设置文本宽度为父容器的90%\n      \n      // 创建一个垂直分割的列布局\n      ColumnSplit() {\n        // 第一个文本组件，背景色为浅棕色\n        Text('1')\n          .width('100%') // 设置文本宽度为父容器的100%\n          .height(50) // 设置文本高度为50\n          .backgroundColor(0xF5DEB3) // 设置背景色为浅棕色\n          .textAlign(TextAlign.Center) // 设置文本居中对齐\n        \n        // 第二个文本组件，背景色为深棕色\n        Text('2')\n          .width('100%')\n          .height(50)\n          .backgroundColor(0xD2B48C) // 设置背景色为深棕色\n          .textAlign(TextAlign.Center)\n        \n        // 第三个文本组件，背景色为浅棕色\n        Text('3')\n          .width('100%')\n          .height(50)\n          .backgroundColor(0xF5DEB3)\n          .textAlign(TextAlign.Center)\n        \n        // 第四个文本组件，背景色为深棕色\n        Text('4')\n          .width('100%')\n          .height(50)\n          .backgroundColor(0xD2B48C)\n          .textAlign(TextAlign.Center)\n        \n        // 第五个文本组件，背景色为浅棕色\n        Text('5')\n          .width('100%')\n          .height(50)\n          .backgroundColor(0xF5DEB3)\n          .textAlign(TextAlign.Center)\n      }\n      .borderWidth(1) // 设置分割列的边框宽度为1\n      .resizeable(true) // 设置分割列可拖动调整大小\n      .width('90%') // 设置分割列的宽度为父容器的90%\n      .height('60%') // 设置分割列的高度为父容器的60%\n    }\n    .width('100%') // 设置整个列的宽度为父容器的100%\n  }\n}