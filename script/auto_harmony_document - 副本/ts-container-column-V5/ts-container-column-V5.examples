/*\n实现一个展示Column组件布局和样式特性的示例。通过设置子元素的间距、水平对齐方式和垂直对齐方式，展示Column组件的灵活性和多样性。\n*/\n\n// xxx.ets\n@Entry\n@Component\nstruct ColumnExample {\n  build() {\n    Column({ space: 5 }) { // 设置子元素垂直方向间距为5\n      Text('space').width('90%') // 显示文本“space”，宽度为父容器的90%\n\n      Column({ space: 5 }) { // 嵌套Column，设置子元素垂直方向间距为5\n        Column().width('100%').height(30).backgroundColor(0xAFEEEE) // 创建一个宽度为100%、高度为30的Column，背景色为浅蓝色\n        Column().width('100%').height(30).backgroundColor(0x00FFFF) // 创建一个宽度为100%、高度为30的Column，背景色为青色\n      }.width('90%').height(100).border({ width: 1 }) // 设置嵌套Column的宽度为父容器的90%，高度为100，并添加1像素的边框\n\n      Text('alignItems(Start)').width('90%') // 显示文本“alignItems(Start)”，宽度为父容器的90%\n      Column() {\n        Column().width('50%').height(30).backgroundColor(0xAFEEEE) // 创建一个宽度为50%、高度为30的Column，背景色为浅蓝色\n        Column().width('50%').height(30).backgroundColor(0x00FFFF) // 创建一个宽度为50%、高度为30的Column，背景色为青色\n      }.alignItems(HorizontalAlign.Start).width('90%').border({ width: 1 }) // 设置子元素水平方向对齐方式为Start，宽度为父容器的90%，并添加1像素的边框\n\n      Text('alignItems(End)').width('90%') // 显示文本“alignItems(End)”，宽度为父容器的90%\n      Column() {\n        Column().width('50%').height(30).backgroundColor(0xAFEEEE) // 创建一个宽度为50%、高度为30的Column，背景色为浅蓝色\n        Column().width('50%').height(30).backgroundColor(0x00FFFF) // 创建一个宽度为50%、高度为30的Column，背景色为青色\n      }.alignItems(HorizontalAlign.End).width('90%').border({ width: 1 }) // 设置子元素水平方向对齐方式为End，宽度为父容器的90%，并添加1像素的边框\n\n      Text('alignItems(Center)').width('90%') // 显示文本“alignItems(Center)”，宽度为父容器的90%\n      Column() {\n        Column().width('50%').height(30).backgroundColor(0xAFEEEE) // 创建一个宽度为50%、高度为30的Column，背景色为浅蓝色\n        Column().width('50%').height(30).backgroundColor(0x00FFFF) // 创建一个宽度为50%、高度为30的Column，背景色为青色\n      }.alignItems(HorizontalAlign.Center).width('90%').border({ width: 1 }) // 设置子元素水平方向对齐方式为Center，宽度为父容器的90%，并添加1像素的边框\n\n      Text('justifyContent(Center)').width('90%') // 显示文本“justifyContent(Center)”，宽度为父容器的90%\n      Column() {\n        Column().width('90%').height(30).backgroundColor(0xAFEEEE) // 创建一个宽度为90%、高度为30的Column，背景色为浅蓝色\n        Column().width('90%').height(30).backgroundColor(0x00FFFF) // 创建一个宽度为90%、高度为30的Column，背景色为青色\n      }.height(100).border({ width: 1 }).justifyContent(FlexAlign.Center) // 设置子元素垂直方向对齐方式为Center，高度为100，并添加1像素的边框\n\n      Text('justifyContent(End)').width('90%') // 显示文本“justifyContent(End)”，宽度为父容器的90%\n      Column() {\n        Column().width('90%').height(30).backgroundColor(0xAFEEEE) // 创建一个宽度为90%、高度为30的Column，背景色为浅蓝色\n        Column().width('90%').height(30).backgroundColor(0x00FFFF) // 创建一个宽度为90%、高度为30的Column，背景色为青色\n      }.height(100).border({ width: 1 }).justifyContent(FlexAlign.End) // 设置子元素垂直方向对齐方式为End，高度为100，并添加1像素的边框\n\n    }.width('100%').padding({ top: 5 }) // 设置主Column的宽度为100%，顶部内边距为5\n  }\n}