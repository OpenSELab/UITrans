/*\n实现一个包含多个列表项组（ListItemGroup）的列表组件，每个列表项组包含多个列表项（ListItem）。列表项组和列表项的样式可以通过配置进行设置。列表支持多选功能，并且背景颜色为灰色。\n*/\n\n@Entry\n@Component\nstruct ListItemGroupExample2 {\n  // 定义一个数组，每个元素是一个对象，包含一个列表项组的样式和该组中每个列表项的样式\n  private arr: ArrObject[] = [\n    {\n      style: ListItemGroupStyle.CARD, // 列表项组的样式为CARD\n      itemStyles: [ListItemStyle.CARD, ListItemStyle.CARD, ListItemStyle.CARD] // 该组中每个列表项的样式均为CARD\n    },\n    {\n      style: ListItemGroupStyle.CARD, // 列表项组的样式为CARD\n      itemStyles: [ListItemStyle.CARD, ListItemStyle.CARD, ListItemStyle.NONE] // 该组中前两个列表项的样式为CARD，最后一个为NONE\n    },\n    {\n      style: ListItemGroupStyle.CARD, // 列表项组的样式为CARD\n      itemStyles: [ListItemStyle.CARD, ListItemStyle.NONE, ListItemStyle.CARD] // 该组中第一个和第三个列表项的样式为CARD，第二个为NONE\n    },\n    {\n      style: ListItemGroupStyle.NONE, // 列表项组的样式为NONE\n      itemStyles: [ListItemStyle.CARD, ListItemStyle.CARD, ListItemStyle.NONE] // 该组中前两个列表项的样式为CARD，最后一个为NONE\n    }\n  ]\n\n  build() {\n    Column() {\n      // 创建一个列表组件，设置列表项之间的间距为4vp，初始索引为0\n      List({ space: "4vp", initialIndex: 0 }) {\n        // 遍历arr数组，为每个元素创建一个列表项组\n        ForEach(this.arr, (item: ArrObject, index?: number) => {\n          // 创建一个列表项组，样式为当前元素的style属性\n          ListItemGroup({ style: item.style }) {\n            // 遍历当前元素的itemStyles数组，为每个元素创建一个列表项\n            ForEach(item.itemStyles, (itemStyle: number, itemIndex?: number) => {\n              // 创建一个列表项，样式为当前元素的itemStyle属性\n              ListItem({ style: itemStyle }) {\n                // 如果index和itemIndex都存在，则显示文本内容\n                if (index != undefined && itemIndex != undefined) {\n                  Text("第" + (index + 1) + "个Group中第" + (itemIndex + 1) + "个item")\n                    .width("100%") // 设置文本宽度为100%\n                    .textAlign(TextAlign.Center) // 设置文本居中对齐\n                }\n              }\n            }, (item: string) => item) // 使用item作为唯一标识符\n          }\n        })\n      }\n      .width('100%') // 设置列表宽度为100%\n      .multiSelectable(true) // 启用多选功能\n      .backgroundColor(0xDCDCDC) // 设置背景颜色为灰色\n    }\n    .width('100%') // 设置列的宽度为100%\n    .padding({ top: 5 }) // 设置顶部内边距为5vp\n  }\n}\n\n// 定义一个接口，用于描述列表项组和列表项的样式配置\ninterface ArrObject {\n  style: number; // 列表项组的样式\n  itemStyles: number[]; // 该组中每个列表项的样式\n}


/*\n实现一个课程表列表组件，展示一周的课程安排。每个列表项包含一天的课程标题和具体的课程项目。列表项组具有头部和尾部，头部显示日期，尾部显示当天的课程总数。列表项组之间有分隔线，列表整体具有粘性头部和尾部效果，且不显示滚动条。\n*/\n\n@Entry\n@Component\nstruct ListItemGroupExample {\n  // 定义课程表数据结构，包含标题和项目数组\n  private timeTable: TimeTable[] = [\n    {\n      title: '星期一',\n      projects: ['语文', '数学', '英语']\n    },\n    {\n      title: '星期二',\n      projects: ['物理', '化学', '生物']\n    },\n    {\n      title: '星期三',\n      projects: ['历史', '地理', '政治']\n    },\n    {\n      title: '星期四',\n      projects: ['美术', '音乐', '体育']\n    }\n  ]\n\n  // 定义列表项头部构建器，用于生成列表项组的头部\n  @Builder\n  itemHead(text: string) {\n    Text(text) // 显示日期标题\n      .fontSize(20) // 设置字体大小\n      .backgroundColor(0xAABBCC) // 设置背景颜色\n      .width("100%") // 设置宽度为100%\n      .padding(10) // 设置内边距\n  }\n\n  // 定义列表项尾部构建器，用于生成列表项组的尾部\n  @Builder\n  itemFoot(num: number) {\n    Text('共' + num + "节课") // 显示课程总数\n      .fontSize(16) // 设置字体大小\n      .backgroundColor(0xAABBCC) // 设置背景颜色\n      .width("100%") // 设置宽度为100%\n      .padding(5) // 设置内边距\n  }\n\n  // 构建组件的主方法\n  build() {\n    Column() {\n      List({ space: 20 }) { // 创建一个列表组件，设置项之间的间距\n        ForEach(this.timeTable, (item: TimeTable) => { // 遍历课程表数据\n          ListItemGroup({ header: this.itemHead(item.title), footer: this.itemFoot(item.projects.length) }) { // 创建列表项组，设置头部和尾部\n            ForEach(item.projects, (project: string) => { // 遍历当天的课程项目\n              ListItem() {\n                Text(project) // 显示课程项目\n                  .width("100%") // 设置宽度为100%\n                  .height(100) // 设置高度\n                  .fontSize(20) // 设置字体大小\n                  .textAlign(TextAlign.Center) // 设置文本居中对齐\n                  .backgroundColor(0xFFFFFF) // 设置背景颜色\n              }\n            }, (item: string) => item) // 设置列表项的唯一标识\n          }\n          .divider({ strokeWidth: 1, color: Color.Blue }) // 设置列表项组之间的分隔线\n        })\n      }\n      .width('90%') // 设置列表宽度为90%\n      .sticky(StickyStyle.Header | StickyStyle.Footer) // 设置列表项组的头部和尾部为粘性效果\n      .scrollBar(BarState.Off) // 隐藏滚动条\n    }\n    .width('100%') // 设置列宽度为100%\n    .height('100%') // 设置列高度为100%\n    .backgroundColor(0xDCDCDC) // 设置背景颜色\n    .padding({ top: 5 }) // 设置顶部内边距\n  }\n}\n\n// 定义课程表数据接口\ninterface TimeTable {\n  title: string; // 课程表标题\n  projects: string[]; // 课程项目数组\n}