/*\n实现一个图片动画组件，支持通过按钮控制动画的开始、暂停、停止、反向播放、单次循环和无限循环。动画由多张图片帧组成，每帧图片按照指定的时间间隔播放，形成动画效果。\n*/\n\n@Entry\n@Component\nstruct ImageAnimatorExample {\n  @State state: AnimationStatus = AnimationStatus.Initial // 动画状态，默认为初始状态\n  @State reverse: boolean = false // 是否反向播放动画\n  @State iterations: number = 1 // 动画循环次数，默认为1次\n\n  build() {\n    Column({ space: 10 }) {\n      // 创建图片动画组件，设置多张图片帧和动画属性\n      ImageAnimator()\n        .images([\n          { src: $r('app.media.img1') }, // 第一帧图片\n          { src: $r('app.media.img2') }, // 第二帧图片\n          { src: $r('app.media.img3') }, // 第三帧图片\n          { src: $r('app.media.img4') }  // 第四帧图片\n        ])\n        .duration(2000) // 设置动画持续时间为2秒\n        .state(this.state) // 设置动画状态\n        .reverse(this.reverse) // 设置是否反向播放\n        .fillMode(FillMode.None) // 设置填充模式为None\n        .iterations(this.iterations) // 设置动画循环次数\n        .width(340) // 设置动画组件宽度\n        .height(240) // 设置动画组件高度\n        .margin({ top: 100 }) // 设置顶部边距\n        .onStart(() => {\n          console.info('Start') // 动画开始时的回调\n        })\n        .onPause(() => {\n          console.info('Pause') // 动画暂停时的回调\n        })\n        .onRepeat(() => {\n          console.info('Repeat') // 动画重复播放时的回调\n        })\n        .onCancel(() => {\n          console.info('Cancel') // 动画取消时的回调\n        })\n        .onFinish(() => {\n          console.info('Finish') // 动画结束时的回调\n          this.state = AnimationStatus.Stopped // 将动画状态设置为停止\n        })\n\n      // 创建按钮行，用于控制动画的开始、暂停和停止\n      Row() {\n        Button('start').width(100).padding(5).onClick(() => {\n          this.state = AnimationStatus.Running // 开始播放动画\n        }).margin(5)\n        Button('pause').width(100).padding(5).onClick(() => {\n          this.state = AnimationStatus.Paused // 暂停动画\n        }).margin(5)\n        Button('stop').width(100).padding(5).onClick(() => {\n          this.state = AnimationStatus.Stopped // 停止动画\n        }).margin(5)\n      }\n\n      // 创建按钮行，用于控制动画的反向播放、单次循环和无限循环\n      Row() {\n        Button('reverse').width(100).padding(5).onClick(() => {\n          this.reverse = !this.reverse // 切换反向播放状态\n        }).margin(5)\n        Button('once').width(100).padding(5).onClick(() => {\n          this.iterations = 1 // 设置为单次循环\n        }).margin(5)\n        Button('infinite').width(100).padding(5).onClick(() => {\n          this.iterations = -1 // 设置为无限循环播放\n        }).margin(5)\n      }\n    }.width('100%').height('100%') // 设置容器宽度和高度\n  }\n}