Title: AtomicServiceNavigation-原子化服务-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-atomicservice-atomicservicenavigation-V5

Markdown Content:
作为Page页面的根容器使用，其内部默认包含了标题栏、内容区，其中内容区默认首页显示导航内容或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。

说明

该组件从API Version 12开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

1.  AtomicServiceNavigation({
2.      navPathStack?: NavPathStack,
3.      navigationContent: Callback<void\>,
4.      title?: ResourceStr,
5.      titleBackgroundColor?: ResourceColor,
6.      hideTitleBar?: boolean,
7.      navBarWidth?: Length,
8.      mode?: NavigationMode,
9.      navDestinationBuilder?: NavDestinationBuilder,
10.      navBarWidthRange?: \[Dimension, Dimension\],
11.      minContentWidth?: Dimension,
12.      stateChangeCallback?: Callback<boolean\>,
13.      modeChangeCallback?: Callback<NavigationMode\>
14.  })

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**装饰器类型：** @Component

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数**：

名称

类型

必填

装饰器类型

描述

navPathStack

[NavPathStack](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#navpathstack10)

否

@State

路由栈信息。

navigationContent

Callback<void\>

否

@BuilderParam

Navigation容器内容。

title

[ResourceStr](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcestr)

否

@Prop

设置页面标题。

titleOptions

[TitleOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-atomicservice-atomicservicenavigation-V5#titleoptions)

否

@Prop

标题栏选项。

hideTitleBar

boolean

否

@Prop

设置是否隐藏标题栏。

navBarWidth

[Length](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#length)

否

@Prop

设置导航栏宽度。

仅在Navigation组件分栏时生效。

mode

[NavigationMode](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#navigationmode9%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

否

@Prop

设置导航栏的显示模式。

支持Stack、Split与Auto模式。

navDestinationBuilder

[NavDestinationBuilder](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ohos-atomicservice-atomicservicenavigation-V5#navdestinationbuilder)

否

@BuilderParam

创建[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)组件所需要的Builder数据。

navBarWidthRange

\[[Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10), [Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10)\]

否

@Prop

设置导航栏最小和最大宽度（双栏模式下生效）。

minContentWidth

[Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10)

否

@Prop

设置导航栏内容区最小宽度（双栏模式下生效）。

stateChangeCallback

Callback<boolean\>

否

\-

导航栏显示状态切换时触发该回调。

modeChangeCallback

Callback<[NavigationMode](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#navigationmode9%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)\>

否

\-

当Navigation首次显示或者单双栏状态发生变化时触发该回调。

TitleOptions
------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

描述

backgroundColor

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

否

标题栏背景颜色。

isBlurEnabled

boolean

否

标题栏是否模糊，默认为true。

TitleOptions

[BarStyle12+](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#barstyle12%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E)

否

标题栏样式属性设置。

NavDestinationBuilder
---------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

示例
--

2.  import { AtomicServiceNavigation, NavDestinationBuilder, AtomicServiceTabs, TabBarOptions, TabBarPosition } from '@kit.ArkUI';

4.  @Entry
5.  @Component
6.  struct Index {
7.    @State message: string = '主题';
8.    childNavStack: NavPathStack = new NavPathStack();
9.    @Builder
10.    tabContent1() {
11.      Text('first page')
12.        .onClick(() =\> {
13.          this.childNavStack.pushPath({ name: 'page one' })
14.        })
15.    }

17.    @Builder
18.    tabContent2() {
19.      Text('second page')
20.    }

22.    @Builder
23.    tabContent3() {
24.      Text('third page')
25.    }

27.    @Builder
28.    navigationContent() {
29.      AtomicServiceTabs({
30.        tabContents: \[
31.          () =\> {
32.            this.tabContent1()
33.          },
34.          () =\> {
35.            this.tabContent2()
36.          },
37.          () =\> {
38.            this.tabContent3()
39.          }
40.        \],
41.        tabBarOptionsArray: \[
42.          new TabBarOptions($r('sys.media.ohos\_ic\_public\_phone'), '功能1'),
43.          new TabBarOptions($r('sys.media.ohos\_ic\_public\_location'), '功能2', Color.Green, Color.Red),
44.          new TabBarOptions($r('sys.media.ohos\_ic\_public\_more'), '功能3')
45.        \],
46.        tabBarPosition: TabBarPosition.BOTTOM,
47.        barBackgroundColor: $r('sys.color.ohos\_id\_color\_bottom\_tab\_bg'),
48.        onTabBarClick: (index: Number) =\> {
49.          if (index == 0) {
50.            this.message = '功能1';
51.          } else if (index == 1) {
52.            this.message = '功能2';
53.          } else {
54.            this.message = '功能3';
55.          }
56.        }
57.      })
58.    }

60.    @Builder
61.    pageMap(name: string) {
62.      if (name === 'page one') {
63.        PageOne()
64.      } else if (name === 'page two') {
65.        PageTwo()
66.      }
67.    }

69.    build() {
70.      Row() {
71.        Column() {
72.          AtomicServiceNavigation({
73.            navigationContent: () =\> {
74.              this.navigationContent()
75.            },
76.            title: this.message,
77.            titleOptions: {
78.              backgroundColor: 'rgb(61, 157, 180)',
79.              isBlurEnabled: false
80.            },
81.            navDestinationBuilder: this.pageMap,
82.            navPathStack: this.childNavStack,
83.            mode: NavigationMode.Stack
84.          })
85.        }
86.        .width('100%')
87.      }
88.      .height('100%')
89.    }
90.  }

92.  @Component
93.  export struct PageOne {
94.    pageInfo: NavPathStack = new NavPathStack();

96.    build() {
97.      NavDestination() {
98.        Button('Next')
99.          .onClick(() =\> {
100.            this.pageInfo.pushPath({ name: 'page two'})
101.          })
102.      }
103.      .title('PageOne')
104.      .onReady((context: NavDestinationContext) =\> {
105.        this.pageInfo = context.pathStack;
106.      })
107.    }
108.  }

110.  @Component
111.  export struct PageTwo {
112.    pageInfo: NavPathStack = new NavPathStack();

114.    build() {
115.      NavDestination() {
116.        Button('End')
117.      }
118.      .title('PageTwo')
119.      .onReady((context: NavDestinationContext) =\> {
120.        this.pageInfo = context.pathStack;
121.      })
122.    }
123.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114530.27480038967582117618459301076172:50001231000000:2800:A6D87A457E3D7C10AE6695B5716F5C498278E3525BAC7517FE154C8C582D71E6.png?needInitFileName=true?needInitFileName=true)
