Title: TextPicker-按钮与选择-ArkTS组件-ArkUI（方舟UI框架）-应用框架

URL Source: https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-textpicker-V5

Markdown Content:
滑动选择文本内容的组件。

说明

该组件从API Version 8开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。

接口
--

TextPicker(options?: TextPickerOptions)

根据range指定的选择范围创建文本选择器。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

TextPickerOptions对象说明
---------------------

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

range

string\[\] | string\[\] \[\]10+ | [Resource](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resource%E7%B1%BB%E5%9E%8B) |

[TextPickerRangeContent](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-textpicker-V5#textpickerrangecontent10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)\[\]10+ | [TextCascadePickerRangeContent](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-textpicker-V5#textcascadepickerrangecontent10%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E)\[\]10+

是

选择器的数据选择列表。不可设置为空数组，若设置为空数组，则不显示；若动态变化为空数组，则保持当前正常值显示。

**说明**：单列数据选择器使用string\[\]，Resource，TextPickerRangeContent\[\]类型。

多列数据选择器使用string\[\]\[\]类型。

多列联动数据选择器使用TextCascadePickerRangeContent\[\]类型。

Resource类型只支持[strarray.json](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/resource-categories-and-access-V5#%E8%B5%84%E6%BA%90%E7%BB%84%E7%9B%AE%E5%BD%95)。

range的类型及列数不可以动态修改。

selected

number | number\[\]10+

否

设置默认选中项在数组中的索引值。

默认值：0

**说明**：单列数据选择器使用number类型。

多列、多列联动数据选择器使用number\[\]类型。

从API version 10开始，该参数支持[$$](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-two-way-sync-V5)双向绑定变量。

value

string | string\[\]10+

否

设置默认选中项的值，优先级低于selected。

默认值：第一个元素值

**说明**：只有显示文本列表时该值有效。显示图片或图片加文本的列表时，该值无效。

单列数据选择器使用string类型。

多列、多列联动数据选择器使用string\[\]类型。

从API version 10开始，该参数支持[$$](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-two-way-sync-V5)双向绑定变量。

TextPickerRangeContent10+对象说明
-----------------------------

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

TextCascadePickerRangeContent10+对象说明
------------------------------------

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

DividerOptions12+对象说明
---------------------

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

名称

类型

必填

说明

strokeWidth

[Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10)

否

分割线的线宽（默认单位vp），也可指定单位为px，不支持"百分比"类型。

startMargin

[Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10)

否

分割线与TextPicker侧边起始端的距离（默认单位vp），也可指定单位为px，不支持“百分比”类型。

endMargin

[Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10)

否

分割线与TextPicker侧边结束端的距离（默认单位vp），也可指定单位为px，不支持“百分比”类型。

color

[ResourceColor](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#resourcecolor)

否

分割线的颜色。

### defaultPickerItemHeight

defaultPickerItemHeight(value: number | string)

设置Picker各选择项的高度。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | string

是

Picker各选择项的高度。

### disappearTextStyle10+

disappearTextStyle(value: PickerTextStyle)

设置所有选项中最上和最下两个选项的文本颜色、字号、字体粗细。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[PickerTextStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datepicker-V5#pickertextstyle10%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E)

是

所有选项中最上和最下两个选项的文本颜色、字号、字体粗细。

默认值：

{

color: '#ff182431',

font: {

size: '14fp',

weight: FontWeight.Regular

}

}

### textStyle10+

textStyle(value: PickerTextStyle)

设置所有选项中除了最上、最下及选中项以外的文本颜色、字号、字体粗细。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[PickerTextStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datepicker-V5#pickertextstyle10%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E)

是

所有选项中除了最上、最下及选中项以外的文本颜色、字号、字体粗细。

默认值：

{

color: '#ff182431',

font: {

size: '16fp',

weight: FontWeight.Regular

}

}

### selectedTextStyle10+

selectedTextStyle(value: PickerTextStyle)

设置选中项的文本颜色、字号、字体粗细。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[PickerTextStyle](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-datepicker-V5#pickertextstyle10%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E)

是

选中项的文本颜色、字号、字体粗细。

默认值：

{

color: '#ff007dff',

font: {

size: '20vp',

weight: FontWeight.Medium

}

}

### selectedIndex10+

selectedIndex(value: number | number\[\])

设置默认选中项在数组中的索引值，优先级高于options中的选中值。单列数据选择器使用number类型。多列、多列联动数据选择器使用number\[\]类型。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

number | number\[\]

是

默认选中项在数组中的索引值。

默认值：0

### canLoop10+

canLoop(value: boolean)

设置是否可循环滚动。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

boolean

是

是否可循环滚动。

true：可循环，false：不可循环。

默认值：true

### divider12+

divider(value: DividerOptions | null)

设置分割线样式，不设置该属性则按“默认值”展示分割线。

startMargin + endMargin 超过组件宽度后startMargin和endMargin会被置0。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[DividerOptions](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-textpicker-V5#divideroptions12%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E) | null

是

1.设置DividerOptions，则按设置的样式显示分割线。

默认值：

{

strokeWidth: '2px',

startMargin: 0,

endMargin: 0,

color: '#33000000'

}

2.设置为null不显示分割线。

### gradientHeight12+

gradientHeight(value: Dimension)

设置渐隐效果高度，不设置该属性则显示默认渐隐效果。

**元服务API：** 从API version 12开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

[Dimension](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-types-V5#dimension10)

是

内容区上下边缘的渐隐高度（支持百分比，100%为TextPicker高度的一半即最大值），设置为0时不显示渐隐效果，负数等非法值显示默认渐隐效果。默认值为36vp。

### onAccept(deprecated)

onAccept(callback: (value: string, index: number) =\> void)

点击弹窗中的“确定”按钮时触发该回调。该事件仅在[文本滑动选择器弹窗](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-methods-textpicker-dialog-V5)中生效。

从API version 10开始废弃。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string

是

当前选中项的文本。

index

number

是

当前选中项的索引值。

### onCancel(deprecated)

onCancel(callback: () =\> void)

点击弹窗中的“取消”按钮时触发该回调。该事件仅在[文本滑动选择器弹窗](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-methods-textpicker-dialog-V5)中生效。

从API version 10开始废弃。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

### onChange

onChange(callback: (value: string | string\[\], index: number | number\[\]) =\> void)

滑动选中TextPicker文本内容后，触发该回调。当显示文本或图片加文本列表时，value值为选中项中的文本值，当显示图片列表时，value值为空。

**元服务API：** 从API version 11开始，该接口支持在元服务中使用。

**系统能力：** SystemCapability.ArkUI.ArkUI.Full

**参数：**

参数名

类型

必填

说明

value

string | string\[\]10+

是

当前选中项的文本。多列的情况，value为数组类型。

index

number | number\[\]10+

是

当前选中项的索引值。多列的情况，index为数组类型。

示例
--

2.  class bottom {
3.    bottom:number = 50
4.  }
5.  let bott:bottom = new bottom()
6.  @Entry
7.  @Component
8.  struct TextPickerExample {
9.    private select: number = 1
10.    private apfruits: string\[\] = \['apple1', 'apple2', 'apple3', 'apple4'\]
11.    private orfruits: string\[\] = \['orange1', 'orange2', 'orange3', 'orange4'\]
12.    private pefruits: string\[\] = \['peach1', 'peach2', 'peach3', 'peach4'\]
13.    private multi: string\[\]\[\] = \[this.apfruits, this.orfruits, this.pefruits\]
14.    private cascade: TextCascadePickerRangeContent\[\] = \[
15.      {
16.        text: '辽宁省',
17.        children: \[{ text: '沈阳市', children: \[{ text: '沈河区' }, { text: '和平区' }, { text: '浑南区' }\] },
18.          { text: '大连市', children: \[{ text: '中山区' }, { text: '金州区' }, { text: '长海县' }\] }\]
19.      },
20.      {
21.        text: '吉林省',
22.        children: \[{ text: '长春市', children: \[{ text: '南关区' }, { text: '宽城区' }, { text: '朝阳区' }\] },
23.          { text: '四平市', children: \[{ text: '铁西区' }, { text: '铁东区' }, { text: '梨树县' }\] }\]
24.      },
25.      {
26.        text: '黑龙江省',
27.        children: \[{ text: '哈尔滨市', children: \[{ text: '道里区' }, { text: '道外区' }, { text: '南岗区' }\] },
28.          { text: '牡丹江市', children: \[{ text: '东安区' }, { text: '西安区' }, { text: '爱民区' }\] }\]
29.      }
30.    \]

32.    build() {
33.      Column() {

35.        TextPicker({ range: this.apfruits, selected: this.select })
36.          .onChange((value: string | string\[\], index: number | number\[\]) =\> {
37.            console.info('Picker item changed, value: ' + value + ', index: ' + index)
38.          }).margin(bott)

40.        TextPicker({ range: this.multi })
41.          .onChange((value: string | string\[\], index: number | number\[\]) =\> {
42.            console.info('TextPicker 多列:onChange ' + JSON.stringify(value) + ', ' + 'index: ' + JSON.stringify(index))
43.          }).margin(bott)

45.        TextPicker({ range: this.cascade })
46.          .onChange((value: string | string\[\], index: number | number\[\]) =\> {
47.            console.info('TextPicker 多列联动:onChange ' + JSON.stringify(value) + ', ' + 'index: ' + JSON.stringify(index))
48.          })
49.      }
50.    }
51.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114427.36020502819473758065551868385038:50001231000000:2800:DAB7F178ACEF16174086048484D9552C3942E41D031F06B69F4415335C2035E9.gif?needInitFileName=true?needInitFileName=true)

2.  @Entry
3.  @Component
4.  struct TextPickerExample {
5.    private select: number = 1
6.    private fruits: string\[\] = \['apple1', 'orange2', 'peach3', 'grape4'\]

8.    build() {
9.      Column() {
10.        TextPicker({ range: this.fruits, selected: this.select })
11.          .onChange((value: string | string\[\], index: number | number\[\]) =\> {
12.            console.info('Picker item changed, value: ' + value + ', index: ' + index)
13.          })
14.          .disappearTextStyle({color: Color.Red, font: {size: 15, weight: FontWeight.Lighter}})
15.          .textStyle({color: Color.Black, font: {size: 20, weight: FontWeight.Normal}})
16.          .selectedTextStyle({color: Color.Blue, font: {size: 30, weight: FontWeight.Bolder}})
17.      }.width('100%').height('100%')
18.    }
19.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114427.82760727632759091333814490179252:50001231000000:2800:83B6A8229AE261133323CECA690B4496179683D1ABA6D6350A0D01623D691263.gif?needInitFileName=true?needInitFileName=true)

2.  @Entry
3.  @Component
4.  struct TextPickerExample {
5.    private select: number = 1
6.    private fruits: string\[\] = \['apple1', 'orange2', 'peach3', 'grape4'\]

8.    build() {
9.      Column() {
10.        TextPicker({ range: this.fruits, selected: this.select })
11.          .onChange((value: string | string\[\], index: number | number\[\]) =\> {
12.            console.info('Picker item changed, value: ' + value + ', index: ' + index)
13.          })
14.          .disappearTextStyle({color: Color.Red, font: {size: 15, weight: FontWeight.Lighter}})
15.          .textStyle({color: Color.Black, font: {size: 20, weight: FontWeight.Normal}})
16.          .selectedTextStyle({color: Color.Blue, font: {size: 30, weight: FontWeight.Bolder}})
17.          .divider(null)
18.      }.width('100%').height('100%')
19.    }
20.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114427.31776886219699710199618590318420:50001231000000:2800:76FDB56FABAEDBEE10D595450E4BF09C30D864CB69EE0FD263119E983E8ADAD3.gif?needInitFileName=true?needInitFileName=true)

2.  @Entry
3.  @Component
4.  struct TextPickerExample {
5.    private select: number = 1
6.    private fruits: string\[\] = \['apple1', 'orange2', 'peach3', 'grape4'\]

8.    build() {
9.      Column() {
10.        TextPicker({ range: this.fruits, selected: this.select })
11.          .onChange((value: string | string\[\], index: number | number\[\]) =\> {
12.            console.info('Picker item changed, value: ' + value + ', index: ' + index)
13.          })
14.          .disappearTextStyle({color: Color.Red, font: {size: 15, weight: FontWeight.Lighter}})
15.          .textStyle({color: Color.Black, font: {size: 20, weight: FontWeight.Normal}})
16.          .selectedTextStyle({color: Color.Blue, font: {size: 30, weight: FontWeight.Bolder}})
17.          .divider({
18.            strokeWidth: 10,
19.            color: Color.Red,
20.            startMargin: 10,
21.            endMargin: 20
22.          } as DividerOptions)
23.      }.width('100%').height('100%')
24.    }
25.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114427.39922893882968373970372652550304:50001231000000:2800:083BC81F421A32B81A2CB1823FB3410F69B8DD6924EF34E81D51D1D041F784F6.gif?needInitFileName=true?needInitFileName=true)

2.  @Entry
3.  @Component
4.  struct TextPickerExample {
5.    private select: number = 1
6.    private fruits: string\[\] = \['apple1', 'orange2', 'peach3', 'grape4'\]

8.    build() {
9.      Column() {
10.        TextPicker({ range: this.fruits, selected: this.select })
11.          .onChange((value: string | string\[\], index: number | number\[\]) =\> {
12.            console.info('Picker item changed, value: ' + value + ', index: ' + index)
13.          })
14.          .disappearTextStyle({color: Color.Red, font: {size: 15, weight: FontWeight.Lighter}})
15.          .textStyle({color: Color.Black, font: {size: 20, weight: FontWeight.Normal}})
16.          .selectedTextStyle({color: Color.Blue, font: {size: 30, weight: FontWeight.Bolder}})
17.          .gradientHeight(100)
18.      }.width('100%').height('100%')
19.    }
20.  }

![](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240930114427.01232696507075246365018587706328:50001231000000:2800:19DD3EE07A14E6F291B5DC52254FF6BEFECD180C700ACC2018277198A1773AA0.gif?needInitFileName=true?needInitFileName=true)
