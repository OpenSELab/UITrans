{"android_layout": {"name": "app/src/main/res/layout/activity_main.xml", "content": "<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\"\n    >\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n\n    <com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>\n</androidx.drawerlayout.widget.DrawerLayout>\n\n", "java": "package org.bookdash.android.presentation.main;\n\nimport android.content.ActivityNotFoundException;\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.text.Html;\nimport android.text.method.LinkMovementMethod;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.core.view.GravityCompat;\nimport androidx.drawerlayout.widget.DrawerLayout;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport com.google.android.material.navigation.NavigationView;\nimport com.google.android.material.snackbar.Snackbar;\n\nimport org.bookdash.android.BuildConfig;\nimport org.bookdash.android.R;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.presentation.about.AboutFragment;\nimport org.bookdash.android.presentation.activity.BaseAppCompatActivity;\nimport org.bookdash.android.presentation.downloads.DownloadsFragment;\nimport org.bookdash.android.presentation.listbooks.ListBooksFragment;\nimport org.bookdash.android.presentation.settings.SettingsFragment;\n\n\npublic class MainActivity extends BaseAppCompatActivity implements MainContract.MainView, NavDrawerInterface {\n\n    private static final int INVITE_REQUEST_CODE = 1;\n    private static final String TAG = \"MainActivity\";\n    private static final String GOOGLE_PLAY_STORE_URL = \"http://play.google.com/store/apps/details?id=\";\n    private static final String GOOGLE_PLAY_MARKET_URL = \"market://details?id=\";\n    private DrawerLayout drawerLayout;\n    private NavigationView navigationView;\n    private MainContract.MainUserActions mainPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n\n        navigationView = (NavigationView) findViewById(R.id.navigation_view);\n\n        mainPresenter = new MainPresenter(this, Injection.provideAnalytics());\n        final ActionBar actionBar = getSupportActionBar();\n\n        if (actionBar != null) {\n            actionBar.setHomeAsUpIndicator(R.drawable.ic_menu_24dp);\n            actionBar.setDisplayHomeAsUpEnabled(true);\n        }\n\n        setUpNavDrawer();\n        showAllBooks();\n    }\n\n    private void setUpNavDrawer() {\n\n        navigationView.setCheckedItem(R.id.action_all_books);\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\n            @Override\n            public boolean onNavigationItemSelected(MenuItem menuItem) {\n                switch (menuItem.getItemId()) {\n\n                    case R.id.action_all_books: {\n                        mainPresenter.clickViewAllBooks();\n                        break;\n                    }\n                    case R.id.action_downloads:\n                        mainPresenter.clickViewDownloadBooks();\n                        break;\n                    case R.id.action_about:\n                        showAboutPage();\n                        break;\n                    case R.id.action_settings: {\n                        mainPresenter.clickShowSettings();\n                        break;\n                    }\n                    case R.id.action_thanks: {\n                        showThanksPopover();\n                        break;\n                    }\n                    case R.id.action_invite_friends: {\n                        mainPresenter.clickInvitePage();\n                        break;\n                    }\n                    case R.id.action_rate_app: {\n                        mainPresenter.clickRateApp();\n                        break;\n                    }\n                    default:\n\n                }\n                drawerLayout.closeDrawers();\n                if (menuItem.getItemId() == R.id.action_thanks || menuItem\n                        .getItemId() == R.id.action_invite_friends || menuItem.getItemId() == R.id.action_rate_app) {\n                    return false;\n                } else {\n                    return true;\n                }\n\n            }\n\n\n        });\n    }\n\n    private void showAllBooks() {\n        mainPresenter.clickViewAllBooks();\n    }\n\n    public void showSettingsScreen() {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction ft = fragmentManager.beginTransaction();\n        Fragment settingsFragment = new SettingsFragment();\n        ft.replace(R.id.fragment_content, settingsFragment, \"SETTINGS\");\n        ft.commit();\n    }\n\n    @Override\n    public void showThanksPopover() {\n        AlertDialog.Builder thanksDialog = new AlertDialog.Builder(this);\n        thanksDialog.setTitle(getString(R.string.contributions_to_app));\n        thanksDialog.setMessage(Html.fromHtml(getString(R.string.list_of_contributors)));\n\n        thanksDialog.setPositiveButton(android.R.string.ok, null);\n        AlertDialog ad = thanksDialog.show();\n        ((TextView) ad.findViewById(android.R.id.message)).setMovementMethod(LinkMovementMethod.getInstance());\n\n    }\n\n    @Override\n    public void showAboutPage() {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction ft = fragmentManager.beginTransaction();\n        Fragment f = AboutFragment.newInstance();\n        ft.replace(R.id.fragment_content, f, \"ABOUT\");\n        ft.commit();\n    }\n\n    @Override\n    public void showRatingPlayStore() {\n        Uri uri = Uri.parse(GOOGLE_PLAY_MARKET_URL + BuildConfig.APPLICATION_ID);\n        Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\n        goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\n        try {\n            startActivity(goToMarket);\n        } catch (ActivityNotFoundException e) {\n            try {\n                startActivity(\n                        new Intent(Intent.ACTION_VIEW, Uri.parse(GOOGLE_PLAY_STORE_URL + BuildConfig.APPLICATION_ID)));\n            } catch (ActivityNotFoundException anfe) {\n                Snackbar.make(navigationView, R.string.error_opening_app_rating, Snackbar.LENGTH_LONG);\n            }\n        }\n    }\n\n    @Override\n    public void showAllBooksPage() {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction ft = fragmentManager.beginTransaction();\n        Fragment f = ListBooksFragment.newInstance();\n        ft.replace(R.id.fragment_content, f, \"ALLBOOKS\");\n        ft.commit();\n    }\n\n    @Override\n    public void showDownloadedBooksPage() {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction ft = fragmentManager.beginTransaction();\n        Fragment f = DownloadsFragment.newInstance();\n        ft.replace(R.id.fragment_content, f, \"DOWNLOADED_BOOKS\");\n        ft.commit();\n    }\n\n    @Override\n    public void inviteFriends() {\n        try {\n            Intent sendIntent = new Intent();\n            sendIntent.setAction(Intent.ACTION_SEND);\n            sendIntent.putExtra(Intent.EXTRA_TEXT, getString(R.string.invitation_message));\n            sendIntent.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.invitation_subject));\n            sendIntent.setType(\"text/plain\");\n            startActivity(Intent.createChooser(sendIntent,\n                    getResources().getText(R.string.invite_using)));\n        } catch (ActivityNotFoundException ac) {\n            Snackbar.make(navigationView, R.string.invite_error_no_apps_found, Snackbar.LENGTH_LONG)\n                    .show();\n        }\n    }\n\n    @Override\n    public String getScreenName() {\n        return \"MainActivity\";\n    }\n\n    @Override\n    public void openNavDrawer() {\n        drawerLayout.openDrawer(navigationView);\n    }\n\n    @Override\n    public void closeNavDrawer() {\n        drawerLayout.closeDrawer(navigationView);\n    }\n\n    @Override\n    public void setToolbar(Toolbar toolbar) {\n        setSupportActionBar(toolbar);\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                drawerLayout.openDrawer(GravityCompat.START);\n            }\n        });\n    }\n}", "contains": ["app/src/main/res/layout/drawer_header", "app/src/main/res/menu/menu_drawer"], "mock_data": {}, "source": "bookdash"}, "breakdown_android_layout": {"tasks": [{"description": "实现安卓DrawerLayout及其内部RelativeLayout的转译，确保布局和功能一致。", "done": false, "component": {"name": ["androidx.drawerlayout.widget.DrawerLayout", "RelativeLayout"], "content": "<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\">\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n</androidx.drawerlayout.widget.DrawerLayout>"}}, {"description": "实现安卓NavigationView及其相关属性的转译，确保布局和功能一致。", "done": false, "component": {"name": ["com.google.android.material.navigation.NavigationView"], "content": "<com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>"}}]}, "translations": [{"description": "实现安卓DrawerLayout及其内部RelativeLayout的转译，确保布局和功能一致。", "source_component": "androidx.drawerlayout.widget.DrawerLayout", "source_component_code": "<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\">\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n</androidx.drawerlayout.widget.DrawerLayout>", "source_component_description": "一个抽屉布局容器，宽度占满父容器，高度占满父容器，内边距适应系统窗口，抽屉默认从左侧打开。\n- 相对布局，宽度占满父容器，高度占满父容器，用于容纳页面内容。", "target_component": ["Navigation", "RelativeContainer"], "target_component_code": "Navigation() {\n  RelativeContainer() {\n    // 子组件\n  }\n    .width('100%')\n    .height('100%')\n}\n  .width('100%')\n  .height('100%')\n  .drawerPosition(DrawerPosition.Start)\n  .drawerOpen(false)", "target_component_description": "实现了一个抽屉布局容器，抽屉默认从左侧打开，容器内包含一个相对布局，用于显示页面内容。\n\n一个抽屉布局容器，宽度占满父容器，高度占满父容器，内边距适应系统窗口，抽屉默认从左侧打开。\n- 相对布局，宽度占满父容器，高度占满父容器，用于容纳页面内容。", "explanation": "1. 使用Navigation组件来实现DrawerLayout的功能，设置其属性和样式以匹配DrawerLayout的布局和行为。\n2. 使用RelativeContainer组件来实现RelativeLayout的功能，确保内容布局的灵活性和对齐方式的准确性。\n3. 设置Navigation组件的宽度为100%，高度为100%，以占满父容器。\n4. 设置drawerPosition为Start，以确保抽屉默认从左侧打开。\n5. 设置drawerOpen为false，以确保抽屉默认关闭。\n6. 在RelativeContainer中预留子组件的位置，以便后续添加页面内容。"}, {"description": "实现安卓NavigationView及其相关属性的转译，确保布局和功能一致。", "source_component": "com.google.android.material.navigation.NavigationView", "source_component_code": "<com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>", "source_component_description": "导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。", "target_component": ["Navigation", "Column", "Image", "Text", "Menu", "MenuItem"], "target_component_code": "Navigation() {\n  Column() {\n    Image($r('app.media.drawer_header'))\n      .objectFit(ImageFit.Contain)\n      .width('100%')\n      .height('auto')\n    Menu() {\n      MenuItem() {\n        Text($r('app.string.menu_item_1'))\n      }\n      MenuItem() {\n        Text($r('app.string.menu_item_2'))\n      }\n      // 其他菜单项\n    }\n  }\n}\n.width('auto')\n.height('100%')\n.align(Alignment.Start)\n.elevation(this.elevationValue)\n.fitSystemWindows(true)", "target_component_description": "实现了一个导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。\n\n导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。", "explanation": "1. 使用Navigation组件作为根容器，实现导航视图的功能。\n2. 使用Column组件布局导航视图的内容，确保内容垂直排列。\n3. 使用Image组件显示头部布局，引用资源app.media.drawer_header，并设置objectFit为Contain以保证图片显示效果。\n4. 使用Menu和MenuItem组件显示菜单内容，引用资源app.string.menu_item_1和app.string.menu_item_2作为菜单项文本。\n5. 设置Navigation组件的宽度为自适应（auto），高度占满父容器（100%），布局重力为开始（align(Alignment.Start)），高度为elevationValue（需要定义该变量），适应系统窗口为真（fitSystemWindows(true)）。"}], "translation_agent_task": {"id": "MSeB87fjeJqRDbeHA9LhsB", "description": "转译安卓布局组件", "subtasks": [{"id": "BaPJJ7MEco3N9wJLbWqzbL", "description": "根据转译表转译组件v1", "subtasks": [{"id": "AsApGGBESgPGnXdg593QT2", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\">\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n</androidx.drawerlayout.widget.DrawerLayout>\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "一个抽屉布局容器，宽度占满父容器，高度占满父容器，内边距适应系统窗口，抽屉默认从左侧打开。\n- 相对布局，宽度占满父容器，高度占满父容器，用于容纳页面内容。", "function_description": "实现了一个抽屉布局容器，抽屉默认从左侧打开，容器内包含一个相对布局，用于显示页面内容。"}}}, {"id": "SwQMMtfKdoRGsh8tgjXAun", "description": "查询组件文档", "subtasks": [{"id": "DKyJZfHJRyGApstx99H8TY", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['androidx.drawerlayout.widget.DrawerLayout', 'RelativeLayout']\n功能效果描述：实现了一个抽屉布局容器，抽屉默认从左侧打开，容器内包含一个相对布局，用于显示页面内容。\n通用布局描述：一个抽屉布局容器，宽度占满父容器，高度占满父容器，内边距适应系统窗口，抽屉默认从左侧打开。\n- 相对布局，宽度占满父容器，高度占满父容器，用于容纳页面内容。\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\">\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n</androidx.drawerlayout.widget.DrawerLayout>\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["Navigation", "RelativeContainer"], "queries": [{"component": "Navigation", "queries": ["设置导航容器的宽度为父容器的宽度", "设置导航容器的高度为父容器的高度", "设置导航容器的内边距适应系统窗口", "设置导航容器的抽屉默认从左侧打开"]}, {"component": "RelativeContainer", "queries": ["设置相对布局的宽度为父容器的宽度", "设置相对布局的高度为父容器的高度", "设置相对布局的内容对齐方式"]}], "idea": "选择Navigation组件来实现DrawerLayout的功能，设置其属性和样式以匹配DrawerLayout的布局和行为。选择RelativeContainer组件来实现RelativeLayout的功能，确保内容布局的灵活性和对齐方式的准确性。"}}}, {"id": "cWUFBu5pmfzS3UAKp4dRiS", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["Navigation", "RelativeContainer"], "queries": [{"component": "Navigation", "queries": ["设置导航容器的宽度为父容器的宽度", "设置导航容器的高度为父容器的高度", "设置导航容器的内边距适应系统窗口", "设置导航容器的抽屉默认从左侧打开"]}, {"component": "RelativeContainer", "queries": ["设置相对布局的宽度为父容器的宽度", "设置相对布局的高度为父容器的高度", "设置相对布局的内容对齐方式"]}], "idea": "选择Navigation组件来实现DrawerLayout的功能，设置其属性和样式以匹配DrawerLayout的布局和行为。选择RelativeContainer组件来实现RelativeLayout的功能，确保内容布局的灵活性和对齐方式的准确性。"}, "corrected_component_query": {"components": ["Navigation", "RelativeContainer"], "queries": [{"component": "Navigation", "queries": ["设置导航容器的宽度为父容器的宽度", "设置导航容器的高度为父容器的高度", "设置导航容器的内边距适应系统窗口", "设置导航容器的抽屉默认从左侧打开"]}, {"component": "RelativeContainer", "queries": ["设置相对布局的宽度为父容器的宽度", "设置相对布局的高度为父容器的高度", "设置相对布局的内容对齐方式"]}], "idea": "选择Navigation组件来实现DrawerLayout的功能，设置其属性和样式以匹配DrawerLayout的布局和行为。选择RelativeContainer组件来实现RelativeLayout的功能，确保内容布局的灵活性和对齐方式的准确性。"}}}, {"id": "RtkqUbzPGZKdxhgAWhoGLE", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个抽屉布局容器，抽屉默认从左侧打开，容器内包含一个相对布局，用于显示页面内容。", "k": 3, "component_name": ["Navigation", "RelativeContainer"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "RelativeContainer", "source": "harmony-component-example-doc", "table_id": 18}, "page_content": "实现一个包含多个链布局的相对容器组件，展示不同链布局样式（SPREAD、SPREAD_INSIDE、PACKED）的效果。每个链布局包含三个子组件，通过alignRules属性设置子组件之间的相对位置关系。", "type": "Document"}, 0.7160830497741699], [{"id": null, "metadata": {"component_name": "RelativeContainer", "source": "harmony-component-example-doc", "table_id": 13}, "page_content": "实现一个相对布局的示例，包含四个矩形，每个矩形通过RelativeContainer进行相对定位。\n第一个矩形位于容器的左上角，第二个矩形位于第一个矩形的右侧，第三个矩形位于第一个矩形的下方，第四个矩形位于第三个矩形的右侧和第二个矩形的下方。\n每个矩形都有一个文本标签，并且通过alignRules属性进行相对定位。", "type": "Document"}, 0.7099029421806335], [{"id": null, "metadata": {"component_name": "RelativeContainer", "source": "harmony-component-example-doc", "table_id": 14}, "page_content": "实现一个相对布局的示例，包含三个Row组件，每个Row组件通过RelativeContainer进行相对定位和对齐。每个Row组件具有不同的背景色，并通过alignRules属性定义其相对位置和对齐方式。整体布局在一个Row组件内，并设置了边框和外边距。", "type": "Document"}, 0.6797000765800476]], "component_examples": {"RelativeContainer": [{"description": "实现一个包含多个链布局的相对容器组件，展示不同链布局样式（SPREAD、SPREAD_INSIDE、PACKED）的效果。每个链布局包含三个子组件，通过alignRules属性设置子组件之间的相对位置关系。", "code": "@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      RelativeContainer() {\n        // 第一个链布局：SPREAD\n        Row(){Text('row1')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF3333\")\n          .alignRules({\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start}, // 左对齐容器\n            right: {anchor: \"row2\", align : HorizontalAlign.Start}, // 右对齐row2的左侧\n            top: {anchor: \"__container__\", align: VerticalAlign.Top} // 顶部对齐容器\n          })\n          .id(\"row1\")\n          .chainMode(Axis.Horizontal, ChainStyle.SPREAD) // 设置水平方向的SPREAD链布局\n\n        Row(){Text('row2')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FFCC00\")\n          .alignRules({\n            left: {anchor: \"row1\", align: HorizontalAlign.End}, // 左对齐row1的右侧\n            right: {anchor: \"row3\", align : HorizontalAlign.Start}, // 右对齐row3的左侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐row1的顶部\n          })\n          .id(\"row2\")\n\n        Row(){Text('row3')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF6633\")\n          .alignRules({\n            left: {anchor: \"row2\", align: HorizontalAlign.End}, // 左对齐row2的右侧\n            right: {anchor: \"__container__\", align : HorizontalAlign.End}, // 右对齐容器的右侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐row1的顶部\n          })\n          .id(\"row3\")\n\n        // 第二个链布局：SPREAD_INSIDE\n        Row(){Text('row4')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF3333\")\n          .alignRules({\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start}, // 左对齐容器\n            right: {anchor: \"row5\", align : HorizontalAlign.Start}, // 右对齐row5的左侧\n            center: {anchor: \"__container__\", align: VerticalAlign.Center} // 垂直居中对齐容器\n          })\n          .id(\"row4\")\n          .chainMode(Axis.Horizontal, ChainStyle.SPREAD_INSIDE) // 设置水平方向的SPREAD_INSIDE链布局\n\n        Row(){Text('row5')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FFCC00\")\n          .alignRules({\n            left: {anchor: \"row4\", align: HorizontalAlign.End}, // 左对齐row4的右侧\n            right: {anchor: \"row6\", align : HorizontalAlign.Start}, // 右对齐row6的左侧\n            top: {anchor: \"row4\", align: VerticalAlign.Top} // 顶部对齐row4的顶部\n          })\n          .id(\"row5\")\n\n        Row(){Text('row6')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF6633\")\n          .alignRules({\n            left: {anchor: \"row5\", align: HorizontalAlign.End}, // 左对齐row5的右侧\n            right: {anchor: \"__container__\", align : HorizontalAlign.End}, // 右对齐容器的右侧\n            top: {anchor: \"row4\", align: VerticalAlign.Top} // 顶部对齐row4的顶部\n          })\n          .id(\"row6\")\n\n        // 第三个链布局：PACKED\n        Row(){Text('row7')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF3333\")\n          .alignRules({\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start}, // 左对齐容器\n            right: {anchor: \"row8\", align : HorizontalAlign.Start}, // 右对齐row8的左侧\n            bottom: {anchor: \"__container__\", align: VerticalAlign.Bottom} // 底部对齐容器\n          })\n          .id(\"row7\")\n          .chainMode(Axis.Horizontal, ChainStyle.PACKED) // 设置水平方向的PACKED链布局\n\n        Row(){Text('row8')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FFCC00\")\n          .alignRules({\n            left: {anchor: \"row7\", align: HorizontalAlign.End}, // 左对齐row7的右侧\n            right: {anchor: \"row9\", align : HorizontalAlign.Start}, // 右对齐row9的左侧\n            top: {anchor: \"row7\", align: VerticalAlign.Top} // 顶部对齐row7的顶部\n          })\n          .id(\"row8\")\n\n        Row(){Text('row9')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF6633\")\n          .alignRules({\n            left: {anchor: \"row8\", align: HorizontalAlign.End}, // 左对齐row8的右侧\n            right: {anchor: \"__container__\", align : HorizontalAlign.End}, // 右对齐容器的右侧\n            top: {anchor: \"row7\", align: VerticalAlign.Top} // 顶部对齐row7的顶部\n          })\n          .id(\"row9\")\n      }\n      .width(300).height(300) // 设置RelativeContainer的宽度和高度\n      .margin({left: 50}) // 设置左侧外边距\n      .border({width:2, color: \"#6699FF\"}) // 设置边框\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}"}, {"description": "实现一个相对布局的示例，包含四个矩形，每个矩形通过RelativeContainer进行相对定位。\n第一个矩形位于容器的左上角，第二个矩形位于第一个矩形的右侧，第三个矩形位于第一个矩形的下方，第四个矩形位于第三个矩形的右侧和第二个矩形的下方。\n每个矩形都有一个文本标签，并且通过alignRules属性进行相对定位。", "code": "@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      RelativeContainer() {\n        // 第一个矩形，红色背景，位于容器的左上角，设置了10像素的margin\n        Row(){Text('row1')}.justifyContent(FlexAlign.Center)\n          .width(100).height(100)\n          .backgroundColor(\"#FF3333\")\n          .alignRules({\n            top: {anchor: \"__container__\", align: VerticalAlign.Top}, // 顶部对齐容器顶部\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start} // 左侧对齐容器左侧\n          })\n          .id(\"row1\")\n          .margin(10) // 设置外边距为10像素\n\n        // 第二个矩形，黄色背景，位于第一个矩形的右侧\n        Row(){Text('row2')}.justifyContent(FlexAlign.Center)\n          .width(100).height(100)\n          .backgroundColor(\"#FFCC00\")\n          .alignRules({\n            left: {anchor: \"row1\", align: HorizontalAlign.End}, // 左侧对齐第一个矩形的右侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐第一个矩形的顶部\n          })\n          .id(\"row2\")\n\n        // 第三个矩形，橙色背景，位于第一个矩形的下方\n        Row(){Text('row3')}.justifyContent(FlexAlign.Center)\n          .width(100).height(100)\n          .backgroundColor(\"#FF6633\")\n          .alignRules({\n            left: {anchor: \"row1\", align: HorizontalAlign.Start}, // 左侧对齐第一个矩形的左侧\n            top: {anchor: \"row1\", align: VerticalAlign.Bottom} // 顶部对齐第一个矩形的底部\n          })\n          .id(\"row3\")\n\n        // 第四个矩形，浅橙色背景，位于第三个矩形的右侧，第二个矩形的下方，设置了10像素的margin\n        Row(){Text('row4')}.justifyContent(FlexAlign.Center)\n          .width(100).height(100)\n          .backgroundColor(\"#FF9966\")\n          .alignRules({\n            left: {anchor: \"row3\", align: HorizontalAlign.End}, // 左侧对齐第三个矩形的右侧\n            top: {anchor: \"row2\", align: VerticalAlign.Bottom} // 顶部对齐第二个矩形的底部\n          })\n          .id(\"row4\")\n          .margin(10) // 设置外边距为10像素\n      }\n      .width(300).height(300) // 设置RelativeContainer的宽度和高度\n      .margin({left: 50}) // 设置RelativeContainer的左侧外边距为50像素\n      .border({width:2, color: \"#6699FF\"}) // 设置RelativeContainer的边框\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}"}, {"description": "实现一个相对布局的示例，包含三个Row组件，每个Row组件通过RelativeContainer进行相对定位和对齐。每个Row组件具有不同的背景色，并通过alignRules属性定义其相对位置和对齐方式。整体布局在一个Row组件内，并设置了边框和外边距。", "code": "@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      RelativeContainer() {\n        // 第一个Row组件，包含文本'row1'，设置为居中对齐，宽度80，高度80，背景色为红色\n        Row(){Text('row1')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF3333\")\n          // 设置alignRules，定义组件的相对位置和对齐方式\n          .alignRules({\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start}, // 左对齐到容器左侧\n            right: {anchor: \"row2\", align : HorizontalAlign.Start}, // 右对齐到row2的左侧\n            center: {anchor: \"__container__\", align: VerticalAlign.Center}, // 垂直居中对齐到容器\n            bias : {horizontal : 0} // 水平方向的bias值为0\n          })\n          .id(\"row1\") // 设置组件ID为row1\n          .chainMode(Axis.Horizontal, ChainStyle.PACKED) // 设置水平方向的链模式为PACKED\n\n        // 第二个Row组件，包含文本'row2'，设置为居中对齐，宽度80，高度80，背景色为黄色\n        Row(){Text('row2')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FFCC00\")\n          // 设置alignRules，定义组件的相对位置和对齐方式\n          .alignRules({\n            left: {anchor: \"row1\", align: HorizontalAlign.End}, // 左对齐到row1的右侧\n            right: {anchor: \"row3\", align : HorizontalAlign.Start}, // 右对齐到row3的左侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐到row1的顶部\n          })\n          .id(\"row2\") // 设置组件ID为row2\n\n        // 第三个Row组件，包含文本'row3'，设置为居中对齐，宽度80，高度80，背景色为橙色\n        Row(){Text('row3')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF6633\")\n          // 设置alignRules，定义组件的相对位置和对齐方式\n          .alignRules({\n            left: {anchor: \"row2\", align: HorizontalAlign.End}, // 左对齐到row2的右侧\n            right: {anchor: \"__container__\", align : HorizontalAlign.End}, // 右对齐到容器右侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐到row1的顶部\n          })\n          .id(\"row3\") // 设置组件ID为row3\n      }\n      .width(300).height(300) // 设置RelativeContainer的宽度和高度\n      .margin({left: 50}) // 设置左侧外边距\n      .border({width:2, color: \"#6699FF\"}) // 设置边框宽度和颜色\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}"}]}}}, {"id": "GSk5uyvtnNRXLxHe7C4Haz", "description": "查询组件文档", "subtasks": [{"id": "DvBXiBACCskE4mnqTi6Qwq", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "UXKpgtfx9nBu35RbqntpJb", "description": "查询组件Navigation的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置导航容器的宽度为父容器的宽度", "设置导航容器的高度为父容器的高度", "设置导航容器的内边距适应系统窗口", "设置导航容器的抽屉默认从左侧打开"], "n_results": 10, "query_results": {"ids": [["e6502a23-549c-47c1-bb06-1c1db05011f3", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "6e0cf3a3-0a2c-4127-a148-7c4718c1325a", "6ed2d7c0-6701-4ee2-8325-cc7510f1306c", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59", "fca5be72-67e4-4164-9ee0-127ebd14870e", "cd6d319d-b704-4392-aa5b-68530b99be29"], ["e6502a23-549c-47c1-bb06-1c1db05011f3", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "6e0cf3a3-0a2c-4127-a148-7c4718c1325a", "6ed2d7c0-6701-4ee2-8325-cc7510f1306c", "af5a5e24-bc3a-46fc-a0bc-6575b7016b40", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "fca5be72-67e4-4164-9ee0-127ebd14870e", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "68f32735-aa38-44e4-b5ed-12de4265b85e"], ["c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "3c8f1e32-9607-4ed9-8f9e-7175b145929a", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "fca5be72-67e4-4164-9ee0-127ebd14870e", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "68f32735-aa38-44e4-b5ed-12de4265b85e", "1eca187a-2da9-4650-9980-c09fa3413d68", "6ed2d7c0-6701-4ee2-8325-cc7510f1306c", "e9d7a2f5-d692-4b70-a0f6-1713940567a2"], ["fca5be72-67e4-4164-9ee0-127ebd14870e", "68f32735-aa38-44e4-b5ed-12de4265b85e", "1eca187a-2da9-4650-9980-c09fa3413d68", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "a7e9ddb7-f869-46fe-8348-8666d3865b8e", "1df40a81-03ab-4b8a-9641-b3e2f1f218a1"]], "distances": [[0.3557804226875305, 0.35938698053359985, 0.36477047204971313, 0.36897820234298706, 0.38927698135375977, 0.3970401883125305, 0.39731818437576294, 0.4010080099105835, 0.4060431718826294, 0.4213426113128662], [0.3962622880935669, 0.39993298053741455, 0.40019577741622925, 0.40229713916778564, 0.41496479511260986, 0.4150920510292053, 0.42118924856185913, 0.4221629500389099, 0.4249688386917114, 0.4378601908683777], [0.35956454277038574, 0.3605126142501831, 0.363459050655365, 0.384086012840271, 0.3885089159011841, 0.39858925342559814, 0.39872729778289795, 0.40417563915252686, 0.41306638717651367, 0.4142177700996399], [0.4079265594482422, 0.44130176305770874, 0.4448615312576294, 0.4555479884147644, 0.46132808923721313, 0.4644553065299988, 0.4664234519004822, 0.4664418697357178, 0.4693242907524109, 0.48635274171829224]], "metadatas": [[{"component_name": "Navigation", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "width", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Navigation", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "align", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n"], ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n"], ["设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n"], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "V8AMZDXXM6Akjh97DYLdb5", "description": "查询组件RelativeContainer的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置相对布局的宽度为父容器的宽度", "设置相对布局的高度为父容器的高度", "设置相对布局的内容对齐方式"], "n_results": 10, "query_results": {"ids": [["a60e508e-c659-4421-ac03-635023bfd48b", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "3b346f3c-3633-48c0-8818-19298f847010", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "21ee8daa-e322-4790-9c54-3b3053660750", "17168701-4515-4bd1-adab-7c82d6e2594c", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "83d130bd-f5c0-4367-837b-4f78d745876c", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4"], ["3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "a60e508e-c659-4421-ac03-635023bfd48b", "3b346f3c-3633-48c0-8818-19298f847010", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "ba3ca22b-d3a2-40a3-b6ec-e65bba054853", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4", "83d130bd-f5c0-4367-837b-4f78d745876c", "1e71e552-71d5-4a32-9d22-ad916a0cbedd"], ["3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "eabbcd32-6024-4b2a-a490-c82454d6def9", "83d130bd-f5c0-4367-837b-4f78d745876c", "3b346f3c-3633-48c0-8818-19298f847010", "17168701-4515-4bd1-adab-7c82d6e2594c", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4", "846b3cb6-52f5-4d83-bc6c-d7abde89d5af", "4a140115-78d3-4d07-b04b-6f59ab41256f"]], "distances": [[0.3113133907318115, 0.32934534549713135, 0.3316097855567932, 0.34182894229888916, 0.3714107275009155, 0.3977738618850708, 0.4048522710800171, 0.4092460870742798, 0.41497910022735596, 0.4212809205055237], [0.3285348415374756, 0.35437917709350586, 0.35880744457244873, 0.3664700984954834, 0.38477420806884766, 0.3855152726173401, 0.39177197217941284, 0.39561188220977783, 0.40853726863861084, 0.4121987819671631], [0.31962525844573975, 0.3464994430541992, 0.3612896203994751, 0.3785913586616516, 0.3873247504234314, 0.39800190925598145, 0.40998756885528564, 0.4107624292373657, 0.43908417224884033, 0.44131213426589966]], "metadatas": [[{"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n"], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n"], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "UkfXTgHdjU3wbLKCCa4Sdz", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "mYwxRKwJbnArfAa3C9S83B", "description": "过滤低于阈值的查询结果: 设置导航容器的宽度为父容器的宽度", "subtasks": [], "details": {"query": "设置导航容器的宽度为父容器的宽度", "result_ids": ["e6502a23-549c-47c1-bb06-1c1db05011f3", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "6e0cf3a3-0a2c-4127-a148-7c4718c1325a", "6ed2d7c0-6701-4ee2-8325-cc7510f1306c", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59", "fca5be72-67e4-4164-9ee0-127ebd14870e", "cd6d319d-b704-4392-aa5b-68530b99be29"], "result_documents": ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "width", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3557804226875305, 0.35938698053359985, 0.36477047204971313, 0.36897820234298706, 0.38927698135375977, 0.3970401883125305, 0.39731818437576294, 0.4010080099105835, 0.4060431718826294, 0.4213426113128662], "threshold": 0.6, "query_text_results": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "Navigation", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, 0.6442195773124695], ["设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, 0.6406130194664001], ["设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, 0.6352295279502869], ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "Navigation", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.6310217976570129], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "Navigation", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.6107230186462402], ["设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, 0.6029598116874695], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6026818156242371]]}}, {"id": "7zNhcPC42R2zbVrfP3YgEx", "description": "过滤低于阈值的查询结果: 设置导航容器的高度为父容器的高度", "subtasks": [], "details": {"query": "设置导航容器的高度为父容器的高度", "result_ids": ["e6502a23-549c-47c1-bb06-1c1db05011f3", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "6e0cf3a3-0a2c-4127-a148-7c4718c1325a", "6ed2d7c0-6701-4ee2-8325-cc7510f1306c", "af5a5e24-bc3a-46fc-a0bc-6575b7016b40", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "fca5be72-67e4-4164-9ee0-127ebd14870e", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "68f32735-aa38-44e4-b5ed-12de4265b85e"], "result_documents": ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3962622880935669, 0.39993298053741455, 0.40019577741622925, 0.40229713916778564, 0.41496479511260986, 0.4150920510292053, 0.42118924856185913, 0.4221629500389099, 0.4249688386917114, 0.4378601908683777], "threshold": 0.6, "query_text_results": []}}, {"id": "hSkmCXPuut7DsMyRmWLozz", "description": "过滤低于阈值的查询结果: 设置导航容器的内边距适应系统窗口", "subtasks": [], "details": {"query": "设置导航容器的内边距适应系统窗口", "result_ids": ["c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "3c8f1e32-9607-4ed9-8f9e-7175b145929a", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "fca5be72-67e4-4164-9ee0-127ebd14870e", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "68f32735-aa38-44e4-b5ed-12de4265b85e", "1eca187a-2da9-4650-9980-c09fa3413d68", "6ed2d7c0-6701-4ee2-8325-cc7510f1306c", "e9d7a2f5-d692-4b70-a0f6-1713940567a2"], "result_documents": ["设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.35956454277038574, 0.3605126142501831, 0.363459050655365, 0.384086012840271, 0.3885089159011841, 0.39858925342559814, 0.39872729778289795, 0.40417563915252686, 0.41306638717651367, 0.4142177700996399], "threshold": 0.6, "query_text_results": [["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "Navigation", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, 0.636540949344635], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6114910840988159], ["设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, 0.601272702217102]]}}, {"id": "98ysuxys8W9vJSD3FcY2TV", "description": "过滤低于阈值的查询结果: 设置导航容器的抽屉默认从左侧打开", "subtasks": [], "details": {"query": "设置导航容器的抽屉默认从左侧打开", "result_ids": ["fca5be72-67e4-4164-9ee0-127ebd14870e", "68f32735-aa38-44e4-b5ed-12de4265b85e", "1eca187a-2da9-4650-9980-c09fa3413d68", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "a7e9ddb7-f869-46fe-8348-8666d3865b8e", "1df40a81-03ab-4b8a-9641-b3e2f1f218a1"], "result_documents": ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "align", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.4079265594482422, 0.44130176305770874, 0.4448615312576294, 0.4555479884147644, 0.46132808923721313, 0.4644553065299988, 0.4664234519004822, 0.4664418697357178, 0.4693242907524109, 0.48635274171829224], "threshold": 0.6, "query_text_results": []}}], "details": null}, {"id": "cmb4BETPnzPsLiQzVPZxKg", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "ezsj7sBzJkR5iyydoRagcE", "description": "过滤低于阈值的查询结果: 设置相对布局的宽度为父容器的宽度", "subtasks": [], "details": {"query": "设置相对布局的宽度为父容器的宽度", "result_ids": ["a60e508e-c659-4421-ac03-635023bfd48b", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "3b346f3c-3633-48c0-8818-19298f847010", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "21ee8daa-e322-4790-9c54-3b3053660750", "17168701-4515-4bd1-adab-7c82d6e2594c", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "83d130bd-f5c0-4367-837b-4f78d745876c", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4"], "result_documents": ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3113133907318115, 0.32934534549713135, 0.3316097855567932, 0.34182894229888916, 0.3714107275009155, 0.3977738618850708, 0.4048522710800171, 0.4092460870742798, 0.41497910022735596, 0.4212809205055237], "threshold": 0.6, "query_text_results": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, 0.6886866092681885], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6706546545028687], ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.6683902144432068], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6581710577011108], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.6285892724990845], ["设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, 0.6022261381149292]]}}, {"id": "J7NhLG3MABazfGL2ezWT9Z", "description": "过滤低于阈值的查询结果: 设置相对布局的高度为父容器的高度", "subtasks": [], "details": {"query": "设置相对布局的高度为父容器的高度", "result_ids": ["3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "a60e508e-c659-4421-ac03-635023bfd48b", "3b346f3c-3633-48c0-8818-19298f847010", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "ba3ca22b-d3a2-40a3-b6ec-e65bba054853", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4", "83d130bd-f5c0-4367-837b-4f78d745876c", "1e71e552-71d5-4a32-9d22-ad916a0cbedd"], "result_documents": ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3285348415374756, 0.35437917709350586, 0.35880744457244873, 0.3664700984954834, 0.38477420806884766, 0.3855152726173401, 0.39177197217941284, 0.39561188220977783, 0.40853726863861084, 0.4121987819671631], "threshold": 0.6, "query_text_results": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6144847273826599], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6082280278205872], ["绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, 0.6043881177902222]]}}, {"id": "5Yx6A6N87jVJZUeLNsc9S2", "description": "过滤低于阈值的查询结果: 设置相对布局的内容对齐方式", "subtasks": [], "details": {"query": "设置相对布局的内容对齐方式", "result_ids": ["3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "eabbcd32-6024-4b2a-a490-c82454d6def9", "83d130bd-f5c0-4367-837b-4f78d745876c", "3b346f3c-3633-48c0-8818-19298f847010", "17168701-4515-4bd1-adab-7c82d6e2594c", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "f341d5bd-33e3-49ec-8b13-33435bb8e9d4", "846b3cb6-52f5-4d83-bc6c-d7abde89d5af", "4a140115-78d3-4d07-b04b-6f59ab41256f"], "result_documents": ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "指定当前组件的像素级取整对齐方式。\n属性名称：pixelRound\n属性参数：{'value': {\"type\":\"PixelRoundPolicy\",\"required\":true,\"description\":\"指定当前组件的像素级取整对齐方式。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "pixelRound", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.31962525844573975, 0.3464994430541992, 0.3612896203994751, 0.3785913586616516, 0.3873247504234314, 0.39800190925598145, 0.40998756885528564, 0.4107624292373657, 0.43908417224884033, 0.44131213426589966], "threshold": 0.6, "query_text_results": [["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, 0.6387103796005249], ["子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, 0.6214086413383484], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6019980907440186]]}}], "details": null}], "details": null}, {"id": "9NnNPZunxiRQyid2dnoVru", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# Navigation\n接口描述：Navigation(pathInfos: NavPathStack)\n\n绑定路由栈到Navigation组件。\n接口参数：{'pathInfos': {\"type\":\"NavPathStack\",\"required\":true,\"description\":\"Navigation路由栈，允许被继承12+。开发者可以在派生类中新增属性方法，也可以重写基类NavPathStack的方法。派生类对象可以替代基类NavPathStack对象使用。使用示例参见[示例10](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#%E7%A4%BA%E4%BE%8B10)。\",\"default\":null}}\n设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "# RelativeContainer\n接口描述：RelativeContainer()\n接口参数：{}\n设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n示例：实现一个包含多个链布局的相对容器组件，展示不同链布局样式（SPREAD、SPREAD_INSIDE、PACKED）的效果。每个链布局包含三个子组件，通过alignRules属性设置子组件之间的相对位置关系。\n@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      RelativeContainer() {\n        // 第一个链布局：SPREAD\n        Row(){Text('row1')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF3333\")\n          .alignRules({\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start}, // 左对齐容器\n            right: {anchor: \"row2\", align : HorizontalAlign.Start}, // 右对齐row2的左侧\n            top: {anchor: \"__container__\", align: VerticalAlign.Top} // 顶部对齐容器\n          })\n          .id(\"row1\")\n          .chainMode(Axis.Horizontal, ChainStyle.SPREAD) // 设置水平方向的SPREAD链布局\n\n        Row(){Text('row2')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FFCC00\")\n          .alignRules({\n            left: {anchor: \"row1\", align: HorizontalAlign.End}, // 左对齐row1的右侧\n            right: {anchor: \"row3\", align : HorizontalAlign.Start}, // 右对齐row3的左侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐row1的顶部\n          })\n          .id(\"row2\")\n\n        Row(){Text('row3')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF6633\")\n          .alignRules({\n            left: {anchor: \"row2\", align: HorizontalAlign.End}, // 左对齐row2的右侧\n            right: {anchor: \"__container__\", align : HorizontalAlign.End}, // 右对齐容器的右侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐row1的顶部\n          })\n          .id(\"row3\")\n\n        // 第二个链布局：SPREAD_INSIDE\n        Row(){Text('row4')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF3333\")\n          .alignRules({\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start}, // 左对齐容器\n            right: {anchor: \"row5\", align : HorizontalAlign.Start}, // 右对齐row5的左侧\n            center: {anchor: \"__container__\", align: VerticalAlign.Center} // 垂直居中对齐容器\n          })\n          .id(\"row4\")\n          .chainMode(Axis.Horizontal, ChainStyle.SPREAD_INSIDE) // 设置水平方向的SPREAD_INSIDE链布局\n\n        Row(){Text('row5')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FFCC00\")\n          .alignRules({\n            left: {anchor: \"row4\", align: HorizontalAlign.End}, // 左对齐row4的右侧\n            right: {anchor: \"row6\", align : HorizontalAlign.Start}, // 右对齐row6的左侧\n            top: {anchor: \"row4\", align: VerticalAlign.Top} // 顶部对齐row4的顶部\n          })\n          .id(\"row5\")\n\n        Row(){Text('row6')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF6633\")\n          .alignRules({\n            left: {anchor: \"row5\", align: HorizontalAlign.End}, // 左对齐row5的右侧\n            right: {anchor: \"__container__\", align : HorizontalAlign.End}, // 右对齐容器的右侧\n            top: {anchor: \"row4\", align: VerticalAlign.Top} // 顶部对齐row4的顶部\n          })\n          .id(\"row6\")\n\n        // 第三个链布局：PACKED\n        Row(){Text('row7')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF3333\")\n          .alignRules({\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start}, // 左对齐容器\n            right: {anchor: \"row8\", align : HorizontalAlign.Start}, // 右对齐row8的左侧\n            bottom: {anchor: \"__container__\", align: VerticalAlign.Bottom} // 底部对齐容器\n          })\n          .id(\"row7\")\n          .chainMode(Axis.Horizontal, ChainStyle.PACKED) // 设置水平方向的PACKED链布局\n\n        Row(){Text('row8')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FFCC00\")\n          .alignRules({\n            left: {anchor: \"row7\", align: HorizontalAlign.End}, // 左对齐row7的右侧\n            right: {anchor: \"row9\", align : HorizontalAlign.Start}, // 右对齐row9的左侧\n            top: {anchor: \"row7\", align: VerticalAlign.Top} // 顶部对齐row7的顶部\n          })\n          .id(\"row8\")\n\n        Row(){Text('row9')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF6633\")\n          .alignRules({\n            left: {anchor: \"row8\", align: HorizontalAlign.End}, // 左对齐row8的右侧\n            right: {anchor: \"__container__\", align : HorizontalAlign.End}, // 右对齐容器的右侧\n            top: {anchor: \"row7\", align: VerticalAlign.Top} // 顶部对齐row7的顶部\n          })\n          .id(\"row9\")\n      }\n      .width(300).height(300) // 设置RelativeContainer的宽度和高度\n      .margin({left: 50}) // 设置左侧外边距\n      .border({width:2, color: \"#6699FF\"}) // 设置边框\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}\n\n示例：实现一个相对布局的示例，包含四个矩形，每个矩形通过RelativeContainer进行相对定位。\n第一个矩形位于容器的左上角，第二个矩形位于第一个矩形的右侧，第三个矩形位于第一个矩形的下方，第四个矩形位于第三个矩形的右侧和第二个矩形的下方。\n每个矩形都有一个文本标签，并且通过alignRules属性进行相对定位。\n@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      RelativeContainer() {\n        // 第一个矩形，红色背景，位于容器的左上角，设置了10像素的margin\n        Row(){Text('row1')}.justifyContent(FlexAlign.Center)\n          .width(100).height(100)\n          .backgroundColor(\"#FF3333\")\n          .alignRules({\n            top: {anchor: \"__container__\", align: VerticalAlign.Top}, // 顶部对齐容器顶部\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start} // 左侧对齐容器左侧\n          })\n          .id(\"row1\")\n          .margin(10) // 设置外边距为10像素\n\n        // 第二个矩形，黄色背景，位于第一个矩形的右侧\n        Row(){Text('row2')}.justifyContent(FlexAlign.Center)\n          .width(100).height(100)\n          .backgroundColor(\"#FFCC00\")\n          .alignRules({\n            left: {anchor: \"row1\", align: HorizontalAlign.End}, // 左侧对齐第一个矩形的右侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐第一个矩形的顶部\n          })\n          .id(\"row2\")\n\n        // 第三个矩形，橙色背景，位于第一个矩形的下方\n        Row(){Text('row3')}.justifyContent(FlexAlign.Center)\n          .width(100).height(100)\n          .backgroundColor(\"#FF6633\")\n          .alignRules({\n            left: {anchor: \"row1\", align: HorizontalAlign.Start}, // 左侧对齐第一个矩形的左侧\n            top: {anchor: \"row1\", align: VerticalAlign.Bottom} // 顶部对齐第一个矩形的底部\n          })\n          .id(\"row3\")\n\n        // 第四个矩形，浅橙色背景，位于第三个矩形的右侧，第二个矩形的下方，设置了10像素的margin\n        Row(){Text('row4')}.justifyContent(FlexAlign.Center)\n          .width(100).height(100)\n          .backgroundColor(\"#FF9966\")\n          .alignRules({\n            left: {anchor: \"row3\", align: HorizontalAlign.End}, // 左侧对齐第三个矩形的右侧\n            top: {anchor: \"row2\", align: VerticalAlign.Bottom} // 顶部对齐第二个矩形的底部\n          })\n          .id(\"row4\")\n          .margin(10) // 设置外边距为10像素\n      }\n      .width(300).height(300) // 设置RelativeContainer的宽度和高度\n      .margin({left: 50}) // 设置RelativeContainer的左侧外边距为50像素\n      .border({width:2, color: \"#6699FF\"}) // 设置RelativeContainer的边框\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}\n\n示例：实现一个相对布局的示例，包含三个Row组件，每个Row组件通过RelativeContainer进行相对定位和对齐。每个Row组件具有不同的背景色，并通过alignRules属性定义其相对位置和对齐方式。整体布局在一个Row组件内，并设置了边框和外边距。\n@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      RelativeContainer() {\n        // 第一个Row组件，包含文本'row1'，设置为居中对齐，宽度80，高度80，背景色为红色\n        Row(){Text('row1')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF3333\")\n          // 设置alignRules，定义组件的相对位置和对齐方式\n          .alignRules({\n            left: {anchor: \"__container__\", align: HorizontalAlign.Start}, // 左对齐到容器左侧\n            right: {anchor: \"row2\", align : HorizontalAlign.Start}, // 右对齐到row2的左侧\n            center: {anchor: \"__container__\", align: VerticalAlign.Center}, // 垂直居中对齐到容器\n            bias : {horizontal : 0} // 水平方向的bias值为0\n          })\n          .id(\"row1\") // 设置组件ID为row1\n          .chainMode(Axis.Horizontal, ChainStyle.PACKED) // 设置水平方向的链模式为PACKED\n\n        // 第二个Row组件，包含文本'row2'，设置为居中对齐，宽度80，高度80，背景色为黄色\n        Row(){Text('row2')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FFCC00\")\n          // 设置alignRules，定义组件的相对位置和对齐方式\n          .alignRules({\n            left: {anchor: \"row1\", align: HorizontalAlign.End}, // 左对齐到row1的右侧\n            right: {anchor: \"row3\", align : HorizontalAlign.Start}, // 右对齐到row3的左侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐到row1的顶部\n          })\n          .id(\"row2\") // 设置组件ID为row2\n\n        // 第三个Row组件，包含文本'row3'，设置为居中对齐，宽度80，高度80，背景色为橙色\n        Row(){Text('row3')}.justifyContent(FlexAlign.Center)\n          .width(80).height(80)\n          .backgroundColor(\"#FF6633\")\n          // 设置alignRules，定义组件的相对位置和对齐方式\n          .alignRules({\n            left: {anchor: \"row2\", align: HorizontalAlign.End}, // 左对齐到row2的右侧\n            right: {anchor: \"__container__\", align : HorizontalAlign.End}, // 右对齐到容器右侧\n            top: {anchor: \"row1\", align: VerticalAlign.Top} // 顶部对齐到row1的顶部\n          })\n          .id(\"row3\") // 设置组件ID为row3\n      }\n      .width(300).height(300) // 设置RelativeContainer的宽度和高度\n      .margin({left: 50}) // 设置左侧外边距\n      .border({width:2, color: \"#6699FF\"}) // 设置边框宽度和颜色\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}\n\n"], "related_types": {"LocalizedPadding": {"description": "内边距类型，用于描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthMetrics": {"description": "用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。", "type": "object", "properties": {"value": {"type": "number", "required": false, "description": "长度属性的值。", "enum": null, "enumDescriptions": null, "default": null}, "unit": {"type": "LengthUnit", "required": false, "description": "长度属性的单位，默认为vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthUnit": {"description": "长度属性单位枚举。", "type": "enum", "enum": ["PX", "VP", "FP", "PERCENT", "LPX"], "enumDescriptions": {"PX": "长度类型，用于描述以px像素单位为单位的长度。", "VP": "长度类型，用于描述以vp逻辑像素为单位的长度。", "FP": "长度类型，用于描述以fp字体像素为单位的长度。", "PERCENT": "长度类型，用于描述百分比长度。", "LPX": "长度类型，用于描述以lpx逻辑像素为单位的长度。"}, "examples": null}, "Dimension": {"description": "长度类型，用于描述尺寸单位。", "type": "enum", "enum": ["PX", "VP", "FP", "LPX", "PERCENT", "Resource"], "enumDescriptions": {"PX": "需要指定以px像素单位，如'10px'。", "VP": "需要指定数字或vp像素单位，如10或'10vp'。", "FP": "需要指定以fp像素单位，如'10fp'。", "LPX": "需要指定以lpx像素单位，如'10lpx'。", "PERCENT": "需要指定以%像素单位，如'10%'。", "Resource": "资源引用类型，引入系统资源或者应用资源中的尺寸。"}, "examples": null}, "Padding": {"description": "内边距类型，描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Length", "required": false, "description": "左内边距，组件内元素距组件左侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Length", "required": false, "description": "右内边距，组件内元素距组件右侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Length", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "NavBarPosition": {"description": "元服务API： 从API version 11开始，该接口支持在元服务中使用。", "type": "enum", "enum": ["Start", "End"], "enumDescriptions": {"Start": "双栏显示时，主列在主轴方向首部。", "End": "双栏显示时，主列在主轴方向尾部。"}, "examples": null}, "Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "Edges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。", "type": "object", "properties": {"top": {"type": "Dimension", "required": false, "description": "相对顶边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Dimension", "required": false, "description": "相对左边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Dimension", "required": false, "description": "相对右边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Dimension", "required": false, "description": "相对底边的偏移量", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LocalizedEdges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "相对顶边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "相对底边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Position": {"description": "位置类型，用于表示一个坐标点。", "type": "object", "properties": {"x": {"type": "Length", "required": false, "description": "x轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}, "y": {"type": "Length", "required": false, "description": "y轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}}}}, {"id": "SAUQ5FQ3gUzxDQT2acHULi", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["类型名：LocalizedPadding\n类型描述：内边距类型，用于描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LengthMetrics\n类型描述：用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。\n参数：{'value': {\"type\":\"number\",\"required\":false,\"description\":\"长度属性的值。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'unit': {\"type\":\"LengthUnit\",\"required\":false,\"description\":\"长度属性的单位，默认为vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：LengthUnit\n枚举类型描述：长度属性单位枚举。\n枚举值：['PX', 'VP', 'FP', 'PERCENT', 'LPX']\n枚举值描述：\n* PX: 长度类型，用于描述以px像素单位为单位的长度。\n* VP: 长度类型，用于描述以vp逻辑像素为单位的长度。\n* FP: 长度类型，用于描述以fp字体像素为单位的长度。\n* PERCENT: 长度类型，用于描述百分比长度。\n* LPX: 长度类型，用于描述以lpx逻辑像素为单位的长度。\n\n", "枚举类型名：Dimension\n枚举类型描述：长度类型，用于描述尺寸单位。\n枚举值：['PX', 'VP', 'FP', 'LPX', 'PERCENT', 'Resource']\n枚举值描述：\n* PX: 需要指定以px像素单位，如'10px'。\n* VP: 需要指定数字或vp像素单位，如10或'10vp'。\n* FP: 需要指定以fp像素单位，如'10fp'。\n* LPX: 需要指定以lpx像素单位，如'10lpx'。\n* PERCENT: 需要指定以%像素单位，如'10%'。\n* Resource: 资源引用类型，引入系统资源或者应用资源中的尺寸。\n\n", "类型名：Padding\n类型描述：内边距类型，描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "枚举类型名：NavBarPosition\n枚举类型描述：元服务API： 从API version 11开始，该接口支持在元服务中使用。\n枚举值：['Start', 'End']\n枚举值描述：\n* Start: 双栏显示时，主列在主轴方向首部。\n* End: 双栏显示时，主列在主轴方向尾部。\n\n", "枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：Edges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。\n参数：{'top': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对顶边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对左边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对右边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对底边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LocalizedEdges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对顶边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对底边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Position\n类型描述：位置类型，用于表示一个坐标点。\n参数：{'x': {\"type\":\"Length\",\"required\":false,\"description\":\"x轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'y': {\"type\":\"Length\",\"required\":false,\"description\":\"y轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n"]}}], "details": {"android_component": {"name": ["androidx.drawerlayout.widget.DrawerLayout", "RelativeLayout"], "content": "<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\">\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n</androidx.drawerlayout.widget.DrawerLayout>", "layout_description": "一个抽屉布局容器，宽度占满父容器，高度占满父容器，内边距适应系统窗口，抽屉默认从左侧打开。\n- 相对布局，宽度占满父容器，高度占满父容器，用于容纳页面内容。", "function_description": "实现了一个抽屉布局容器，抽屉默认从左侧打开，容器内包含一个相对布局，用于显示页面内容。"}}}, {"id": "WB7SMSNjbp8UAQMLRMr4GJ", "description": "转译组件v1", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去根据安卓组件描述生成鸿蒙ArkUI代码。\n\n\n\n\n以下是可供参考的鸿蒙组件文档：\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n\n# 声明式UI描述\nArkTS以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n## 创建组件\n根据组件构造方法的不同，创建组件包含有参数和无参数两种方式。\n\n### 无参数\n如果组件的接口定义没有包含必选构造参数，则组件后面的“()”不需要配置任何内容。例如，Divider组件不包含构造参数。\n```ets\nColumn() {\n  Text('item 1')\n  Divider()\n  Text('item 2')\n}\n```\n\n### 有参数\n- Image组件的必选参数src。\n```ets\nImage('https://xyz/test.jpg')\n```\n- Text组件的非必选参数content。\n```ets\n// string类型的参数\nText('test')\n// $r形式引入应用资源，可应用于多语言场景\nText($r('app.string.title_value'))\n// 无参数形式\nText()\n```\n- 变量或表达式也可以用于参数赋值，其中表达式返回的结果类型必须满足参数类型要求。\n例如，设置变量或表达式来构造Image和Text组件的参数。\n```ets\nImage(this.imagePath)\nImage('https://' + this.imageUrl)\nText(`count: ${this.count}`)\n```\n\n## 配置属性\n属性方法以“.”链式调用的方式配置系统组件的样式和其他属性，建议每个属性方法单独写一行。\n\n- 设置Text组件的字体大小。\n```ets\nText('test')\n  .fontSize(20)\n```\n- 配置组件的多个属性。\n```ets\nImage('test.jpg')\n  .alt('error.jpg')\n  .width(100)\n  .height(100)\n```\n- 除了直接传递常量参数外，还可以传递变量或表达式。\n```ets\nText('hello')\n  .fontSize(this.size)\nImage('test.jpg')\n  .width(this.count % 2 === 0 ? 100 : 200)\n  .height(this.offset + 100)\n```\n- 对于系统组件，ArkUI还为其属性预定义了一些枚举类型供开发者调用，枚举类型可以作为参数传递，但必须满足参数类型要求。\n例如，可以按以下方式配置Text组件的颜色和字体样式。\n```ets\nText('hello')\n  .fontSize(20)\n  .fontColor(Color.Red)\n  .fontWeight(FontWeight.Bold)\n```\n\n## 配置事件\n事件方法以“.”链式调用的方式配置系统组件支持的事件，建议每个事件方法单独写一行。\n\n- 使用箭头函数配置组件的事件方法。\n```ets\nButton('Click me')\n  .onClick(() => {\n    this.myText = 'ArkUI';\n  })\n```\n- 使用组件的成员函数配置组件的事件方法，需要bind this。ArkTS语法不推荐使用成员函数配合bind this去配置组件的事件方法。\n```ets\nmyClickHandler(): void {\n  this.counter += 2;\n}\n...\nButton('add counter')\n  .onClick(this.myClickHandler.bind(this))\n```\n- 使用声明的箭头函数，可以直接调用，不需要bind this。\n```ets\nfn = () => {\n  console.info(`counter: ${this.counter}`)\n  this.counter++\n}\n...\nButton('add counter')\n  .onClick(this.fn)\n```\n\n## 配置子组件\n如果组件支持子组件配置，则需在尾随闭包\"{...}\"中为组件添加子组件的UI描述。Column、Row、Stack、Grid、List等组件都是容器组件。\n\n- 容器组件均支持子组件配置，可以实现相对复杂的多级嵌套。\n```ets\nColumn() {\n  Row() {\n    Image('test1.jpg')\n      .width(100)\n      .height(100)\n    Button('click +1')\n      .onClick(() => {\n        console.info('+1 clicked!');\n      })\n  }\n  .width('100%')\n}\n```\n以下是关于安卓组件转译为鸿蒙ArkUI组件的示例代码：\n\n## 示例#1\n### ['RelativeContainer', 'TextInput', 'Button'] 组件\n通过 RelativeContainer 布局实现了一个包含多个按钮和文本输入框的界面，用于在应用中创建一个相对布局界面。布局的宽度占据整个屏幕，高度也为 100%，内部包含一个 TextInput 组件和三个 Button 组件。TextInput 组件的提示文本为“reminder”，宽度占据整个父布局。三个按钮的文本分别为“Select Date”、“Select Time”和“done”，通过相对位置规则进行排列。整个布局使用了 ItemAlign.Center 来确保布局在父容器中居中对齐。用户可以通过按钮和文本输入框进行操作。\n```\n    RelativeContainer() {\nTextInput({ placeholder: 'reminder' })\n.id('name')\n.width('100%')\n\nButton('Select Date')\n.id('dates_button')\n.alignRules({\ntop: { anchor: 'name', align: VerticalAlign.Bottom },\nleft: { anchor: '__container__', align: HorizontalAlign.Start },\nright: { anchor: 'times_button', align: HorizontalAlign.Start }\n})\n\nButton('Select Time')\n.id('times_button')\n.alignRules({\ntop: { anchor: 'name', align: VerticalAlign.Bottom },\nright: { anchor: '__container__', align: HorizontalAlign.End }\n})\n\nButton('done')\n.width(96)\n.alignRules({\ntop: { anchor: 'times_button', align: VerticalAlign.Bottom },\nright: { anchor: '__container__', align: HorizontalAlign.End }\n})\n}\n.id('main')\n.width('100%')\n.height('100%')\n.alignSelf(ItemAlign.Center)\n```\n\n这些资源目前在项目中已经定义：\n# 资源变量\n## color\nstart_window_background, white, ivory, lightyellow, yellow, snow, floralwhite, lemonchiffon, cornk, seaShell, lavenderblush, papayawhip, blanchedalmond, mistyrose, bisque, moccasin, navajowhite, peachpuff, gold, pink, lightpink, goldyellow, orange, lightsalmon, darkorange, coral, hotpink, tomato, orangered, deeppink, fuchsia, magenta, red, oldlace, lightgoldenrodyellow, linen, antiquewhite, salmon, ghostwhite, mintcream, whitesmoke, beige, wheat, sandybrown, azure, honeydew, aliceblue, khaki, lightcoral, palegoldenrod, violet, darksalmon, lavender, lightcyan, burlywood, plum, gainsboro, crimson, palevioletred, goldenrod, orchid, thistle, lightgray, tan, chocolate, peru, indianred, mediumvioletred, silver, darkkhaki, rosybrown, mediumorchid, darkgoldenrod, firebrick, powderblue, lightsteelblue, paleturquoise, greenyellow, lightblue, darkgray, darkgrey, brown, sienna, darkorchid, palegreen, darkviolet, mediumpurple, lightgreen, darkseagreen, saddlebrown, darkmagenta, darkred, blueviolet, lightskyblue, skyblue, gray, grey, olive, purple, maroon, aquamarine, chartreuse, lawngreen, mediumslateblue, lightslategray, lightslategrey, slategray, slategrey, olivedrab, slateblue, dimgray, dimgrey, mediumaquamarine, cornflowerblue, cadetblue, darkolivegreen, indigo, mediumturquoise, darkslateblue, steelblue, royalblue, turquoise, mediumseagreen, limegreen, darkslategray, darkslategrey, seagreen, forestgreen, lightseagreen, dodgerblue, midnightblue, aqua, cyan, springgreen, lime, mediumspringgreen, darkturquoise, deepskyblue, darkcyan, teal, green, darkgreen, blue, mediumblue, darkblue, navy, colorPrimary, colorPrimaryDark, bg_color, black, transparent, detail_bgColor, defaultTextColor, viewfinder_frame, viewfinder_mask, possible_result_points, result_view, backColor, limit_buy_border_bg, search_toolbar_bg, toast_color, login_button, app_green, app_green_alpha, green_btn_color_pressed, red_btn_color_normal, red_btn_color_pressed, red_btn_color_disable, grey_btn_color_normal, grey_btn_color_pressed, grey_btn_color_disable, grey_btn_stroke_color_normal, grey_btn_stroke_color_pressed, grey_btn_stroke_color_disable, black_btn_color_normal, black_btn_color_pressed, black_btn_color_disable, black_btn_stroke_color_normal, black_btn_stroke_color_pressed, black_btn_stroke_color_disable, normal_text_color, normal_text_color_disable, white_color_disable, border_color, login_unable_bg_green, login_unable_bg, base_title_bg_color, base_title_color, base_title_right_color, base_blue, base_black, base_gray, base_blue_selector, base_bg_color, base_line, base_text_color_gray, base_texthint_color_gray, base_white, base_color, small_base_coloruser, base_red_color, userInfo_font\n## float\nactivity_horizontal_margin, activity_vertical_margin, buttonCornerSize, dialog_round_radius, smallButtonHeight, smallButtonWidth, normalButtonHeight, normalButtonWidth, bigButtonTextSize, normalButtonTextSize, smallButtonTextSize, ware_grid_img_width, ware_grid_img_height, ware_img_height, ware_img_width, small_ware_img_width, category_layout_width, base_text_size, small_text_size, big_text_size, smaller_text_size, bigger_text_size, text_18, text_14, text_12, screenPadding, basicPaddingSize, inputEditTextMinHeight, searchViewMinHeight, smallPadding, largePadding, largerPadding, largestPadding, smallerPadding, littlePadding, middlePadding, basePadding, footerPadding, noPadding\n## string\nmodule_desc, EntryAbility_desc, EntryAbility_label, app_name, hello_world, action_settings, home, hot, catagory, cart, mine, title_activity_ware_detail, share, my_orders, my_favorite, my_info, my_addresses, my_msg, logout, to_login, token_error, title_activity_new_order, title_activity_reg, create_order, pay_result, add_addresses, code_end\n\n# 资源文件\nbackground.png\\n\nbl_gb.png\\n\ncompany_logo.png\\n\ndefault_head.png\\n\nforeground.png\\n\nguide_1.png\\n\nguide_2.png\\n\nguide_3.png\\n\nguide_4.png\\n\nicon_add.png\\n\nicon_alipay_72.png\\n\nicon_back_32px.png\\n\nicon_bd_72.png\\n\nicon_cancel_128.png\\n\nicon_cart.png\\n\nicon_cartfill_press.png\\n\nicon_check_32.png\\n\nicon_check_checked_32.png\\n\nicon_check_false.png\\n\nicon_check_true.png\\n\nicon_delete_32.png\\n\nicon_discover.png\\n\nicon_discover_press.png\\n\nicon_edit_32.png\\n\nicon_favorite.png\\n\nicon_grid_32.png\\n\nicon_home.png\\n\nicon_home_press.png\\n\nicon_hot.png\\n\nicon_hot_press.png\\n\nicon_list_32.png\\n\nicon_list_o.png\\n\nicon_location.png\\n\nicon_lock.png\\n\nicon_msg.png\\n\nicon_my_info.png\\n\nicon_right_64.png\\n\nicon_search.png\\n\nicon_success_128.png\\n\nicon_telphone_32.png\\n\nicon_trash_32.png\\n\nicon_user.png\\n\nicon_user_press.png\\n\nicon_wechat_72.png\\n\nkongj.png\\n\nlayered_image.json\\n\npengyq.png\\n\nqq.png\\n\nshop_emptycart.png\\n\nsplash.png\\n\nstartIcon.png\\n\nstart_btn_click.png\\n\nstart_btn_normal.png\\n\nweather_bg.png\\n\nweib.png\\n\nweixin.png\\n\n\n技术主管已经将代码转译分为以下步骤：\n1. 实现安卓DrawerLayout及其内部RelativeLayout的转译，确保布局和功能一致。\\n\n2. 实现安卓NavigationView及其相关属性的转译，确保布局和功能一致。\\n\n\n\n你当前需要处理的任务是：\n实现安卓DrawerLayout及其内部RelativeLayout的转译，确保布局和功能一致。\n\n以下是待转译的安卓组件描述：\n# 待转译的安卓组件名：['androidx.drawerlayout.widget.DrawerLayout', 'RelativeLayout']\n功能描述：实现了一个抽屉布局容器，抽屉默认从左侧打开，容器内包含一个相对布局，用于显示页面内容。\n安卓布局描述：一个抽屉布局容器，宽度占满父容器，高度占满父容器，内边距适应系统窗口，抽屉默认从左侧打开。\n- 相对布局，宽度占满父容器，高度占满父容器，用于容纳页面内容。\n实现转译的思路：选择Navigation组件来实现DrawerLayout的功能，设置其属性和样式以匹配DrawerLayout的布局和行为。选择RelativeContainer组件来实现RelativeLayout的功能，确保内容布局的灵活性和对齐方式的准确性。\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\">\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n</androidx.drawerlayout.widget.DrawerLayout>\n\n\n你的工作是根据**鸿蒙组件文档**、当前项目信息准确地、完整的根据安卓组件描述生成鸿蒙ArkUI组件代码，不可以使用不存在的鸿蒙组件以及不存在的属性和事件。\n在生成时，你需要确保生成过程中所有使用的ArkUI组件、属性和事件与安卓组件描述实现的功能、行为一致。\n在整个过程中，请严格遵循文档规范，每一步都需要详细对照官方文档，确保没有任何遗漏或误解。\n**重要**：你必须严格按照待转译的安卓组件描述来编写鸿蒙ArkUI代码，不可忽略任何可以实现的属性、样式、功能等，也不可以添加任何未在安卓组件描述中提到的功能。\n**重要**：必须确保所选用的组件、类型、属性和方法完全符合鸿蒙ArkUI官方文档的定义与规范, 必须确保使用的资源文件都已被定义。\n**重要**：当你无法通过单个组件实现功能时，可以通过组合多个组件来实现，但不可选择不存在的组件，例如Checkbox需要与Text组件搭配才能够实现复选框旁侧有文字的效果，卡片需要利用Stack布局及Text等组件来实现。\n**重要**：ArkUI以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n在你编写鸿蒙ArUI组件时，需要遵守以下规则：\n* 1. 当组件的宽度和高度是根据内容自适应时，需要使用'auto'；当组件的宽度和高度是跟随父组件时，需要使用'100%'，例如：android:layout_width=\"wrap_content\"应该转译为width=\"auto\"；android:layout_width=\"match_parent\"应该转译为width=\"100%\"。\n* 2. 引用资源时，需要使用$r('app.xxx.yyy'), 其中xxx为资源类型，yyy为资源名称，例如：Image($r('app.media.custom_background'))。\n* 3. 对于安卓系统属性例如@attr/black，在鸿蒙中你应该将其转译为Color.Black。\n* 4. 在鸿蒙中，对于marquee效果的文本，你应该使用.textOverflow({ overflow: TextOverflow.MARQUEE })即可，不需要额外的设置。\n* 5. 在鸿蒙中，当你转译的只有容器组件时，你需要注明子组件所在的位置，例如：Scroll() {\\n  Column() {\\n    // 子组件\\n  }\\n}。\n* 6. 在鸿蒙中，你应该根据所需效果确保为每一个Image添加objectFit，以保证图片的显示效果，例如：Image(xxx)\\n  .objectFit(ImageFit.Contain)。\n\n\n在转译过程中，你需要严格遵守以下规则：\n### 规则 1\n你必须准确、完整地实现安卓布局代码地转译。\n准确意味着你需要将安卓布局代码中的每个组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要添加任何多余的或不存在的组件、属性、值。\n完整意味着你需要将安卓布局代码中的所有组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要遗漏任何组件、属性、值。\n正确示例：\n```\n安卓布局文件：\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"@string/lorem_ipsum\" />\n对应的鸿蒙ArkUI代码：\nText($r(\"app.string.lorem_ipsum\"))\n  .id(\"textview_first\")\n  .width('auto')\n  .height('auto')\n```\n错误示例：\n```\n安卓布局文件\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"16dp\"\n    android:text=\"@string/lorem_ipsum\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toEndOf=\"parent\"\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toBottomOf=\"@id/button_first\" />\n错误的鸿蒙ArkUI代码：\n// 未完整、准确地实现安卓布局代码的转译。\n// 遗漏了id、marginTop、constraintBottom_toBottomOf、constraintEnd_toEndOf、constraintStart_toStartOf、constraintTop_toBottomOf属性，并且添加了额外的maxLines属性。\nText($r(\"app.string.lorem_ipsum\"))\n  .maxLines(10)\n修改后的正确鸿蒙ArkUI代码：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        top: { anchor: 'button_first', align: VerticalAlign.Bottom },  // 对app:layout_constraintTop_toBottomOf=\"@id/button_first\"的转译\n        bottom: { anchor: '__container__', align: VerticalAlign.Bottom },  // 对app:layout_constraintBottom_toBottomOf=\"parent\"的转译\n        left: { anchor: '__container__', align: HorizontalAlign.Start },  // 对app:layout_constraintStart_toStartOf=\"parent\"的转译\n        right: { anchor: '__container__', align: HorizontalAlign.End }  // 对app:layout_constraintEnd_toEndOf=\"parent\"的转译\n    })  // 使用RelativeContainer与alignRules实现对layout_constraintXXX_toXXXOf属性的转译\n}\n额外示例：\n利用RelativeContainer实现子组件垂直水平居中：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        center: {anchor: '__container__', align: VerticalAlign.Center},\n        middle: {anchor: '__container__', align: HorizontalAlign.Center}\n    })\n}\n```\n\n", "translated_component": {"harmony_component": "Navigation() {\n  RelativeContainer() {\n    // 子组件\n  }\n    .width('100%')\n    .height('100%')\n}\n  .width('100%')\n  .height('100%')\n  .drawerPosition(DrawerPosition.Start)\n  .drawerOpen(false)", "explanation": "1. 使用Navigation组件来实现DrawerLayout的功能，设置其属性和样式以匹配DrawerLayout的布局和行为。\n2. 使用RelativeContainer组件来实现RelativeLayout的功能，确保内容布局的灵活性和对齐方式的准确性。\n3. 设置Navigation组件的宽度为100%，高度为100%，以占满父容器。\n4. 设置drawerPosition为Start，以确保抽屉默认从左侧打开。\n5. 设置drawerOpen为false，以确保抽屉默认关闭。\n6. 在RelativeContainer中预留子组件的位置，以便后续添加页面内容。"}}}, {"id": "G8skkdGZTrUEmZCLjNR7oJ", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "Navigation() {\n  RelativeContainer() {\n    // 子组件\n  }\n    .width('100%')\n    .height('100%')\n}\n  .width('100%')\n  .height('100%')\n  .drawerPosition(DrawerPosition.Start)\n  .drawerOpen(false)"}}], "details": null}, {"id": "cwzCeuDEVeDoa7KQz5byds", "description": "根据转译表转译组件v1", "subtasks": [{"id": "goYZrh8BzAdsx83JFVhUiv", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。", "function_description": "实现了一个导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。"}}}, {"id": "4WBCKAV6QRv7nyuGtKDvAg", "description": "查询组件文档", "subtasks": [{"id": "cD5JD3TQrVbg7XLdQyoVkp", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['com.google.android.material.navigation.NavigationView']\n功能效果描述：实现了一个导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。\n通用布局描述：导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。\n<com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["Navigation", "Column", "Image", "Text", "Menu", "MenuItem"], "queries": [{"component": "Navigation", "queries": ["设置导航视图的宽度为自适应", "设置导航视图的高度占满父容器", "设置导航视图的布局重力为开始", "设置导航视图的高度为特定值", "设置导航视图适应系统窗口"]}, {"component": "Column", "queries": ["设置Column组件的高度占满父容器", "设置Column组件的布局重力为开始", "设置Column组件的子组件排列方式"]}, {"component": "Image", "queries": ["设置Image组件的资源引用", "设置Image组件的布局属性"]}, {"component": "Text", "queries": ["设置Text组件的文本内容", "设置Text组件的布局属性"]}, {"component": "Menu", "queries": ["设置Menu组件的资源引用", "设置Menu组件的布局属性"]}, {"component": "MenuItem", "queries": ["设置MenuItem组件的资源引用", "设置MenuItem组件的布局属性"]}], "idea": "选择Navigation组件来实现导航视图的功能，使用Column组件来布局导航视图的内容，Image和Text组件用于显示头部布局，Menu和MenuItem组件用于显示菜单内容。通过设置这些组件的属性和布局，可以实现与安卓NavigationView组件相似的功能和外观。"}}}, {"id": "Pc3PWAYLEUxadoy2w79Gpu", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["Navigation", "Column", "Image", "Text", "Menu", "MenuItem"], "queries": [{"component": "Navigation", "queries": ["设置导航视图的宽度为自适应", "设置导航视图的高度占满父容器", "设置导航视图的布局重力为开始", "设置导航视图的高度为特定值", "设置导航视图适应系统窗口"]}, {"component": "Column", "queries": ["设置Column组件的高度占满父容器", "设置Column组件的布局重力为开始", "设置Column组件的子组件排列方式"]}, {"component": "Image", "queries": ["设置Image组件的资源引用", "设置Image组件的布局属性"]}, {"component": "Text", "queries": ["设置Text组件的文本内容", "设置Text组件的布局属性"]}, {"component": "Menu", "queries": ["设置Menu组件的资源引用", "设置Menu组件的布局属性"]}, {"component": "MenuItem", "queries": ["设置MenuItem组件的资源引用", "设置MenuItem组件的布局属性"]}], "idea": "选择Navigation组件来实现导航视图的功能，使用Column组件来布局导航视图的内容，Image和Text组件用于显示头部布局，Menu和MenuItem组件用于显示菜单内容。通过设置这些组件的属性和布局，可以实现与安卓NavigationView组件相似的功能和外观。"}, "corrected_component_query": {"components": ["Navigation", "Column", "Image", "Text", "Menu", "MenuItem"], "queries": [{"component": "Navigation", "queries": ["设置导航视图的宽度为自适应", "设置导航视图的高度占满父容器", "设置导航视图的布局重力为开始", "设置导航视图的高度为特定值", "设置导航视图适应系统窗口"]}, {"component": "Column", "queries": ["设置Column组件的高度占满父容器", "设置Column组件的布局重力为开始", "设置Column组件的子组件排列方式"]}, {"component": "Image", "queries": ["设置Image组件的资源引用", "设置Image组件的布局属性"]}, {"component": "Text", "queries": ["设置Text组件的文本内容", "设置Text组件的布局属性"]}, {"component": "Menu", "queries": ["设置Menu组件的资源引用", "设置Menu组件的布局属性"]}, {"component": "MenuItem", "queries": ["设置MenuItem组件的资源引用", "设置MenuItem组件的布局属性"]}], "idea": "选择Navigation组件来实现导航视图的功能，使用Column组件来布局导航视图的内容，Image和Text组件用于显示头部布局，Menu和MenuItem组件用于显示菜单内容。通过设置这些组件的属性和布局，可以实现与安卓NavigationView组件相似的功能和外观。"}}}, {"id": "RwzRv7PDHRTEDnqme29rjo", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。", "k": 3, "component_name": ["Navigation", "Column", "Image", "Text", "Menu", "MenuItem"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "Menu", "source": "harmony-component-example-doc", "table_id": 315}, "page_content": "该组件实现了一个带有符号类型图标的普通菜单。布局宽度占据整个屏幕，高度设为 100%，内边距为左右 0、顶部 0。组件的垂直方向上被分为一个部分，包含一个文本提示和一个菜单。文本提示位于顶部，菜单通过点击文本提示触发显示。\n菜单的样式包括图标大小、字体大小、颜色等属性，支持不同的样式展示。菜单项的功能包括点击事件和状态效果，用户可以通过点击菜单项触发相应操作，菜单项也可以在启用或禁用状态下进行展示。\n整个布局通过 Row 和 Column 布局保证菜单在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.7084336876869202], [{"id": null, "metadata": {"component_name": "Text", "source": "harmony-component-example-doc", "table_id": 159}, "page_content": "该组件通过Column布局实现了一个包含文本和图像的展示界面。布局宽度占据整个屏幕，高度设为100%，内边距为25vp。组件的垂直方向上被分为两个部分，第一个部分包含一个带有边框的文本和图像区域，第二个部分包含一个自定义的菜单区域。\n文本和图像区域通过Column布局实现，宽度为200vp，高度为100vp，边框宽度为1vp，颜色为红色。文本和图像区域内的文本和图像通过Span和ImageSpan组件进行展示，文本内容为\"Hello World\"，图像内容为应用内的图标资源。文本和图像区域支持长按、右键点击和选择操作，分别触发不同的自定义菜单。\n自定义菜单区域通过Builder装饰器定义了三个不同的菜单，分别对应长按图像、右键点击文本和选择混合内容的操作。每个菜单包含一个Column布局，内部嵌套一个Menu组件，Menu组件内包含一个MenuItemGroup组件，MenuItemGroup组件内包含三个MenuItem组件。每个MenuItem组件包含一个图标、内容和点击事件，点击事件触发时关闭当前菜单。\n整个布局通过Column布局保证文本和图像区域在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.7045401334762573], [{"id": null, "metadata": {"component_name": "MenuItem", "source": "harmony-component-example-doc", "table_id": 317}, "page_content": "该组件通过 Flex 布局实现了一个展示菜单（Menu）及其菜单项（MenuItem）的界面。布局宽度占据整个屏幕，高度设为 400vp，内边距为左右 35vp、顶部 35vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一个菜单。每个菜单项以水平布局方式排列，菜单项之间的间距均匀分布，且对齐方式为居中对齐。\n菜单的样式包括背景颜色、边框圆角（或半径）、宽度和高度等属性，支持不同的样式展示。菜单项组之间通过 Flex 组件进行分隔。菜单的功能包括点击事件和状态效果，用户可以通过点击菜单项触发相应操作，菜单项也可以在启用或禁用状态下进行展示。\n整个布局通过 Flex 布局保证菜单项在垂直方向上有序排列，确保界面整洁美观。", "type": "Document"}, 0.7036830186843872]], "component_examples": {"Menu": [{"description": "该组件实现了一个带有符号类型图标的普通菜单。布局宽度占据整个屏幕，高度设为 100%，内边距为左右 0、顶部 0。组件的垂直方向上被分为一个部分，包含一个文本提示和一个菜单。文本提示位于顶部，菜单通过点击文本提示触发显示。\n菜单的样式包括图标大小、字体大小、颜色等属性，支持不同的样式展示。菜单项的功能包括点击事件和状态效果，用户可以通过点击菜单项触发相应操作，菜单项也可以在启用或禁用状态下进行展示。\n整个布局通过 Row 和 Column 布局保证菜单在垂直方向上有序排列，确保界面整洁美观。", "code": "import { SymbolGlyphModifier } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct Index {\n  // 定义菜单项的起始图标样式，使用系统图标 \"ohos_mic\"，字体大小为 24vp\n  @State startIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.ohos_mic')).fontSize('24vp');\n  // 定义菜单项的结束图标样式，使用系统图标 \"ohos_trash\"，字体大小为 24vp\n  @State endIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.ohos_trash')).fontSize('24vp');\n  // 定义菜单项的选中图标样式，使用系统图标 \"checkmark\"，字体大小为 24vp\n  @State selectIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.checkmark')).fontSize('24vp');\n  // 定义菜单项的选中状态，初始值为 true\n  @State select: boolean = true;\n\n  // 定义子菜单的构建器\n  @Builder\n  SubMenu() {\n    Menu() {\n      MenuItem({ content: \"复制\", labelInfo: \"Ctrl+C\" })\n      MenuItem({ content: \"粘贴\", labelInfo: \"Ctrl+V\" })\n    }\n  }\n\n  // 定义主菜单的构建器\n  @Builder\n  MyMenu() {\n    Menu() {\n      // 定义第一个菜单项，包含起始图标和内容\n      MenuItem({ symbolStartIcon: this.startIconModifier, content: \"菜单选项\" })\n      // 定义第二个菜单项，包含起始图标和内容，并设置为禁用状态\n      MenuItem({ symbolStartIcon: this.startIconModifier, content: \"菜单选项\" })\n        .enabled(false)\n      // 定义第三个菜单项，包含起始图标、内容、结束图标和子菜单\n      MenuItem({\n        symbolStartIcon: this.startIconModifier,\n        content: \"菜单选项\",\n        symbolEndIcon: this.endIconModifier,\n        builder: (): void => this.SubMenu()\n      })\n      // 定义菜单项组，包含标题和多个菜单项\n      MenuItemGroup({ header: '小标题' }) {\n        MenuItem({\n          symbolStartIcon: this.startIconModifier,\n          content: \"菜单选项\",\n          symbolEndIcon: this.endIconModifier,\n          builder: (): void => this.SubMenu()\n        })\n        MenuItem({\n          symbolStartIcon: this.startIconModifier,\n          content: \"菜单选项\",\n          symbolEndIcon: this.endIconModifier,\n          builder: (): void => this.SubMenu()\n        })\n      }\n      // 定义最后一个菜单项，包含内容，并设置选中状态和选中图标\n      MenuItem({\n        content: \"菜单选项\",\n      }).selected(this.select).selectIcon(this.selectIconModifier)\n    }\n  }\n\n  // 构建组件的布局\n  build() {\n    Row() {\n      Column() {\n        // 定义文本提示，字体大小为 50vp，字体加粗\n        Text('click to show menu')\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n      }\n      // 绑定菜单到文本提示，点击文本提示时显示菜单\n      .bindMenu(this.MyMenu)\n      .width('100%')\n    }\n    .height('100%')\n  }\n}"}], "Text": [{"description": "该组件通过Column布局实现了一个包含文本和图像的展示界面。布局宽度占据整个屏幕，高度设为100%，内边距为25vp。组件的垂直方向上被分为两个部分，第一个部分包含一个带有边框的文本和图像区域，第二个部分包含一个自定义的菜单区域。\n文本和图像区域通过Column布局实现，宽度为200vp，高度为100vp，边框宽度为1vp，颜色为红色。文本和图像区域内的文本和图像通过Span和ImageSpan组件进行展示，文本内容为\"Hello World\"，图像内容为应用内的图标资源。文本和图像区域支持长按、右键点击和选择操作，分别触发不同的自定义菜单。\n自定义菜单区域通过Builder装饰器定义了三个不同的菜单，分别对应长按图像、右键点击文本和选择混合内容的操作。每个菜单包含一个Column布局，内部嵌套一个Menu组件，Menu组件内包含一个MenuItemGroup组件，MenuItemGroup组件内包含三个MenuItem组件。每个MenuItem组件包含一个图标、内容和点击事件，点击事件触发时关闭当前菜单。\n整个布局通过Column布局保证文本和图像区域在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct TextExample7 {\n  // 创建一个TextController实例，用于控制文本的选择和菜单的显示\n  controller: TextController = new TextController();\n  // 创建一个TextOptions实例，用于配置文本的控制器\n  options: TextOptions = { controller: this.controller };\n\n  build() {\n    Column() {\n      Column() {\n        // 创建一个Text组件，内容为undefined，使用options配置\n        Text(undefined, this.options) {\n          // 创建一个Span组件，内容为\"Hello World\"\n          Span('Hello World')\n          // 创建一个ImageSpan组件，内容为应用内的图标资源\n          ImageSpan($r('app.media.icon'))\n            .width('100px') // 设置图像宽度为100px\n            .height('100px') // 设置图像高度为100px\n            .objectFit(ImageFit.Fill) // 设置图像填充方式为完全填充\n            .verticalAlign(ImageSpanAlignment.CENTER) // 设置图像垂直对齐方式为居中\n        }\n        .copyOption(CopyOptions.InApp) // 设置文本的复制选项为仅在应用内复制\n        .bindSelectionMenu(TextSpanType.IMAGE, this.LongPressImageCustomMenu, TextResponseType.LONG_PRESS, {\n          onDisappear: () => {\n            console.info(`自定义选择菜单关闭时回调`); // 自定义选择菜单关闭时的回调函数\n          },\n          onAppear: () => {\n            console.info(`自定义选择菜单弹出时回调`); // 自定义选择菜单弹出时的回调函数\n          }\n        })\n        .bindSelectionMenu(TextSpanType.TEXT, this.RightClickTextCustomMenu, TextResponseType.RIGHT_CLICK) // 绑定文本的右键点击菜单\n        .bindSelectionMenu(TextSpanType.MIXED, this.SelectMixCustomMenu, TextResponseType.SELECT) // 绑定混合内容的选中菜单\n        .onTextSelectionChange((selectionStart: number, selectionEnd: number) => {\n          console.info(`文本选中区域变化回调, selectionStart: ${selectionStart}, selectionEnd: ${selectionEnd}`); // 文本选中区域变化时的回调函数\n        })\n        .borderWidth(1) // 设置边框宽度为1vp\n        .borderColor(Color.Red) // 设置边框颜色为红色\n        .width(200) // 设置宽度为200vp\n        .height(100) // 设置高度为100vp\n      }\n      .width('100%') // 设置宽度为100%\n      .backgroundColor(Color.White) // 设置背景颜色为白色\n      .alignItems(HorizontalAlign.Start) // 设置对齐方式为左对齐\n      .padding(25) // 设置内边距为25vp\n    }\n    .height('100%') // 设置高度为100%\n  }\n\n  // 定义右键点击文本时的自定义菜单\n  @Builder\n  RightClickTextCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n\n  // 定义长按图像时的自定义菜单\n  @Builder\n  LongPressImageCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n\n  // 定义选择混合内容时的自定义菜单\n  @Builder\n  SelectMixCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n}\n\n// 定义菜单的样式\n@Extend(Menu)\nfunction MenuStyles() {\n  .radius($r('sys.float.ohos_id_corner_radius_card')) // 设置菜单的圆角半径\n  .clip(true) // 设置菜单的裁剪方式为裁剪\n  .backgroundColor('#F0F0F0') // 设置菜单的背景颜色为浅灰色\n}"}], "MenuItem": [{"description": "该组件通过 Flex 布局实现了一个展示菜单（Menu）及其菜单项（MenuItem）的界面。布局宽度占据整个屏幕，高度设为 400vp，内边距为左右 35vp、顶部 35vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一个菜单。每个菜单项以水平布局方式排列，菜单项之间的间距均匀分布，且对齐方式为居中对齐。\n菜单的样式包括背景颜色、边框圆角（或半径）、宽度和高度等属性，支持不同的样式展示。菜单项组之间通过 Flex 组件进行分隔。菜单的功能包括点击事件和状态效果，用户可以通过点击菜单项触发相应操作，菜单项也可以在启用或禁用状态下进行展示。\n整个布局通过 Flex 布局保证菜单项在垂直方向上有序排列，确保界面整洁美观。", "code": "@Entry\n@Component\nstruct MenuExample {\n  @State selected: number = 0; // 用于记录当前选中的菜单项索引\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceBetween }) {\n      Text('Menu').fontSize(20).fontColor(Color.Black).margin({ top: 10, bottom: 10 }) // 标题文本，字体大小为20，颜色为黑色，上下边距为10vp\n\n      Menu() {\n        MenuItemGroup({ header: 'Group1' }) { // 菜单项组1，标题为\"Group1\"\n          MenuItem({ content: 'Item1' }) // 菜单项1，内容为\"Item1\"\n          MenuItem({ content: 'Item2' }) // 菜单项2，内容为\"Item2\"\n        }\n        MenuItemGroup({ header: 'Group2' }) { // 菜单项组2，标题为\"Group2\"\n          MenuItem({ content: 'Item3' }) // 菜单项3，内容为\"Item3\"\n          MenuItem({ content: 'Item4' }) // 菜单项4，内容为\"Item4\"\n        }\n      }\n      .width('100%') // 菜单宽度占据父容器的100%\n      .height(200) // 菜单高度为200vp\n      .backgroundColor(Color.White) // 菜单背景颜色为白色\n      .borderRadius(10) // 菜单边框圆角为10vp\n      .padding(10) // 菜单内边距为10vp\n      .onSelect((value: number) => { // 菜单项选中事件\n        this.selected = value; // 更新选中状态\n        console.log(`Selected: ${value}`); // 打印选中项的索引\n      })\n\n      Text(`Selected: ${this.selected}`).fontSize(16).fontColor(Color.Gray).margin({ top: 20 }) // 显示当前选中的菜单项索引，字体大小为16，颜色为灰色，上边距为20vp\n    }\n    .width('100%') // 整体布局宽度占据父容器的100%\n    .height(400) // 整体布局高度为400vp\n    .padding({ left: 35, right: 35, top: 35 }) // 整体布局内边距为左右35vp、顶部35vp\n    .backgroundColor(Color.LightGray) // 整体布局背景颜色为浅灰色\n  }\n}"}]}}}, {"id": "nyRUtAXNAqkr7VDMDLLdZt", "description": "查询组件文档", "subtasks": [{"id": "BSVX2JA2JnEyAvLggYt22m", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "SY97akY7hab3h5VoAPVZHM", "description": "查询组件Navigation的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置导航视图的宽度为自适应", "设置导航视图的高度占满父容器", "设置导航视图的布局重力为开始", "设置导航视图的高度为特定值", "设置导航视图适应系统窗口"], "n_results": 10, "query_results": {"ids": [["6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "1eca187a-2da9-4650-9980-c09fa3413d68", "6c2afb69-84df-4bcd-b6fa-bf0d0f0b80e0", "68f32735-aa38-44e4-b5ed-12de4265b85e", "cd6d319d-b704-4392-aa5b-68530b99be29", "05292ec7-405d-4035-8561-9ff977601c99", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59"], ["6e0cf3a3-0a2c-4127-a148-7c4718c1325a", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "fca5be72-67e4-4164-9ee0-127ebd14870e", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "1eca187a-2da9-4650-9980-c09fa3413d68", "e6502a23-549c-47c1-bb06-1c1db05011f3", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "68f32735-aa38-44e4-b5ed-12de4265b85e"], ["68f32735-aa38-44e4-b5ed-12de4265b85e", "1eca187a-2da9-4650-9980-c09fa3413d68", "fca5be72-67e4-4164-9ee0-127ebd14870e", "e423ffdc-cf08-41a2-accf-7dd7d33d5253", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "05292ec7-405d-4035-8561-9ff977601c99", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59"], ["c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "1eca187a-2da9-4650-9980-c09fa3413d68", "68f32735-aa38-44e4-b5ed-12de4265b85e", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "af5a5e24-bc3a-46fc-a0bc-6575b7016b40", "05292ec7-405d-4035-8561-9ff977601c99", "b7c6500f-03e0-40f8-bcab-caeedc2c3c76", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "a5c1f777-f813-4f4f-9034-8529cdd680d9"], ["1eca187a-2da9-4650-9980-c09fa3413d68", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "68f32735-aa38-44e4-b5ed-12de4265b85e", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "f148466f-4688-44e8-8318-5c49ae4bab72", "83fb43fb-cb44-4613-9cab-cc99434772d3", "fca5be72-67e4-4164-9ee0-127ebd14870e", "86640315-12f3-41e8-b31e-f5b0ed48355a"]], "distances": [[0.2984747290611267, 0.307411789894104, 0.33414918184280396, 0.3649251461029053, 0.39815568923950195, 0.4151935577392578, 0.41538548469543457, 0.42877644300460815, 0.43240422010421753, 0.43889492750167847], [0.39850378036499023, 0.409862220287323, 0.41241681575775146, 0.41338109970092773, 0.42296546697616577, 0.42371243238449097, 0.4277937412261963, 0.4332271218299866, 0.4351535439491272, 0.4384033679962158], [0.3968707323074341, 0.40000051259994507, 0.40489399433135986, 0.4252341389656067, 0.44036537408828735, 0.4410569667816162, 0.4452371597290039, 0.45386290550231934, 0.4549901485443115, 0.46312862634658813], [0.338834285736084, 0.34280073642730713, 0.3489023447036743, 0.36519140005111694, 0.379169225692749, 0.3812963366508484, 0.3879566788673401, 0.3888925313949585, 0.41533005237579346, 0.42271214723587036], [0.3198047876358032, 0.34200942516326904, 0.360338032245636, 0.3756047487258911, 0.3825976848602295, 0.40543973445892334, 0.4058438539505005, 0.430499792098999, 0.4309040307998657, 0.4333593249320984]], "metadatas": [[{"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "menus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "title", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Navigation", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "title", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "title", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "onNavBarStateChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Navigation", "name": "hideNavBar", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "titleMode", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "menus(value: Array<NavigationMenuItem> | CustomBuilder)\n\n设置页面右上角菜单。不设置时不显示菜单项。使用Array<[NavigationMenuItem](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#navigationmenuitem%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E)> 写法时，竖屏最多支持显示3个图标，横屏最多支持显示5个图标，多余的图标会被放入自动生成的更多图标。\n属性名称：menus\n属性参数：{'value': {\"type\":[\"Array<NavigationMenuItem>\",\"CustomBuilder\"],\"required\":true,\"description\":\"菜单项的内容。\",\"default\":null}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "title(value: ResourceStr | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle, options?: NavigationTitleOptions)\n\n设置页面标题。\n属性名称：title\n属性参数：{'value': {\"type\":[\"ResourceStr\",\"CustomBuilder\",\"NavigationCommonTitle\",\"NavigationCustomTitle\"],\"required\":true,\"description\":\"页面标题，使用NavigationCustomTitle类型设置height高度时，titleMode属性不会生效。字符串超长时，如果不设置副标题，先缩小再换行（2行）最后...截断。如果设置副标题，先缩小最后...截断。\",\"default\":null}, 'options': {\"type\":\"NavigationTitleOptions\",\"required\":false,\"description\":\"标题栏的额外配置选项。\",\"default\":null}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n"], ["设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "title(value: ResourceStr | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle, options?: NavigationTitleOptions)\n\n设置页面标题。\n属性名称：title\n属性参数：{'value': {\"type\":[\"ResourceStr\",\"CustomBuilder\",\"NavigationCommonTitle\",\"NavigationCustomTitle\"],\"required\":true,\"description\":\"页面标题，使用NavigationCustomTitle类型设置height高度时，titleMode属性不会生效。字符串超长时，如果不设置副标题，先缩小再换行（2行）最后...截断。如果设置副标题，先缩小最后...截断。\",\"default\":null}, 'options': {\"type\":\"NavigationTitleOptions\",\"required\":false,\"description\":\"标题栏的额外配置选项。\",\"default\":null}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], ["设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "title(value: ResourceStr | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle, options?: NavigationTitleOptions)\n\n设置页面标题。\n属性名称：title\n属性参数：{'value': {\"type\":[\"ResourceStr\",\"CustomBuilder\",\"NavigationCommonTitle\",\"NavigationCustomTitle\"],\"required\":true,\"description\":\"页面标题，使用NavigationCustomTitle类型设置height高度时，titleMode属性不会生效。字符串超长时，如果不设置副标题，先缩小再换行（2行）最后...截断。如果设置副标题，先缩小最后...截断。\",\"default\":null}, 'options': {\"type\":\"NavigationTitleOptions\",\"required\":false,\"description\":\"标题栏的额外配置选项。\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n"], ["设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "onNavBarStateChange(callback: (isVisible: boolean) => void)\n\n导航栏显示状态切换时触发该回调。\n事件名称：onNavBarStateChange\n事件参数：{'callback': {\"type\":\"function\",\"required\":true,\"description\":\"导航栏显示状态切换时的回调函数。\",\"default\":null}}\n事件返回值：None\n", "设置是否隐藏导航栏。设置为true时，隐藏Navigation的导航栏，包括标题栏、内容区和工具栏。如果此时路由栈中存在NavDestination页面，则直接显示栈顶NavDestination页面，反之显示空白。\n属性名称：hideNavBar\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否隐藏导航栏。\",\"default\":false}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "titleMode(value: NavigationTitleMode)\n\n设置页面标题栏显示模式。\n属性名称：titleMode\n属性参数：{'value': {\"type\":\"NavigationTitleMode\",\"required\":true,\"description\":\"标题栏显示模式。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "GQZW4zoDFhG9yrySLsmQJP", "description": "查询组件Column的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置Column组件的高度占满父容器", "设置Column组件的布局重力为开始", "设置Column组件的子组件排列方式"], "n_results": 10, "query_results": {"ids": [["b28478cc-39e7-47f6-a8d5-1be66cd8fd1b", "d9f81a84-dcc9-42e7-bf00-40f59725f621", "4a6a9493-af1d-4b71-ac93-e005d4b79b23", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "0312e8d6-efb1-4896-8129-462ef1bc3395", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "7af90bc2-8846-435b-a7d0-4afe96092763"], ["d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "0ce4d112-0178-4fff-8256-b148c8642895", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "0312e8d6-efb1-4896-8129-462ef1bc3395", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825"], ["b6443713-fdd1-4b76-b02a-276d24cc6f59", "a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "0312e8d6-efb1-4896-8129-462ef1bc3395", "b28478cc-39e7-47f6-a8d5-1be66cd8fd1b"]], "distances": [[0.35715168714523315, 0.36742162704467773, 0.37052494287490845, 0.3829973340034485, 0.4094008803367615, 0.41031694412231445, 0.4194287657737732, 0.42824387550354004, 0.428996205329895, 0.4367563724517822], [0.38103538751602173, 0.3906211853027344, 0.4162559509277344, 0.41687238216400146, 0.4197658896446228, 0.44172924757003784, 0.445112943649292, 0.4583917260169983, 0.46255815029144287, 0.4697040319442749], [0.3426021933555603, 0.3448042869567871, 0.3708907961845398, 0.3712626099586487, 0.3881285786628723, 0.39318645000457764, 0.41100001335144043, 0.44386857748031616, 0.4440864324569702, 0.4443938732147217]], "metadatas": [[{"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "width", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n"], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n"], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "Wk5ASPpLZr8BVovbjSYpNB", "description": "查询组件Image的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置Image组件的资源引用", "设置Image组件的布局属性"], "n_results": 10, "query_results": {"ids": [["bd88bdf5-c228-4034-af03-225c2d433083", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "e00f8a63-c4a4-425e-817c-3ec42c9e5580", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "521cad3e-49c5-44ec-8d86-57570299ede3", "621abd37-14ff-4471-bd8a-2b44d6483327", "8c7ce776-da25-45a7-aa7d-7568be72f79e", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "3c8c512e-f40e-464b-b4cd-11115bb324aa"], ["f68cc22f-3764-46df-b286-650d3c8c736d", "b93f58c9-bbb2-452a-a412-9b88187fa27e", "888cef60-be06-40bd-8e10-82847d2302e6", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "550eaa20-f59b-42cf-b296-ff4406cffec6", "8af2c1ee-fef6-4514-8cc8-d7f49405a5a3", "517a3eeb-ecc0-4486-a7c9-236edcdffc24", "0012e04e-f69f-4daa-92d2-d3adea5c0173", "e00f8a63-c4a4-425e-817c-3ec42c9e5580", "16d2a454-aec5-4a67-8522-da1b0d6a20ae"]], "distances": [[0.38007569313049316, 0.3910630941390991, 0.392910361289978, 0.41610491275787354, 0.4241597652435303, 0.42905592918395996, 0.4327847957611084, 0.43683701753616333, 0.4376552104949951, 0.43825453519821167], [0.3484039306640625, 0.35844433307647705, 0.3637429475784302, 0.368389368057251, 0.37230384349823, 0.38694751262664795, 0.39829766750335693, 0.40196704864501953, 0.40257495641708374, 0.40288543701171875]], "metadatas": [[{"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "onError", "source": "harmony-component-doc", "type": "event"}], [{"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "height", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "图片加载异常时触发该回调。\n事件名称：onError\n事件参数：{'componentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"组件的宽。单位：像素\",\"default\":null}, 'componentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"组件的高。单位：像素\",\"default\":null}, 'message': {\"type\":\"string\",\"required\":true,\"description\":\"报错信息。\",\"default\":null}}\n事件返回值：None\n"], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "BZKSuXKJAnJ8UvhfffqAR8", "description": "查询组件Text的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置Text组件的文本内容", "设置Text组件的布局属性"], "n_results": 10, "query_results": {"ids": [["6f72f2b5-8af2-4583-9413-44e7d271080c", "08f20e06-6d11-42e4-8ba9-01faac89ff08", "8fa42d3a-996d-4735-93af-846bf32dd907", "9fb81972-af49-45a6-b163-3f019a5c4c58", "04f8490a-5298-4442-92e6-8e46cc0f17ca", "5b01f32f-e789-47af-86a4-df5a864c92c4", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "6be53b16-d33e-4360-a82a-69054e0ff19a", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412"], ["9fb81972-af49-45a6-b163-3f019a5c4c58", "ce0d9d0f-bf44-49f2-96b8-a642cf6e18c0", "6f72f2b5-8af2-4583-9413-44e7d271080c", "11431e7a-21f1-4be2-9d63-6ecd919e4dfa", "588549ec-b8a6-496b-8795-3be82ca87021", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "5b01f32f-e789-47af-86a4-df5a864c92c4", "0269575f-3c3c-4c82-8b9f-643a793563d8", "6be53b16-d33e-4360-a82a-69054e0ff19a", "04f8490a-5298-4442-92e6-8e46cc0f17ca"]], "distances": [[0.36230242252349854, 0.3759392499923706, 0.37646013498306274, 0.37657082080841064, 0.377834677696228, 0.37841397523880005, 0.3842453956604004, 0.3873748779296875, 0.3881046175956726, 0.3895387053489685], [0.3048160672187805, 0.31081002950668335, 0.331506609916687, 0.33384162187576294, 0.36108845472335815, 0.36452996730804443, 0.36993420124053955, 0.3861997127532959, 0.3881224989891052, 0.39286863803863525]], "metadatas": [[{"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置组件是否支持文本可复制粘贴。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"组件是否支持文本可复制粘贴。\",\"default\":\"CopyOptions.None\"}}\n", "设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n"], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "heRJfvDCLNXGTTJBacK3fK", "description": "查询组件Menu的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置Menu组件的资源引用", "设置Menu组件的布局属性"], "n_results": 10, "query_results": {"ids": [["c4245a87-0c91-4a39-b330-95d3c109fcb1", "d0dbb10c-e680-4b83-8600-05a424ca96c4", "a8776456-4361-4ffc-b8fd-279093659f9a", "482818ee-56e1-4c08-8299-de3c30410d98", "afae9320-19f7-4ab4-9f1a-0c332afeb5d0", "239bf101-1ef2-4bc1-a5be-70eaec55d633", "249a4f37-15aa-44eb-95a4-c5ac250f6290", "e89f5e16-fdf0-411b-b502-eaf14a504453", "fca419cd-6f2e-49cb-85ee-1578d3f40762", "3ce095d0-37b0-4db1-9d0a-e6a48a9f3b3b"], ["afae9320-19f7-4ab4-9f1a-0c332afeb5d0", "c4245a87-0c91-4a39-b330-95d3c109fcb1", "a8776456-4361-4ffc-b8fd-279093659f9a", "d0dbb10c-e680-4b83-8600-05a424ca96c4", "482818ee-56e1-4c08-8299-de3c30410d98", "239bf101-1ef2-4bc1-a5be-70eaec55d633", "249a4f37-15aa-44eb-95a4-c5ac250f6290", "fca419cd-6f2e-49cb-85ee-1578d3f40762", "3b96e108-d751-4b6a-9270-e8c95884d4d2", "3ce095d0-37b0-4db1-9d0a-e6a48a9f3b3b"]], "distances": [[0.38474345207214355, 0.3942413926124573, 0.4012942910194397, 0.4202834367752075, 0.4282805323600769, 0.43270671367645264, 0.45493030548095703, 0.4649965763092041, 0.4658116102218628, 0.46786725521087646], [0.31802064180374146, 0.3264697790145874, 0.3286937475204468, 0.3322693109512329, 0.3522697687149048, 0.3534337282180786, 0.3727208375930786, 0.3739398121833801, 0.37859541177749634, 0.418779194355011]], "metadatas": [[{"component_name": "Menu", "name": "subMenuExpandingMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "menuItemGroupDivider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "menuItemDivider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "radius", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Menu", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "subMenuExpandingMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "menuItemGroupDivider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "menuItemDivider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "radius", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置Menu子菜单展开样式。\n属性名称：subMenuExpandingMode\n属性参数：{'mode': {\"type\":\"SubMenuExpandingMode\",\"required\":true,\"description\":\"Menu子菜单展开样式。\",\"default\":null}}\n", "统一设置Menu中所有文本的尺寸。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"Menu中所有文本的尺寸。\",\"default\":null}}\n", "设置menuItemGroup上下分割线的样式, 不设置该属性则默认展示分割线。\n属性名称：menuItemGroupDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItemGroup顶部和底部分割线样式。\",\"default\":null}}\n", "设置menuItem分割线样式, 不设置该属性则不展示分割线。\n属性名称：menuItemDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItem分割线样式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置Menu边框圆角半径。\n属性名称：radius\n属性参数：{'value': {\"type\":[\"Dimension\",\"BorderRadiuses\"],\"required\":true,\"description\":\"Menu边框圆角半径。默认值跟随主题。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n"], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置Menu子菜单展开样式。\n属性名称：subMenuExpandingMode\n属性参数：{'mode': {\"type\":\"SubMenuExpandingMode\",\"required\":true,\"description\":\"Menu子菜单展开样式。\",\"default\":null}}\n", "设置menuItemGroup上下分割线的样式, 不设置该属性则默认展示分割线。\n属性名称：menuItemGroupDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItemGroup顶部和底部分割线样式。\",\"default\":null}}\n", "统一设置Menu中所有文本的尺寸。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"Menu中所有文本的尺寸。\",\"default\":null}}\n", "设置menuItem分割线样式, 不设置该属性则不展示分割线。\n属性名称：menuItemDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItem分割线样式。\",\"default\":null}}\n", "设置Menu边框圆角半径。\n属性名称：radius\n属性参数：{'value': {\"type\":[\"Dimension\",\"BorderRadiuses\"],\"required\":true,\"description\":\"Menu边框圆角半径。默认值跟随主题。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "nNQWxdXzEZmqx4ZSnGmuA5", "description": "查询组件MenuItem的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置MenuItem组件的资源引用", "设置MenuItem组件的布局属性"], "n_results": 10, "query_results": {"ids": [["c3792339-f3fb-485a-bdc9-50908456f38f", "2daa2340-86e2-4344-bd4b-ac48aefdf73d", "7237f5d4-b112-47d9-83f1-09b6ef36a09b", "3f7d3d67-7823-45d6-ab97-159a2257d57f", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "eec447ac-82ea-418a-a010-b73343dcd06d", "433f2c31-c5a8-4413-8636-0b85b68e98d6", "e3fe753f-7c44-41e8-a637-1c22d024a91c", "fa7e40e9-8fd8-4754-909a-2a1f070d8c51", "90737628-a84c-442e-8175-915cffa6e8d5"], ["3f7d3d67-7823-45d6-ab97-159a2257d57f", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "828a80b5-3292-42f4-9557-b8b36e04c419", "fa7e40e9-8fd8-4754-909a-2a1f070d8c51", "2daa2340-86e2-4344-bd4b-ac48aefdf73d", "7237f5d4-b112-47d9-83f1-09b6ef36a09b", "c3792339-f3fb-485a-bdc9-50908456f38f", "8dce8694-d2bd-4e74-90c0-ebccccdba05d", "433f2c31-c5a8-4413-8636-0b85b68e98d6", "d7ea2f11-8d34-4956-834a-0efe957e045c"]], "distances": [[0.42340660095214844, 0.42610710859298706, 0.429476797580719, 0.4385427236557007, 0.44506120681762695, 0.44524067640304565, 0.4619935154914856, 0.4623050093650818, 0.463506817817688, 0.46669435501098633], [0.3274349570274353, 0.35964643955230713, 0.37162232398986816, 0.37273073196411133, 0.38973987102508545, 0.40024399757385254, 0.41400229930877686, 0.41477715969085693, 0.4155821204185486, 0.42256492376327515]], "metadatas": [[{"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n"], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "7h4LZKuEzbggUcq7e6vxTd", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "SSpy3B9zyBXQFrCzR6XKhU", "description": "过滤低于阈值的查询结果: 设置导航视图的宽度为自适应", "subtasks": [], "details": {"query": "设置导航视图的宽度为自适应", "result_ids": ["6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "1eca187a-2da9-4650-9980-c09fa3413d68", "6c2afb69-84df-4bcd-b6fa-bf0d0f0b80e0", "68f32735-aa38-44e4-b5ed-12de4265b85e", "cd6d319d-b704-4392-aa5b-68530b99be29", "05292ec7-405d-4035-8561-9ff977601c99", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59"], "result_documents": ["设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "menus(value: Array<NavigationMenuItem> | CustomBuilder)\n\n设置页面右上角菜单。不设置时不显示菜单项。使用Array<[NavigationMenuItem](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#navigationmenuitem%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E)> 写法时，竖屏最多支持显示3个图标，横屏最多支持显示5个图标，多余的图标会被放入自动生成的更多图标。\n属性名称：menus\n属性参数：{'value': {\"type\":[\"Array<NavigationMenuItem>\",\"CustomBuilder\"],\"required\":true,\"description\":\"菜单项的内容。\",\"default\":null}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "title(value: ResourceStr | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle, options?: NavigationTitleOptions)\n\n设置页面标题。\n属性名称：title\n属性参数：{'value': {\"type\":[\"ResourceStr\",\"CustomBuilder\",\"NavigationCommonTitle\",\"NavigationCustomTitle\"],\"required\":true,\"description\":\"页面标题，使用NavigationCustomTitle类型设置height高度时，titleMode属性不会生效。字符串超长时，如果不设置副标题，先缩小再换行（2行）最后...截断。如果设置副标题，先缩小最后...截断。\",\"default\":null}, 'options': {\"type\":\"NavigationTitleOptions\",\"required\":false,\"description\":\"标题栏的额外配置选项。\",\"default\":null}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "menus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "title", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.2984747290611267, 0.307411789894104, 0.33414918184280396, 0.3649251461029053, 0.39815568923950195, 0.4151935577392578, 0.41538548469543457, 0.42877644300460815, 0.43240422010421753, 0.43889492750167847], "threshold": 0.6, "query_text_results": [["设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, 0.7015252709388733], ["设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, 0.692588210105896], ["设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, 0.665850818157196], ["设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, 0.6350748538970947], ["menus(value: Array<NavigationMenuItem> | CustomBuilder)\n\n设置页面右上角菜单。不设置时不显示菜单项。使用Array<[NavigationMenuItem](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#navigationmenuitem%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E)> 写法时，竖屏最多支持显示3个图标，横屏最多支持显示5个图标，多余的图标会被放入自动生成的更多图标。\n属性名称：menus\n属性参数：{'value': {\"type\":[\"Array<NavigationMenuItem>\",\"CustomBuilder\"],\"required\":true,\"description\":\"菜单项的内容。\",\"default\":null}}\n", {"component_name": "Navigation", "name": "menus", "source": "harmony-component-doc", "type": "attribute"}, 0.601844310760498]]}}, {"id": "PrZz9zemggLFUn4ankPawd", "description": "过滤低于阈值的查询结果: 设置导航视图的高度占满父容器", "subtasks": [], "details": {"query": "设置导航视图的高度占满父容器", "result_ids": ["6e0cf3a3-0a2c-4127-a148-7c4718c1325a", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "fca5be72-67e4-4164-9ee0-127ebd14870e", "48854b8f-3045-4c8f-8280-08a1b8ffc836", "1eca187a-2da9-4650-9980-c09fa3413d68", "e6502a23-549c-47c1-bb06-1c1db05011f3", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "68f32735-aa38-44e4-b5ed-12de4265b85e"], "result_documents": ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.39850378036499023, 0.409862220287323, 0.41241681575775146, 0.41338109970092773, 0.42296546697616577, 0.42371243238449097, 0.4277937412261963, 0.4332271218299866, 0.4351535439491272, 0.4384033679962158], "threshold": 0.6, "query_text_results": [["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "Navigation", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.6014962196350098]]}}, {"id": "e65kgh6pzgvg6MPXcrHFgb", "description": "过滤低于阈值的查询结果: 设置导航视图的布局重力为开始", "subtasks": [], "details": {"query": "设置导航视图的布局重力为开始", "result_ids": ["68f32735-aa38-44e4-b5ed-12de4265b85e", "1eca187a-2da9-4650-9980-c09fa3413d68", "fca5be72-67e4-4164-9ee0-127ebd14870e", "e423ffdc-cf08-41a2-accf-7dd7d33d5253", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "05292ec7-405d-4035-8561-9ff977601c99", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "063e2ce2-15ba-4dd4-b77a-6af1afd92b59"], "result_documents": ["设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "title(value: ResourceStr | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle, options?: NavigationTitleOptions)\n\n设置页面标题。\n属性名称：title\n属性参数：{'value': {\"type\":[\"ResourceStr\",\"CustomBuilder\",\"NavigationCommonTitle\",\"NavigationCustomTitle\"],\"required\":true,\"description\":\"页面标题，使用NavigationCustomTitle类型设置height高度时，titleMode属性不会生效。字符串超长时，如果不设置副标题，先缩小再换行（2行）最后...截断。如果设置副标题，先缩小最后...截断。\",\"default\":null}, 'options': {\"type\":\"NavigationTitleOptions\",\"required\":false,\"description\":\"标题栏的额外配置选项。\",\"default\":null}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "title", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3968707323074341, 0.40000051259994507, 0.40489399433135986, 0.4252341389656067, 0.44036537408828735, 0.4410569667816162, 0.4452371597290039, 0.45386290550231934, 0.4549901485443115, 0.46312862634658813], "threshold": 0.6, "query_text_results": [["设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, 0.6031292676925659]]}}, {"id": "cADeAt4wghM2PgE6Aw85oG", "description": "过滤低于阈值的查询结果: 设置导航视图的高度为特定值", "subtasks": [], "details": {"query": "设置导航视图的高度为特定值", "result_ids": ["c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "1eca187a-2da9-4650-9980-c09fa3413d68", "68f32735-aa38-44e4-b5ed-12de4265b85e", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "af5a5e24-bc3a-46fc-a0bc-6575b7016b40", "05292ec7-405d-4035-8561-9ff977601c99", "b7c6500f-03e0-40f8-bcab-caeedc2c3c76", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "a5c1f777-f813-4f4f-9034-8529cdd680d9"], "result_documents": ["设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "title(value: ResourceStr | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle, options?: NavigationTitleOptions)\n\n设置页面标题。\n属性名称：title\n属性参数：{'value': {\"type\":[\"ResourceStr\",\"CustomBuilder\",\"NavigationCommonTitle\",\"NavigationCustomTitle\"],\"required\":true,\"description\":\"页面标题，使用NavigationCustomTitle类型设置height高度时，titleMode属性不会生效。字符串超长时，如果不设置副标题，先缩小再换行（2行）最后...截断。如果设置副标题，先缩小最后...截断。\",\"default\":null}, 'options': {\"type\":\"NavigationTitleOptions\",\"required\":false,\"description\":\"标题栏的额外配置选项。\",\"default\":null}}\n", "指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "title", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.338834285736084, 0.34280073642730713, 0.3489023447036743, 0.36519140005111694, 0.379169225692749, 0.3812963366508484, 0.3879566788673401, 0.3888925313949585, 0.41533005237579346, 0.42271214723587036], "threshold": 0.6, "query_text_results": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "Navigation", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6187036633491516], ["title(value: ResourceStr | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle, options?: NavigationTitleOptions)\n\n设置页面标题。\n属性名称：title\n属性参数：{'value': {\"type\":[\"ResourceStr\",\"CustomBuilder\",\"NavigationCommonTitle\",\"NavigationCustomTitle\"],\"required\":true,\"description\":\"页面标题，使用NavigationCustomTitle类型设置height高度时，titleMode属性不会生效。字符串超长时，如果不设置副标题，先缩小再换行（2行）最后...截断。如果设置副标题，先缩小最后...截断。\",\"default\":null}, 'options': {\"type\":\"NavigationTitleOptions\",\"required\":false,\"description\":\"标题栏的额外配置选项。\",\"default\":null}}\n", {"component_name": "Navigation", "name": "title", "source": "harmony-component-doc", "type": "attribute"}, 0.6120433211326599], ["指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n", {"component_name": "Navigation", "name": "aspectRatio", "source": "harmony-component-doc", "type": "attribute"}, 0.6111074686050415]]}}, {"id": "T5Gv5gqN6oQrCzSG2tDuU3", "description": "过滤低于阈值的查询结果: 设置导航视图适应系统窗口", "subtasks": [], "details": {"query": "设置导航视图适应系统窗口", "result_ids": ["1eca187a-2da9-4650-9980-c09fa3413d68", "744e4a5f-d4f8-4aab-a58a-b9c7361a61d9", "68f32735-aa38-44e4-b5ed-12de4265b85e", "c82a4aa7-ebbb-4e55-a77f-e9a4a451324f", "6b1b952e-d79a-4e7a-af69-bbf83305a5e8", "9f7a47f7-fa46-4cdb-9f6c-6d17013166eb", "f148466f-4688-44e8-8318-5c49ae4bab72", "83fb43fb-cb44-4613-9cab-cc99434772d3", "fca5be72-67e4-4164-9ee0-127ebd14870e", "86640315-12f3-41e8-b31e-f5b0ed48355a"], "result_documents": ["设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\n", "当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n", "设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n", "设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n", "设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n", "onNavBarStateChange(callback: (isVisible: boolean) => void)\n\n导航栏显示状态切换时触发该回调。\n事件名称：onNavBarStateChange\n事件参数：{'callback': {\"type\":\"function\",\"required\":true,\"description\":\"导航栏显示状态切换时的回调函数。\",\"default\":null}}\n事件返回值：None\n", "设置是否隐藏导航栏。设置为true时，隐藏Navigation的导航栏，包括标题栏、内容区和工具栏。如果此时路由栈中存在NavDestination页面，则直接显示栈顶NavDestination页面，反之显示空白。\n属性名称：hideNavBar\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否隐藏导航栏。\",\"default\":false}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "titleMode(value: NavigationTitleMode)\n\n设置页面标题栏显示模式。\n属性名称：titleMode\n属性参数：{'value': {\"type\":\"NavigationTitleMode\",\"required\":true,\"description\":\"标题栏显示模式。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Navigation", "name": "mode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarPosition", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "navBarWidthRange", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "minContentWidth", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "onNavBarStateChange", "source": "harmony-component-doc", "type": "event"}, {"component_name": "Navigation", "name": "hideNavBar", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Navigation", "name": "titleMode", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3198047876358032, 0.34200942516326904, 0.360338032245636, 0.3756047487258911, 0.3825976848602295, 0.40543973445892334, 0.4058438539505005, 0.430499792098999, 0.4309040307998657, 0.4333593249320984], "threshold": 0.6, "query_text_results": [["当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", {"component_name": "Navigation", "name": "systemBarStyle", "source": "harmony-component-doc", "type": "attribute"}, 0.657990574836731]]}}], "details": null}, {"id": "EonGraPBUMoZ42C8S5KW6H", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "AB6oQYTEuipJcWTVLHsNoE", "description": "过滤低于阈值的查询结果: 设置Column组件的高度占满父容器", "subtasks": [], "details": {"query": "设置Column组件的高度占满父容器", "result_ids": ["b28478cc-39e7-47f6-a8d5-1be66cd8fd1b", "d9f81a84-dcc9-42e7-bf00-40f59725f621", "4a6a9493-af1d-4b71-ac93-e005d4b79b23", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "0312e8d6-efb1-4896-8129-462ef1bc3395", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "7af90bc2-8846-435b-a7d0-4afe96092763"], "result_documents": ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "width", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.35715168714523315, 0.36742162704467773, 0.37052494287490845, 0.3829973340034485, 0.4094008803367615, 0.41031694412231445, 0.4194287657737732, 0.42824387550354004, 0.428996205329895, 0.4367563724517822], "threshold": 0.6, "query_text_results": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6428483128547668], ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, 0.6325783729553223], ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.6294750571250916], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6170026659965515]]}}, {"id": "V3zF7Zn4Z8tmNfF2WJ5UHM", "description": "过滤低于阈值的查询结果: 设置Column组件的布局重力为开始", "subtasks": [], "details": {"query": "设置Column组件的布局重力为开始", "result_ids": ["d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "0ce4d112-0178-4fff-8256-b148c8642895", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "0312e8d6-efb1-4896-8129-462ef1bc3395", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825"], "result_documents": ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.38103538751602173, 0.3906211853027344, 0.4162559509277344, 0.41687238216400146, 0.4197658896446228, 0.44172924757003784, 0.445112943649292, 0.4583917260169983, 0.46255815029144287, 0.4697040319442749], "threshold": 0.6, "query_text_results": [["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6189646124839783], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6093788146972656]]}}, {"id": "NxAnTeweoEvzYAvLhVU9T5", "description": "过滤低于阈值的查询结果: 设置Column组件的子组件排列方式", "subtasks": [], "details": {"query": "设置Column组件的子组件排列方式", "result_ids": ["b6443713-fdd1-4b76-b02a-276d24cc6f59", "a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "0312e8d6-efb1-4896-8129-462ef1bc3395", "b28478cc-39e7-47f6-a8d5-1be66cd8fd1b"], "result_documents": ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3426021933555603, 0.3448042869567871, 0.3708907961845398, 0.3712626099586487, 0.3881285786628723, 0.39318645000457764, 0.41100001335144043, 0.44386857748031616, 0.4440864324569702, 0.4443938732147217], "threshold": 0.6, "query_text_results": [["设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, 0.6551957130432129], ["设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, 0.6291092038154602], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6287373900413513], ["子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, 0.6118714213371277]]}}], "details": null}, {"id": "AWFz2BHV9b7ZxFAwzHxsKN", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "fDxuEMbr49jTwaFWLwfFsU", "description": "过滤低于阈值的查询结果: 设置Image组件的资源引用", "subtasks": [], "details": {"query": "设置Image组件的资源引用", "result_ids": ["bd88bdf5-c228-4034-af03-225c2d433083", "7bbf55ff-10c4-40df-bb2c-5e7d861c54ac", "e00f8a63-c4a4-425e-817c-3ec42c9e5580", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "521cad3e-49c5-44ec-8d86-57570299ede3", "621abd37-14ff-4471-bd8a-2b44d6483327", "8c7ce776-da25-45a7-aa7d-7568be72f79e", "6a247fb0-b0a9-45b9-b1b0-a80ccd987d23", "0296daf5-4a2c-4dd8-ab7b-b3c351dd4ce3", "3c8c512e-f40e-464b-b4cd-11115bb324aa"], "result_documents": ["设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", "设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "设置图片的渲染模式。svg类型图源不支持该属性。\n属性名称：renderMode\n属性参数：{'value': {\"type\":\"ImageRenderMode\",\"required\":true,\"description\":\"图片的渲染模式为原色或黑白。\",\"default\":\"ImageRenderMode.Original\"}}\n", "设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。\n属性名称：matchTextDirection\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片是否跟随系统语言方向。\",\"default\":false}}\n", "设置是否同步加载图片。建议加载尺寸较小的本地图片时将syncLoad设为true，因为耗时较短，在主线程上执行即可。\n属性名称：syncLoad\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。\",\"default\":false}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置图片的显示尺寸是否跟随图源尺寸。图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。\n属性名称：fitOriginalSize\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"图片的显示尺寸是否跟随图源尺寸\",\"default\":false}}\n", "图片加载异常时触发该回调。\n事件名称：onError\n事件参数：{'componentWidth': {\"type\":\"number\",\"required\":true,\"description\":\"组件的宽。单位：像素\",\"default\":null}, 'componentHeight': {\"type\":\"number\",\"required\":true,\"description\":\"组件的高。单位：像素\",\"default\":null}, 'message': {\"type\":\"string\",\"required\":true,\"description\":\"报错信息。\",\"default\":null}}\n事件返回值：None\n"], "result_metadatas": [{"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "renderMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "matchTextDirection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "syncLoad", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "fitOriginalSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "onError", "source": "harmony-component-doc", "type": "event"}], "result_distances": [0.38007569313049316, 0.3910630941390991, 0.392910361289978, 0.41610491275787354, 0.4241597652435303, 0.42905592918395996, 0.4327847957611084, 0.43683701753616333, 0.4376552104949951, 0.43825453519821167], "threshold": 0.6, "query_text_results": [["设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n", {"component_name": "Image", "name": "sourceSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6199243068695068], ["设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n", {"component_name": "Image", "name": "objectRepeat", "source": "harmony-component-doc", "type": "attribute"}, 0.6089369058609009], ["设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, 0.607089638710022]]}}, {"id": "SHxQ6xmYyMGagv6sBNYqAT", "description": "过滤低于阈值的查询结果: 设置Image组件的布局属性", "subtasks": [], "details": {"query": "设置Image组件的布局属性", "result_ids": ["f68cc22f-3764-46df-b286-650d3c8c736d", "b93f58c9-bbb2-452a-a412-9b88187fa27e", "888cef60-be06-40bd-8e10-82847d2302e6", "4af9acf0-7a3c-44d4-82d9-2828212cca26", "550eaa20-f59b-42cf-b296-ff4406cffec6", "8af2c1ee-fef6-4514-8cc8-d7f49405a5a3", "517a3eeb-ecc0-4486-a7c9-236edcdffc24", "0012e04e-f69f-4daa-92d2-d3adea5c0173", "e00f8a63-c4a4-425e-817c-3ec42c9e5580", "16d2a454-aec5-4a67-8522-da1b0d6a20ae"], "result_documents": ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "alt", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Image", "name": "height", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3484039306640625, 0.35844433307647705, 0.3637429475784302, 0.368389368057251, 0.37230384349823, 0.38694751262664795, 0.39829766750335693, 0.40196704864501953, 0.40257495641708374, 0.40288543701171875], "threshold": 0.6, "query_text_results": [["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Image", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6515960693359375], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "Image", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.641555666923523], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Image", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6362570524215698], ["设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n", {"component_name": "Image", "name": "objectFit", "source": "harmony-component-doc", "type": "attribute"}, 0.631610631942749], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Image", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.62769615650177], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "Image", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.613052487373352], ["绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", {"component_name": "Image", "name": "position", "source": "harmony-component-doc", "type": "attribute"}, 0.6017023324966431]]}}], "details": null}, {"id": "ZDnPE6SDwvDdgv5VLo4xTW", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "8wiLECTEwwF4SBiWUL3GwS", "description": "过滤低于阈值的查询结果: 设置Text组件的文本内容", "subtasks": [], "details": {"query": "设置Text组件的文本内容", "result_ids": ["6f72f2b5-8af2-4583-9413-44e7d271080c", "08f20e06-6d11-42e4-8ba9-01faac89ff08", "8fa42d3a-996d-4735-93af-846bf32dd907", "9fb81972-af49-45a6-b163-3f019a5c4c58", "04f8490a-5298-4442-92e6-8e46cc0f17ca", "5b01f32f-e789-47af-86a4-df5a864c92c4", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "4f7dd024-b71b-4c3d-88a7-e2a6339c8e5c", "6be53b16-d33e-4360-a82a-69054e0ff19a", "2118e3cb-ff25-44e4-8f0b-e51f59a2c412"], "result_documents": ["设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置组件是否支持文本可复制粘贴。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"组件是否支持文本可复制粘贴。\",\"default\":\"CopyOptions.None\"}}\n", "设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.36230242252349854, 0.3759392499923706, 0.37646013498306274, 0.37657082080841064, 0.377834677696228, 0.37841397523880005, 0.3842453956604004, 0.3873748779296875, 0.3881046175956726, 0.3895387053489685], "threshold": 0.6, "query_text_results": [["设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, 0.6376975774765015], ["设置组件是否支持文本可复制粘贴。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"组件是否支持文本可复制粘贴。\",\"default\":\"CopyOptions.None\"}}\n", {"component_name": "Text", "name": "copyOption", "source": "harmony-component-doc", "type": "attribute"}, 0.6240607500076294], ["设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n", {"component_name": "Text", "name": "dataDetectorConfig", "source": "harmony-component-doc", "type": "attribute"}, 0.6235398650169373], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6234291791915894], ["设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n", {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}, 0.622165322303772], ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, 0.6215860247612], ["设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, 0.6157546043395996], ["设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n", {"component_name": "Text", "name": "enableDataDetector", "source": "harmony-component-doc", "type": "attribute"}, 0.6126251220703125], ["设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, 0.6118953824043274], ["设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", {"component_name": "Text", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, 0.6104612946510315]]}}, {"id": "du5t3UBCRGcCnXedWkVjDq", "description": "过滤低于阈值的查询结果: 设置Text组件的布局属性", "subtasks": [], "details": {"query": "设置Text组件的布局属性", "result_ids": ["9fb81972-af49-45a6-b163-3f019a5c4c58", "ce0d9d0f-bf44-49f2-96b8-a642cf6e18c0", "6f72f2b5-8af2-4583-9413-44e7d271080c", "11431e7a-21f1-4be2-9d63-6ecd919e4dfa", "588549ec-b8a6-496b-8795-3be82ca87021", "5c4c808a-59df-40bd-aa6e-4830f51b5fe4", "5b01f32f-e789-47af-86a4-df5a864c92c4", "0269575f-3c3c-4c82-8b9f-643a793563d8", "6be53b16-d33e-4360-a82a-69054e0ff19a", "04f8490a-5298-4442-92e6-8e46cc0f17ca"], "result_documents": ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n", "设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n"], "result_metadatas": [{"component_name": "Text", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "selection", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "lineSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Text", "name": "textIndent", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3048160672187805, 0.31081002950668335, 0.331506609916687, 0.33384162187576294, 0.36108845472335815, 0.36452996730804443, 0.36993420124053955, 0.3861997127532959, 0.3881224989891052, 0.39286863803863525], "threshold": 0.6, "query_text_results": [["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Text", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6891899704933167], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "Text", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6661583781242371], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Text", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6389115452766418], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "Text", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.6138002872467041]]}}], "details": null}, {"id": "mhzTWHEweoSPzDWw4ZnP2i", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "RpMM5xRBU7ATHA5XoHEZoZ", "description": "过滤低于阈值的查询结果: 设置Menu组件的资源引用", "subtasks": [], "details": {"query": "设置Menu组件的资源引用", "result_ids": ["c4245a87-0c91-4a39-b330-95d3c109fcb1", "d0dbb10c-e680-4b83-8600-05a424ca96c4", "a8776456-4361-4ffc-b8fd-279093659f9a", "482818ee-56e1-4c08-8299-de3c30410d98", "afae9320-19f7-4ab4-9f1a-0c332afeb5d0", "239bf101-1ef2-4bc1-a5be-70eaec55d633", "249a4f37-15aa-44eb-95a4-c5ac250f6290", "e89f5e16-fdf0-411b-b502-eaf14a504453", "fca419cd-6f2e-49cb-85ee-1578d3f40762", "3ce095d0-37b0-4db1-9d0a-e6a48a9f3b3b"], "result_documents": ["设置Menu子菜单展开样式。\n属性名称：subMenuExpandingMode\n属性参数：{'mode': {\"type\":\"SubMenuExpandingMode\",\"required\":true,\"description\":\"Menu子菜单展开样式。\",\"default\":null}}\n", "统一设置Menu中所有文本的尺寸。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"Menu中所有文本的尺寸。\",\"default\":null}}\n", "设置menuItemGroup上下分割线的样式, 不设置该属性则默认展示分割线。\n属性名称：menuItemGroupDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItemGroup顶部和底部分割线样式。\",\"default\":null}}\n", "设置menuItem分割线样式, 不设置该属性则不展示分割线。\n属性名称：menuItemDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItem分割线样式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置Menu边框圆角半径。\n属性名称：radius\n属性参数：{'value': {\"type\":[\"Dimension\",\"BorderRadiuses\"],\"required\":true,\"description\":\"Menu边框圆角半径。默认值跟随主题。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n"], "result_metadatas": [{"component_name": "Menu", "name": "subMenuExpandingMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "menuItemGroupDivider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "menuItemDivider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "radius", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.38474345207214355, 0.3942413926124573, 0.4012942910194397, 0.4202834367752075, 0.4282805323600769, 0.43270671367645264, 0.45493030548095703, 0.4649965763092041, 0.4658116102218628, 0.46786725521087646], "threshold": 0.6, "query_text_results": [["设置Menu子菜单展开样式。\n属性名称：subMenuExpandingMode\n属性参数：{'mode': {\"type\":\"SubMenuExpandingMode\",\"required\":true,\"description\":\"Menu子菜单展开样式。\",\"default\":null}}\n", {"component_name": "Menu", "name": "subMenuExpandingMode", "source": "harmony-component-doc", "type": "attribute"}, 0.6152565479278564], ["统一设置Menu中所有文本的尺寸。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"Menu中所有文本的尺寸。\",\"default\":null}}\n", {"component_name": "Menu", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, 0.6057586073875427]]}}, {"id": "7VdmHDk8DEvYRnkoqyrs73", "description": "过滤低于阈值的查询结果: 设置Menu组件的布局属性", "subtasks": [], "details": {"query": "设置Menu组件的布局属性", "result_ids": ["afae9320-19f7-4ab4-9f1a-0c332afeb5d0", "c4245a87-0c91-4a39-b330-95d3c109fcb1", "a8776456-4361-4ffc-b8fd-279093659f9a", "d0dbb10c-e680-4b83-8600-05a424ca96c4", "482818ee-56e1-4c08-8299-de3c30410d98", "239bf101-1ef2-4bc1-a5be-70eaec55d633", "249a4f37-15aa-44eb-95a4-c5ac250f6290", "fca419cd-6f2e-49cb-85ee-1578d3f40762", "3b96e108-d751-4b6a-9270-e8c95884d4d2", "3ce095d0-37b0-4db1-9d0a-e6a48a9f3b3b"], "result_documents": ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置Menu子菜单展开样式。\n属性名称：subMenuExpandingMode\n属性参数：{'mode': {\"type\":\"SubMenuExpandingMode\",\"required\":true,\"description\":\"Menu子菜单展开样式。\",\"default\":null}}\n", "设置menuItemGroup上下分割线的样式, 不设置该属性则默认展示分割线。\n属性名称：menuItemGroupDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItemGroup顶部和底部分割线样式。\",\"default\":null}}\n", "统一设置Menu中所有文本的尺寸。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"Menu中所有文本的尺寸。\",\"default\":null}}\n", "设置menuItem分割线样式, 不设置该属性则不展示分割线。\n属性名称：menuItemDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItem分割线样式。\",\"default\":null}}\n", "设置Menu边框圆角半径。\n属性名称：radius\n属性参数：{'value': {\"type\":[\"Dimension\",\"BorderRadiuses\"],\"required\":true,\"description\":\"Menu边框圆角半径。默认值跟随主题。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n"], "result_metadatas": [{"component_name": "Menu", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "subMenuExpandingMode", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "menuItemGroupDivider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "font", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "menuItemDivider", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "radius", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Menu", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.31802064180374146, 0.3264697790145874, 0.3286937475204468, 0.3322693109512329, 0.3522697687149048, 0.3534337282180786, 0.3727208375930786, 0.3739398121833801, 0.37859541177749634, 0.418779194355011], "threshold": 0.6, "query_text_results": [["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Menu", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6819793581962585], ["设置menuItemGroup上下分割线的样式, 不设置该属性则默认展示分割线。\n属性名称：menuItemGroupDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItemGroup顶部和底部分割线样式。\",\"default\":null}}\n", {"component_name": "Menu", "name": "menuItemGroupDivider", "source": "harmony-component-doc", "type": "attribute"}, 0.6713062524795532], ["设置menuItem分割线样式, 不设置该属性则不展示分割线。\n属性名称：menuItemDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItem分割线样式。\",\"default\":null}}\n", {"component_name": "Menu", "name": "menuItemDivider", "source": "harmony-component-doc", "type": "attribute"}, 0.6477302312850952], ["设置Menu边框圆角半径。\n属性名称：radius\n属性参数：{'value': {\"type\":[\"Dimension\",\"BorderRadiuses\"],\"required\":true,\"description\":\"Menu边框圆角半径。默认值跟随主题。\",\"default\":null}}\n", {"component_name": "Menu", "name": "radius", "source": "harmony-component-doc", "type": "attribute"}, 0.6465662717819214], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Menu", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6272791624069214], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "Menu", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6260601878166199], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Menu", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6214045882225037]]}}], "details": null}, {"id": "HDsgftT7aKsLAu36VBVUZj", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "5QTVJ2pACqYuNz7gpJCvYZ", "description": "过滤低于阈值的查询结果: 设置MenuItem组件的资源引用", "subtasks": [], "details": {"query": "设置MenuItem组件的资源引用", "result_ids": ["c3792339-f3fb-485a-bdc9-50908456f38f", "2daa2340-86e2-4344-bd4b-ac48aefdf73d", "7237f5d4-b112-47d9-83f1-09b6ef36a09b", "3f7d3d67-7823-45d6-ab97-159a2257d57f", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "eec447ac-82ea-418a-a010-b73343dcd06d", "433f2c31-c5a8-4413-8636-0b85b68e98d6", "e3fe753f-7c44-41e8-a637-1c22d024a91c", "fa7e40e9-8fd8-4754-909a-2a1f070d8c51", "90737628-a84c-442e-8175-915cffa6e8d5"], "result_documents": ["设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置菜单项中内容信息的字体颜色。\n属性名称：contentFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中内容信息的字体颜色。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置菜单项中标签信息的字体颜色。\n属性名称：labelFontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"菜单项中标签信息的字体颜色。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n"], "result_metadatas": [{"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "labelFontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.42340660095214844, 0.42610710859298706, 0.429476797580719, 0.4385427236557007, 0.44506120681762695, 0.44524067640304565, 0.4619935154914856, 0.4623050093650818, 0.463506817817688, 0.46669435501098633], "threshold": 0.6, "query_text_results": []}}, {"id": "66GRERi7Hf9pCKrS4vqxZP", "description": "过滤低于阈值的查询结果: 设置MenuItem组件的布局属性", "subtasks": [], "details": {"query": "设置MenuItem组件的布局属性", "result_ids": ["3f7d3d67-7823-45d6-ab97-159a2257d57f", "3a938245-75c1-4ab7-ac46-7263bb6a9bbd", "828a80b5-3292-42f4-9557-b8b36e04c419", "fa7e40e9-8fd8-4754-909a-2a1f070d8c51", "2daa2340-86e2-4344-bd4b-ac48aefdf73d", "7237f5d4-b112-47d9-83f1-09b6ef36a09b", "c3792339-f3fb-485a-bdc9-50908456f38f", "8dce8694-d2bd-4e74-90c0-ebccccdba05d", "433f2c31-c5a8-4413-8636-0b85b68e98d6", "d7ea2f11-8d34-4956-834a-0efe957e045c"], "result_documents": ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", "设置菜单项中内容信息的字体样式。\n属性名称：contentFont\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"菜单项中内容信息的字体样式。\",\"default\":null}}\n", "设置当菜单项被选中时，是否显示被选中的图标。\n属性名称：selectIcon\n属性参数：{'value': {\"type\":[\"boolean\",\"ResourceStr\",\"SymbolGlyphModifier\"],\"required\":true,\"description\":\"菜单项被选中时，是否显示被选中的图标。\",\"default\":false}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置子元素在位置定位时的锚点。\n属性名称：markAnchor\n属性参数：{'value': {\"type\":[\"Position\",\"LocalizedPosition\"],\"required\":true,\"description\":\"设置子元素在位置定位时的锚点，从position或offset的位置上，进一步偏移。设置.position({x: value1, y: value2}).markAnchor({x: value3, y: value4})，效果等于设置.position({x: value1 - value3, y: value2 - value4})，offset同理。单独使用markAnchor，设置.markAnchor({x: value1, y: value2})，效果等于设置.offset({x: -value1, y: -value2})。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "contentFont", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "selectIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "MenuItem", "name": "markAnchor", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3274349570274353, 0.35964643955230713, 0.37162232398986816, 0.37273073196411133, 0.38973987102508545, 0.40024399757385254, 0.41400229930877686, 0.41477715969085693, 0.4155821204185486, 0.42256492376327515], "threshold": 0.6, "query_text_results": [["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "MenuItem", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6725650429725647], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "MenuItem", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6403535604476929], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "MenuItem", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6283776760101318], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "MenuItem", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6272692680358887], ["设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n", {"component_name": "MenuItem", "name": "selected", "source": "harmony-component-doc", "type": "attribute"}, 0.6102601289749146]]}}], "details": null}], "details": null}, {"id": "gtevEKWvmicmeebU69f7dv", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# Navigation\n接口描述：Navigation(pathInfos: NavPathStack)\n\n绑定路由栈到Navigation组件。\n接口参数：{'pathInfos': {\"type\":\"NavPathStack\",\"required\":true,\"description\":\"Navigation路由栈，允许被继承12+。开发者可以在派生类中新增属性方法，也可以重写基类NavPathStack的方法。派生类对象可以替代基类NavPathStack对象使用。使用示例参见[示例10](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#%E7%A4%BA%E4%BE%8B10)。\",\"default\":null}}\n设置导航栏最小和最大宽度（双栏模式下生效）。\n属性名称：navBarWidthRange\n属性参数：{'value': {\"type\":[\"Dimension\",\"Dimension\"],\"required\":true,\"description\":\"导航栏最小和最大宽度。\",\"default\":[240,\"组件宽度的40%\"]}}\n设置导航栏宽度。仅在Navigation组件分栏时生效。\n属性名称：navBarWidth\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"导航栏宽度。\",\"default\":240}}\n设置导航栏内容区最小宽度（双栏模式下生效）。\n属性名称：minContentWidth\n属性参数：{'value': {\"type\":\"Dimension\",\"required\":true,\"description\":\"导航栏内容区最小宽度。\",\"default\":360}}\n设置导航栏的显示模式。支持Stack、Split与Auto模式。\n属性名称：mode\n属性参数：{'value': {\"type\":\"NavigationMode\",\"required\":true,\"description\":\"导航栏的显示模式。\",\"default\":\"NavigationMode.Auto\"}}\nmenus(value: Array<NavigationMenuItem> | CustomBuilder)\n\n设置页面右上角菜单。不设置时不显示菜单项。使用Array<[NavigationMenuItem](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navigation-V5#navigationmenuitem%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E)> 写法时，竖屏最多支持显示3个图标，横屏最多支持显示5个图标，多余的图标会被放入自动生成的更多图标。\n属性名称：menus\n属性参数：{'value': {\"type\":[\"Array<NavigationMenuItem>\",\"CustomBuilder\"],\"required\":true,\"description\":\"菜单项的内容。\",\"default\":null}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n设置导航栏位置。仅在Navigation组件分栏时生效。\n属性名称：navBarPosition\n属性参数：{'value': {\"type\":\"NavBarPosition\",\"required\":true,\"description\":\"导航栏位置。\",\"default\":null}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\ntitle(value: ResourceStr | CustomBuilder | NavigationCommonTitle | NavigationCustomTitle, options?: NavigationTitleOptions)\n\n设置页面标题。\n属性名称：title\n属性参数：{'value': {\"type\":[\"ResourceStr\",\"CustomBuilder\",\"NavigationCommonTitle\",\"NavigationCustomTitle\"],\"required\":true,\"description\":\"页面标题，使用NavigationCustomTitle类型设置height高度时，titleMode属性不会生效。字符串超长时，如果不设置副标题，先缩小再换行（2行）最后...截断。如果设置副标题，先缩小最后...截断。\",\"default\":null}, 'options': {\"type\":\"NavigationTitleOptions\",\"required\":false,\"description\":\"标题栏的额外配置选项。\",\"default\":null}}\n指定当前组件的宽高比。\n属性名称：aspectRatio\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"指定当前组件的宽高比，aspectRatio = width/height。API version 9及以前，默认值为：1.0。API version 10：无默认值。该属性在不设置值或者设置非法值时不生效。例如，Row只设置宽度且没有子组件，aspectRatio不设置值或者设置成负数时，此时Row高度为0。\",\"default\":null}}\n当Navigation中显示Navigation首页时，设置对应系统状态栏的样式。\n属性名称：systemBarStyle\n属性参数：{'style': {\"type\":\"Optional<SystemBarStyle>\",\"required\":true,\"description\":\"系统状态栏的样式。\",\"default\":null}}\n", "# Column\n接口描述：Column(value?: {space?: string | number})\n接口参数：{'space': {\"type\":[\"string\",\"number\"],\"required\":false,\"description\":\"纵向布局元素垂直方向间距。从API version 9开始，space为负数或者justifyContent设置为FlexAlign.SpaceBetween、FlexAlign.SpaceAround、FlexAlign.SpaceEvenly时不生效。\",\"default\":0}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "# Image\n接口描述：通过图片数据源获取图片，用于后续渲染展示。\n接口参数：{'src': {\"type\":[\"PixelMap\",\"ResourceStr\",\"DrawableDescriptor\"],\"required\":true,\"description\":\"图片的数据源，支持本地图片和网络图片，引用方式请参考[加载图片资源](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-graphics-display-V5#%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90)。\",\"default\":null}}\n\n接口描述：通过图片数据源获取图片，用于后续渲染展示。\n接口参数：{'src': {\"type\":[\"PixelMap\",\"ResourceStr\",\"DrawableDescriptor\"],\"required\":true,\"description\":\"图片的数据源，支持本地图片和网络图片，引用方式请参考[加载图片资源](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-graphics-display-V5#%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90)。\",\"default\":null}, 'imageAIOptions': {\"type\":\"ImageAIOptions\",\"required\":true,\"description\":\"给组件设置一个AI分析选项，通过此项可配置分析类型或绑定一个分析控制器。\",\"default\":null}}\n设置图片解码尺寸。仅在目标尺寸小于图源尺寸时生效。svg类型图源和PixelMap资源不支持该属性。\n属性名称：sourceSize\n属性参数：{'value': {\"type\":{\"width\":\"number\",\"height\":\"number\"},\"required\":true,\"description\":\"图片解码尺寸，降低图片的分辨率，常用于需要让图片显示尺寸比组件尺寸更小的场景。和ImageFit.None配合使用时可在组件内显示小图。\",\"default\":null}}\n设置图片的重复样式，从中心点向两边重复，剩余空间不足放下一张图片时会截断。svg类型图源不支持该属性。\n属性名称：objectRepeat\n属性参数：{'value': {\"type\":\"ImageRepeat\",\"required\":true,\"description\":\"图片的重复样式。\",\"default\":\"ImageRepeat.NoRepeat\"}}\n设置图片加载时显示的占位图。\n属性名称：alt\n属性参数：{'value': {\"type\":[\"string\",\"Resource\",\"PixelMap\"],\"required\":true,\"description\":\"加载时显示的占位图，支持本地图片（png、jpg、bmp、svg、gif和heif类型）,支持PixelMap类型图片，不支持网络图片。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n设置图片的填充效果。\n属性名称：objectFit\n属性参数：{'value': {\"type\":\"ImageFit\",\"required\":true,\"description\":\"图片的填充效果。\",\"default\":\"ImageFit.Cover\"}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n绝对定位，确定子组件相对父组件的位置。\n属性名称：position\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"绝对定位，确定子组件相对父组件的位置。当父容器为Row/Column/Flex时，设置position的子组件不占位。Position类型基于父组件左上角确定位置;Edges类型基于父组件四边确定位置，top/left/right/bottom分别为组件各边距离父组件相应边的边距，通过边距来确定组件相对于父组件的位置;LocalizedEdges类型基于父组件四边确定位置，支持镜像模式。适用于置顶显示、悬浮按钮等组件在父容器中位置固定的场景。不支持在宽高为零的布局容器上设置。当父容器为RelativeContainer, 且子组件设置了alignRules属性, 则子组件的position属性不生效。\",\"default\":null}}\n", "# Text\n接口描述：Text组件的接口定义。\n接口参数：{'Text': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"文本内容。包含子组件Span且未设置属性字符串时不生效，显示Span内容，并且此时text组件的样式不生效。\",\"default\":\" \"}, 'value': {\"type\":\"TextOptions\",\"required\":false,\"description\":\"文本组件初始化选项。\",\"default\":null}}\n设置文本段落在水平方向的对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本段落在水平方向的对齐方式。\",\"default\":\"TextAlign.Start\"}}\n设置组件是否支持文本可复制粘贴。\n属性名称：copyOption\n属性参数：{'value': {\"type\":\"CopyOptions\",\"required\":true,\"description\":\"组件是否支持文本可复制粘贴。\",\"default\":\"CopyOptions.None\"}}\n设置文本识别配置。\n属性名称：dataDetectorConfig\n属性参数：{'config': {\"type\":\"TextDataDetectorConfig\",\"required\":true,\"description\":\"文本识别配置。\",\"default\":null}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n设置首行文本缩进。\n属性名称：textIndent\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"首行文本缩进。\",\"default\":0}}\n设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n设置选中区域。选中区域高亮且显示手柄和文本选择菜单。\n属性名称：selection\n属性参数：{'selectionStart': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的起始位置。\",\"default\":-1}, 'selectionEnd': {\"type\":\"number\",\"required\":true,\"description\":\"所选文本的结束位置。\",\"default\":-1}}\n设置使能文本识别。\n属性名称：enableDataDetector\n属性参数：{'enable': {\"type\":\"boolean\",\"required\":true,\"description\":\"使能文本识别。\",\"default\":false}}\n设置文本的行间距，设置值不大于0时，取默认值0。\n属性名称：lineSpacing\n属性参数：{'value': {\"type\":\"LengthMetrics\",\"required\":true,\"description\":\"文本的行间距。\",\"default\":null}}\n设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n示例：该组件通过Column布局实现了一个包含文本和图像的展示界面。布局宽度占据整个屏幕，高度设为100%，内边距为25vp。组件的垂直方向上被分为两个部分，第一个部分包含一个带有边框的文本和图像区域，第二个部分包含一个自定义的菜单区域。\n文本和图像区域通过Column布局实现，宽度为200vp，高度为100vp，边框宽度为1vp，颜色为红色。文本和图像区域内的文本和图像通过Span和ImageSpan组件进行展示，文本内容为\"Hello World\"，图像内容为应用内的图标资源。文本和图像区域支持长按、右键点击和选择操作，分别触发不同的自定义菜单。\n自定义菜单区域通过Builder装饰器定义了三个不同的菜单，分别对应长按图像、右键点击文本和选择混合内容的操作。每个菜单包含一个Column布局，内部嵌套一个Menu组件，Menu组件内包含一个MenuItemGroup组件，MenuItemGroup组件内包含三个MenuItem组件。每个MenuItem组件包含一个图标、内容和点击事件，点击事件触发时关闭当前菜单。\n整个布局通过Column布局保证文本和图像区域在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct TextExample7 {\n  // 创建一个TextController实例，用于控制文本的选择和菜单的显示\n  controller: TextController = new TextController();\n  // 创建一个TextOptions实例，用于配置文本的控制器\n  options: TextOptions = { controller: this.controller };\n\n  build() {\n    Column() {\n      Column() {\n        // 创建一个Text组件，内容为undefined，使用options配置\n        Text(undefined, this.options) {\n          // 创建一个Span组件，内容为\"Hello World\"\n          Span('Hello World')\n          // 创建一个ImageSpan组件，内容为应用内的图标资源\n          ImageSpan($r('app.media.icon'))\n            .width('100px') // 设置图像宽度为100px\n            .height('100px') // 设置图像高度为100px\n            .objectFit(ImageFit.Fill) // 设置图像填充方式为完全填充\n            .verticalAlign(ImageSpanAlignment.CENTER) // 设置图像垂直对齐方式为居中\n        }\n        .copyOption(CopyOptions.InApp) // 设置文本的复制选项为仅在应用内复制\n        .bindSelectionMenu(TextSpanType.IMAGE, this.LongPressImageCustomMenu, TextResponseType.LONG_PRESS, {\n          onDisappear: () => {\n            console.info(`自定义选择菜单关闭时回调`); // 自定义选择菜单关闭时的回调函数\n          },\n          onAppear: () => {\n            console.info(`自定义选择菜单弹出时回调`); // 自定义选择菜单弹出时的回调函数\n          }\n        })\n        .bindSelectionMenu(TextSpanType.TEXT, this.RightClickTextCustomMenu, TextResponseType.RIGHT_CLICK) // 绑定文本的右键点击菜单\n        .bindSelectionMenu(TextSpanType.MIXED, this.SelectMixCustomMenu, TextResponseType.SELECT) // 绑定混合内容的选中菜单\n        .onTextSelectionChange((selectionStart: number, selectionEnd: number) => {\n          console.info(`文本选中区域变化回调, selectionStart: ${selectionStart}, selectionEnd: ${selectionEnd}`); // 文本选中区域变化时的回调函数\n        })\n        .borderWidth(1) // 设置边框宽度为1vp\n        .borderColor(Color.Red) // 设置边框颜色为红色\n        .width(200) // 设置宽度为200vp\n        .height(100) // 设置高度为100vp\n      }\n      .width('100%') // 设置宽度为100%\n      .backgroundColor(Color.White) // 设置背景颜色为白色\n      .alignItems(HorizontalAlign.Start) // 设置对齐方式为左对齐\n      .padding(25) // 设置内边距为25vp\n    }\n    .height('100%') // 设置高度为100%\n  }\n\n  // 定义右键点击文本时的自定义菜单\n  @Builder\n  RightClickTextCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Right Click Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n\n  // 定义长按图像时的自定义菜单\n  @Builder\n  LongPressImageCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Long Press Image Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n\n  // 定义选择混合内容时的自定义菜单\n  @Builder\n  SelectMixCustomMenu() {\n    Column() {\n      Menu() {\n        MenuItemGroup() {\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 1\", labelInfo: \"\" })\n            .onClick((event) => {\n              this.controller.closeSelectionMenu(); // 点击菜单项时关闭菜单\n            })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 2\", labelInfo: \"\" })\n          MenuItem({ startIcon: $r('app.media.app_icon'), content: \"Select Mixed Menu 3\", labelInfo: \"\" })\n        }\n      }\n      .MenuStyles() // 应用菜单样式\n    }\n  }\n}\n\n// 定义菜单的样式\n@Extend(Menu)\nfunction MenuStyles() {\n  .radius($r('sys.float.ohos_id_corner_radius_card')) // 设置菜单的圆角半径\n  .clip(true) // 设置菜单的裁剪方式为裁剪\n  .backgroundColor('#F0F0F0') // 设置菜单的背景颜色为浅灰色\n}\n\n", "# Menu\n接口描述：作为菜单的固定容器，无参数。菜单和菜单项宽度计算规则：布局过程中，期望每个菜单项的宽度一致。若子组件设置了宽度，则以尺寸计算规则为准。不设置宽度的情况：菜单组件会对子组件MenuItem、MenuItemGroup设置默认2栅格的宽度，若菜单项内容区比2栅格宽，则会自适应撑开。设置宽度的情况：菜单组件会对子组件MenuItem、MenuItemGroup设置减去padding后的固定宽度。\n接口参数：{}\n设置Menu子菜单展开样式。\n属性名称：subMenuExpandingMode\n属性参数：{'mode': {\"type\":\"SubMenuExpandingMode\",\"required\":true,\"description\":\"Menu子菜单展开样式。\",\"default\":null}}\n统一设置Menu中所有文本的尺寸。\n属性名称：font\n属性参数：{'value': {\"type\":\"Font\",\"required\":true,\"description\":\"Menu中所有文本的尺寸。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置menuItemGroup上下分割线的样式, 不设置该属性则默认展示分割线。\n属性名称：menuItemGroupDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItemGroup顶部和底部分割线样式。\",\"default\":null}}\n设置menuItem分割线样式, 不设置该属性则不展示分割线。\n属性名称：menuItemDivider\n属性参数：{'options': {\"type\":[\"DividerStyleOptions\",\"undefined\"],\"required\":true,\"description\":\"设置menuItem分割线样式。\",\"default\":null}}\n设置Menu边框圆角半径。\n属性名称：radius\n属性参数：{'value': {\"type\":[\"Dimension\",\"BorderRadiuses\"],\"required\":true,\"description\":\"Menu边框圆角半径。默认值跟随主题。\",\"default\":null}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n示例：该组件实现了一个带有符号类型图标的普通菜单。布局宽度占据整个屏幕，高度设为 100%，内边距为左右 0、顶部 0。组件的垂直方向上被分为一个部分，包含一个文本提示和一个菜单。文本提示位于顶部，菜单通过点击文本提示触发显示。\n菜单的样式包括图标大小、字体大小、颜色等属性，支持不同的样式展示。菜单项的功能包括点击事件和状态效果，用户可以通过点击菜单项触发相应操作，菜单项也可以在启用或禁用状态下进行展示。\n整个布局通过 Row 和 Column 布局保证菜单在垂直方向上有序排列，确保界面整洁美观。\nimport { SymbolGlyphModifier } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct Index {\n  // 定义菜单项的起始图标样式，使用系统图标 \"ohos_mic\"，字体大小为 24vp\n  @State startIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.ohos_mic')).fontSize('24vp');\n  // 定义菜单项的结束图标样式，使用系统图标 \"ohos_trash\"，字体大小为 24vp\n  @State endIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.ohos_trash')).fontSize('24vp');\n  // 定义菜单项的选中图标样式，使用系统图标 \"checkmark\"，字体大小为 24vp\n  @State selectIconModifier: SymbolGlyphModifier = new SymbolGlyphModifier($r('sys.symbol.checkmark')).fontSize('24vp');\n  // 定义菜单项的选中状态，初始值为 true\n  @State select: boolean = true;\n\n  // 定义子菜单的构建器\n  @Builder\n  SubMenu() {\n    Menu() {\n      MenuItem({ content: \"复制\", labelInfo: \"Ctrl+C\" })\n      MenuItem({ content: \"粘贴\", labelInfo: \"Ctrl+V\" })\n    }\n  }\n\n  // 定义主菜单的构建器\n  @Builder\n  MyMenu() {\n    Menu() {\n      // 定义第一个菜单项，包含起始图标和内容\n      MenuItem({ symbolStartIcon: this.startIconModifier, content: \"菜单选项\" })\n      // 定义第二个菜单项，包含起始图标和内容，并设置为禁用状态\n      MenuItem({ symbolStartIcon: this.startIconModifier, content: \"菜单选项\" })\n        .enabled(false)\n      // 定义第三个菜单项，包含起始图标、内容、结束图标和子菜单\n      MenuItem({\n        symbolStartIcon: this.startIconModifier,\n        content: \"菜单选项\",\n        symbolEndIcon: this.endIconModifier,\n        builder: (): void => this.SubMenu()\n      })\n      // 定义菜单项组，包含标题和多个菜单项\n      MenuItemGroup({ header: '小标题' }) {\n        MenuItem({\n          symbolStartIcon: this.startIconModifier,\n          content: \"菜单选项\",\n          symbolEndIcon: this.endIconModifier,\n          builder: (): void => this.SubMenu()\n        })\n        MenuItem({\n          symbolStartIcon: this.startIconModifier,\n          content: \"菜单选项\",\n          symbolEndIcon: this.endIconModifier,\n          builder: (): void => this.SubMenu()\n        })\n      }\n      // 定义最后一个菜单项，包含内容，并设置选中状态和选中图标\n      MenuItem({\n        content: \"菜单选项\",\n      }).selected(this.select).selectIcon(this.selectIconModifier)\n    }\n  }\n\n  // 构建组件的布局\n  build() {\n    Row() {\n      Column() {\n        // 定义文本提示，字体大小为 50vp，字体加粗\n        Text('click to show menu')\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n      }\n      // 绑定菜单到文本提示，点击文本提示时显示菜单\n      .bindMenu(this.MyMenu)\n      .width('100%')\n    }\n    .height('100%')\n  }\n}\n\n", "# MenuItem\n接口描述：创建MenuItem组件。\n接口参数：{'value': {\"type\":[\"MenuItemOptions\",\"CustomBuilder\"],\"required\":false,\"description\":\"包含设置MenuItem的各项信息。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置菜单项是否选中。\n属性名称：selected\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"菜单项是否选中。\",\"default\":false}}\n示例：该组件通过 Flex 布局实现了一个展示菜单（Menu）及其菜单项（MenuItem）的界面。布局宽度占据整个屏幕，高度设为 400vp，内边距为左右 35vp、顶部 35vp。组件的垂直方向上被分为多个部分，每个部分包含一个标题和一个菜单。每个菜单项以水平布局方式排列，菜单项之间的间距均匀分布，且对齐方式为居中对齐。\n菜单的样式包括背景颜色、边框圆角（或半径）、宽度和高度等属性，支持不同的样式展示。菜单项组之间通过 Flex 组件进行分隔。菜单的功能包括点击事件和状态效果，用户可以通过点击菜单项触发相应操作，菜单项也可以在启用或禁用状态下进行展示。\n整个布局通过 Flex 布局保证菜单项在垂直方向上有序排列，确保界面整洁美观。\n@Entry\n@Component\nstruct MenuExample {\n  @State selected: number = 0; // 用于记录当前选中的菜单项索引\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceBetween }) {\n      Text('Menu').fontSize(20).fontColor(Color.Black).margin({ top: 10, bottom: 10 }) // 标题文本，字体大小为20，颜色为黑色，上下边距为10vp\n\n      Menu() {\n        MenuItemGroup({ header: 'Group1' }) { // 菜单项组1，标题为\"Group1\"\n          MenuItem({ content: 'Item1' }) // 菜单项1，内容为\"Item1\"\n          MenuItem({ content: 'Item2' }) // 菜单项2，内容为\"Item2\"\n        }\n        MenuItemGroup({ header: 'Group2' }) { // 菜单项组2，标题为\"Group2\"\n          MenuItem({ content: 'Item3' }) // 菜单项3，内容为\"Item3\"\n          MenuItem({ content: 'Item4' }) // 菜单项4，内容为\"Item4\"\n        }\n      }\n      .width('100%') // 菜单宽度占据父容器的100%\n      .height(200) // 菜单高度为200vp\n      .backgroundColor(Color.White) // 菜单背景颜色为白色\n      .borderRadius(10) // 菜单边框圆角为10vp\n      .padding(10) // 菜单内边距为10vp\n      .onSelect((value: number) => { // 菜单项选中事件\n        this.selected = value; // 更新选中状态\n        console.log(`Selected: ${value}`); // 打印选中项的索引\n      })\n\n      Text(`Selected: ${this.selected}`).fontSize(16).fontColor(Color.Gray).margin({ top: 20 }) // 显示当前选中的菜单项索引，字体大小为16，颜色为灰色，上边距为20vp\n    }\n    .width('100%') // 整体布局宽度占据父容器的100%\n    .height(400) // 整体布局高度为400vp\n    .padding({ left: 35, right: 35, top: 35 }) // 整体布局内边距为左右35vp、顶部35vp\n    .backgroundColor(Color.LightGray) // 整体布局背景颜色为浅灰色\n  }\n}\n\n"], "related_types": {"NavigationTitleOptions": {"description": "标题栏背景颜色，不设置时为系统默认颜色。元服务API： 从API version 11开始，该接口支持在元服务中使用。", "type": "object", "properties": {"backgroundColor": {"type": "ResourceColor", "required": false, "description": "标题栏背景颜色，不设置时为系统默认颜色。", "enum": null, "enumDescriptions": null, "default": null}, "backgroundBlurStyle": {"type": "BlurStyle", "required": false, "description": "标题栏背景模糊样式，不设置时关闭背景模糊效果。", "enum": null, "enumDescriptions": null, "default": null}, "barStyle": {"type": "BarStyle", "required": false, "description": "标题栏布局方式设置。", "enum": null, "enumDescriptions": null, "default": "BarStyle.STANDARD"}, "paddingStart": {"type": "LengthMetrics", "required": false, "description": "标题栏起始端内间距。仅支持以下任一场景: 1. 显示返回图标，即hideBackButton为False； 2. 使用非自定义标题，即标题value类型为ResourceStr或NavigationCommonTitle。", "enum": null, "enumDescriptions": null, "default": "LengthMetrics.resource($r('sys.float.margin_left'))"}, "paddingEnd": {"type": "LengthMetrics", "required": false, "description": "标题栏结束端内间距。仅支持以下任一场景: 1. 使用非自定义菜单，即菜单value为Array<NavigationMenuItem>； 2. 没有右上角菜单，且使用非自定义标题，即标题value类型为ResourceStr或NavigationCommonTitle。", "enum": null, "enumDescriptions": null, "default": "LengthMetrics.resource($r('sys.float.margin_right'))"}}, "examples": null}, "LengthMetrics": {"description": "用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。", "type": "object", "properties": {"value": {"type": "number", "required": false, "description": "长度属性的值。", "enum": null, "enumDescriptions": null, "default": null}, "unit": {"type": "LengthUnit", "required": false, "description": "长度属性的单位，默认为vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthUnit": {"description": "长度属性单位枚举。", "type": "enum", "enum": ["PX", "VP", "FP", "PERCENT", "LPX"], "enumDescriptions": {"PX": "长度类型，用于描述以px像素单位为单位的长度。", "VP": "长度类型，用于描述以vp逻辑像素为单位的长度。", "FP": "长度类型，用于描述以fp字体像素为单位的长度。", "PERCENT": "长度类型，用于描述百分比长度。", "LPX": "长度类型，用于描述以lpx逻辑像素为单位的长度。"}, "examples": null}, "BarStyle": {"description": "从API version 12开始，该接口支持在元服务中使用。", "type": "enum", "enum": ["STANDARD", "STACK"], "enumDescriptions": {"STANDARD": "标题栏与内容区采用上下布局。", "STACK": "标题栏与内容区采用层叠布局，标题栏布局在内容区上层。"}, "examples": null}, "ResourceColor": {"description": "颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析", "type": ["string", "Resource", "Color", "number"], "enum": null, "enumDescriptions": null, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "NavigationMode": {"description": "导航模式枚举类，定义了不同的导航栏与内容区显示方式。", "type": "enum", "enum": ["Stack", "Split", "Auto"], "enumDescriptions": {"Stack": "导航栏与内容区独立显示，相当于两个页面。", "Split": "导航栏与内容区分两栏显示。", "Auto": "API version 9之前：窗口宽度>=520vp时，采用Split模式显示；窗口宽度<520vp时，采用Stack模式显示。API version 10及以上：窗口宽度>=600vp时，采用Split模式显示；窗口宽度<600vp时，采用Stack模式显示，600vp等于minNavBarWidth(240vp) + minContentWidth (360vp)。"}, "examples": null}, "CustomBuilder": {"description": "组件属性方法参数可使用CustomBuilder类型来自定义UI描述。", "type": "object", "properties": {"CustomBuilder": {"type": "() => any | void", "required": false, "description": "生成用户自定义组件，在使用时结合@Builder使用。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Dimension": {"description": "长度类型，用于描述尺寸单位。", "type": "enum", "enum": ["PX", "VP", "FP", "LPX", "PERCENT", "Resource"], "enumDescriptions": {"PX": "需要指定以px像素单位，如'10px'。", "VP": "需要指定数字或vp像素单位，如10或'10vp'。", "FP": "需要指定以fp像素单位，如'10fp'。", "LPX": "需要指定以lpx像素单位，如'10lpx'。", "PERCENT": "需要指定以%像素单位，如'10%'。", "Resource": "资源引用类型，引入系统资源或者应用资源中的尺寸。"}, "examples": null}, "NavigationCustomTitle": {"description": "从API version 11开始，该接口支持在元服务中使用。", "type": "object", "properties": {"builder": {"type": "CustomBuilder", "required": true, "description": "设置标题栏内容。", "enum": null, "enumDescriptions": null, "default": null}, "height": {"type": ["TitleHeight", "Length"], "required": true, "description": "设置标题栏高度。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "TitleHeight": {"description": "从API version 11开始，该接口支持在元服务中使用。", "type": "enum", "enum": ["MainOnly", "MainWithSub"], "enumDescriptions": {"MainOnly": "只有主标题时标题栏的推荐高度（56vp）。", "MainWithSub": "同时有主标题和副标题时标题栏的推荐高度（82vp）。"}, "examples": null}, "NavigationCommonTitle": {"description": "元服务API： 从API version 11开始，该接口支持在元服务中使用。", "type": "object", "properties": {"main": {"type": "string", "required": true, "description": "设置主标题。", "enum": null, "enumDescriptions": null, "default": null}, "sub": {"type": "string", "required": true, "description": "设置副标题。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "NavBarPosition": {"description": "元服务API： 从API version 11开始，该接口支持在元服务中使用。", "type": "enum", "enum": ["Start", "End"], "enumDescriptions": {"Start": "双栏显示时，主列在主轴方向首部。", "End": "双栏显示时，主列在主轴方向尾部。"}, "examples": null}, "ResourceStr": {"description": "字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。", "type": ["string", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "Edges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。", "type": "object", "properties": {"top": {"type": "Dimension", "required": false, "description": "相对顶边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Dimension", "required": false, "description": "相对左边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Dimension", "required": false, "description": "相对右边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Dimension", "required": false, "description": "相对底边的偏移量", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LocalizedEdges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "相对顶边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "相对底边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Position": {"description": "位置类型，用于表示一个坐标点。", "type": "object", "properties": {"x": {"type": "Length", "required": false, "description": "x轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}, "y": {"type": "Length", "required": false, "description": "y轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "ImageFit": {"description": "图片填充方式。", "type": "enum", "enum": ["Contain", "Cover", "Auto", "Fill", "ScaleDown", "None", "TOP_START", "TOP", "TOP_END", "START", "CENTER", "END", "BOTTOM_START", "BOTTOM", "BOTTOM_END"], "enumDescriptions": {"Contain": "保持图片宽高比缩放图片，使图片的长边能完全显示出来。", "Cover": "保持图片宽高比缩放图片，使图片的短边能完全显示出来。", "Auto": "保持图片原始尺寸。", "Fill": "拉伸图片，使图片填满容器。", "ScaleDown": "保持图片宽高比缩放图片，使图片的长边和短边都不超过容器的边界。", "None": "不缩放图片。", "TOP_START": "图片在容器的左上角显示。", "TOP": "图片在容器的上方居中显示。", "TOP_END": "图片在容器的右上角显示。", "START": "图片在容器的左边居中显示。", "CENTER": "图片在容器的中间显示。", "END": "图片在容器的右边居中显示。", "BOTTOM_START": "图片在容器的左下角显示。", "BOTTOM": "图片在容器的下方居中显示。", "BOTTOM_END": "图片在容器的右下角显示。"}, "examples": null}, "TextDataDetectorConfig": {"description": "文本识别配置参数。", "type": "object", "properties": {"types": {"type": "TextDataDetectorType[]", "required": true, "description": "文本识别的实体类型。设置types为null或者[]时，识别所有类型的实体，否则只识别指定类型的实体。", "enum": null, "enumDescriptions": null, "default": null}, "onDetectResultUpdate": {"type": "(result: string) => void", "required": false, "description": "文本识别成功后，触发onDetectResultUpdate回调。result：文本识别的结果，Json格式。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "TextOptions": {"description": "Text初始化参数。", "type": "object", "properties": {"controller": {"type": "TextController", "required": true, "description": "文本控制器。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "TextController": {"description": "Text组件的控制器。", "type": "object", "properties": {"controller": {"type": "TextController", "required": true, "description": "导入对象", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "BorderRadiuses": {"description": "圆角类型，用于描述组件边框圆角半径。", "type": "object", "properties": {"topLeft": {"type": "Length", "required": false, "description": "组件左上角圆角半径。", "enum": null, "enumDescriptions": null, "default": null}, "topRight": {"type": "Length", "required": false, "description": "组件右上角圆角半径。", "enum": null, "enumDescriptions": null, "default": null}, "bottomLeft": {"type": "Length", "required": false, "description": "组件左下角圆角半径。", "enum": null, "enumDescriptions": null, "default": null}, "bottomRight": {"type": "Length", "required": false, "description": "组件右下角圆角半径。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "DividerStyleOptions": {"description": "分割线样式属性集合, 用于描述分割线相关信息。", "type": "object", "properties": {"strokeWidth": {"type": "LengthMetrics", "required": false, "description": "分割线的线宽。", "enum": null, "enumDescriptions": null, "default": null}, "color": {"type": "ResourceColor", "required": false, "description": "分割线的颜色。", "enum": null, "enumDescriptions": null, "default": null}, "startMargin": {"type": "LengthMetrics", "required": false, "description": "分割线与菜单侧边起始端的距离。", "enum": null, "enumDescriptions": null, "default": null}, "endMargin": {"type": "LengthMetrics", "required": false, "description": "分割线与菜单侧边结束端的距离。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Font": {"description": "设置文本样式。", "type": "object", "properties": {"size": {"type": "Length", "required": false, "description": "设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。", "enum": null, "enumDescriptions": null, "default": 16.0}, "weight": {"type": ["FontWeight", "number", "string"], "required": false, "description": "设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。", "enum": null, "enumDescriptions": null, "default": "400 | FontWeight.Normal"}, "family": {"type": ["string", "Resource"], "required": false, "description": "设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。", "enum": null, "enumDescriptions": null, "default": null}, "style": {"type": "FontStyle", "required": false, "description": "设置文本的字体样式。", "enum": null, "enumDescriptions": null, "default": "FontStyle.Normal"}}, "examples": null}, "MenuItemOptions": {"description": "MenuItemOptions对象说明", "type": "object", "properties": {"startIcon": {"type": "ResourceStr", "required": false, "description": "item中显示在左侧的图标信息路径。", "enum": null, "enumDescriptions": null, "default": null}, "content": {"type": "ResourceStr", "required": false, "description": "item的内容信息。", "enum": null, "enumDescriptions": null, "default": null}, "endIcon": {"type": "ResourceStr", "required": false, "description": "item中显示在右侧的图标信息路径。", "enum": null, "enumDescriptions": null, "default": null}, "labelInfo": {"type": "ResourceStr", "required": false, "description": "定义结束标签信息，如快捷方式Ctrl+C等。", "enum": null, "enumDescriptions": null, "default": null}, "builder": {"type": "CustomBuilder", "required": false, "description": "用于构建二级菜单。", "enum": null, "enumDescriptions": null, "default": null}, "symbolStartIcon": {"type": "SymbolGlyphModifier", "required": false, "description": "item中显示在左侧的HMSymbol图标信息路径。配置该项时，原先startIcon图标不显示。", "enum": null, "enumDescriptions": null, "default": null}, "symbolEndIcon": {"type": "SymbolGlyphModifier", "required": false, "description": "item中显示在右侧的HMSymbol图标信息路径。配置该项时，原先endIcon图标不显示。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}}}}, {"id": "EaUKQx3B8eipFNbrTLqGzd", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["类型名：NavigationTitleOptions\n类型描述：标题栏背景颜色，不设置时为系统默认颜色。元服务API： 从API version 11开始，该接口支持在元服务中使用。\n参数：{'backgroundColor': {\"type\":\"ResourceColor\",\"required\":false,\"description\":\"标题栏背景颜色，不设置时为系统默认颜色。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'backgroundBlurStyle': {\"type\":\"BlurStyle\",\"required\":false,\"description\":\"标题栏背景模糊样式，不设置时关闭背景模糊效果。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'barStyle': {\"type\":\"BarStyle\",\"required\":false,\"description\":\"标题栏布局方式设置。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"BarStyle.STANDARD\"}, 'paddingStart': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"标题栏起始端内间距。仅支持以下任一场景: 1. 显示返回图标，即hideBackButton为False； 2. 使用非自定义标题，即标题value类型为ResourceStr或NavigationCommonTitle。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"LengthMetrics.resource($r('sys.float.margin_left'))\"}, 'paddingEnd': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"标题栏结束端内间距。仅支持以下任一场景: 1. 使用非自定义菜单，即菜单value为Array<NavigationMenuItem>； 2. 没有右上角菜单，且使用非自定义标题，即标题value类型为ResourceStr或NavigationCommonTitle。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"LengthMetrics.resource($r('sys.float.margin_right'))\"}}\n", "类型名：LengthMetrics\n类型描述：用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。\n参数：{'value': {\"type\":\"number\",\"required\":false,\"description\":\"长度属性的值。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'unit': {\"type\":\"LengthUnit\",\"required\":false,\"description\":\"长度属性的单位，默认为vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：LengthUnit\n枚举类型描述：长度属性单位枚举。\n枚举值：['PX', 'VP', 'FP', 'PERCENT', 'LPX']\n枚举值描述：\n* PX: 长度类型，用于描述以px像素单位为单位的长度。\n* VP: 长度类型，用于描述以vp逻辑像素为单位的长度。\n* FP: 长度类型，用于描述以fp字体像素为单位的长度。\n* PERCENT: 长度类型，用于描述百分比长度。\n* LPX: 长度类型，用于描述以lpx逻辑像素为单位的长度。\n\n", "枚举类型名：BarStyle\n枚举类型描述：从API version 12开始，该接口支持在元服务中使用。\n枚举值：['STANDARD', 'STACK']\n枚举值描述：\n* STANDARD: 标题栏与内容区采用上下布局。\n* STACK: 标题栏与内容区采用层叠布局，标题栏布局在内容区上层。\n\n", "类型名：ResourceColor\n类型描述：颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析\n类型：['string', 'Resource', 'Color', 'number']\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "枚举类型名：NavigationMode\n枚举类型描述：导航模式枚举类，定义了不同的导航栏与内容区显示方式。\n枚举值：['Stack', 'Split', 'Auto']\n枚举值描述：\n* Stack: 导航栏与内容区独立显示，相当于两个页面。\n* Split: 导航栏与内容区分两栏显示。\n* Auto: API version 9之前：窗口宽度>=520vp时，采用Split模式显示；窗口宽度<520vp时，采用Stack模式显示。API version 10及以上：窗口宽度>=600vp时，采用Split模式显示；窗口宽度<600vp时，采用Stack模式显示，600vp等于minNavBarWidth(240vp) + minContentWidth (360vp)。\n\n", "类型名：CustomBuilder\n类型描述：组件属性方法参数可使用CustomBuilder类型来自定义UI描述。\n参数：{'CustomBuilder': {\"type\":\"() => any | void\",\"required\":false,\"description\":\"生成用户自定义组件，在使用时结合@Builder使用。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：Dimension\n枚举类型描述：长度类型，用于描述尺寸单位。\n枚举值：['PX', 'VP', 'FP', 'LPX', 'PERCENT', 'Resource']\n枚举值描述：\n* PX: 需要指定以px像素单位，如'10px'。\n* VP: 需要指定数字或vp像素单位，如10或'10vp'。\n* FP: 需要指定以fp像素单位，如'10fp'。\n* LPX: 需要指定以lpx像素单位，如'10lpx'。\n* PERCENT: 需要指定以%像素单位，如'10%'。\n* Resource: 资源引用类型，引入系统资源或者应用资源中的尺寸。\n\n", "类型名：NavigationCustomTitle\n类型描述：从API version 11开始，该接口支持在元服务中使用。\n参数：{'builder': {\"type\":\"CustomBuilder\",\"required\":true,\"description\":\"设置标题栏内容。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'height': {\"type\":[\"TitleHeight\",\"Length\"],\"required\":true,\"description\":\"设置标题栏高度。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "枚举类型名：TitleHeight\n枚举类型描述：从API version 11开始，该接口支持在元服务中使用。\n枚举值：['MainOnly', 'MainWithSub']\n枚举值描述：\n* MainOnly: 只有主标题时标题栏的推荐高度（56vp）。\n* MainWithSub: 同时有主标题和副标题时标题栏的推荐高度（82vp）。\n\n", "类型名：NavigationCommonTitle\n类型描述：元服务API： 从API version 11开始，该接口支持在元服务中使用。\n参数：{'main': {\"type\":\"string\",\"required\":true,\"description\":\"设置主标题。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'sub': {\"type\":\"string\",\"required\":true,\"description\":\"设置副标题。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：NavBarPosition\n枚举类型描述：元服务API： 从API version 11开始，该接口支持在元服务中使用。\n枚举值：['Start', 'End']\n枚举值描述：\n* Start: 双栏显示时，主列在主轴方向首部。\n* End: 双栏显示时，主列在主轴方向尾部。\n\n", "类型名：ResourceStr\n类型描述：字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。\n类型：['string', 'Resource']\n", "枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：Edges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。\n参数：{'top': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对顶边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对左边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对右边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对底边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LocalizedEdges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对顶边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对底边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Position\n类型描述：位置类型，用于表示一个坐标点。\n参数：{'x': {\"type\":\"Length\",\"required\":false,\"description\":\"x轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'y': {\"type\":\"Length\",\"required\":false,\"description\":\"y轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：ImageFit\n枚举类型描述：图片填充方式。\n枚举值：['Contain', 'Cover', 'Auto', 'Fill', 'ScaleDown', 'None', 'TOP_START', 'TOP', 'TOP_END', 'START', 'CENTER', 'END', 'BOTTOM_START', 'BOTTOM', 'BOTTOM_END']\n枚举值描述：\n* Contain: 保持图片宽高比缩放图片，使图片的长边能完全显示出来。\n* Cover: 保持图片宽高比缩放图片，使图片的短边能完全显示出来。\n* Auto: 保持图片原始尺寸。\n* Fill: 拉伸图片，使图片填满容器。\n* ScaleDown: 保持图片宽高比缩放图片，使图片的长边和短边都不超过容器的边界。\n* None: 不缩放图片。\n* TOP_START: 图片在容器的左上角显示。\n* TOP: 图片在容器的上方居中显示。\n* TOP_END: 图片在容器的右上角显示。\n* START: 图片在容器的左边居中显示。\n* CENTER: 图片在容器的中间显示。\n* END: 图片在容器的右边居中显示。\n* BOTTOM_START: 图片在容器的左下角显示。\n* BOTTOM: 图片在容器的下方居中显示。\n* BOTTOM_END: 图片在容器的右下角显示。\n\n", "类型名：TextDataDetectorConfig\n类型描述：文本识别配置参数。\n参数：{'types': {\"type\":\"TextDataDetectorType[]\",\"required\":true,\"description\":\"文本识别的实体类型。设置types为null或者[]时，识别所有类型的实体，否则只识别指定类型的实体。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'onDetectResultUpdate': {\"type\":\"(result: string) => void\",\"required\":false,\"description\":\"文本识别成功后，触发onDetectResultUpdate回调。result：文本识别的结果，Json格式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：TextOptions\n类型描述：Text初始化参数。\n参数：{'controller': {\"type\":\"TextController\",\"required\":true,\"description\":\"文本控制器。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：TextController\n类型描述：Text组件的控制器。\n参数：{'controller': {\"type\":\"TextController\",\"required\":true,\"description\":\"导入对象\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：BorderRadiuses\n类型描述：圆角类型，用于描述组件边框圆角半径。\n参数：{'topLeft': {\"type\":\"Length\",\"required\":false,\"description\":\"组件左上角圆角半径。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'topRight': {\"type\":\"Length\",\"required\":false,\"description\":\"组件右上角圆角半径。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottomLeft': {\"type\":\"Length\",\"required\":false,\"description\":\"组件左下角圆角半径。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottomRight': {\"type\":\"Length\",\"required\":false,\"description\":\"组件右下角圆角半径。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：DividerStyleOptions\n类型描述：分割线样式属性集合, 用于描述分割线相关信息。\n参数：{'strokeWidth': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"分割线的线宽。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'color': {\"type\":\"ResourceColor\",\"required\":false,\"description\":\"分割线的颜色。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'startMargin': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"分割线与菜单侧边起始端的距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'endMargin': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"分割线与菜单侧边结束端的距离。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Font\n类型描述：设置文本样式。\n参数：{'size': {\"type\":\"Length\",\"required\":false,\"description\":\"设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。\",\"enum\":null,\"enumDescriptions\":null,\"default\":16.0}, 'weight': {\"type\":[\"FontWeight\",\"number\",\"string\"],\"required\":false,\"description\":\"设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"400 | FontWeight.Normal\"}, 'family': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'style': {\"type\":\"FontStyle\",\"required\":false,\"description\":\"设置文本的字体样式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"FontStyle.Normal\"}}\n", "类型名：MenuItemOptions\n类型描述：MenuItemOptions对象说明\n参数：{'startIcon': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"item中显示在左侧的图标信息路径。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'content': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"item的内容信息。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'endIcon': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"item中显示在右侧的图标信息路径。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'labelInfo': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"定义结束标签信息，如快捷方式Ctrl+C等。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'builder': {\"type\":\"CustomBuilder\",\"required\":false,\"description\":\"用于构建二级菜单。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'symbolStartIcon': {\"type\":\"SymbolGlyphModifier\",\"required\":false,\"description\":\"item中显示在左侧的HMSymbol图标信息路径。配置该项时，原先startIcon图标不显示。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'symbolEndIcon': {\"type\":\"SymbolGlyphModifier\",\"required\":false,\"description\":\"item中显示在右侧的HMSymbol图标信息路径。配置该项时，原先endIcon图标不显示。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n"]}}], "details": {"android_component": {"name": ["com.google.android.material.navigation.NavigationView"], "content": "<com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>", "layout_description": "导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。", "function_description": "实现了一个导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。"}}}, {"id": "jAHUZgbhr4EVVorKKBNcyx", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "Navigation() {\n  Column() {\n    Image($r('app.media.drawer_header'))\n      .objectFit(ImageFit.Contain)\n      .width('100%')\n      .height('auto')\n    Menu() {\n      MenuItem() {\n        Text($r('app.string.menu_item_1'))\n      }\n      MenuItem() {\n        Text($r('app.string.menu_item_2'))\n      }\n      // 其他菜单项\n    }\n  }\n}\n.width('auto')\n.height('100%')\n.align(Alignment.Start)\n.elevation(this.elevationValue)\n.fitSystemWindows(true)"}}], "details": null}], "details": {"breakdown_android_layout": {"tasks": [{"description": "实现安卓DrawerLayout及其内部RelativeLayout的转译，确保布局和功能一致。", "done": false, "component": {"name": ["androidx.drawerlayout.widget.DrawerLayout", "RelativeLayout"], "content": "<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\">\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n</androidx.drawerlayout.widget.DrawerLayout>"}}, {"description": "实现安卓NavigationView及其相关属性的转译，确保布局和功能一致。", "done": false, "component": {"name": ["com.google.android.material.navigation.NavigationView"], "content": "<com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>"}}]}, "translated_android_components": [{"description": "实现安卓DrawerLayout及其内部RelativeLayout的转译，确保布局和功能一致。", "source_component": "androidx.drawerlayout.widget.DrawerLayout", "source_component_code": "<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\">\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n</androidx.drawerlayout.widget.DrawerLayout>", "source_component_description": "一个抽屉布局容器，宽度占满父容器，高度占满父容器，内边距适应系统窗口，抽屉默认从左侧打开。\n- 相对布局，宽度占满父容器，高度占满父容器，用于容纳页面内容。", "target_component": ["Navigation", "RelativeContainer"], "target_component_code": "Navigation() {\n  RelativeContainer() {\n    // 子组件\n  }\n    .width('100%')\n    .height('100%')\n}\n  .width('100%')\n  .height('100%')\n  .drawerPosition(DrawerPosition.Start)\n  .drawerOpen(false)", "target_component_description": "实现了一个抽屉布局容器，抽屉默认从左侧打开，容器内包含一个相对布局，用于显示页面内容。\n\n一个抽屉布局容器，宽度占满父容器，高度占满父容器，内边距适应系统窗口，抽屉默认从左侧打开。\n- 相对布局，宽度占满父容器，高度占满父容器，用于容纳页面内容。", "explanation": "1. 使用Navigation组件来实现DrawerLayout的功能，设置其属性和样式以匹配DrawerLayout的布局和行为。\n2. 使用RelativeContainer组件来实现RelativeLayout的功能，确保内容布局的灵活性和对齐方式的准确性。\n3. 设置Navigation组件的宽度为100%，高度为100%，以占满父容器。\n4. 设置drawerPosition为Start，以确保抽屉默认从左侧打开。\n5. 设置drawerOpen为false，以确保抽屉默认关闭。\n6. 在RelativeContainer中预留子组件的位置，以便后续添加页面内容。"}, {"description": "实现安卓NavigationView及其相关属性的转译，确保布局和功能一致。", "source_component": "com.google.android.material.navigation.NavigationView", "source_component_code": "<com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>", "source_component_description": "导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。", "target_component": ["Navigation", "Column", "Image", "Text", "Menu", "MenuItem"], "target_component_code": "Navigation() {\n  Column() {\n    Image($r('app.media.drawer_header'))\n      .objectFit(ImageFit.Contain)\n      .width('100%')\n      .height('auto')\n    Menu() {\n      MenuItem() {\n        Text($r('app.string.menu_item_1'))\n      }\n      MenuItem() {\n        Text($r('app.string.menu_item_2'))\n      }\n      // 其他菜单项\n    }\n  }\n}\n.width('auto')\n.height('100%')\n.align(Alignment.Start)\n.elevation(this.elevationValue)\n.fitSystemWindows(true)", "target_component_description": "实现了一个导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。\n\n导航视图，宽度自适应，高度占满父容器，布局重力为开始，高度为@float/z_drawer，适应系统窗口为真，头部布局引用资源app.media.drawer_header，菜单引用资源app.media.menu_drawer。", "explanation": "1. 使用Navigation组件作为根容器，实现导航视图的功能。\n2. 使用Column组件布局导航视图的内容，确保内容垂直排列。\n3. 使用Image组件显示头部布局，引用资源app.media.drawer_header，并设置objectFit为Contain以保证图片显示效果。\n4. 使用Menu和MenuItem组件显示菜单内容，引用资源app.string.menu_item_1和app.string.menu_item_2作为菜单项文本。\n5. 设置Navigation组件的宽度为自适应（auto），高度占满父容器（100%），布局重力为开始（align(Alignment.Start)），高度为elevationValue（需要定义该变量），适应系统窗口为真（fitSystemWindows(true)）。"}]}}, "assemble_harmony_layout": "根据技术主管分配的任务，我们需要将已经完成的转译任务结果合并为一个整体的ArkUI布局文件。我们将逐步组合每个转译单位，确保所有组件按照正确的层次结构无缝连接，保持原始安卓页面的语义和结构一致性。\n\n### 合并步骤\n\n1. **抽屉布局容器（DrawerLayout）**：\n   - 宽度占满父容器，高度占满父容器。\n   - 内边距适应系统窗口，抽屉默认从左侧打开。\n\n2. **相对布局容器（RelativeLayout）**：\n   - 宽度占满父容器，高度占满父容器。\n   - 用于容纳页面内容。\n\n3. **导航视图（NavigationView）**：\n   - 宽度自适应，高度占满父容器。\n   - 布局重力为开始，高度为`@float/z_drawer`，适应系统窗口为真。\n   - 头部布局引用资源`app.media.drawer_header`，菜单引用资源`app.media.menu_drawer`。\n\n### 合并后的ArkUI布局文件\n\n```ets\n@Entry\n@Component\nstruct MainActivity {\n  private elevationValue: number = 5; // 假设z_drawer的值为5\n\n  build() {\n    Navigation() {\n      RelativeContainer() {\n        // 子组件，用于容纳页面内容\n        // 例如：\n        Text('Main Content')\n          .fontSize(20)\n          .width('100%')\n          .textAlign(TextAlign.Center)\n      }\n      .width('100%')\n      .height('100%')\n\n      Column() {\n        Image($r('app.media.drawer_header'))\n          .objectFit(ImageFit.Contain)\n          .width('100%')\n          .height('auto')\n\n        Menu() {\n          MenuItem() {\n            Text($r('app.string.menu_item_1'))\n          }\n          MenuItem() {\n            Text($r('app.string.menu_item_2'))\n          }\n          // 其他菜单项\n        }\n      }\n      .width('auto')\n      .height('100%')\n      .align(Alignment.Start)\n      .elevation(this.elevationValue)\n      .fitSystemWindows(true)\n    }\n    .width('100%')\n    .height('100%')\n    .drawerPosition(DrawerPosition.Start)\n    .drawerOpen(false)\n  }\n}\n```\n\n### 解释\n\n1. **Navigation组件**：作为顶层容器，负责管理抽屉布局和导航视图。\n2. **RelativeContainer组件**：嵌套在Navigation组件内，用于显示页面内容。\n3. **Column组件**：用于组织导航视图的内容，包括头部布局和菜单。\n4. **Image组件**：显示导航视图的头部布局。\n5. **Menu组件**：包含多个MenuItem，用于显示导航菜单。\n\n### 关键点\n\n- **DrawerPosition.Start**：确保抽屉从左侧打开。\n- **elevation**：设置导航视图的高度，模拟安卓中的`android:elevation`属性。\n- **fitSystemWindows**：确保导航视图适应系统窗口。\n\n通过上述步骤，我们成功将安卓布局文件转译为鸿蒙ArkUI代码，并确保所有组件按照正确的层次结构无缝连接，保持原始安卓页面的语义和结构一致性。", "time": 125.01235461235046}