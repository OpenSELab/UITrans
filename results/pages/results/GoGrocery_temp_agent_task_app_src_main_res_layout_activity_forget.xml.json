{"android_layout": {"name": "app/src/main/res/layout/activity_forget.xml", "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">\n\n\n    <android.support.constraint.ConstraintLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"250dp\"\n        android:layout_gravity=\"center\"\n        android:layout_margin=\"20dp\"\n        android:background=\"@drawable/box2\"\n        android:gravity=\"center\">\n\n\n        <EditText\n            android:id=\"@+id/email\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_margin=\"10dp\"\n            android:layout_marginEnd=\"8dp\"\n            android:layout_marginStart=\"8dp\"\n            android:hint=\"Enter Registered Email Address\"\n            android:inputType=\"textEmailAddress\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintVertical_bias=\"0.29000002\" />\n\n        <Button\n\n            android:id=\"@+id/submit_otp\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginEnd=\"24dp\"\n            android:layout_marginTop=\"32dp\"\n            android:background=\"@drawable/btn_background\"\n            android:text=\"Submit\"\n            android:textColor=\"@color/color_black_light\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintHorizontal_bias=\"1.0\"\n            app:layout_constraintStart_toStartOf=\"@+id/email\"\n            app:layout_constraintTop_toBottomOf=\"@+id/email\"\n            app:layout_constraintVertical_bias=\"0.23000002\" />\n    </android.support.constraint.ConstraintLayout>\n</LinearLayout>\n", "java": "package app.infiniverse.grocery;\n\nimport android.content.Intent;\nimport android.os.AsyncTask;\nimport android.support.v7.app.AlertDialog;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport org.json.JSONArray;\nimport org.json.JSONObject;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.net.URLEncoder;\n\npublic class ForgetActivity extends AppCompatActivity {\n\n    EditText email;\n    Button submit;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_forget);\n        email = findViewById(R.id.email);\n        submit = findViewById(R.id.submit_otp);\n\n        submit.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                class EmailVerify extends AsyncTask<String, Void, String> {\n\n                    @Override\n                    protected void onPreExecute() {\n                        super.onPreExecute();\n                    }\n\n                    @Override\n                    protected void onPostExecute(String s) {\n                        super.onPostExecute(s);\n                        if (s.trim().equals(\"SENT\")) {\n\n\n                            Intent i = new Intent(ForgetActivity.this, OtpForgetActivity.class);\n                            i.putExtra(\"email\",email.getText().toString());\n                            startActivity(i);\n                            Toast.makeText(ForgetActivity.this, \"OTP sent successfully, check your Email\", Toast.LENGTH_SHORT).show();\n                            finish();\n\n                        } else\n                            Toast.makeText(ForgetActivity.this, \"Invalid Email\", Toast.LENGTH_SHORT).show();\n\n                    }\n\n                    //\n                    @Override\n                    protected String doInBackground(String... params) {\n\n                        String urls = getResources().getString(R.string.base_url).concat(\"generateOtpToResetPassword/\");\n                        try {\n                            URL url = new URL(urls);\n                            HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\n                            httpURLConnection.setRequestMethod(\"POST\");\n                            httpURLConnection.setDoInput(true);\n                            httpURLConnection.setDoOutput(true);\n                            OutputStream outputStream = httpURLConnection.getOutputStream();\n                            BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, \"UTF-8\"));\n                            String post_Data = URLEncoder.encode(\"email\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[0], \"UTF-8\");\n\n                            bufferedWriter.write(post_Data);\n                            bufferedWriter.flush();\n                            bufferedWriter.close();\n                            outputStream.close();\n                            InputStream inputStream = httpURLConnection.getInputStream();\n                            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));\n                            String result = \"\", line = \"\";\n                            while ((line = bufferedReader.readLine()) != null) {\n                                result += line;\n                            }\n                            return result;\n                        } catch (Exception e) {\n                            return e.toString();\n                        }\n                    }\n                }\n\n                //creating asynctask object and executing it\n                EmailVerify loginUsrObj = new EmailVerify();\n                loginUsrObj.execute(email.getText().toString());\n            }\n        });\n\n    }\n}\n", "contains": [], "mock_data": {}, "source": "GoGrocery"}, "breakdown_android_layout": {"tasks": [{"description": "转译LinearLayout容器及其内部的所有子组件，包括背景颜色和布局对齐方式。", "done": false, "component": {"name": ["LinearLayout"], "content": "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">"}}, {"description": "转译ConstraintLayout容器及其内部的EditText和Button组件，包括布局约束和样式。", "done": false, "component": {"name": ["android.support.constraint.ConstraintLayout", "EditText", "Button"], "content": "<android.support.constraint.ConstraintLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"250dp\"\n    android:layout_gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:background=\"@drawable/box2\"\n    android:gravity=\"center\">\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:hint=\"Enter Registered Email Address\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.29000002\" />\n\n    <Button\n        android:id=\"@+id/submit_otp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:layout_marginTop=\"32dp\"\n        android:background=\"@drawable/btn_background\"\n        android:text=\"Submit\"\n        android:textColor=\"@color/color_black_light\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/email\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\"\n        app:layout_constraintVertical_bias=\"0.23000002\" />\n</android.support.constraint.ConstraintLayout>"}}]}, "translations": [{"description": "转译LinearLayout容器及其内部的所有子组件，包括背景颜色和布局对齐方式。", "source_component": "LinearLayout", "source_component_code": "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">", "source_component_description": "垂直线性容器，宽度占满父容器，高度占满父容器，背景颜色引用资源app.color.cardview_dark_background，内容对齐方式为居中。", "target_component": ["Column"], "target_component_code": "Column() {\n  // 子组件\n}\n.width('100%')\n.height('100%')\n.backgroundColor($r('app.color.cardview_dark_background'))\n.alignItems(HorizontalAlign.Center)\n.justifyContent(FlexAlign.Center)", "target_component_description": "实现了一个垂直线性容器，容器背景颜色引用了 app.color.cardview_dark_background 资源，内容在容器中居中对齐。\n\n垂直线性容器，宽度占满父容器，高度占满父容器，背景颜色引用资源app.color.cardview_dark_background，内容对齐方式为居中。", "explanation": "根据安卓组件描述，LinearLayout被转译为鸿蒙ArkUI的Column组件。Column组件的宽度和高度设置为'100%'以占满父容器，背景颜色通过$r('app.color.cardview_dark_background')引用资源。内容对齐方式通过.alignItems(HorizontalAlign.Center)和.justifyContent(FlexAlign.Center)实现居中对齐。子组件部分需要根据实际需求进行填充。"}, {"description": "转译ConstraintLayout容器及其内部的EditText和Button组件，包括布局约束和样式。", "source_component": "android.support.constraint.ConstraintLayout", "source_component_code": "<android.support.constraint.ConstraintLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"250dp\"\n    android:layout_gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:background=\"@drawable/box2\"\n    android:gravity=\"center\">\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:hint=\"Enter Registered Email Address\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.29000002\" />\n\n    <Button\n        android:id=\"@+id/submit_otp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:layout_marginTop=\"32dp\"\n        android:background=\"@drawable/btn_background\"\n        android:text=\"Submit\"\n        android:textColor=\"@color/color_black_light\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/email\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\"\n        app:layout_constraintVertical_bias=\"0.23000002\" />\n</android.support.constraint.ConstraintLayout>", "source_component_description": "约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源app.media.box2，内容居中对齐。\n    - 编辑文本框，宽度占满父容器，高度自适应，外边距为10vp，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于父容器的顶部和底部，水平居中，垂直偏移为0.29。\n    - 按钮，宽度自适应，高度自适应，外边距为8vp，背景引用资源app.media.btn_background，文本内容为“Submit”，文本颜色引用资源app.color.color_black_light，位于编辑文本框的下方，水平居中，垂直偏移为0.23。", "target_component": ["RelativeContainer", "TextInput", "Button"], "target_component_code": "RelativeContainer() {\n  TextInput({ placeholder: 'Enter Registered Email Address' })\n    .id('email')\n    .width('100%')\n    .height('auto')\n    .margin({ top: '10vp', bottom: '10vp', left: '8vp', right: '8vp' })\n    .type(InputType.Email)\n    .alignRules({\n      top: { anchor: '__container__', align: VerticalAlign.Top },\n      bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End },\n      verticalBias: 0.29\n    })\n\n  Button() {\n    Text('Submit')\n      .fontColor($r('app.color.color_black_light'))\n  }\n  .id('submit_otp')\n  .width('auto')\n  .height('auto')\n  .margin({ top: '10vp', bottom: '10vp', left: '8vp', right: '8vp' })\n  .backgroundImage($r('app.media.btn_background'))\n  .alignRules({\n    top: { anchor: 'email', align: VerticalAlign.Bottom },\n    bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n    left: { anchor: 'email', align: HorizontalAlign.Start },\n    right: { anchor: '__container__', align: HorizontalAlign.End },\n    verticalBias: 0.23\n  })\n}\n.width('100%')\n.height('250vp')\n.margin('20vp')\n.backgroundImage($r('app.media.box2'))\n.alignContent(AlignContent.Center)", "target_component_description": "实现了一个约束布局容器，容器中包含一个编辑文本框和一个按钮。编辑文本框用于输入电子邮件地址，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于容器的顶部和底部，水平居中，垂直偏移为0.29。按钮位于编辑文本框的下方，显示“Submit”，背景引用资源app.media.btn_background，文本颜色为app.color.color_black_light，水平居中，垂直偏移为0.23。\n\n约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源app.media.box2，内容居中对齐。\n    - 编辑文本框，宽度占满父容器，高度自适应，外边距为10vp，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于父容器的顶部和底部，水平居中，垂直偏移为0.29。\n    - 按钮，宽度自适应，高度自适应，外边距为8vp，背景引用资源app.media.btn_background，文本内容为“Submit”，文本颜色引用资源app.color.color_black_light，位于编辑文本框的下方，水平居中，垂直偏移为0.23。", "explanation": "1. 使用RelativeContainer组件来实现ConstraintLayout的功能，支持复杂的相对布局。\n2. TextInput组件用于实现EditText的功能，设置placeholder、width、height、margin、type等属性。\n3. Button组件用于实现Button的功能，设置文本内容、文本颜色、width、height、margin、背景图片等属性。\n4. 通过alignRules属性实现布局约束，确保组件在容器中的相对位置和偏移。\n5. 设置容器的width、height、margin、背景图片等属性，确保整体布局与安卓组件描述一致。"}], "translation_agent_task": {"id": "DSMcgysVu7otKysSJ9SmU6", "description": "转译安卓布局组件", "subtasks": [{"id": "PUEaq5vhWG2pkXy356g38y", "description": "根据转译表转译组件v1", "subtasks": [{"id": "4ML8fqggX6DiSdYmzj4KLu", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "垂直线性容器，宽度占满父容器，高度占满父容器，背景颜色引用资源app.color.cardview_dark_background，内容对齐方式为居中。", "function_description": "实现了一个垂直线性容器，容器背景颜色引用了 app.color.cardview_dark_background 资源，内容在容器中居中对齐。"}}}, {"id": "69cwMT3KcWJc6yjk3gpMVa", "description": "查询组件文档", "subtasks": [{"id": "DtYCkYNzUUYgFrv6v7eWGn", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['LinearLayout']\n功能效果描述：实现了一个垂直线性容器，容器背景颜色引用了 app.color.cardview_dark_background 资源，内容在容器中居中对齐。\n通用布局描述：垂直线性容器，宽度占满父容器，高度占满父容器，背景颜色引用资源app.color.cardview_dark_background，内容对齐方式为居中。\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["Column"], "queries": [{"component": "Column", "queries": ["设置容器的宽度为父容器的宽度", "设置容器的高度为父容器的高度", "设置容器的背景颜色为app.color.cardview_dark_background", "设置容器的内容对齐方式为居中"]}], "idea": "选择Column组件来实现垂直线性容器，通过设置Column的属性来实现LinearLayout的布局和样式。"}}}, {"id": "Y6xbn9d29kLWYpcXUxFWqn", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["Column"], "queries": [{"component": "Column", "queries": ["设置容器的宽度为父容器的宽度", "设置容器的高度为父容器的高度", "设置容器的背景颜色为app.color.cardview_dark_background", "设置容器的内容对齐方式为居中"]}], "idea": "选择Column组件来实现垂直线性容器，通过设置Column的属性来实现LinearLayout的布局和样式。"}, "corrected_component_query": {"components": ["Column"], "queries": [{"component": "Column", "queries": ["设置容器的宽度为父容器的宽度", "设置容器的高度为父容器的高度", "设置容器的背景颜色为app.color.cardview_dark_background", "设置容器的内容对齐方式为居中"]}], "idea": "选择Column组件来实现垂直线性容器，通过设置Column的属性来实现LinearLayout的布局和样式。"}}}, {"id": "Q37sjxGKgS4wtAWhHxq8tG", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个垂直线性容器，容器背景颜色引用了 app.color.cardview_dark_background 资源，内容在容器中居中对齐。", "k": 3, "component_name": ["Column"], "score_threshold": 0.6, "example_knowledge_results": [], "component_examples": {}}}, {"id": "HfChskBoRNab9qFQTH8JjQ", "description": "查询组件文档", "subtasks": [{"id": "35fWfbRQ8bmHz8zZgFZr46", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "jWPCxWnbaYcGENB94H5ujZ", "description": "查询组件Column的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置容器的宽度为父容器的宽度", "设置容器的高度为父容器的高度", "设置容器的背景颜色为app.color.cardview_dark_background", "设置容器的内容对齐方式为居中"], "n_results": 10, "query_results": {"ids": [["d9f81a84-dcc9-42e7-bf00-40f59725f621", "4a6a9493-af1d-4b71-ac93-e005d4b79b23", "0312e8d6-efb1-4896-8129-462ef1bc3395", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "7af90bc2-8846-435b-a7d0-4afe96092763", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "157f1cf5-e965-4c6d-a3b0-dbb179036b13", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5"], ["d9f81a84-dcc9-42e7-bf00-40f59725f621", "b28478cc-39e7-47f6-a8d5-1be66cd8fd1b", "4a6a9493-af1d-4b71-ac93-e005d4b79b23", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "0312e8d6-efb1-4896-8129-462ef1bc3395", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "7e3f294e-c5e5-4d5a-a48a-cf1975ee67ee"], ["04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "0880e4fd-0449-4d44-af44-23eb895c7848", "0a499c6e-9303-4a3a-bccd-afddd69c67b6", "3d3d823a-bf38-4b30-a72d-a641577cfec7", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "d9f81a84-dcc9-42e7-bf00-40f59725f621", "0312e8d6-efb1-4896-8129-462ef1bc3395"], ["04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "4a6a9493-af1d-4b71-ac93-e005d4b79b23", "d9f81a84-dcc9-42e7-bf00-40f59725f621"]], "distances": [[0.30075663328170776, 0.3298431634902954, 0.3670917749404907, 0.37013161182403564, 0.37161684036254883, 0.375587522983551, 0.42662328481674194, 0.4384738802909851, 0.4391654133796692, 0.4443287253379822], [0.3438557982444763, 0.352405846118927, 0.36156904697418213, 0.3753063678741455, 0.3782644271850586, 0.38319242000579834, 0.4049285650253296, 0.4304337501525879, 0.4371240735054016, 0.4444810748100281], [0.4276934862136841, 0.446536123752594, 0.451480507850647, 0.4536023736000061, 0.4586731791496277, 0.4765298366546631, 0.48802071809768677, 0.49079811573028564, 0.49617594480514526, 0.5073351860046387], [0.289615273475647, 0.30401045083999634, 0.3529531955718994, 0.35563385486602783, 0.35628992319107056, 0.3632413148880005, 0.36612075567245483, 0.40110379457473755, 0.4211055636405945, 0.4249582290649414]], "metadatas": [[{"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "fontFamily", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n"], ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n"], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置字体列表。\n属性名称：fontFamily\n属性参数：{'value': {\"type\":[\"string\",\"Resource\"],\"required\":true,\"description\":\"字体列表。默认字体'HarmonyOS Sans'。应用当前支持'HarmonyOS Sans'字体和注册自定义字体。卡片当前仅支持'HarmonyOS Sans'字体。\",\"default\":\"HarmonyOS Sans\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n"], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "fbqygrEwa3zNkLse2zCmdH", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "T4MoQNdhKwNsRyPxr7oAAG", "description": "过滤低于阈值的查询结果: 设置容器的宽度为父容器的宽度", "subtasks": [], "details": {"query": "设置容器的宽度为父容器的宽度", "result_ids": ["d9f81a84-dcc9-42e7-bf00-40f59725f621", "4a6a9493-af1d-4b71-ac93-e005d4b79b23", "0312e8d6-efb1-4896-8129-462ef1bc3395", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "7af90bc2-8846-435b-a7d0-4afe96092763", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "157f1cf5-e965-4c6d-a3b0-dbb179036b13", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5"], "result_documents": ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n"], "result_metadatas": [{"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.30075663328170776, 0.3298431634902954, 0.3670917749404907, 0.37013161182403564, 0.37161684036254883, 0.375587522983551, 0.42662328481674194, 0.4384738802909851, 0.4391654133796692, 0.4443287253379822], "threshold": 0.6, "query_text_results": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, 0.6992433667182922], ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.6701568365097046], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.6329082250595093], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6298683881759644], ["设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", {"component_name": "Column", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, 0.6283831596374512], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.624412477016449]]}}, {"id": "4Fpubg39j6iCWewLcqMfrG", "description": "过滤低于阈值的查询结果: 设置容器的高度为父容器的高度", "subtasks": [], "details": {"query": "设置容器的高度为父容器的高度", "result_ids": ["d9f81a84-dcc9-42e7-bf00-40f59725f621", "b28478cc-39e7-47f6-a8d5-1be66cd8fd1b", "4a6a9493-af1d-4b71-ac93-e005d4b79b23", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "0312e8d6-efb1-4896-8129-462ef1bc3395", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "7e3f294e-c5e5-4d5a-a48a-cf1975ee67ee"], "result_documents": ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3438557982444763, 0.352405846118927, 0.36156904697418213, 0.3753063678741455, 0.3782644271850586, 0.38319242000579834, 0.4049285650253296, 0.4304337501525879, 0.4371240735054016, 0.4444810748100281], "threshold": 0.6, "query_text_results": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "Column", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.647594153881073]]}}, {"id": "iU3sZ5jSBiX7XLLbLkoXBw", "description": "过滤低于阈值的查询结果: 设置容器的背景颜色为app.color.cardview_dark_background", "subtasks": [], "details": {"query": "设置容器的背景颜色为app.color.cardview_dark_background", "result_ids": ["04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "0880e4fd-0449-4d44-af44-23eb895c7848", "0a499c6e-9303-4a3a-bccd-afddd69c67b6", "3d3d823a-bf38-4b30-a72d-a641577cfec7", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "d9f81a84-dcc9-42e7-bf00-40f59725f621", "0312e8d6-efb1-4896-8129-462ef1bc3395"], "result_documents": ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置字体列表。\n属性名称：fontFamily\n属性参数：{'value': {\"type\":[\"string\",\"Resource\"],\"required\":true,\"description\":\"字体列表。默认字体'HarmonyOS Sans'。应用当前支持'HarmonyOS Sans'字体和注册自定义字体。卡片当前仅支持'HarmonyOS Sans'字体。\",\"default\":\"HarmonyOS Sans\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n"], "result_metadatas": [{"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "fontFamily", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.4276934862136841, 0.446536123752594, 0.451480507850647, 0.4536023736000061, 0.4586731791496277, 0.4765298366546631, 0.48802071809768677, 0.49079811573028564, 0.49617594480514526, 0.5073351860046387], "threshold": 0.6, "query_text_results": []}}, {"id": "guqyHaALDPrTAJeZai242G", "description": "过滤低于阈值的查询结果: 设置容器的内容对齐方式为居中", "subtasks": [], "details": {"query": "设置容器的内容对齐方式为居中", "result_ids": ["04d98ac5-e176-4e46-a0e0-7cf93182d0c7", "33ea25aa-cac4-4f85-b3b7-f1b9a5bac825", "b6443713-fdd1-4b76-b02a-276d24cc6f59", "d82cc3ce-d0d6-419c-bf57-9ab4f36ea11d", "09af9fd0-9440-4136-8bbf-9835ad3e65e8", "91a5fea0-4a01-4fa8-ad43-db72f51f3ed5", "a44c0ffe-dffc-4cb3-a6c5-17b220f6ad0c", "f12a099d-8fd6-4be6-b7fd-85791b7fa4e3", "4a6a9493-af1d-4b71-ac93-e005d4b79b23", "d9f81a84-dcc9-42e7-bf00-40f59725f621"], "result_documents": ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n"], "result_metadatas": [{"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Column", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.289615273475647, 0.30401045083999634, 0.3529531955718994, 0.35563385486602783, 0.35628992319107056, 0.3632413148880005, 0.36612075567245483, 0.40110379457473755, 0.4211055636405945, 0.4249582290649414], "threshold": 0.6, "query_text_results": [["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Column", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.710384726524353], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "Column", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6470468044281006], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Column", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6443661451339722], ["设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n", {"component_name": "Column", "name": "justifyContent", "source": "harmony-component-doc", "type": "attribute"}, 0.6437100768089294], ["子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", {"component_name": "Column", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, 0.6367586851119995], ["设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n", {"component_name": "Column", "name": "alignItems", "source": "harmony-component-doc", "type": "attribute"}, 0.6338792443275452]]}}], "details": null}], "details": null}, {"id": "ez4KNjJja7hx7uWym4xHJh", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# Column\n接口描述：Column(value?: {space?: string | number})\n接口参数：{'space': {\"type\":[\"string\",\"number\"],\"required\":false,\"description\":\"纵向布局元素垂直方向间距。从API version 9开始，space为负数或者justifyContent设置为FlexAlign.SpaceBetween、FlexAlign.SpaceAround、FlexAlign.SpaceEvenly时不生效。\",\"default\":0}}\n设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置子组件在垂直方向上的对齐格式。\n属性名称：justifyContent\n属性参数：{'value': {\"type\":\"FlexAlign\",\"required\":true,\"description\":\"子组件在垂直方向上的对齐格式。\",\"default\":\"FlexAlign.Start\"}}\n子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n设置子组件在水平方向上的对齐格式。\n属性名称：alignItems\n属性参数：{'value': {\"type\":\"HorizontalAlign\",\"required\":true,\"description\":\"子组件在水平方向上的对齐格式。\",\"default\":\"HorizontalAlign.Center\"}}\n"], "related_types": {"Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}}}}, {"id": "2anKSijKqRViup893gGZ5E", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n"]}}], "details": {"android_component": {"name": ["LinearLayout"], "content": "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">", "layout_description": "垂直线性容器，宽度占满父容器，高度占满父容器，背景颜色引用资源app.color.cardview_dark_background，内容对齐方式为居中。", "function_description": "实现了一个垂直线性容器，容器背景颜色引用了 app.color.cardview_dark_background 资源，内容在容器中居中对齐。"}}}, {"id": "BVrcDdaLuTD6h72moKQkJU", "description": "转译组件v1", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去根据安卓组件描述生成鸿蒙ArkUI代码。\n\n\n\n\n以下是可供参考的鸿蒙组件文档：\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n\n# 声明式UI描述\nArkTS以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n## 创建组件\n根据组件构造方法的不同，创建组件包含有参数和无参数两种方式。\n\n### 无参数\n如果组件的接口定义没有包含必选构造参数，则组件后面的“()”不需要配置任何内容。例如，Divider组件不包含构造参数。\n```ets\nColumn() {\n  Text('item 1')\n  Divider()\n  Text('item 2')\n}\n```\n\n### 有参数\n- Image组件的必选参数src。\n```ets\nImage('https://xyz/test.jpg')\n```\n- Text组件的非必选参数content。\n```ets\n// string类型的参数\nText('test')\n// $r形式引入应用资源，可应用于多语言场景\nText($r('app.string.title_value'))\n// 无参数形式\nText()\n```\n- 变量或表达式也可以用于参数赋值，其中表达式返回的结果类型必须满足参数类型要求。\n例如，设置变量或表达式来构造Image和Text组件的参数。\n```ets\nImage(this.imagePath)\nImage('https://' + this.imageUrl)\nText(`count: ${this.count}`)\n```\n\n## 配置属性\n属性方法以“.”链式调用的方式配置系统组件的样式和其他属性，建议每个属性方法单独写一行。\n\n- 设置Text组件的字体大小。\n```ets\nText('test')\n  .fontSize(20)\n```\n- 配置组件的多个属性。\n```ets\nImage('test.jpg')\n  .alt('error.jpg')\n  .width(100)\n  .height(100)\n```\n- 除了直接传递常量参数外，还可以传递变量或表达式。\n```ets\nText('hello')\n  .fontSize(this.size)\nImage('test.jpg')\n  .width(this.count % 2 === 0 ? 100 : 200)\n  .height(this.offset + 100)\n```\n- 对于系统组件，ArkUI还为其属性预定义了一些枚举类型供开发者调用，枚举类型可以作为参数传递，但必须满足参数类型要求。\n例如，可以按以下方式配置Text组件的颜色和字体样式。\n```ets\nText('hello')\n  .fontSize(20)\n  .fontColor(Color.Red)\n  .fontWeight(FontWeight.Bold)\n```\n\n## 配置事件\n事件方法以“.”链式调用的方式配置系统组件支持的事件，建议每个事件方法单独写一行。\n\n- 使用箭头函数配置组件的事件方法。\n```ets\nButton('Click me')\n  .onClick(() => {\n    this.myText = 'ArkUI';\n  })\n```\n- 使用组件的成员函数配置组件的事件方法，需要bind this。ArkTS语法不推荐使用成员函数配合bind this去配置组件的事件方法。\n```ets\nmyClickHandler(): void {\n  this.counter += 2;\n}\n...\nButton('add counter')\n  .onClick(this.myClickHandler.bind(this))\n```\n- 使用声明的箭头函数，可以直接调用，不需要bind this。\n```ets\nfn = () => {\n  console.info(`counter: ${this.counter}`)\n  this.counter++\n}\n...\nButton('add counter')\n  .onClick(this.fn)\n```\n\n## 配置子组件\n如果组件支持子组件配置，则需在尾随闭包\"{...}\"中为组件添加子组件的UI描述。Column、Row、Stack、Grid、List等组件都是容器组件。\n\n- 容器组件均支持子组件配置，可以实现相对复杂的多级嵌套。\n```ets\nColumn() {\n  Row() {\n    Image('test1.jpg')\n      .width(100)\n      .height(100)\n    Button('click +1')\n      .onClick(() => {\n        console.info('+1 clicked!');\n      })\n  }\n  .width('100%')\n}\n```\n以下是关于安卓组件转译为鸿蒙ArkUI组件的示例代码：\n\n## 示例#1\n### ['Column', 'Button'] 组件\n通过 Column 布局实现了一个包含三个按钮的界面，用于在应用中创建一个按钮列表。布局的宽度占据整个屏幕，高度也为 100%，内部包含三个 Button 组件，每个按钮的宽度占据整个父布局，文本分别为“Button 1”、“Button 2”和“Button 3”。整个布局使用了 HorizontalAlign.Center 和 FlexAlign.Center 来确保按钮在布局中居中对齐。用户可以通过点击按钮触发相应的操作。\n```\n    Column({ space: 0 }) {\nButton('Button 1')\n.width('100%')\n\nButton('Button 2')\n.width('100%')\n\nButton('Button 3')\n.width('100%')\n\n}\n.id('main')\n.width('100%')\n.height('100%')\n.alignItems(HorizontalAlign.Center)\n.justifyContent(FlexAlign.Center)\n```\n\n这些资源目前在项目中已经定义：\n# 资源变量\n## color\nstart_window_background, primary_500, primary_700, accent_500, accent_700, black_trans80, indicator_unselected, blue_grey, red, pink, purple, deep_purple, indigo, blue, light_blue, cyan, teal, green, light_green, lime, yellow, amber, orange, deep_orange, background, even, odd, white, fab, style_color_primary, style_color_primary_dark, style_color_accent, fab_color_pressed, fab_color_shadow, text_like_counter, paint_color, opaque, rippelColor, ldrawer_color, holo_blue, color_black, color_white, color_gray_light, color_black_light, bg_gradient_start, bg_gradient_end, default_background, partial_transparent, transparent, holo_green_theme, holo_blue_light, holo_gray_light, holo_gray_dark, holo_green_light, holo_red_light, holo_blue_dark, holo_green_dark, holo_red_dark, holo_purple, holo_orange_light, holo_orange_dark, holo_blue_bright, holo_gray_bright, primary, primary_dark, ripple, accent, accent_pressed, material_blue_500, waveform_selected, waveform_unselected, waveform_unselected_bkgnd_overlay, selection_border, playback_indicator, grid_line, timecode, timecode_shadow, black, colorButton, material\n## float\nactivity_horizontal_margin, activity_vertical_margin, nav_header_vertical_spacing, nav_header_height\n## integer\nfade_animation_duration, slide_anim_time, slide_animation_duration, config_slide_time\n## string\nmodule_desc, EntryAbility_desc, EntryAbility_label, app_name, slogan, navigation_drawer_open, navigation_drawer_close, action_settings, base_url, img_base_url, cart\n\n# 资源文件\nb1.svg\\n\nbackground.svg\\n\nbox.svg\\n\nbox2.svg\\n\nbox3.svg\\n\nbox4.svg\\n\nbox5.svg\\n\nbox51.svg\\n\nbox6.svg\\n\nbtn_background.svg\\n\nforeground.png\\n\nicon.png\\n\nic_add.svg\\n\nic_arrow_back_black.svg\\n\nic_bookmark_black.svg\\n\nic_bus.svg\\n\nic_call_black.svg\\n\nic_check_black.svg\\n\nic_delete_black.svg\\n\nic_email_black.svg\\n\nic_filter_list_black.svg\\n\nic_history_black.svg\\n\nic_home_black.svg\\n\nic_info_outline_black.svg\\n\nic_location_city_black.svg\\n\nic_lock_outline_black.svg\\n\nic_log_out.svg\\n\nic_message_black.svg\\n\nic_minus_black.svg\\n\nic_person_black.svg\\n\nic_search.svg\\n\nic_search_black.svg\\n\nic_shopping_cart_black.svg\\n\nic_shopping_cart_white.svg\\n\nlayered_image.json\\n\nprofile_bg.svg\\n\nseat_bg.svg\\n\nstartIcon.png\\n\ntesttoolbar.svg\\n\ntoolbar.svg\\n\n\n技术主管已经将代码转译分为以下步骤：\n1. 转译LinearLayout容器及其内部的所有子组件，包括背景颜色和布局对齐方式。\\n\n2. 转译ConstraintLayout容器及其内部的EditText和Button组件，包括布局约束和样式。\\n\n\n\n你当前需要处理的任务是：\n转译LinearLayout容器及其内部的所有子组件，包括背景颜色和布局对齐方式。\n\n以下是待转译的安卓组件描述：\n# 待转译的安卓组件名：['LinearLayout']\n功能描述：实现了一个垂直线性容器，容器背景颜色引用了 app.color.cardview_dark_background 资源，内容在容器中居中对齐。\n安卓布局描述：垂直线性容器，宽度占满父容器，高度占满父容器，背景颜色引用资源app.color.cardview_dark_background，内容对齐方式为居中。\n实现转译的思路：选择Column组件来实现垂直线性容器，通过设置Column的属性来实现LinearLayout的布局和样式。\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">\n\n\n你的工作是根据**鸿蒙组件文档**、当前项目信息准确地、完整的根据安卓组件描述生成鸿蒙ArkUI组件代码，不可以使用不存在的鸿蒙组件以及不存在的属性和事件。\n在生成时，你需要确保生成过程中所有使用的ArkUI组件、属性和事件与安卓组件描述实现的功能、行为一致。\n在整个过程中，请严格遵循文档规范，每一步都需要详细对照官方文档，确保没有任何遗漏或误解。\n**重要**：你必须严格按照待转译的安卓组件描述来编写鸿蒙ArkUI代码，不可忽略任何可以实现的属性、样式、功能等，也不可以添加任何未在安卓组件描述中提到的功能。\n**重要**：必须确保所选用的组件、类型、属性和方法完全符合鸿蒙ArkUI官方文档的定义与规范, 必须确保使用的资源文件都已被定义。\n**重要**：当你无法通过单个组件实现功能时，可以通过组合多个组件来实现，但不可选择不存在的组件，例如Checkbox需要与Text组件搭配才能够实现复选框旁侧有文字的效果，卡片需要利用Stack布局及Text等组件来实现。\n**重要**：ArkUI以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n在你编写鸿蒙ArUI组件时，需要遵守以下规则：\n* 1. 当组件的宽度和高度是根据内容自适应时，需要使用'auto'；当组件的宽度和高度是跟随父组件时，需要使用'100%'，例如：android:layout_width=\"wrap_content\"应该转译为width=\"auto\"；android:layout_width=\"match_parent\"应该转译为width=\"100%\"。\n* 2. 引用资源时，需要使用$r('app.xxx.yyy'), 其中xxx为资源类型，yyy为资源名称，例如：Image($r('app.media.custom_background'))。\n* 3. 对于安卓系统属性例如@attr/black，在鸿蒙中你应该将其转译为Color.Black。\n* 4. 在鸿蒙中，对于marquee效果的文本，你应该使用.textOverflow({ overflow: TextOverflow.MARQUEE })即可，不需要额外的设置。\n* 5. 在鸿蒙中，当你转译的只有容器组件时，你需要注明子组件所在的位置，例如：Scroll() {\\n  Column() {\\n    // 子组件\\n  }\\n}。\n* 6. 在鸿蒙中，你应该根据所需效果确保为每一个Image添加objectFit，以保证图片的显示效果，例如：Image(xxx)\\n  .objectFit(ImageFit.Contain)。\n\n\n在转译过程中，你需要严格遵守以下规则：\n### 规则 1\n你必须准确、完整地实现安卓布局代码地转译。\n准确意味着你需要将安卓布局代码中的每个组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要添加任何多余的或不存在的组件、属性、值。\n完整意味着你需要将安卓布局代码中的所有组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要遗漏任何组件、属性、值。\n正确示例：\n```\n安卓布局文件：\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"@string/lorem_ipsum\" />\n对应的鸿蒙ArkUI代码：\nText($r(\"app.string.lorem_ipsum\"))\n  .id(\"textview_first\")\n  .width('auto')\n  .height('auto')\n```\n错误示例：\n```\n安卓布局文件\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"16dp\"\n    android:text=\"@string/lorem_ipsum\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toEndOf=\"parent\"\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toBottomOf=\"@id/button_first\" />\n错误的鸿蒙ArkUI代码：\n// 未完整、准确地实现安卓布局代码的转译。\n// 遗漏了id、marginTop、constraintBottom_toBottomOf、constraintEnd_toEndOf、constraintStart_toStartOf、constraintTop_toBottomOf属性，并且添加了额外的maxLines属性。\nText($r(\"app.string.lorem_ipsum\"))\n  .maxLines(10)\n修改后的正确鸿蒙ArkUI代码：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        top: { anchor: 'button_first', align: VerticalAlign.Bottom },  // 对app:layout_constraintTop_toBottomOf=\"@id/button_first\"的转译\n        bottom: { anchor: '__container__', align: VerticalAlign.Bottom },  // 对app:layout_constraintBottom_toBottomOf=\"parent\"的转译\n        left: { anchor: '__container__', align: HorizontalAlign.Start },  // 对app:layout_constraintStart_toStartOf=\"parent\"的转译\n        right: { anchor: '__container__', align: HorizontalAlign.End }  // 对app:layout_constraintEnd_toEndOf=\"parent\"的转译\n    })  // 使用RelativeContainer与alignRules实现对layout_constraintXXX_toXXXOf属性的转译\n}\n额外示例：\n利用RelativeContainer实现子组件垂直水平居中：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        center: {anchor: '__container__', align: VerticalAlign.Center},\n        middle: {anchor: '__container__', align: HorizontalAlign.Center}\n    })\n}\n```\n\n", "translated_component": {"harmony_component": "Column() {\n  // 子组件\n}\n.width('100%')\n.height('100%')\n.backgroundColor($r('app.color.cardview_dark_background'))\n.alignItems(HorizontalAlign.Center)\n.justifyContent(FlexAlign.Center)", "explanation": "根据安卓组件描述，LinearLayout被转译为鸿蒙ArkUI的Column组件。Column组件的宽度和高度设置为'100%'以占满父容器，背景颜色通过$r('app.color.cardview_dark_background')引用资源。内容对齐方式通过.alignItems(HorizontalAlign.Center)和.justifyContent(FlexAlign.Center)实现居中对齐。子组件部分需要根据实际需求进行填充。"}}}, {"id": "mMeGxWsKBza2yjZPG72H5g", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "Column() {\n  // 子组件\n}\n.width('100%')\n.height('100%')\n.backgroundColor($r('app.color.cardview_dark_background'))\n.alignItems(HorizontalAlign.Center)\n.justifyContent(FlexAlign.Center)"}}], "details": null}, {"id": "kGTuQf2TQuUpq9MewoBdaw", "description": "根据转译表转译组件v1", "subtasks": [{"id": "TgmiqJzrHHCifWYUc7zSkX", "description": "生成组件描述", "subtasks": [], "details": {"prompt": "请根据以下安卓XML代码编写一个详细的通用描述和功能描述，供其他开发框架如iOS或鸿蒙的开发者实现同样的布局样式。描述应包含以下内容：\n\n布局属性：包括组件的宽度、高度、边距、填充、对齐方式等。\n组件样式和外观：包括颜色、字体、透明度、圆角等。\n组件排列和嵌套关系：例如垂直或水平布局、组件之间的对齐方式、父子关系。\n组件功能和交互：例如按钮的点击事件、输入框的输入验证逻辑等。\n引用的资源：如自定义的背景图片、颜色等，请指出资源路径或名称。\n请避免使用安卓特有的术语，而是使用通用的描述语言，确保其他框架的开发者可以理解并实现同样的布局和功能，例如：match_parent描述为占满父容器的宽度。同时，请确保描述涵盖每个组件的属性、样式和功能。\n\n你在编写通用描述和功能描述时，需要遵守以下规则：\n## 规则#1\n这条规则适用于所有组件的宽度、高度、外边距、内边距、字体大小等属性的单位。\n对于高度、宽度、外边距、内边距等等属性的单位应全部采用vp；\n对于字体大小等属性的单位应全部采用fp。\n\n## 规则#2\n这条规则适用于字体设置。\n若安卓组件中存在字体集的设置，应将其修改为'HarmonyOS Sans'字体集；\n若安卓组件中不存在字体集的设置，请保持不变。\n\n## 规则#3\n这条规则适用于资源引用。\n对于引用@drawable的资源，请将其修改为media;\n对于引用@color的资源，请将其修改为color;\n对于引用@strings的资源，请将其修改为string;\n对于引用@dimen的资源，请将其修改为float;\n对于引用@array的资源，如果资源是字符串数组，请将其修改为strarray，如果资源是整型数组，请将其修改为intarray。\n\n## 规则#4\n这条规则适用于通用描述的顺序。\n通用描述的顺序应该按照组件的逻辑顺序进行排列，确保描述的完整性和逻辑性。\n每个组件的描述应该包括布局属性、样式和外观、排列和嵌套关系、功能和交互、引用的资源等内容。\n\n## 规则#5\n这条规则适用于通用描述的内容。\n通用描述应该按照组件的嵌套关系进行描述，从外到内逐级描述每个组件的属性、样式和功能。\n请忽略有关主题的描述。\n\n## 规则6\n这条规则适用于功能效果描述。\n功能效果描述应该侧重于页面呈现的效果，包括组件的默认属性和默认行为，而不是具体的代码实现细节。\n例如：安卓复选框是包含文字的，而鸿蒙复选框是不包含文字的，因此在功能效果描述中应该添加复选框右侧文字的描述。\n安卓组件：\n<ChekBox\n    android:id=\"@+id/checkbox\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Check me\" />\n功能效果描述：一个复选框，右侧包含文字“Check me”，整体宽度和高度自适应。\n\n以下是一个可供参考的示例：\n安卓XML示例代码：\n```xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    android:background=\"@drawable/custom_background\">\n\n    <TextView\n        android:id=\"@+id/title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World\"\n        android:textColor=\"@color/primary_text\"\n        android:textSize=\"18sp\" />\n\n    <Button\n        android:id=\"@+id/submit_button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Submit\"\n        android:backgroundTint=\"#FF5722\" />\n</LinearLayout>\n```\n通用描述示例：\n- 垂直线性容器，宽度占满父容器，高度自适应，内边距为16vp，背景引用资源app.media.custom_background。\n    - 文本视图，宽度自适应，高度自适应，文本内容为“Hello World”，文本颜色引用资源app.color.primary_text，字体大小为18fp。\n    - 按钮，宽度自适应，高度自适应，文本内容为“Submit”，背景颜色为#FF5722。\n\n功能效果描述示例：\n实现了一个垂直线性容器，在容器中包含一个文本视图和一个按钮，其中文本视图，高度和宽度自适应，显示“Hello World”，字体颜色引用了 app.color.primary_text 资源，字体大小为18fp；在文本视图的正下方有一个按钮，按钮宽度和高度自适应，按钮显示“Submit”，背景颜色为 #FF5722。\n\n安卓XML代码如下：\n<android.support.constraint.ConstraintLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"250dp\"\n    android:layout_gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:background=\"@drawable/box2\"\n    android:gravity=\"center\">\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:hint=\"Enter Registered Email Address\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.29000002\" />\n\n    <Button\n        android:id=\"@+id/submit_otp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:layout_marginTop=\"32dp\"\n        android:background=\"@drawable/btn_background\"\n        android:text=\"Submit\"\n        android:textColor=\"@color/color_black_light\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/email\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\"\n        app:layout_constraintVertical_bias=\"0.23000002\" />\n</android.support.constraint.ConstraintLayout>\n请根据以上安卓XML代码编写一个通用描述，然后编写这页面实现的功能效果描述。\n\n**重要**：请确保通用描述和功能效果描述的准确性和完整性，确保其他开发者可以根据描述实现相同的布局和功能。\n", "component_description": {"layout_description": "约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源app.media.box2，内容居中对齐。\n    - 编辑文本框，宽度占满父容器，高度自适应，外边距为10vp，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于父容器的顶部和底部，水平居中，垂直偏移为0.29。\n    - 按钮，宽度自适应，高度自适应，外边距为8vp，背景引用资源app.media.btn_background，文本内容为“Submit”，文本颜色引用资源app.color.color_black_light，位于编辑文本框的下方，水平居中，垂直偏移为0.23。", "function_description": "实现了一个约束布局容器，容器中包含一个编辑文本框和一个按钮。编辑文本框用于输入电子邮件地址，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于容器的顶部和底部，水平居中，垂直偏移为0.29。按钮位于编辑文本框的下方，显示“Submit”，背景引用资源app.media.btn_background，文本颜色为app.color.color_black_light，水平居中，垂直偏移为0.23。"}}}, {"id": "EagpGDwN4EULMG9tqfwXNt", "description": "查询组件文档", "subtasks": [{"id": "LTGtMejsaWdDZHsuHT2cRC", "description": "生成组件查询", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去为将安卓组件转译为鸿蒙ArkUI代码。\n\n\n待转译的安卓组件如下：\n# ['android.support.constraint.ConstraintLayout', 'EditText', 'Button']\n功能效果描述：实现了一个约束布局容器，容器中包含一个编辑文本框和一个按钮。编辑文本框用于输入电子邮件地址，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于容器的顶部和底部，水平居中，垂直偏移为0.29。按钮位于编辑文本框的下方，显示“Submit”，背景引用资源app.media.btn_background，文本颜色为app.color.color_black_light，水平居中，垂直偏移为0.23。\n通用布局描述：约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源app.media.box2，内容居中对齐。\n    - 编辑文本框，宽度占满父容器，高度自适应，外边距为10vp，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于父容器的顶部和底部，水平居中，垂直偏移为0.29。\n    - 按钮，宽度自适应，高度自适应，外边距为8vp，背景引用资源app.media.btn_background，文本内容为“Submit”，文本颜色引用资源app.color.color_black_light，位于编辑文本框的下方，水平居中，垂直偏移为0.23。\n<android.support.constraint.ConstraintLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"250dp\"\n    android:layout_gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:background=\"@drawable/box2\"\n    android:gravity=\"center\">\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:hint=\"Enter Registered Email Address\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.29000002\" />\n\n    <Button\n        android:id=\"@+id/submit_otp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:layout_marginTop=\"32dp\"\n        android:background=\"@drawable/btn_background\"\n        android:text=\"Submit\"\n        android:textColor=\"@color/color_black_light\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/email\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\"\n        app:layout_constraintVertical_bias=\"0.23000002\" />\n</android.support.constraint.ConstraintLayout>\n\n实现这个需求可能会使用到某些ArkUI组件。\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## AlphabetIndexer\n可以与容器组件联动用于按逻辑结构快速定位容器显示区域的组件。\n## Blank\n空白填充组件，在容器主轴方向上，空白填充组件具有自动填充容器空余部分的能力。仅当父组件为Row/Column/Flex时生效。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n## CalendarPicker\n日历选择器组件，提供下拉日历弹窗，可以让用户选择日期。\n## Checkbox\n提供多选框组件，通常用于某选项的打开或关闭。可以包含Text组件。\n## CheckboxGroup\n多选框群组，用于控制多选框全选或者不全选状态。\n## Component3D\n3D渲染组件，可以加载3D模型资源并做自定义渲染，通常用于3D动效场景。\n## ContainerSpan\nText组件的子组件，用于统一管理多个Span、ImageSpan的背景色及圆角弧度。\n## DataPanel\n数据面板组件，用于将多个数据占比情况使用占比图进行展示。\n## DatePicker\n日期选择器组件，用于根据指定日期范围创建日期滑动选择器。\n## Divider\n提供分隔器组件，分隔不同内容块/内容元素。\n## Gauge\n数据量规图表组件，用于将数据展示为环形图表。\n## Image\n图片组件，常用于在应用中显示图片。Image支持加载PixelMap、ResourceStr和DrawableDescriptor类型的数据源，支持png、jpg、jpeg、bmp、svg、webp、gif和heif类型的图片格式。\n## ImageAnimator\n提供帧动画组件来实现逐帧播放图片的能力，可以配置需要播放的图片列表，每张图片可以配置时长。\n## ImageSpan\nText、ContainerSpan组件的子组件，用于显示行内图片。\n## LoadingProgress\n用于显示加载动效的组件。\n## Marquee\n跑马灯组件，用于滚动展示一段单行文本。仅当文本内容宽度超过跑马灯组件宽度时滚动，不超过时不滚动。\n## Menu\n以垂直列表形式显示的菜单。\n## MenuItem\n用来展示菜单Menu中具体的item菜单项。\n## MenuItemGroup\n该组件用来展示菜单MenuItem的分组。\n## Navigation\nNavigation组件是路由导航的根视图容器，一般作为Page页面的根容器使用，其内部默认包含了标题栏、内容区和工具栏，其中内容区默认首页显示导航内容（Navigation的子组件）或非首页显示（[NavDestination](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/ts-basic-components-navdestination-V5)的子组件），首页和非首页通过路由进行切换。\n## NavRouter\n导航组件，默认提供点击响应处理，不需要开发者自定义点击事件逻辑。\n## NavDestination\n作为子页面的根容器，用于显示Navigation的内容区。\n## NodeContainer\n基础组件，不支持尾随添加子节点。组件接受一个NodeController的实例接口。需要NodeController组合使用。该组件下仅支持挂载自定义节点FrameNode或者是BuilderNode中获取的根节点FrameNode。不支持挂载查询获得的原生系统组件代理节点。\n## PatternLock\n图案密码锁组件，以九宫格图案的方式输入密码，用于密码验证场景。手指在PatternLock组件区域按下时开始进入输入状态，手指离开屏幕时结束输入状态完成密码输入。\n## Progress\n进度条组件，用于显示内容加载或操作处理等进度。\n## QRCode\n用于显示单个二维码的组件。\n## Radio\n单选框，提供相应的用户交互选择项。\n## Rating\n提供在给定范围内选择评分的组件。Rating组件的接口，用于设置评分值和是否作为指示器使用。\n## RichEditor\n支持图文混排和文本交互式编辑的组件。\n## RichText\n富文本组件，解析并显示HTML格式文本。\n## ScrollBar\n滚动条组件ScrollBar，用于配合可滚动组件使用，如List、Grid、Scroll。\n## Search\n搜索框组件，适用于浏览器的搜索内容输入框等应用场景。可以包含单个子组件。\n## Select\n提供下拉选择菜单，可以让用户在多个选项之间选择。可以包含单个子组件。\n## Slider\n滑动条组件，通常用于快速调节设置值，如音量调节、亮度调节等应用场景。\n## Span\n作为Text、ContainerSpan组件的子组件，用于显示行内文本的组件。\n## Stepper\n步骤导航器组件，适用于引导用户按照步骤完成任务的导航场景。\n## StepperItem\n用作Stepper组件的页面子组件。\n## SymbolSpan\n作为Text组件的子组件，用于显示图标小符号的组件。\n## SymbolGlyph\n显示图标小符号的组件。\n## Text\n显示一段文本的组件，可以包含Span、ImageSpan、SymbolSpan和ContainerSpan子组件。\n## TextArea\n多行文本输入框组件，当输入的文本内容超过组件宽度时会自动换行显示。\n## TextClock\nTextClock组件通过文本将当前系统时间显示在设备上。支持不同时区的时间显示，最高精度到秒级。\n## TextPicker\n根据range指定的选择范围创建文本选择器。\n## TextTimer\n通过文本显示计时信息并控制其计时器状态的组件。\n## TimePicker\n时间选择组件，根据指定参数创建选择器，支持选择小时及分钟。\n## Toggle\n组件提供勾选框样式、状态按钮样式及开关样式。\n## TextInput\n单行文本输入框组件。\n## XComponent\n可用于EGL/OpenGLES和媒体数据写入，并显示在XComponent组件。\n## Canvas\n提供画布组件，用于自定义绘制图形。\n## CanvasGradient\n渐变对象。\n## CanvasPattern\n一个Object对象，使用createPattern方法创建，通过指定图像和重复方式创建图片填充的模板。\n## DrawingRenderingContext\n使用DrawingRenderingContext在Canvas组件上进行绘制，绘制对象可以是矩形、文本、图片等。\n## ImageBitmap\nImageBitmap对象可以存储canvas渲染的像素数据。\n## ImageData\nImageData对象可以存储canvas渲染的像素数据。\n## Matrix2D\n矩阵对象，可以对矩阵进行缩放、旋转、平移等变换。\n## OffscreenCanvas\nOffscreenCanvas组件用于自定义绘制图形，可以在屏幕外渲染的画布，避免影响应用程序主线程性能。\n## OffscreenCanvasRenderingContext2D\n使用OffscreenCanvasRenderingContext2D在Canvas上进行离屏绘制，绘制对象可以是矩形、文本、图片等。离屏绘制是指将需要绘制的内容先绘制在缓存区，然后将其转换成图片，一次性绘制到canvas上，加快了绘制速度。\n## Path2D\n路径对象，支持通过对象的接口进行路径的描述，并通过Canvas的stroke接口或者fill接口进行绘制。\n## Badge\n可以附加在单个组件上用于信息标记的容器组件。\n## Column\n沿垂直方向布局的容器组件，可以包含子组件。\n## ColumnSplit\n将子组件纵向布局，并在每个子组件之间插入一根横向的分割线。\n## Counter\n计数器组件，提供相应的增加或者减少的计数操作。\n## EmbeddedComponent\n用于支持在当前页面嵌入本应用内其他EmbeddedUIExtensionAbility提供的UI。EmbeddedUIExtensionAbility在独立进程中运行，完成页面布局和渲染。通常用于有进程隔离诉求的模块化开发场景。\n## Flex\n以弹性方式布局子组件的容器组件。\n## GridCol\n栅格子组件，必须作为栅格容器组件(GridRow)的子组件使用。可以包含单个子组件。\n## GridRow\n栅格容器组件，仅可以和栅格子组件(GridCol)在栅格布局场景中使用。\n## Grid\n网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。\n## GridItem\n网格容器中单项内容容器，仅支持作为Grid组件的子组件使用。\n## List\n列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。可以包含ListItem、ListItemGroup子组件，支持渲染控制类型（if/else、ForEach、LazyForEach和Repeat）。\n## ListItem\n用来展示列表具体item，必须配合List来使用。\n## ListItemGroup\n该组件用来展示列表item分组，宽度默认充满List组件，必须配合List组件来使用。\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## Row\n沿水平方向布局容器，可以包含子组件。\n## Scroll\n可滚动的容器组件，当子组件的布局尺寸超过父组件的尺寸时，内容可以滚动，支持单个子组件。\n## Stack\n堆叠容器，子组件按照顺序依次入栈，后一个子组件覆盖前一个子组件。可以包含多个子组件。\n## Tabs\n通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图，不支持自定义组件作为子组件， 仅可包含子组件TabContent。\n## TabContent\n仅在Tabs中使用，对应一个切换页签的内容视图，支持单个子组件。\n## WaterFlow\n瀑布流容器，由“行”和“列”分割的单元格所组成，通过容器自身的排列规则，将不同大小的“项目”自上而下，如瀑布般紧密布局。\n## WithTheme\nWithTheme组件用于设置应用局部页面自定义主题风格，可设置子组件深浅色模式和自定义配色。\n## Circle\n用于绘制圆形的组件。\n## Ellipse\n椭圆绘制组件。\n## Line\n直线绘制组件。\n## Polyline\n折线绘制组件。\n## Polygon\n多边形绘制组件。\n## Path\n路径绘制组件，根据绘制路径生成封闭的自定义形状。\n## Rect\n绘制组件的父组件，实现类似SVG的效果。绘制组件单独使用，用于在页面上绘制指定的图形。\n## Shape\n矩形绘制组件。\n## AlertDialog\n显示警告弹窗组件，可设置文本内容与响应回调。\n## ActionSheet\n列表选择弹窗 (ActionSheet) 是一个全局UI方法，属于ArkTS组件，用于在ArkUI（方舟UI框架）中显示一个带有多个选项的弹窗。\n## CustomDialog\n通过CustomDialogController类显示自定义弹窗。使用弹窗组件时，可优先考虑自定义弹窗，便于自定义弹窗的样式与内容。\n## CalendarPickerDialog\n点击日期弹出日历选择器弹窗，可选择弹窗内任意日期。\n## DatePickerDialog\n日期滑动选择器弹窗，用于在弹窗上展示日期选择器。\n## TimePickerDialog\n时间滑动选择器弹窗 (TimePickerDialog) 是一个全局UI方法，用于以24小时的时间区间创建时间滑动选择器，并展示在弹窗上。\n## TextPickerDialog\n文本滑动选择器弹窗，用于在指定的选择范围内创建文本选择器并展示在弹窗上。\n## Video\n用于播放视频文件并控制其播放状态的组件。\n## LocationButton\n安全控件的位置控件，用户通过点击该位置按钮，可以临时获取精准定位权限，而不需要权限弹框授权确认。\n## PasteButton\n安全控件的粘贴按钮，用户通过点击该粘贴按钮，可以临时获取读取剪贴板权限。\n## SaveButton\n安全控件的保存控件，用户通过点击该保存按钮，可以临时获取存储权限，而不需要权限弹框授权确认。\n## ChipGroup\nChipGroup高级组件，提供操作块群组，用于对文件或者资源内容进行分类等场景。\n## Chip\n操作块组件，用于搜索框历史记录或者邮件发送列表等场景。\n## ToolBar\n工具栏用于展示针对当前界面内容的操作选项，在界面底部显示。底部最多显示5个入口，超过则收纳入“更多”子项中，在最右侧显示。\n## ComposeTitleBar\n一种普通标题栏，支持设置标题、头像（可选）和副标题（可选），可用于一级页面、二级及其以上界面配置返回键。\n\n\n\n在开始任务之前，你需要对待转译的安卓组件进行分析，以便选择合适的ArkUI组件来实现相同的功能。\n然后，你需要从上述ArkUI组件中选择一个或多个组件，使其能够实现上述安卓组件的功能，并保持布局和样式尽可能一致。\n对于无法直接转译的安卓组件，你可以通过组合多个ArkUI组件来实现，一定不能选择不存在的组件。\n在完成选择后，你需要编写一条或多条用于在知识库或RAG系统中检索的查询语句。每条查询应聚焦于不同的功能细节或组件的具体属性，帮助快速、精确地检索到相关的文档、代码示例或实现方法。\n**重要**：你只能从[AlphabetIndexer, Blank, Button, CalendarPicker, Checkbox, CheckboxGroup, Component3D, ContainerSpan, DataPanel, DatePicker, Divider, Gauge, Image, ImageAnimator, ImageSpan, LoadingProgress, Marquee, Menu, MenuItem, MenuItemGroup, Navigation, NavRouter, NavDestination, NodeContainer, PatternLock, Progress, QRCode, Radio, Rating, RichEditor, RichText, ScrollBar, Search, Select, Slider, Span, Stepper, StepperItem, SymbolSpan, SymbolGlyph, Text, TextArea, TextClock, TextPicker, TextTimer, TimePicker, Toggle, TextInput, XComponent, Canvas, CanvasGradient, CanvasPattern, DrawingRenderingContext, ImageBitmap, ImageData, Matrix2D, OffscreenCanvas, OffscreenCanvasRenderingContext2D, Path2D, Badge, Column, ColumnSplit, Counter, EmbeddedComponent, Flex, GridCol, GridRow, Grid, GridItem, List, ListItem, ListItemGroup, RelativeContainer, Row, Scroll, Stack, Tabs, TabContent, WaterFlow, WithTheme, Circle, Ellipse, Line, Polyline, Polygon, Path, Rect, Shape, AlertDialog, ActionSheet, CustomDialog, CalendarPickerDialog, DatePickerDialog, TimePickerDialog, TextPickerDialog, Video, LocationButton, PasteButton, SaveButton, ChipGroup, Chip, ToolBar, ComposeTitleBar]中选择ArkUI组件，请你认真检查，一定不可以选择不存在的ArkUI组件。\n**重要**：查询语句需要涵盖以下方面：布局属性（如宽度、高度、边距等）、组件的样式和外观（如颜色、字体、透明度等）、组件的排列和嵌套关系（如垂直或水平布局、对齐方式）、组件的功能和交互（如点击事件、输入验证），确保每条查询简洁明了且仅聚焦单一方面，突出关键信息，以便加快内容检索过程。\n\n## 以下是选择组件的额外规则：\n* 规则1：待转译的安卓布局文件中存在属性layout_constraintXXX_toXXXOf，其中XXX为Start、End、Top、Bottom等，你应该额外选择鸿蒙ArkUI的RelativeContainer组件。\n* 规则2：当使用com.google.android.material.appbar.AppBarLayout与androidx.appcompat.widget.Toolbar实现标题栏时，你应该选择Row、Text、Image等组件来实现标题栏，需要注意鸿蒙组件的Toolbar特指底部导航栏而非安卓中的标题栏。\n* 规则3：Scroll组件的子组件通常采用Column或Row组件，你应该根据滚动的方向来选择，当滚动方向为垂直时，应该选择Column组件，当滚动方向为水平时，应该选择Row组件。\n\n以下是一个示例：\n安卓组件：EditText\n<EditText\nandroid:id=\"@+id/et_1\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"50dp\"\nandroid:layout_marginBottom=\"15dp\"\nandroid:autofillHints=\"\"\nandroid:hint=\"请输入文字\"\nandroid:inputType=\"text\"\nandroid:paddingLeft=\"15dp\"\nandroid:paddingRight=\"15dp\"\nandroid:textColor=\"@color/black\"\nandroid:textSize=\"16sp\" />\n回答：\n```json\n{\n    \"components\": [\"TextInput\"],\n    \"queries\": [\n        {\n            \"queries\": [\"设置输入框的高度\", \"设置输入框的宽度\", \"设置输入框的底部边距\", \"设置输入框的提示文本\", \"设置输入框的输入类型\", \"设置输入框的左内边距\", \"设置输入框的右内边距\", \"设置输入框的文本颜色\", \"设置输入框的字体大小\"],\n            \"component\": \"TextInput\",\n        },\n    ],\n    \"idea\": \"可以选择TextInput组件来实现EditText组件的功能，设置TextInput组件的属性来实现EditText组件的样式和功能。\"\n}\n```", "component_query": {"components": ["RelativeContainer", "TextInput", "Button"], "queries": [{"component": "RelativeContainer", "queries": ["设置容器宽度占满父容器", "设置容器高度为250vp", "设置容器外边距为20vp", "设置容器背景引用资源app.media.box2", "设置容器内容居中对齐"]}, {"component": "TextInput", "queries": ["设置输入框宽度占满父容器", "设置输入框高度自适应", "设置输入框外边距为10vp", "设置输入框提示文本为“Enter Registered Email Address”", "设置输入框输入类型为电子邮件地址", "设置输入框位于父容器的顶部和底部，水平居中，垂直偏移为0.29"]}, {"component": "Button", "queries": ["设置按钮宽度自适应", "设置按钮高度自适应", "设置按钮外边距为8vp", "设置按钮背景引用资源app.media.btn_background", "设置按钮文本内容为“Submit”", "设置按钮文本颜色引用资源app.color.color_black_light", "设置按钮位于编辑文本框的下方，水平居中，垂直偏移为0.23"]}], "idea": "选择RelativeContainer组件来实现ConstraintLayout的功能，因为它支持复杂的相对布局。TextInput组件用于实现EditText的功能，Button组件用于实现Button的功能。通过设置这些组件的属性，可以实现与安卓组件相同的布局和样式。"}}}, {"id": "jdVAfrDGSrk9b3cLkX8xaG", "description": "修正组件查询", "subtasks": [], "details": {"component_query": {"components": ["RelativeContainer", "TextInput", "Button"], "queries": [{"component": "RelativeContainer", "queries": ["设置容器宽度占满父容器", "设置容器高度为250vp", "设置容器外边距为20vp", "设置容器背景引用资源app.media.box2", "设置容器内容居中对齐"]}, {"component": "TextInput", "queries": ["设置输入框宽度占满父容器", "设置输入框高度自适应", "设置输入框外边距为10vp", "设置输入框提示文本为“Enter Registered Email Address”", "设置输入框输入类型为电子邮件地址", "设置输入框位于父容器的顶部和底部，水平居中，垂直偏移为0.29"]}, {"component": "Button", "queries": ["设置按钮宽度自适应", "设置按钮高度自适应", "设置按钮外边距为8vp", "设置按钮背景引用资源app.media.btn_background", "设置按钮文本内容为“Submit”", "设置按钮文本颜色引用资源app.color.color_black_light", "设置按钮位于编辑文本框的下方，水平居中，垂直偏移为0.23"]}], "idea": "选择RelativeContainer组件来实现ConstraintLayout的功能，因为它支持复杂的相对布局。TextInput组件用于实现EditText的功能，Button组件用于实现Button的功能。通过设置这些组件的属性，可以实现与安卓组件相同的布局和样式。"}, "corrected_component_query": {"components": ["RelativeContainer", "TextInput", "Button"], "queries": [{"component": "RelativeContainer", "queries": ["设置容器宽度占满父容器", "设置容器高度为250vp", "设置容器外边距为20vp", "设置容器背景引用资源app.media.box2", "设置容器内容居中对齐"]}, {"component": "TextInput", "queries": ["设置输入框宽度占满父容器", "设置输入框高度自适应", "设置输入框外边距为10vp", "设置输入框提示文本为“Enter Registered Email Address”", "设置输入框输入类型为电子邮件地址", "设置输入框位于父容器的顶部和底部，水平居中，垂直偏移为0.29"]}, {"component": "Button", "queries": ["设置按钮宽度自适应", "设置按钮高度自适应", "设置按钮外边距为8vp", "设置按钮背景引用资源app.media.btn_background", "设置按钮文本内容为“Submit”", "设置按钮文本颜色引用资源app.color.color_black_light", "设置按钮位于编辑文本框的下方，水平居中，垂直偏移为0.23"]}], "idea": "选择RelativeContainer组件来实现ConstraintLayout的功能，因为它支持复杂的相对布局。TextInput组件用于实现EditText的功能，Button组件用于实现Button的功能。通过设置这些组件的属性，可以实现与安卓组件相同的布局和样式。"}}}, {"id": "HRTbwqFyhZDinWNBvc6XJU", "description": "查询示例文档", "subtasks": [], "details": {"query": "实现了一个约束布局容器，容器中包含一个编辑文本框和一个按钮。编辑文本框用于输入电子邮件地址，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于容器的顶部和底部，水平居中，垂直偏移为0.29。按钮位于编辑文本框的下方，显示“Submit”，背景引用资源app.media.btn_background，文本颜色为app.color.color_black_light，水平居中，垂直偏移为0.23。", "k": 3, "component_name": ["RelativeContainer", "TextInput", "Button"], "score_threshold": 0.6, "example_knowledge_results": [[{"id": null, "metadata": {"component_name": "TextInput", "source": "harmony-component-example-doc", "table_id": 185}, "page_content": "该组件展示了一个带有自定义编辑菜单选项的文本输入框。布局宽度占据屏幕的90%，高度为50vp，内边距为顶部100vp，左右5%。文本输入框的宽度为95%，高度为50vp，位于垂直布局的顶部。\n组件的样式包括文本输入框的宽度和高度，以及外边距。文本输入框的排列方式为垂直布局，确保其在界面中的位置居中且顶部有足够的空间。\n组件的功能包括自定义编辑菜单选项的文本内容、图标和回调方法。用户可以通过点击菜单项触发相应的操作，并在控制台输出相关信息。", "type": "Document"}, 0.706099808216095], [{"id": null, "metadata": {"component_name": "Button", "source": "harmony-component-example-doc", "table_id": 107}, "page_content": "该组件通过Row和Column布局实现了一个按钮展示界面。布局宽度占据整个屏幕，高度设为100%。组件的垂直方向上被分为一个Column，其中包含一个Button。Button的宽度由@State变量widthShortSize控制，高度固定为100vp，背景颜色为0x317aff。Button的文本内容由@State变量txt控制，文本样式包括溢出处理方式为TextOverflow.Clip，最大行数为1，字体大小固定为20，字体加粗，字体家族为'cursive'，字体样式为斜体。Button的文本字体大小为40。", "type": "Document"}, 0.6944089531898499], [{"id": null, "metadata": {"component_name": "TextInput", "source": "harmony-component-example-doc", "table_id": 176}, "page_content": "该组件展示了一个带有取消按钮的文本输入框。布局宽度为380vp，高度为60vp，文本输入框位于垂直布局的顶部。取消按钮的样式为常量（CONSTANT），图标大小为45vp，颜色为蓝色，图标资源名为'app.media.icon'。文本输入框的内容变化会实时更新到组件的状态变量'text'中。", "type": "Document"}, 0.6897916197776794]], "component_examples": {"TextInput": [{"description": "该组件展示了一个带有自定义编辑菜单选项的文本输入框。布局宽度占据屏幕的90%，高度为50vp，内边距为顶部100vp，左右5%。文本输入框的宽度为95%，高度为50vp，位于垂直布局的顶部。\n组件的样式包括文本输入框的宽度和高度，以及外边距。文本输入框的排列方式为垂直布局，确保其在界面中的位置居中且顶部有足够的空间。\n组件的功能包括自定义编辑菜单选项的文本内容、图标和回调方法。用户可以通过点击菜单项触发相应的操作，并在控制台输出相关信息。", "code": "@Entry\n@Component\nstruct TextInputExample {\n  @State text: string = 'TextInput editMenuOptions' // 初始化文本输入框的默认文本内容\n\n  // 自定义菜单项的创建方法\n  onCreateMenu(menuItems: Array<TextMenuItem>) {\n    menuItems.forEach((value, index) => {\n      value.icon = $r('app.media.startIcon') // 设置菜单项的图标\n      if (value.id.equals(TextMenuItemId.COPY)) {\n        value.content = \"复制change\" // 修改复制菜单项的文本内容\n      }\n      if (value.id.equals(TextMenuItemId.SELECT_ALL)) {\n        value.content = \"全选change\" // 修改全选菜单项的文本内容\n      }\n    })\n    let item1: TextMenuItem = {\n      content: 'custom1', // 自定义菜单项1的文本内容\n      icon: $r('app.media.startIcon'), // 自定义菜单项1的图标\n      id: TextMenuItemId.of('custom1'), // 自定义菜单项1的唯一标识\n    }\n    let item2: TextMenuItem = {\n      content: 'custom2', // 自定义菜单项2的文本内容\n      id: TextMenuItemId.of('custom2'), // 自定义菜单项2的唯一标识\n      icon: $r('app.media.startIcon'), // 自定义菜单项2的图标\n    }\n    menuItems.push(item1) // 将自定义菜单项1添加到菜单项列表的末尾\n    menuItems.unshift(item2) // 将自定义菜单项2添加到菜单项列表的开头\n    return menuItems // 返回修改后的菜单项列表\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text }) // 创建一个文本输入框，初始文本为@State变量text的值\n        .width('95%') // 设置文本输入框的宽度为95%\n        .height(50) // 设置文本输入框的高度为50vp\n        .editMenuOptions({\n          onCreateMenu: this.onCreateMenu, // 设置自定义菜单项的创建方法\n          onMenuItemClick: (menuItem: TextMenuItem, textRange: TextRange) => { // 设置菜单项点击的回调方法\n            if (menuItem.id.equals(TextMenuItemId.of(\"custom2\"))) {\n              console.log(\"拦截 id: custom2 start:\" + textRange.start + \"; end:\" + textRange.end) // 拦截自定义菜单项2的点击事件，并输出相关信息\n              return true; // 返回true表示拦截该事件\n            }\n            if (menuItem.id.equals(TextMenuItemId.COPY)) {\n              console.log(\"拦截 COPY start:\" + textRange.start + \"; end:\" + textRange.end) // 拦截复制菜单项的点击事件，并输出相关信息\n              return true; // 返回true表示拦截该事件\n            }\n            if (menuItem.id.equals(TextMenuItemId.SELECT_ALL)) {\n              console.log(\"不拦截 SELECT_ALL start:\" + textRange.start + \"; end:\" + textRange.end) // 不拦截全选菜单项的点击事件，并输出相关信息\n              return false; // 返回false表示不拦截该事件\n            }\n            return false; // 默认返回false，不拦截其他菜单项的点击事件\n          }\n        })\n        .margin({ top: 100 }) // 设置文本输入框的上边距为100vp\n    }\n    .width(\"90%\") // 设置垂直布局的宽度为90%\n    .margin(\"5%\") // 设置垂直布局的左右边距为5%\n  }\n}"}, {"description": "该组件展示了一个带有取消按钮的文本输入框。布局宽度为380vp，高度为60vp，文本输入框位于垂直布局的顶部。取消按钮的样式为常量（CONSTANT），图标大小为45vp，颜色为蓝色，图标资源名为'app.media.icon'。文本输入框的内容变化会实时更新到组件的状态变量'text'中。", "code": "@Entry\n@Component\nstruct ClearNodeExample {\n  @State text: string = '' // 定义一个状态变量'text'，用于存储文本输入框的内容\n  controller: TextInputController = new TextInputController() // 创建一个TextInputController实例，用于控制文本输入框的行为\n\n  build() {\n    Column() { // 使用Column布局组件，将子组件垂直排列\n      TextInput({ placeholder: 'input ...', controller: this.controller }) // 创建一个文本输入框，占位符为'input ...'，并使用之前创建的controller进行控制\n        .width(380) // 设置文本输入框的宽度为380vp\n        .height(60) // 设置文本输入框的高度为60vp\n        .cancelButton({ // 设置文本输入框的取消按钮\n          style: CancelButtonStyle.CONSTANT, // 设置取消按钮的样式为常量（CONSTANT）\n          icon: { // 设置取消按钮的图标\n            size: 45, // 设置图标的大小为45vp\n            src: $r('app.media.icon'), // 设置图标的资源名为'app.media.icon'\n            color: Color.Blue // 设置图标的颜色为蓝色\n          }\n        })\n        .onChange((value: string) => { // 监听文本输入框的内容变化事件\n          this.text = value // 将文本输入框的内容实时更新到状态变量'text'中\n        })\n    }\n  }\n}"}], "Button": [{"description": "该组件通过Row和Column布局实现了一个按钮展示界面。布局宽度占据整个屏幕，高度设为100%。组件的垂直方向上被分为一个Column，其中包含一个Button。Button的宽度由@State变量widthShortSize控制，高度固定为100vp，背景颜色为0x317aff。Button的文本内容由@State变量txt控制，文本样式包括溢出处理方式为TextOverflow.Clip，最大行数为1，字体大小固定为20，字体加粗，字体家族为'cursive'，字体样式为斜体。Button的文本字体大小为40。", "code": "@Entry\n@Component\nstruct buttonTestDemo {\n  @State txt: string = 'overflowTextOverlengthTextOverflow.Clip'; // 按钮的文本内容\n  @State widthShortSize: number = 210; // 按钮的宽度\n\n  build() {\n    Row() {\n      Column() {\n        Button(this.txt) // 创建一个按钮，文本内容为txt\n          .width(this.widthShortSize) // 设置按钮的宽度为widthShortSize\n          .height(100) // 设置按钮的高度为100vp\n          .backgroundColor(0x317aff) // 设置按钮的背景颜色为0x317aff\n          .labelStyle({ \n            overflow: TextOverflow.Clip, // 设置文本溢出处理方式为裁剪\n            maxLines: 1, // 设置文本最大行数为1\n            minFontSize: 20, // 设置最小字体大小为20\n            maxFontSize: 20, // 设置最大字体大小为20\n            font: {\n              size: 20, // 设置字体大小为20\n              weight: FontWeight.Bolder, // 设置字体加粗\n              family: 'cursive', // 设置字体家族为'cursive'\n              style: FontStyle.Italic // 设置字体样式为斜体\n            }\n          })\n          .fontSize(40) // 设置按钮文本的字体大小为40\n      }\n      .width('100%') // 设置Column的宽度为100%\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}"}]}}}, {"id": "aa2QqS285imy3xiWMHXMzZ", "description": "查询组件文档", "subtasks": [{"id": "j5yembTEycAUbx4wFvFDRy", "description": "依次从知识库中查询每个组件的相关属性、事件文档", "subtasks": [{"id": "3mu4Z8k7CPic2jQDHvPQsS", "description": "查询组件RelativeContainer的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置容器宽度占满父容器", "设置容器高度为250vp", "设置容器外边距为20vp", "设置容器背景引用资源app.media.box2", "设置容器内容居中对齐"], "n_results": 10, "query_results": {"ids": [["a60e508e-c659-4421-ac03-635023bfd48b", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "3b346f3c-3633-48c0-8818-19298f847010", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "21ee8daa-e322-4790-9c54-3b3053660750", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "83d130bd-f5c0-4367-837b-4f78d745876c", "17168701-4515-4bd1-adab-7c82d6e2594c", "f808797e-8ece-4205-900e-3df29812f76d"], ["ba3ca22b-d3a2-40a3-b6ec-e65bba054853", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "a60e508e-c659-4421-ac03-635023bfd48b", "f808797e-8ece-4205-900e-3df29812f76d", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "3b346f3c-3633-48c0-8818-19298f847010", "1c612029-2f9a-4463-810c-6dd60265775f", "17168701-4515-4bd1-adab-7c82d6e2594c"], ["ebfc6e4a-6704-427e-8bb1-e984d106ffb0", "697ccc64-521e-43fa-856a-82ed587a7cd0", "f808797e-8ece-4205-900e-3df29812f76d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "a60e508e-c659-4421-ac03-635023bfd48b", "211e6dd1-0565-438a-9215-164b822d7a98", "17168701-4515-4bd1-adab-7c82d6e2594c"], ["f808797e-8ece-4205-900e-3df29812f76d", "211e6dd1-0565-438a-9215-164b822d7a98", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "17168701-4515-4bd1-adab-7c82d6e2594c", "52d15010-5e05-4d41-af9c-6bebf794d7a0", "3b346f3c-3633-48c0-8818-19298f847010", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "a60e508e-c659-4421-ac03-635023bfd48b"], ["3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "83d130bd-f5c0-4367-837b-4f78d745876c", "17168701-4515-4bd1-adab-7c82d6e2594c", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "3b346f3c-3633-48c0-8818-19298f847010", "f808797e-8ece-4205-900e-3df29812f76d", "a60e508e-c659-4421-ac03-635023bfd48b", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "211e6dd1-0565-438a-9215-164b822d7a98"]], "distances": [[0.3370906710624695, 0.34032928943634033, 0.38750696182250977, 0.39354681968688965, 0.4136196970939636, 0.4273325204849243, 0.4390307664871216, 0.4518510699272156, 0.4608336091041565, 0.4619889259338379], [0.4069678783416748, 0.4214009642601013, 0.44057196378707886, 0.44792675971984863, 0.448352575302124, 0.4515327215194702, 0.45587408542633057, 0.47117966413497925, 0.4759014844894409, 0.47735369205474854], [0.3777703046798706, 0.40330052375793457, 0.4172242283821106, 0.43140095472335815, 0.44051945209503174, 0.4412769079208374, 0.4528117775917053, 0.45360201597213745, 0.4561825394630432, 0.4615415930747986], [0.39317095279693604, 0.4115903377532959, 0.41557663679122925, 0.42669010162353516, 0.45493584871292114, 0.4727177023887634, 0.48261553049087524, 0.48388391733169556, 0.48759788274765015, 0.4877668023109436], [0.265028715133667, 0.27504825592041016, 0.33892911672592163, 0.35451245307922363, 0.37689751386642456, 0.3942089080810547, 0.40983152389526367, 0.4267807602882385, 0.42680948972702026, 0.43676817417144775]], "metadatas": [[{"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "fontFamily", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n"], ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n"], ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n"], ["设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置字体列表。\n属性名称：fontFamily\n属性参数：{'value': {\"type\":[\"string\",\"Resource\"],\"required\":true,\"description\":\"字体列表。默认字体'HarmonyOS Sans'。应用当前支持'HarmonyOS Sans'字体和注册自定义字体。卡片当前仅支持'HarmonyOS Sans'字体。\",\"default\":\"HarmonyOS Sans\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n"], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "RD7sbpa2S22jfbaMHtHKvV", "description": "查询组件TextInput的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置输入框宽度占满父容器", "设置输入框高度自适应", "设置输入框外边距为10vp", "设置输入框提示文本为“Enter Registered Email Address”", "设置输入框输入类型为电子邮件地址", "设置输入框位于父容器的顶部和底部，水平居中，垂直偏移为0.29"], "n_results": 10, "query_results": {"ids": [["4ff821fb-da30-40e5-951f-59b5ef4c5b63", "e8b0efb8-ce73-4e62-a0c4-ecea21cea54a", "a366eead-1527-4911-a1cd-390fa6c83333", "66cc300e-976b-463b-af4a-5045a6385605", "4883d1eb-3626-4644-a505-7e1c247b0ff8", "a25abed7-be07-4292-93a8-50d179c2dd0f", "0d758fe9-b2c2-4604-ae4a-cbb489353091", "ee6c725c-cee4-4ada-9005-8ee6d0c341d9", "4a505ac1-fcd3-4b73-82a5-8000891e5677", "716ebdbe-0cdf-446c-be2a-dd3abd3105df"], ["11dea1f2-53e5-4597-9ec7-8ed44c599575", "7536651a-52bc-46e2-bf74-d5a0d96195b6", "d38894b0-7827-4881-a2d5-507882c67a53", "304d3748-0dd9-48ab-ae46-032a1ffb35d3", "ca889acb-8158-4826-b65a-249b9cc6a4cd", "5ab075b3-7d5a-4689-81a7-9e6373b437e3", "b68aa50b-6ac4-4612-8b02-e9600001b757", "8948066f-7b3c-4e73-bb41-cf7620ea5dd5", "2545c560-9fb1-49fb-8a48-13c8de24fc39", "7311bd05-6eff-4dcd-8483-75b8749163f2"], ["2129b89c-de72-4776-8b5d-6715da945ae1", "ee6c725c-cee4-4ada-9005-8ee6d0c341d9", "1cdaeb08-30c1-419c-9061-fc784906a93a", "7536651a-52bc-46e2-bf74-d5a0d96195b6", "6ee023e7-30fd-4634-858b-ef1aa5eabe39", "8948066f-7b3c-4e73-bb41-cf7620ea5dd5", "11dea1f2-53e5-4597-9ec7-8ed44c599575", "304d3748-0dd9-48ab-ae46-032a1ffb35d3", "ca889acb-8158-4826-b65a-249b9cc6a4cd", "5ab075b3-7d5a-4689-81a7-9e6373b437e3"], ["ca889acb-8158-4826-b65a-249b9cc6a4cd", "304d3748-0dd9-48ab-ae46-032a1ffb35d3", "8c3b2f32-ee64-4286-9359-ca46bfea19a0", "9dd442b7-b61c-4686-b62a-6b8cde917e75", "7311bd05-6eff-4dcd-8483-75b8749163f2", "8300ad29-fca7-4e11-a39d-d600de37d672", "ff2abd32-7129-4e26-a854-1b0ecbfe3478", "528be50b-58cc-4aa5-89df-7e46b1a9d2fc", "7536651a-52bc-46e2-bf74-d5a0d96195b6", "27bc8b7f-c3bd-4a31-9301-cf072be9046f"], ["ca889acb-8158-4826-b65a-249b9cc6a4cd", "304d3748-0dd9-48ab-ae46-032a1ffb35d3", "9dd442b7-b61c-4686-b62a-6b8cde917e75", "ff2abd32-7129-4e26-a854-1b0ecbfe3478", "7311bd05-6eff-4dcd-8483-75b8749163f2", "2545c560-9fb1-49fb-8a48-13c8de24fc39", "8300ad29-fca7-4e11-a39d-d600de37d672", "8c3b2f32-ee64-4286-9359-ca46bfea19a0", "528be50b-58cc-4aa5-89df-7e46b1a9d2fc", "7536651a-52bc-46e2-bf74-d5a0d96195b6"], ["4a505ac1-fcd3-4b73-82a5-8000891e5677", "e8b0efb8-ce73-4e62-a0c4-ecea21cea54a", "66cc300e-976b-463b-af4a-5045a6385605", "0d758fe9-b2c2-4604-ae4a-cbb489353091", "7536651a-52bc-46e2-bf74-d5a0d96195b6", "4ff821fb-da30-40e5-951f-59b5ef4c5b63", "a25abed7-be07-4292-93a8-50d179c2dd0f", "ee6c725c-cee4-4ada-9005-8ee6d0c341d9", "0d0770f6-d1a4-41b4-8edf-605cccb9ab6c", "dc4e6d5f-ec32-4f4d-bb9d-550282e80a54"]], "distances": [[0.36653947830200195, 0.3738146424293518, 0.3922632932662964, 0.4248189926147461, 0.4265592098236084, 0.441058874130249, 0.44240468740463257, 0.45373404026031494, 0.45768874883651733, 0.4583094120025635], [0.24405992031097412, 0.33133143186569214, 0.3463621139526367, 0.3839527368545532, 0.39121687412261963, 0.3955869674682617, 0.39938491582870483, 0.4038171172142029, 0.4132125973701477, 0.41541165113449097], [0.32636862993240356, 0.3596690893173218, 0.37950342893600464, 0.38606882095336914, 0.38758182525634766, 0.4063730239868164, 0.40946149826049805, 0.41029220819473267, 0.4130236506462097, 0.4173322916030884], [0.39547866582870483, 0.40614187717437744, 0.4197518229484558, 0.4228673577308655, 0.4257722496986389, 0.44142550230026245, 0.4434986114501953, 0.4458657503128052, 0.447603702545166, 0.44966810941696167], [0.29923492670059204, 0.32402414083480835, 0.3445640802383423, 0.3916448950767517, 0.39211297035217285, 0.408641517162323, 0.40924930572509766, 0.40988802909851074, 0.41224753856658936, 0.4127371311187744], [0.3471682071685791, 0.34987568855285645, 0.36006635427474976, 0.3631783127784729, 0.3654934763908386, 0.3707079291343689, 0.37852293252944946, 0.3846151828765869, 0.38675951957702637, 0.39047420024871826]], "metadatas": [[{"component_name": "TextInput", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "size", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "TextInput", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "maxLength", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "maxLines", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "passwordIcon", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "TextInput", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "showUnderline", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "maxLines", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "maxLength", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "showPasswordIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "enterKeyType", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "passwordIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "caretColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "barState", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "inputFilter", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "onEditChanged", "source": "harmony-component-doc", "type": "event"}], [{"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "enterKeyType", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "barState", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "passwordIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "caretColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "showPasswordIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "inputFilter", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "TextInput", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n"], ["组件设置为内联输入风格时，设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", "设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", "设置文本的最大输入字符数。\n属性名称：maxLength\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大输入字符数。\",\"default\":\"Infinity\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置内联输入风格编辑态时文本可显示的最大行数。\n属性名称：maxLines\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内联输入风格编辑态时文本可显示的最大行数。\",\"default\":3}}\n", "设置TextInput通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"通过点击以外的方式获焦时，是否绑定输入法。\",\"default\":true}}\n", "设置当密码输入模式时，输入框末尾的图标。\n属性名称：passwordIcon\n属性参数：{'value': {\"type\":\"PasswordIcon\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标。\",\"default\":\"系统提供的密码图标\"}}\n"], ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置是否开启下划线。下划线默认颜色为'#33182431'，默认粗细为1px，文本框尺寸48vp，下划线只支持InputType.Normal类型。\n属性名称：showUnderline\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否开启下划线。\",\"default\":false}}\n", "设置内联输入风格编辑态时文本可显示的最大行数。\n属性名称：maxLines\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内联输入风格编辑态时文本可显示的最大行数。\",\"default\":3}}\n", "组件设置为内联输入风格时，设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", "设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", "设置文本的最大输入字符数。\n属性名称：maxLength\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大输入字符数。\",\"default\":\"Infinity\"}}\n"], ["设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", "设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", "设置当密码输入模式时，输入框末尾的图标是否显示。\n属性名称：showPasswordIcon\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标是否显示。\",\"default\":true}}\n", "设置输入法回车键类型。\n属性名称：enterKeyType\n属性参数：{'value': {\"type\":\"EnterKeyType\",\"required\":true,\"description\":\"输入法回车键类型。\",\"default\":\"EnterKeyType.Done\"}}\n", "设置当密码输入模式时，输入框末尾的图标。\n属性名称：passwordIcon\n属性参数：{'value': {\"type\":\"PasswordIcon\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标。\",\"default\":\"系统提供的密码图标\"}}\n", "设置输入框光标颜色。\n属性名称：caretColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"输入框光标颜色。\",\"default\":null}}\n", "设置内联输入风格编辑态时滚动条的显示模式。\n属性名称：barState\n属性参数：{'value': {\"type\":\"BarState\",\"required\":true,\"description\":\"内联输入风格编辑态时滚动条的显示模式。\",\"default\":\"BarState.Auto\"}}\n", "通过正则表达式设置输入过滤器。匹配表达式的输入允许显示，不匹配的输入将被过滤。仅支持单个字符匹配，不支持字符串匹配。\n属性名称：inputFilter\n属性参数：{'value': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"正则表达式。\",\"default\":null}, 'error': {\"type\":\"(value: string) => void\",\"required\":false,\"description\":\"正则匹配失败时，返回被过滤的内容。\",\"default\":null}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "输入状态变化时，触发该回调。\n事件名称：onEditChanged\n事件参数：{'isEditing': {\"type\":\"boolean\",\"required\":true,\"description\":\"为True表示正在输入。\",\"default\":null}}\n事件返回值：None\n"], ["设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", "设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", "设置输入法回车键类型。\n属性名称：enterKeyType\n属性参数：{'value': {\"type\":\"EnterKeyType\",\"required\":true,\"description\":\"输入法回车键类型。\",\"default\":\"EnterKeyType.Done\"}}\n", "设置内联输入风格编辑态时滚动条的显示模式。\n属性名称：barState\n属性参数：{'value': {\"type\":\"BarState\",\"required\":true,\"description\":\"内联输入风格编辑态时滚动条的显示模式。\",\"default\":\"BarState.Auto\"}}\n", "设置当密码输入模式时，输入框末尾的图标。\n属性名称：passwordIcon\n属性参数：{'value': {\"type\":\"PasswordIcon\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标。\",\"default\":\"系统提供的密码图标\"}}\n", "设置TextInput通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"通过点击以外的方式获焦时，是否绑定输入法。\",\"default\":true}}\n", "设置输入框光标颜色。\n属性名称：caretColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"输入框光标颜色。\",\"default\":null}}\n", "设置当密码输入模式时，输入框末尾的图标是否显示。\n属性名称：showPasswordIcon\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标是否显示。\",\"default\":true}}\n", "通过正则表达式设置输入过滤器。匹配表达式的输入允许显示，不匹配的输入将被过滤。仅支持单个字符匹配，不支持字符串匹配。\n属性名称：inputFilter\n属性参数：{'value': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"正则表达式。\",\"default\":null}, 'error': {\"type\":\"(value: string) => void\",\"required\":false,\"description\":\"正则匹配失败时，返回被过滤的内容。\",\"default\":null}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n"], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}, {"id": "22oDjkXfyg6DXrioBM3Ts2", "description": "查询组件Button的相关属性、事件文档", "subtasks": [], "details": {"query": ["设置按钮宽度自适应", "设置按钮高度自适应", "设置按钮外边距为8vp", "设置按钮背景引用资源app.media.btn_background", "设置按钮文本内容为“Submit”", "设置按钮文本颜色引用资源app.color.color_black_light", "设置按钮位于编辑文本框的下方，水平居中，垂直偏移为0.23"], "n_results": 10, "query_results": {"ids": [["c88bcc94-37e8-4bae-81fa-808d9fc999fc", "415ed655-7120-4c1d-82e8-fb267be8d314", "d72cd4ce-3002-4093-b513-e215b32edd92", "344d9ed0-2287-4e9c-af3f-f900f3811367", "fbd45916-ae40-41e5-ad0e-db9141e2f211", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "88815f5d-ec08-4617-8dd3-34317c7fc116", "891d6794-37ca-4513-b4a4-51271737087d", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e"], ["c88bcc94-37e8-4bae-81fa-808d9fc999fc", "28e4e8e0-64ca-482d-ab31-15ecad19da20", "88815f5d-ec08-4617-8dd3-34317c7fc116", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e", "344d9ed0-2287-4e9c-af3f-f900f3811367", "fbd45916-ae40-41e5-ad0e-db9141e2f211", "d72cd4ce-3002-4093-b513-e215b32edd92", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "891d6794-37ca-4513-b4a4-51271737087d"], ["a9722864-894a-401e-bf14-a89aa942a2fb", "5de876b2-9673-4565-8218-2b98e0cbb6c5", "c88bcc94-37e8-4bae-81fa-808d9fc999fc", "fbd45916-ae40-41e5-ad0e-db9141e2f211", "344d9ed0-2287-4e9c-af3f-f900f3811367", "415ed655-7120-4c1d-82e8-fb267be8d314", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "28e4e8e0-64ca-482d-ab31-15ecad19da20", "e8e8d577-42ca-4adb-872f-c73caa165bf0", "d72cd4ce-3002-4093-b513-e215b32edd92"], ["e4735f7c-cec8-4918-8cbe-ac7f693436d1", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e", "77094317-b0b6-49da-8399-ac9ac1ebb950", "a354684b-a6d9-4430-8d08-30e5f693aa6e", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "c88bcc94-37e8-4bae-81fa-808d9fc999fc", "12b00ad7-c516-4bdc-902e-47014dbc30e0", "b0d756c8-db53-4fd1-80ad-20a56a94bd05", "bb4fa8ab-c939-4780-ac30-042c7621c3f9", "041639c8-a726-47eb-af58-1e742ff2ae41"], ["e4735f7c-cec8-4918-8cbe-ac7f693436d1", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "c88bcc94-37e8-4bae-81fa-808d9fc999fc", "77094317-b0b6-49da-8399-ac9ac1ebb950", "b0d756c8-db53-4fd1-80ad-20a56a94bd05", "bb4fa8ab-c939-4780-ac30-042c7621c3f9", "12b00ad7-c516-4bdc-902e-47014dbc30e0", "2417c998-d657-4120-8a25-f60197fa4238", "a354684b-a6d9-4430-8d08-30e5f693aa6e"], ["a354684b-a6d9-4430-8d08-30e5f693aa6e", "b0d756c8-db53-4fd1-80ad-20a56a94bd05", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e", "c88bcc94-37e8-4bae-81fa-808d9fc999fc", "12b00ad7-c516-4bdc-902e-47014dbc30e0", "041639c8-a726-47eb-af58-1e742ff2ae41", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "bb4fa8ab-c939-4780-ac30-042c7621c3f9", "fbea709c-b9ae-4d9b-88ab-bbb9534de778"], ["c88bcc94-37e8-4bae-81fa-808d9fc999fc", "88815f5d-ec08-4617-8dd3-34317c7fc116", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "b0d756c8-db53-4fd1-80ad-20a56a94bd05", "a6a65ca2-6edb-4990-add8-0378e6aa0895", "12b00ad7-c516-4bdc-902e-47014dbc30e0", "2417c998-d657-4120-8a25-f60197fa4238", "bb4fa8ab-c939-4780-ac30-042c7621c3f9", "5de876b2-9673-4565-8218-2b98e0cbb6c5", "a9722864-894a-401e-bf14-a89aa942a2fb"]], "distances": [[0.3730390667915344, 0.3870389461517334, 0.4155348539352417, 0.42027825117111206, 0.4225345253944397, 0.42847615480422974, 0.43915271759033203, 0.4392887353897095, 0.4501909017562866, 0.4518117308616638], [0.37611716985702515, 0.3885886073112488, 0.4019036293029785, 0.41726285219192505, 0.42424315214157104, 0.42496752738952637, 0.43098223209381104, 0.43382441997528076, 0.4372199773788452, 0.4526112675666809], [0.33223921060562134, 0.3755185008049011, 0.41060447692871094, 0.43499916791915894, 0.44058936834335327, 0.44476085901260376, 0.44547879695892334, 0.4531574845314026, 0.4538951516151428, 0.46353769302368164], [0.3618360757827759, 0.3924156427383423, 0.42114412784576416, 0.4266194701194763, 0.4281812906265259, 0.43063950538635254, 0.4357817769050598, 0.4519442915916443, 0.4543588161468506, 0.46195369958877563], [0.38828378915786743, 0.41889262199401855, 0.434048056602478, 0.43688827753067017, 0.44186365604400635, 0.4491851329803467, 0.44998228549957275, 0.46028363704681396, 0.4661022424697876, 0.4672392010688782], [0.3425079584121704, 0.3566095232963562, 0.38829267024993896, 0.4355476498603821, 0.4371359944343567, 0.4377892017364502, 0.44947701692581177, 0.4578307271003723, 0.4598134160041809, 0.4730817675590515], [0.3610841631889343, 0.3790777921676636, 0.3832605481147766, 0.3859434723854065, 0.38974618911743164, 0.3903926610946655, 0.39353644847869873, 0.3988134264945984, 0.3988625407218933, 0.4006548523902893]], "metadatas": [[{"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Button", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "size", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "role", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontFamily", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "role", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Button", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontFamily", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontWeight", "source": "harmony-component-doc", "type": "attribute"}], [{"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}]], "embeddings": null, "documents": [["设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n"], ["设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置字体大小。\n属性名称：fontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"字体大小。fontSize为number类型时，使用fp单位。字体默认大小16fp。不支持设置百分比字符串。\",\"default\":\"16fp\"}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n"], ["设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", "设置Button组件的角色。\n属性名称：role\n属性参数：{'value': {\"type\":[\"ButtonRole\"],\"required\":true,\"description\":\"Button组件的角色\",\"default\":\"ButtonRole.NORMAL\"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置字体列表。\n属性名称：fontFamily\n属性参数：{'value': {\"type\":[\"string\",\"Resource\"],\"required\":true,\"description\":\"字体列表。默认字体'HarmonyOS Sans'。应用当前支持'HarmonyOS Sans'字体和注册自定义字体。卡片当前仅支持'HarmonyOS Sans'字体。\",\"default\":\"HarmonyOS Sans\"}}\n"], ["设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置Button组件的角色。\n属性名称：role\n属性参数：{'value': {\"type\":[\"ButtonRole\"],\"required\":true,\"description\":\"Button组件的角色\",\"default\":\"ButtonRole.NORMAL\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n"], ["设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", "设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置字体列表。\n属性名称：fontFamily\n属性参数：{'value': {\"type\":[\"string\",\"Resource\"],\"required\":true,\"description\":\"字体列表。默认字体'HarmonyOS Sans'。应用当前支持'HarmonyOS Sans'字体和注册自定义字体。卡片当前仅支持'HarmonyOS Sans'字体。\",\"default\":\"HarmonyOS Sans\"}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本的字体粗细，设置过大可能会在不同字体下有截断。\n属性名称：fontWeight\n属性参数：{'value': {\"type\":[\"number\",\"FontWeight\",\"string\"],\"required\":true,\"description\":\"文本的字体粗细，number类型取值[100, 900]，取值间隔为100，默认为400，取值越大，字体越粗。string类型仅支持number类型取值的字符串形式，例如\\\"400\\\"，以及\\\"bold\\\"、\\\"bolder\\\"、\\\"lighter\\\"、\\\"regular\\\"、\\\"medium\\\"，分别对应FontWeight中相应的枚举值。默认值：FontWeight.Normal\",\"default\":\"FontWeight.Normal\"}}\n"], ["设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n"]], "uris": null, "data": null, "included": ["metadatas", "documents", "distances"]}}}], "details": null}, {"id": "Hsxh7GJJwj9DQ8yzrwMpcz", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "KpDBZT79K6TRSsUGSw43gx", "description": "过滤低于阈值的查询结果: 设置容器宽度占满父容器", "subtasks": [], "details": {"query": "设置容器宽度占满父容器", "result_ids": ["a60e508e-c659-4421-ac03-635023bfd48b", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "3b346f3c-3633-48c0-8818-19298f847010", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "21ee8daa-e322-4790-9c54-3b3053660750", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "83d130bd-f5c0-4367-837b-4f78d745876c", "17168701-4515-4bd1-adab-7c82d6e2594c", "f808797e-8ece-4205-900e-3df29812f76d"], "result_documents": ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3370906710624695, 0.34032928943634033, 0.38750696182250977, 0.39354681968688965, 0.4136196970939636, 0.4273325204849243, 0.4390307664871216, 0.4518510699272156, 0.4608336091041565, 0.4619889259338379], "threshold": 0.6, "query_text_results": [["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, 0.6629093289375305], ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.6596707105636597], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6124930381774902], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6064531803131104]]}}, {"id": "EzjQbH7vw7HjC78ZMsrmjY", "description": "过滤低于阈值的查询结果: 设置容器高度为250vp", "subtasks": [], "details": {"query": "设置容器高度为250vp", "result_ids": ["ba3ca22b-d3a2-40a3-b6ec-e65bba054853", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "a60e508e-c659-4421-ac03-635023bfd48b", "f808797e-8ece-4205-900e-3df29812f76d", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "3b346f3c-3633-48c0-8818-19298f847010", "1c612029-2f9a-4463-810c-6dd60265775f", "17168701-4515-4bd1-adab-7c82d6e2594c"], "result_documents": ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.4069678783416748, 0.4214009642601013, 0.44057196378707886, 0.44792675971984863, 0.448352575302124, 0.4515327215194702, 0.45587408542633057, 0.47117966413497925, 0.4759014844894409, 0.47735369205474854], "threshold": 0.6, "query_text_results": []}}, {"id": "mFb87CPFDqiJc2Q7NF5yw9", "description": "过滤低于阈值的查询结果: 设置容器外边距为20vp", "subtasks": [], "details": {"query": "设置容器外边距为20vp", "result_ids": ["ebfc6e4a-6704-427e-8bb1-e984d106ffb0", "697ccc64-521e-43fa-856a-82ed587a7cd0", "f808797e-8ece-4205-900e-3df29812f76d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "0bc2758f-c6cd-47f8-b78e-7ddde567af36", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "a60e508e-c659-4421-ac03-635023bfd48b", "211e6dd1-0565-438a-9215-164b822d7a98", "17168701-4515-4bd1-adab-7c82d6e2594c"], "result_documents": ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3777703046798706, 0.40330052375793457, 0.4172242283821106, 0.43140095472335815, 0.44051945209503174, 0.4412769079208374, 0.4528117775917053, 0.45360201597213745, 0.4561825394630432, 0.4615415930747986], "threshold": 0.6, "query_text_results": [["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, 0.6222296953201294]]}}, {"id": "4yVTXmFRWbHnK6jnG3P8nw", "description": "过滤低于阈值的查询结果: 设置容器背景引用资源app.media.box2", "subtasks": [], "details": {"query": "设置容器背景引用资源app.media.box2", "result_ids": ["f808797e-8ece-4205-900e-3df29812f76d", "211e6dd1-0565-438a-9215-164b822d7a98", "3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "17168701-4515-4bd1-adab-7c82d6e2594c", "52d15010-5e05-4d41-af9c-6bebf794d7a0", "3b346f3c-3633-48c0-8818-19298f847010", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "a60e508e-c659-4421-ac03-635023bfd48b"], "result_documents": ["设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置字体列表。\n属性名称：fontFamily\n属性参数：{'value': {\"type\":[\"string\",\"Resource\"],\"required\":true,\"description\":\"字体列表。默认字体'HarmonyOS Sans'。应用当前支持'HarmonyOS Sans'字体和注册自定义字体。卡片当前仅支持'HarmonyOS Sans'字体。\",\"default\":\"HarmonyOS Sans\"}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "fontFamily", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.39317095279693604, 0.4115903377532959, 0.41557663679122925, 0.42669010162353516, 0.45493584871292114, 0.4727177023887634, 0.48261553049087524, 0.48388391733169556, 0.48759788274765015, 0.4877668023109436], "threshold": 0.6, "query_text_results": [["设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, 0.606829047203064]]}}, {"id": "8qPxxgUEYptNq2VJbKfAzN", "description": "过滤低于阈值的查询结果: 设置容器内容居中对齐", "subtasks": [], "details": {"query": "设置容器内容居中对齐", "result_ids": ["3e0bb5dc-016a-40bb-9b56-0e7147e2d87d", "3538d425-0382-47f9-8a9c-2f6a4a6dec6d", "83d130bd-f5c0-4367-837b-4f78d745876c", "17168701-4515-4bd1-adab-7c82d6e2594c", "1e71e552-71d5-4a32-9d22-ad916a0cbedd", "3b346f3c-3633-48c0-8818-19298f847010", "f808797e-8ece-4205-900e-3df29812f76d", "a60e508e-c659-4421-ac03-635023bfd48b", "542f456a-8c59-427c-9bd7-73cfa0058f8e", "211e6dd1-0565-438a-9215-164b822d7a98"], "result_documents": ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置RelativeContainer容器内的辅助线。\n属性名称：guideLine\n属性参数：{'value': {\"type\":\"Array<GuideLineStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条guideline。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "barrier", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "RelativeContainer", "name": "guideLine", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.265028715133667, 0.27504825592041016, 0.33892911672592163, 0.35451245307922363, 0.37689751386642456, 0.3942089080810547, 0.40983152389526367, 0.4267807602882385, 0.42680948972702026, 0.43676817417144775], "threshold": 0.6, "query_text_results": [["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "RelativeContainer", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.734971284866333], ["子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n", {"component_name": "RelativeContainer", "name": "alignSelf", "source": "harmony-component-doc", "type": "attribute"}, 0.6610708832740784], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "RelativeContainer", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6454875469207764], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "RelativeContainer", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6231024861335754]]}}], "details": null}, {"id": "JjPsQdG5vmE9mB3inzPKHC", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "2VXykEG6zAdziKLu3SkEcv", "description": "过滤低于阈值的查询结果: 设置输入框宽度占满父容器", "subtasks": [], "details": {"query": "设置输入框宽度占满父容器", "result_ids": ["4ff821fb-da30-40e5-951f-59b5ef4c5b63", "e8b0efb8-ce73-4e62-a0c4-ecea21cea54a", "a366eead-1527-4911-a1cd-390fa6c83333", "66cc300e-976b-463b-af4a-5045a6385605", "4883d1eb-3626-4644-a505-7e1c247b0ff8", "a25abed7-be07-4292-93a8-50d179c2dd0f", "0d758fe9-b2c2-4604-ae4a-cbb489353091", "ee6c725c-cee4-4ada-9005-8ee6d0c341d9", "4a505ac1-fcd3-4b73-82a5-8000891e5677", "716ebdbe-0cdf-446c-be2a-dd3abd3105df"], "result_documents": ["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "TextInput", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "size", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.36653947830200195, 0.3738146424293518, 0.3922632932662964, 0.4248189926147461, 0.4265592098236084, 0.441058874130249, 0.44240468740463257, 0.45373404026031494, 0.45768874883651733, 0.4583094120025635], "threshold": 0.6, "query_text_results": [["设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "TextInput", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, 0.633460521697998], ["设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", {"component_name": "TextInput", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, 0.6261853575706482], ["对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6077367067337036]]}}, {"id": "jKybKKfUodEZdD6rVfz4s2", "description": "过滤低于阈值的查询结果: 设置输入框高度自适应", "subtasks": [], "details": {"query": "设置输入框高度自适应", "result_ids": ["11dea1f2-53e5-4597-9ec7-8ed44c599575", "7536651a-52bc-46e2-bf74-d5a0d96195b6", "d38894b0-7827-4881-a2d5-507882c67a53", "304d3748-0dd9-48ab-ae46-032a1ffb35d3", "ca889acb-8158-4826-b65a-249b9cc6a4cd", "5ab075b3-7d5a-4689-81a7-9e6373b437e3", "b68aa50b-6ac4-4612-8b02-e9600001b757", "8948066f-7b3c-4e73-bb41-cf7620ea5dd5", "2545c560-9fb1-49fb-8a48-13c8de24fc39", "7311bd05-6eff-4dcd-8483-75b8749163f2"], "result_documents": ["组件设置为内联输入风格时，设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", "设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", "设置文本的最大输入字符数。\n属性名称：maxLength\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大输入字符数。\",\"default\":\"Infinity\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置内联输入风格编辑态时文本可显示的最大行数。\n属性名称：maxLines\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内联输入风格编辑态时文本可显示的最大行数。\",\"default\":3}}\n", "设置TextInput通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"通过点击以外的方式获焦时，是否绑定输入法。\",\"default\":true}}\n", "设置当密码输入模式时，输入框末尾的图标。\n属性名称：passwordIcon\n属性参数：{'value': {\"type\":\"PasswordIcon\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标。\",\"default\":\"系统提供的密码图标\"}}\n"], "result_metadatas": [{"component_name": "TextInput", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "maxLength", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "maxLines", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "passwordIcon", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.24405992031097412, 0.33133143186569214, 0.3463621139526367, 0.3839527368545532, 0.39121687412261963, 0.3955869674682617, 0.39938491582870483, 0.4038171172142029, 0.4132125973701477, 0.41541165113449097], "threshold": 0.6, "query_text_results": [["组件设置为内联输入风格时，设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, 0.7559400796890259], ["设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, 0.6686685681343079], ["设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6536378860473633], ["设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, 0.6160472631454468], ["设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", {"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, 0.6087831258773804], ["设置文本的最大输入字符数。\n属性名称：maxLength\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大输入字符数。\",\"default\":\"Infinity\"}}\n", {"component_name": "TextInput", "name": "maxLength", "source": "harmony-component-doc", "type": "attribute"}, 0.6044130325317383], ["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "TextInput", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6006150841712952]]}}, {"id": "niyB5nSU6u4nmfvAHVpEeC", "description": "过滤低于阈值的查询结果: 设置输入框外边距为10vp", "subtasks": [], "details": {"query": "设置输入框外边距为10vp", "result_ids": ["2129b89c-de72-4776-8b5d-6715da945ae1", "ee6c725c-cee4-4ada-9005-8ee6d0c341d9", "1cdaeb08-30c1-419c-9061-fc784906a93a", "7536651a-52bc-46e2-bf74-d5a0d96195b6", "6ee023e7-30fd-4634-858b-ef1aa5eabe39", "8948066f-7b3c-4e73-bb41-cf7620ea5dd5", "11dea1f2-53e5-4597-9ec7-8ed44c599575", "304d3748-0dd9-48ab-ae46-032a1ffb35d3", "ca889acb-8158-4826-b65a-249b9cc6a4cd", "5ab075b3-7d5a-4689-81a7-9e6373b437e3"], "result_documents": ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置是否开启下划线。下划线默认颜色为'#33182431'，默认粗细为1px，文本框尺寸48vp，下划线只支持InputType.Normal类型。\n属性名称：showUnderline\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否开启下划线。\",\"default\":false}}\n", "设置内联输入风格编辑态时文本可显示的最大行数。\n属性名称：maxLines\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"内联输入风格编辑态时文本可显示的最大行数。\",\"default\":3}}\n", "组件设置为内联输入风格时，设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n", "设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", "设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", "设置文本的最大输入字符数。\n属性名称：maxLength\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大输入字符数。\",\"default\":\"Infinity\"}}\n"], "result_metadatas": [{"component_name": "TextInput", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "showUnderline", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "maxLines", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "heightAdaptivePolicy", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "maxLength", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.32636862993240356, 0.3596690893173218, 0.37950342893600464, 0.38606882095336914, 0.38758182525634766, 0.4063730239868164, 0.40946149826049805, 0.41029220819473267, 0.4130236506462097, 0.4173322916030884], "threshold": 0.6, "query_text_results": [["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, 0.6736313700675964], ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, 0.6403309106826782], ["设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "letterSpacing", "source": "harmony-component-doc", "type": "attribute"}, 0.6204965710639954], ["设置是否开启下划线。下划线默认颜色为'#33182431'，默认粗细为1px，文本框尺寸48vp，下划线只支持InputType.Normal类型。\n属性名称：showUnderline\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否开启下划线。\",\"default\":false}}\n", {"component_name": "TextInput", "name": "showUnderline", "source": "harmony-component-doc", "type": "attribute"}, 0.6124181747436523]]}}, {"id": "7oxH5pyfRi6oorR5fzFgjj", "description": "过滤低于阈值的查询结果: 设置输入框提示文本为“Enter Registered Email Address”", "subtasks": [], "details": {"query": "设置输入框提示文本为“Enter Registered Email Address”", "result_ids": ["ca889acb-8158-4826-b65a-249b9cc6a4cd", "304d3748-0dd9-48ab-ae46-032a1ffb35d3", "8c3b2f32-ee64-4286-9359-ca46bfea19a0", "9dd442b7-b61c-4686-b62a-6b8cde917e75", "7311bd05-6eff-4dcd-8483-75b8749163f2", "8300ad29-fca7-4e11-a39d-d600de37d672", "ff2abd32-7129-4e26-a854-1b0ecbfe3478", "528be50b-58cc-4aa5-89df-7e46b1a9d2fc", "7536651a-52bc-46e2-bf74-d5a0d96195b6", "27bc8b7f-c3bd-4a31-9301-cf072be9046f"], "result_documents": ["设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", "设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", "设置当密码输入模式时，输入框末尾的图标是否显示。\n属性名称：showPasswordIcon\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标是否显示。\",\"default\":true}}\n", "设置输入法回车键类型。\n属性名称：enterKeyType\n属性参数：{'value': {\"type\":\"EnterKeyType\",\"required\":true,\"description\":\"输入法回车键类型。\",\"default\":\"EnterKeyType.Done\"}}\n", "设置当密码输入模式时，输入框末尾的图标。\n属性名称：passwordIcon\n属性参数：{'value': {\"type\":\"PasswordIcon\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标。\",\"default\":\"系统提供的密码图标\"}}\n", "设置输入框光标颜色。\n属性名称：caretColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"输入框光标颜色。\",\"default\":null}}\n", "设置内联输入风格编辑态时滚动条的显示模式。\n属性名称：barState\n属性参数：{'value': {\"type\":\"BarState\",\"required\":true,\"description\":\"内联输入风格编辑态时滚动条的显示模式。\",\"default\":\"BarState.Auto\"}}\n", "通过正则表达式设置输入过滤器。匹配表达式的输入允许显示，不匹配的输入将被过滤。仅支持单个字符匹配，不支持字符串匹配。\n属性名称：inputFilter\n属性参数：{'value': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"正则表达式。\",\"default\":null}, 'error': {\"type\":\"(value: string) => void\",\"required\":false,\"description\":\"正则匹配失败时，返回被过滤的内容。\",\"default\":null}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "输入状态变化时，触发该回调。\n事件名称：onEditChanged\n事件参数：{'isEditing': {\"type\":\"boolean\",\"required\":true,\"description\":\"为True表示正在输入。\",\"default\":null}}\n事件返回值：None\n"], "result_metadatas": [{"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "showPasswordIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "enterKeyType", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "passwordIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "caretColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "barState", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "inputFilter", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "onEditChanged", "source": "harmony-component-doc", "type": "event"}], "result_distances": [0.39547866582870483, 0.40614187717437744, 0.4197518229484558, 0.4228673577308655, 0.4257722496986389, 0.44142550230026245, 0.4434986114501953, 0.4458657503128052, 0.447603702545166, 0.44966810941696167], "threshold": 0.6, "query_text_results": []}}, {"id": "YV4gDXj2orcfnUvGmazz8X", "description": "过滤低于阈值的查询结果: 设置输入框输入类型为电子邮件地址", "subtasks": [], "details": {"query": "设置输入框输入类型为电子邮件地址", "result_ids": ["ca889acb-8158-4826-b65a-249b9cc6a4cd", "304d3748-0dd9-48ab-ae46-032a1ffb35d3", "9dd442b7-b61c-4686-b62a-6b8cde917e75", "ff2abd32-7129-4e26-a854-1b0ecbfe3478", "7311bd05-6eff-4dcd-8483-75b8749163f2", "2545c560-9fb1-49fb-8a48-13c8de24fc39", "8300ad29-fca7-4e11-a39d-d600de37d672", "8c3b2f32-ee64-4286-9359-ca46bfea19a0", "528be50b-58cc-4aa5-89df-7e46b1a9d2fc", "7536651a-52bc-46e2-bf74-d5a0d96195b6"], "result_documents": ["设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n", "设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n", "设置输入法回车键类型。\n属性名称：enterKeyType\n属性参数：{'value': {\"type\":\"EnterKeyType\",\"required\":true,\"description\":\"输入法回车键类型。\",\"default\":\"EnterKeyType.Done\"}}\n", "设置内联输入风格编辑态时滚动条的显示模式。\n属性名称：barState\n属性参数：{'value': {\"type\":\"BarState\",\"required\":true,\"description\":\"内联输入风格编辑态时滚动条的显示模式。\",\"default\":\"BarState.Auto\"}}\n", "设置当密码输入模式时，输入框末尾的图标。\n属性名称：passwordIcon\n属性参数：{'value': {\"type\":\"PasswordIcon\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标。\",\"default\":\"系统提供的密码图标\"}}\n", "设置TextInput通过点击以外的方式获焦时，是否绑定输入法。\n属性名称：enableKeyboardOnFocus\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"通过点击以外的方式获焦时，是否绑定输入法。\",\"default\":true}}\n", "设置输入框光标颜色。\n属性名称：caretColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"输入框光标颜色。\",\"default\":null}}\n", "设置当密码输入模式时，输入框末尾的图标是否显示。\n属性名称：showPasswordIcon\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标是否显示。\",\"default\":true}}\n", "通过正则表达式设置输入过滤器。匹配表达式的输入允许显示，不匹配的输入将被过滤。仅支持单个字符匹配，不支持字符串匹配。\n属性名称：inputFilter\n属性参数：{'value': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"正则表达式。\",\"default\":null}, 'error': {\"type\":\"(value: string) => void\",\"required\":false,\"description\":\"正则匹配失败时，返回被过滤的内容。\",\"default\":null}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n"], "result_metadatas": [{"component_name": "TextInput", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "style", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "enterKeyType", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "barState", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "passwordIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "enableKeyboardOnFocus", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "caretColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "showPasswordIcon", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "inputFilter", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.29923492670059204, 0.32402414083480835, 0.3445640802383423, 0.3916448950767517, 0.39211297035217285, 0.408641517162323, 0.40924930572509766, 0.40988802909851074, 0.41224753856658936, 0.4127371311187744], "threshold": 0.6, "query_text_results": [["设置输入法回车键类型。\n属性名称：enterKeyType\n属性参数：{'value': {\"type\":\"EnterKeyType\",\"required\":true,\"description\":\"输入法回车键类型。\",\"default\":\"EnterKeyType.Done\"}}\n", {"component_name": "TextInput", "name": "enterKeyType", "source": "harmony-component-doc", "type": "attribute"}, 0.6554359197616577], ["设置内联输入风格编辑态时滚动条的显示模式。\n属性名称：barState\n属性参数：{'value': {\"type\":\"BarState\",\"required\":true,\"description\":\"内联输入风格编辑态时滚动条的显示模式。\",\"default\":\"BarState.Auto\"}}\n", {"component_name": "TextInput", "name": "barState", "source": "harmony-component-doc", "type": "attribute"}, 0.6083551049232483], ["设置当密码输入模式时，输入框末尾的图标。\n属性名称：passwordIcon\n属性参数：{'value': {\"type\":\"PasswordIcon\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标。\",\"default\":\"系统提供的密码图标\"}}\n", {"component_name": "TextInput", "name": "passwordIcon", "source": "harmony-component-doc", "type": "attribute"}, 0.6078870296478271]]}}, {"id": "k4AHGzpRJn5SMpHh9KK39F", "description": "过滤低于阈值的查询结果: 设置输入框位于父容器的顶部和底部，水平居中，垂直偏移为0.29", "subtasks": [], "details": {"query": "设置输入框位于父容器的顶部和底部，水平居中，垂直偏移为0.29", "result_ids": ["4a505ac1-fcd3-4b73-82a5-8000891e5677", "e8b0efb8-ce73-4e62-a0c4-ecea21cea54a", "66cc300e-976b-463b-af4a-5045a6385605", "0d758fe9-b2c2-4604-ae4a-cbb489353091", "7536651a-52bc-46e2-bf74-d5a0d96195b6", "4ff821fb-da30-40e5-951f-59b5ef4c5b63", "a25abed7-be07-4292-93a8-50d179c2dd0f", "ee6c725c-cee4-4ada-9005-8ee6d0c341d9", "0d0770f6-d1a4-41b4-8edf-605cccb9ab6c", "dc4e6d5f-ec32-4f4d-bb9d-550282e80a54"], "result_documents": ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n", "设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n", "指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "TextInput", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexShrink", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "textAlign", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "flexGrow", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "TextInput", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3471682071685791, 0.34987568855285645, 0.36006635427474976, 0.3631783127784729, 0.3654934763908386, 0.3707079291343689, 0.37852293252944946, 0.3846151828765869, 0.38675951957702637, 0.39047420024871826], "threshold": 0.6, "query_text_results": [["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "TextInput", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6528317928314209], ["设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", {"component_name": "TextInput", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, 0.6399336457252502], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "TextInput", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6368216872215271], ["指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "alignRules", "source": "harmony-component-doc", "type": "attribute"}, 0.6214770674705505], ["设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", {"component_name": "TextInput", "name": "displayPriority", "source": "harmony-component-doc", "type": "attribute"}, 0.6132404804229736], ["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", {"component_name": "TextInput", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, 0.6095257997512817]]}}], "details": null}, {"id": "bwB7z5mBkKkyESVivuJvfj", "description": "过滤低于阈值的查询结果", "subtasks": [{"id": "jzxUaiGHvNxPWbFYGhg4Sh", "description": "过滤低于阈值的查询结果: 设置按钮宽度自适应", "subtasks": [], "details": {"query": "设置按钮宽度自适应", "result_ids": ["c88bcc94-37e8-4bae-81fa-808d9fc999fc", "415ed655-7120-4c1d-82e8-fb267be8d314", "d72cd4ce-3002-4093-b513-e215b32edd92", "344d9ed0-2287-4e9c-af3f-f900f3811367", "fbd45916-ae40-41e5-ad0e-db9141e2f211", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "88815f5d-ec08-4617-8dd3-34317c7fc116", "891d6794-37ca-4513-b4a4-51271737087d", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e"], "result_documents": ["设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n"], "result_metadatas": [{"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3730390667915344, 0.3870389461517334, 0.4155348539352417, 0.42027825117111206, 0.4225345253944397, 0.42847615480422974, 0.43915271759033203, 0.4392887353897095, 0.4501909017562866, 0.4518117308616638], "threshold": 0.6, "query_text_results": [["设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, 0.6269609332084656], ["设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", {"component_name": "Button", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, 0.6129610538482666]]}}, {"id": "MKLKong2qWhp6JeBTQy2JW", "description": "过滤低于阈值的查询结果: 设置按钮高度自适应", "subtasks": [], "details": {"query": "设置按钮高度自适应", "result_ids": ["c88bcc94-37e8-4bae-81fa-808d9fc999fc", "28e4e8e0-64ca-482d-ab31-15ecad19da20", "88815f5d-ec08-4617-8dd3-34317c7fc116", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e", "344d9ed0-2287-4e9c-af3f-f900f3811367", "fbd45916-ae40-41e5-ad0e-db9141e2f211", "d72cd4ce-3002-4093-b513-e215b32edd92", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "891d6794-37ca-4513-b4a4-51271737087d"], "result_documents": ["设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "size", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "layoutWeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.37611716985702515, 0.3885886073112488, 0.4019036293029785, 0.41726285219192505, 0.42424315214157104, 0.42496752738952637, 0.43098223209381104, 0.43382441997528076, 0.4372199773788452, 0.4526112675666809], "threshold": 0.6, "query_text_results": [["设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", {"component_name": "Button", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, 0.6114113926887512]]}}, {"id": "4nVWWdHijP3cgFMtdE3EjP", "description": "过滤低于阈值的查询结果: 设置按钮外边距为8vp", "subtasks": [], "details": {"query": "设置按钮外边距为8vp", "result_ids": ["a9722864-894a-401e-bf14-a89aa942a2fb", "5de876b2-9673-4565-8218-2b98e0cbb6c5", "c88bcc94-37e8-4bae-81fa-808d9fc999fc", "fbd45916-ae40-41e5-ad0e-db9141e2f211", "344d9ed0-2287-4e9c-af3f-f900f3811367", "415ed655-7120-4c1d-82e8-fb267be8d314", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "28e4e8e0-64ca-482d-ab31-15ecad19da20", "e8e8d577-42ca-4adb-872f-c73caa165bf0", "d72cd4ce-3002-4093-b513-e215b32edd92"], "result_documents": ["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置约束尺寸，组件布局时，进行尺寸范围限制。从API version 10开始，该接口支持calc计算特性。\n属性名称：constraintSize\n属性参数：{'value': {\"type\":\"ConstraintSizeOptions\",\"required\":true,\"description\":\"设置约束尺寸。constraintSize的优先级高于Width和Height。取值结果参考constraintSize取值对width/height影响。默认值：{ minWidth: 0, maxWidth: Infinity, minHeight: 0, maxHeight: Infinity }。单位：vp\",\"default\":null}}\n", "设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n", "设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n", "设置字体大小。\n属性名称：fontSize\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"字体大小。fontSize为number类型时，使用fp单位。字体默认大小16fp。不支持设置百分比字符串。\",\"default\":\"16fp\"}}\n", "设置高宽尺寸。从API version 10开始，该接口支持calc计算特性。\n属性名称：size\n属性参数：{'value': {\"type\":\"SizeOptions\",\"required\":true,\"description\":\"要设置的高宽尺寸。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Button", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "constraintSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "flexBasis", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "width", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "height", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "size", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.33223921060562134, 0.3755185008049011, 0.41060447692871094, 0.43499916791915894, 0.44058936834335327, 0.44476085901260376, 0.44547879695892334, 0.4531574845314026, 0.4538951516151428, 0.46353769302368164], "threshold": 0.6, "query_text_results": [["设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "Button", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}, 0.6677607893943787], ["设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", {"component_name": "Button", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, 0.6244814991950989]]}}, {"id": "3WgPkjW9Ep8EeKpxgrSfgi", "description": "过滤低于阈值的查询结果: 设置按钮背景引用资源app.media.btn_background", "subtasks": [], "details": {"query": "设置按钮背景引用资源app.media.btn_background", "result_ids": ["e4735f7c-cec8-4918-8cbe-ac7f693436d1", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e", "77094317-b0b6-49da-8399-ac9ac1ebb950", "a354684b-a6d9-4430-8d08-30e5f693aa6e", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "c88bcc94-37e8-4bae-81fa-808d9fc999fc", "12b00ad7-c516-4bdc-902e-47014dbc30e0", "b0d756c8-db53-4fd1-80ad-20a56a94bd05", "bb4fa8ab-c939-4780-ac30-042c7621c3f9", "041639c8-a726-47eb-af58-1e742ff2ae41"], "result_documents": ["设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", "设置Button组件的角色。\n属性名称：role\n属性参数：{'value': {\"type\":[\"ButtonRole\"],\"required\":true,\"description\":\"Button组件的角色\",\"default\":\"ButtonRole.NORMAL\"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置字体列表。\n属性名称：fontFamily\n属性参数：{'value': {\"type\":[\"string\",\"Resource\"],\"required\":true,\"description\":\"字体列表。默认字体'HarmonyOS Sans'。应用当前支持'HarmonyOS Sans'字体和注册自定义字体。卡片当前仅支持'HarmonyOS Sans'字体。\",\"default\":\"HarmonyOS Sans\"}}\n"], "result_metadatas": [{"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "role", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontFamily", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3618360757827759, 0.3924156427383423, 0.42114412784576416, 0.4266194701194763, 0.4281812906265259, 0.43063950538635254, 0.4357817769050598, 0.4519442915916443, 0.4543588161468506, 0.46195369958877563], "threshold": 0.6, "query_text_results": [["设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, 0.6381639242172241], ["设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, 0.6075843572616577]]}}, {"id": "gPXgVDCd9HD6oEtvX4BPGy", "description": "过滤低于阈值的查询结果: 设置按钮文本内容为“Submit”", "subtasks": [], "details": {"query": "设置按钮文本内容为“Submit”", "result_ids": ["e4735f7c-cec8-4918-8cbe-ac7f693436d1", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "c88bcc94-37e8-4bae-81fa-808d9fc999fc", "77094317-b0b6-49da-8399-ac9ac1ebb950", "b0d756c8-db53-4fd1-80ad-20a56a94bd05", "bb4fa8ab-c939-4780-ac30-042c7621c3f9", "12b00ad7-c516-4bdc-902e-47014dbc30e0", "2417c998-d657-4120-8a25-f60197fa4238", "a354684b-a6d9-4430-8d08-30e5f693aa6e"], "result_documents": ["设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置Button组件的角色。\n属性名称：role\n属性参数：{'value': {\"type\":[\"ButtonRole\"],\"required\":true,\"description\":\"Button组件的角色\",\"default\":\"ButtonRole.NORMAL\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "role", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.38828378915786743, 0.41889262199401855, 0.434048056602478, 0.43688827753067017, 0.44186365604400635, 0.4491851329803467, 0.44998228549957275, 0.46028363704681396, 0.4661022424697876, 0.4672392010688782], "threshold": 0.6, "query_text_results": []}}, {"id": "SbsLCEK5R7dX7JoHQyna3A", "description": "过滤低于阈值的查询结果: 设置按钮文本颜色引用资源app.color.color_black_light", "subtasks": [], "details": {"query": "设置按钮文本颜色引用资源app.color.color_black_light", "result_ids": ["a354684b-a6d9-4430-8d08-30e5f693aa6e", "b0d756c8-db53-4fd1-80ad-20a56a94bd05", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "2cda24d5-f63d-42ff-b63b-a98362ec6b8e", "c88bcc94-37e8-4bae-81fa-808d9fc999fc", "12b00ad7-c516-4bdc-902e-47014dbc30e0", "041639c8-a726-47eb-af58-1e742ff2ae41", "9d9176ec-cf56-4ea5-986d-e5127a2f7c55", "bb4fa8ab-c939-4780-ac30-042c7621c3f9", "fbea709c-b9ae-4d9b-88ab-bbb9534de778"], "result_documents": ["设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n", "设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置字体列表。\n属性名称：fontFamily\n属性参数：{'value': {\"type\":[\"string\",\"Resource\"],\"required\":true,\"description\":\"字体列表。默认字体'HarmonyOS Sans'。应用当前支持'HarmonyOS Sans'字体和注册自定义字体。卡片当前仅支持'HarmonyOS Sans'字体。\",\"default\":\"HarmonyOS Sans\"}}\n", "设置是否开启按压态显示效果。\n属性名称：stateEffect\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"按钮按下时是否开启按压态显示效果\",\"default\":true}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置文本的字体粗细，设置过大可能会在不同字体下有截断。\n属性名称：fontWeight\n属性参数：{'value': {\"type\":[\"number\",\"FontWeight\",\"string\"],\"required\":true,\"description\":\"文本的字体粗细，number类型取值[100, 900]，取值间隔为100，默认为400，取值越大，字体越粗。string类型仅支持number类型取值的字符串形式，例如\\\"400\\\"，以及\\\"bold\\\"、\\\"bolder\\\"、\\\"lighter\\\"、\\\"regular\\\"、\\\"medium\\\"，分别对应FontWeight中相应的枚举值。默认值：FontWeight.Normal\",\"default\":\"FontWeight.Normal\"}}\n"], "result_metadatas": [{"component_name": "Button", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "buttonStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontFamily", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "stateEffect", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontWeight", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3425079584121704, 0.3566095232963562, 0.38829267024993896, 0.4355476498603821, 0.4371359944343567, 0.4377892017364502, 0.44947701692581177, 0.4578307271003723, 0.4598134160041809, 0.4730817675590515], "threshold": 0.6, "query_text_results": [["设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n", {"component_name": "Button", "name": "fontColor", "source": "harmony-component-doc", "type": "attribute"}, 0.6574920415878296], ["设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, 0.6433904767036438]]}}, {"id": "J9qghLh9EcZjcZt3NRCRGd", "description": "过滤低于阈值的查询结果: 设置按钮位于编辑文本框的下方，水平居中，垂直偏移为0.23", "subtasks": [], "details": {"query": "设置按钮位于编辑文本框的下方，水平居中，垂直偏移为0.23", "result_ids": ["c88bcc94-37e8-4bae-81fa-808d9fc999fc", "88815f5d-ec08-4617-8dd3-34317c7fc116", "e4735f7c-cec8-4918-8cbe-ac7f693436d1", "b0d756c8-db53-4fd1-80ad-20a56a94bd05", "a6a65ca2-6edb-4990-add8-0378e6aa0895", "12b00ad7-c516-4bdc-902e-47014dbc30e0", "2417c998-d657-4120-8a25-f60197fa4238", "bb4fa8ab-c939-4780-ac30-042c7621c3f9", "5de876b2-9673-4565-8218-2b98e0cbb6c5", "a9722864-894a-401e-bf14-a89aa942a2fb"], "result_documents": ["设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n", "设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", "设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n", "设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n", "相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", "设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", "设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", "设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", "设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n", "设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n"], "result_metadatas": [{"component_name": "Button", "name": "controlSize", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "type", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "decoration", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "padding", "source": "harmony-component-doc", "type": "attribute"}, {"component_name": "Button", "name": "margin", "source": "harmony-component-doc", "type": "attribute"}], "result_distances": [0.3610841631889343, 0.3790777921676636, 0.3832605481147766, 0.3859434723854065, 0.38974618911743164, 0.3903926610946655, 0.39353644847869873, 0.3988134264945984, 0.3988625407218933, 0.4006548523902893], "threshold": 0.6, "query_text_results": [["设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n", {"component_name": "Button", "name": "lineHeight", "source": "harmony-component-doc", "type": "attribute"}, 0.6209222078323364], ["相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n", {"component_name": "Button", "name": "offset", "source": "harmony-component-doc", "type": "attribute"}, 0.6102538108825684], ["设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n", {"component_name": "Button", "name": "fontStyle", "source": "harmony-component-doc", "type": "attribute"}, 0.6096073389053345], ["设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n", {"component_name": "Button", "name": "direction", "source": "harmony-component-doc", "type": "attribute"}, 0.6064635515213013], ["设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n", {"component_name": "Button", "name": "align", "source": "harmony-component-doc", "type": "attribute"}, 0.6011865735054016]]}}], "details": null}], "details": null}, {"id": "MwHHjnJtTquhoKmpGPFWmZ", "description": "生成组件文档", "subtasks": [], "details": {"component_documents": ["# RelativeContainer\n接口描述：RelativeContainer()\n接口参数：{}\n设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n设置RelativeContainer容器内的屏障。\n属性名称：barrier\n属性参数：{'value': {\"type\":\"Array<BarrierStyle>\",\"required\":true,\"description\":\"Array中每个项目即为一条barrier。\",\"default\":null}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n子组件在父容器交叉轴的对齐格式。\n属性名称：alignSelf\n属性参数：{'value': {\"type\":\"ItemAlign\",\"required\":true,\"description\":\"子组件在父容器交叉轴的对齐格式，会覆盖Flex、Column、Row、GridRow布局容器中的alignItems设置。\",\"default\":\"ItemAlign.Auto\"}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n", "# TextInput\n接口描述：TextInput(value?: TextInputOptions)\n接口参数：{'value': {\"type\":\"TextInputOptions\",\"required\":false,\"description\":\"TextInput组件的初始化选项。\",\"default\":null}}\n设置组件在父容器的剩余空间所占比例。\n属性名称：flexGrow\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器在主轴方向上的剩余空间分配给此属性所在组件的比例。\",\"default\":0}}\n设置父容器压缩尺寸分配给此属性所在组件的比例。当父容器为Column、Row时，需设置主轴方向的尺寸。\n属性名称：flexShrink\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置父容器压缩尺寸分配给此属性所在组件的比例。\",\"default\":0}}\n对子组件进行重新布局。\n属性名称：layoutWeight\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"父容器尺寸确定时，设置了layoutWeight属性的子元素与兄弟元素占主轴尺寸按照权重进行分配，忽略元素本身尺寸设置，表示自适应占满剩余空间。默认值：0。仅在Row/Column/Flex布局中生效。可选值为大于等于0的数字，或者可以转换为数字的字符串。\",\"default\":null}}\n组件设置为内联输入风格时，设置文本自适应高度的方式。\n属性名称：heightAdaptivePolicy\n属性参数：{'value': {\"type\":\"TextHeightAdaptivePolicy\",\"required\":true,\"description\":\"文本自适应高度的方式。\",\"default\":null}}\n设置文本在输入框中的水平对齐方式。\n属性名称：textAlign\n属性参数：{'value': {\"type\":\"TextAlign\",\"required\":true,\"description\":\"文本在输入框中的水平对齐方式。\",\"default\":\"TextAlign.Start\"}}\n设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n设置输入框为默认风格或内联输入风格，内联输入风格只支持InputType.Normal类型。\n属性名称：style\n属性参数：{'value': {\"type\":\"TextInputStyle\",\"required\":true,\"description\":\"输入框风格。\",\"default\":null}}\n设置输入框类型。\n属性名称：type\n属性参数：{'value': {\"type\":\"InputType\",\"required\":true,\"description\":\"输入框类型。\",\"default\":\"InputType.Normal\"}}\n设置文本的最大输入字符数。\n属性名称：maxLength\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"文本的最大输入字符数。\",\"default\":\"Infinity\"}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n设置文本字符间距。设置该值为百分比时，按默认值显示。设置该值为0时，按默认值显示。\n属性名称：letterSpacing\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本字符间距。\",\"default\":null}}\n设置是否开启下划线。下划线默认颜色为'#33182431'，默认粗细为1px，文本框尺寸48vp，下划线只支持InputType.Normal类型。\n属性名称：showUnderline\n属性参数：{'value': {\"type\":\"boolean\",\"required\":true,\"description\":\"是否开启下划线。\",\"default\":false}}\n设置输入法回车键类型。\n属性名称：enterKeyType\n属性参数：{'value': {\"type\":\"EnterKeyType\",\"required\":true,\"description\":\"输入法回车键类型。\",\"default\":\"EnterKeyType.Done\"}}\n设置内联输入风格编辑态时滚动条的显示模式。\n属性名称：barState\n属性参数：{'value': {\"type\":\"BarState\",\"required\":true,\"description\":\"内联输入风格编辑态时滚动条的显示模式。\",\"default\":\"BarState.Auto\"}}\n设置当密码输入模式时，输入框末尾的图标。\n属性名称：passwordIcon\n属性参数：{'value': {\"type\":\"PasswordIcon\",\"required\":true,\"description\":\"密码输入模式时，输入框末尾的图标。\",\"default\":\"系统提供的密码图标\"}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置组件的基准尺寸。\n属性名称：flexBasis\n属性参数：{'value': {\"type\":[\"number\",\"string\"],\"required\":true,\"description\":\"设置组件在父容器主轴方向上的基准尺寸。不支持百分比设置。\",\"default\":\"auto\"}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。\n属性名称：alignRules\n属性参数：{'value': {\"type\":\"AlignRuleOption\",\"required\":true,\"description\":\"指定设置在相对容器中子组件的对齐规则，仅当父容器为RelativeContainer时生效。该方法水平方向上以start和end分别替代原方法的left和right，以便在RTL模式下能镜像显示，建议使用该方法指定设置在相对容器中子组件的对齐规则。\",\"default\":null}}\n设置当前组件在布局容器中显示的优先级。仅在Row/Column/Flex(单行)容器组件中生效。\n属性名称：displayPriority\n属性参数：{'value': {\"type\":\"number\",\"required\":true,\"description\":\"设置当前组件在布局容器中显示的优先级。默认值：1。小数点后的数字不作优先级区分，即区间为[x, x + 1)内的数字视为相同优先级。例如：1.0与1.9为同一优先级。子组件的displayPriority均为1时，优先级没有区别。当子组件的displayPriority大于1时，若父容器空间不足，隐藏低优先级节点。\",\"default\":null}}\n相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n示例：该组件展示了一个带有自定义编辑菜单选项的文本输入框。布局宽度占据屏幕的90%，高度为50vp，内边距为顶部100vp，左右5%。文本输入框的宽度为95%，高度为50vp，位于垂直布局的顶部。\n组件的样式包括文本输入框的宽度和高度，以及外边距。文本输入框的排列方式为垂直布局，确保其在界面中的位置居中且顶部有足够的空间。\n组件的功能包括自定义编辑菜单选项的文本内容、图标和回调方法。用户可以通过点击菜单项触发相应的操作，并在控制台输出相关信息。\n@Entry\n@Component\nstruct TextInputExample {\n  @State text: string = 'TextInput editMenuOptions' // 初始化文本输入框的默认文本内容\n\n  // 自定义菜单项的创建方法\n  onCreateMenu(menuItems: Array<TextMenuItem>) {\n    menuItems.forEach((value, index) => {\n      value.icon = $r('app.media.startIcon') // 设置菜单项的图标\n      if (value.id.equals(TextMenuItemId.COPY)) {\n        value.content = \"复制change\" // 修改复制菜单项的文本内容\n      }\n      if (value.id.equals(TextMenuItemId.SELECT_ALL)) {\n        value.content = \"全选change\" // 修改全选菜单项的文本内容\n      }\n    })\n    let item1: TextMenuItem = {\n      content: 'custom1', // 自定义菜单项1的文本内容\n      icon: $r('app.media.startIcon'), // 自定义菜单项1的图标\n      id: TextMenuItemId.of('custom1'), // 自定义菜单项1的唯一标识\n    }\n    let item2: TextMenuItem = {\n      content: 'custom2', // 自定义菜单项2的文本内容\n      id: TextMenuItemId.of('custom2'), // 自定义菜单项2的唯一标识\n      icon: $r('app.media.startIcon'), // 自定义菜单项2的图标\n    }\n    menuItems.push(item1) // 将自定义菜单项1添加到菜单项列表的末尾\n    menuItems.unshift(item2) // 将自定义菜单项2添加到菜单项列表的开头\n    return menuItems // 返回修改后的菜单项列表\n  }\n\n  build() {\n    Column() {\n      TextInput({ text: this.text }) // 创建一个文本输入框，初始文本为@State变量text的值\n        .width('95%') // 设置文本输入框的宽度为95%\n        .height(50) // 设置文本输入框的高度为50vp\n        .editMenuOptions({\n          onCreateMenu: this.onCreateMenu, // 设置自定义菜单项的创建方法\n          onMenuItemClick: (menuItem: TextMenuItem, textRange: TextRange) => { // 设置菜单项点击的回调方法\n            if (menuItem.id.equals(TextMenuItemId.of(\"custom2\"))) {\n              console.log(\"拦截 id: custom2 start:\" + textRange.start + \"; end:\" + textRange.end) // 拦截自定义菜单项2的点击事件，并输出相关信息\n              return true; // 返回true表示拦截该事件\n            }\n            if (menuItem.id.equals(TextMenuItemId.COPY)) {\n              console.log(\"拦截 COPY start:\" + textRange.start + \"; end:\" + textRange.end) // 拦截复制菜单项的点击事件，并输出相关信息\n              return true; // 返回true表示拦截该事件\n            }\n            if (menuItem.id.equals(TextMenuItemId.SELECT_ALL)) {\n              console.log(\"不拦截 SELECT_ALL start:\" + textRange.start + \"; end:\" + textRange.end) // 不拦截全选菜单项的点击事件，并输出相关信息\n              return false; // 返回false表示不拦截该事件\n            }\n            return false; // 默认返回false，不拦截其他菜单项的点击事件\n          }\n        })\n        .margin({ top: 100 }) // 设置文本输入框的上边距为100vp\n    }\n    .width(\"90%\") // 设置垂直布局的宽度为90%\n    .margin(\"5%\") // 设置垂直布局的左右边距为5%\n  }\n}\n\n示例：该组件展示了一个带有取消按钮的文本输入框。布局宽度为380vp，高度为60vp，文本输入框位于垂直布局的顶部。取消按钮的样式为常量（CONSTANT），图标大小为45vp，颜色为蓝色，图标资源名为'app.media.icon'。文本输入框的内容变化会实时更新到组件的状态变量'text'中。\n@Entry\n@Component\nstruct ClearNodeExample {\n  @State text: string = '' // 定义一个状态变量'text'，用于存储文本输入框的内容\n  controller: TextInputController = new TextInputController() // 创建一个TextInputController实例，用于控制文本输入框的行为\n\n  build() {\n    Column() { // 使用Column布局组件，将子组件垂直排列\n      TextInput({ placeholder: 'input ...', controller: this.controller }) // 创建一个文本输入框，占位符为'input ...'，并使用之前创建的controller进行控制\n        .width(380) // 设置文本输入框的宽度为380vp\n        .height(60) // 设置文本输入框的高度为60vp\n        .cancelButton({ // 设置文本输入框的取消按钮\n          style: CancelButtonStyle.CONSTANT, // 设置取消按钮的样式为常量（CONSTANT）\n          icon: { // 设置取消按钮的图标\n            size: 45, // 设置图标的大小为45vp\n            src: $r('app.media.icon'), // 设置图标的资源名为'app.media.icon'\n            color: Color.Blue // 设置图标的颜色为蓝色\n          }\n        })\n        .onChange((value: string) => { // 监听文本输入框的内容变化事件\n          this.text = value // 将文本输入框的内容实时更新到状态变量'text'中\n        })\n    }\n  }\n}\n\n", "# Button\n接口描述：创建可以包含单个子组件的按钮。\n接口参数：{'options': {\"type\":\"ButtonOptions\",\"required\":true,\"description\":\"按钮选项\",\"default\":null}}\n\n接口描述：使用文本内容创建相应的按钮组件，此时Button无法包含子组件。文本内容默认单行显示。\n接口参数：{'label': {\"type\":\"ResourceStr\",\"required\":true,\"description\":\"按钮的文本标签\",\"default\":null}, 'options': {\"type\":\"ButtonOptions\",\"required\":false,\"description\":\"按钮选项\",\"default\":null}}\n设置Button组件的尺寸。\n属性名称：controlSize\n属性参数：{'value': {\"type\":[\"ControlSize\"],\"required\":true,\"description\":\"Button组件的尺寸\",\"default\":\"ControlSize.NORMAL\"}}\n设置组件自身的宽度，缺省时使用元素自身内容需要的宽度。若子组件的宽大于父组件的宽，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：width\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件宽度。单位：vp\",\"default\":null}}\n设置组件自身的高度，缺省时使用元素自身内容需要的高度。若子组件的高大于父组件的高，则会画出父组件的范围。从API version 10开始，该接口支持calc计算特性。\n属性名称：height\n属性参数：{'value': {\"type\":\"Length\",\"required\":true,\"description\":\"要设置的组件高度。单位：vp\",\"default\":null}}\n设置外边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：margin\n属性参数：{'value': {\"type\":[\"Margin\",\"Length\",\"LocalizedMargin\"],\"required\":true,\"description\":\"设置组件的外边距。参数为Length类型时，四个方向外边距同时生效。默认值：0。单位：vp。margin设置百分比时，上下左右外边距均以父容器的width作为基础值。\",\"default\":null}}\n设置内边距属性。从API version 10开始，该接口支持calc计算特性。\n属性名称：padding\n属性参数：{'value': {\"type\":[\"Padding\",\"Length\",\"LocalizedPadding\"],\"required\":true,\"description\":\"设置组件的内边距。参数为Length类型时，四个方向内边距同时生效。默认值：0。单位：vp。padding设置百分比时，上下左右内边距均以父容器的width作为基础值。\",\"default\":null}}\n设置Button样式。\n属性名称：type\n属性参数：{'value': {\"type\":[\"ButtonType\"],\"required\":true,\"description\":\"Button样式\",\"default\":\"ButtonType.Capsule\"}}\n设置Button组件的样式和重要程度。\n属性名称：buttonStyle\n属性参数：{'value': {\"type\":[\"ButtonStyleMode\"],\"required\":true,\"description\":\"Button组件的样式和重要程度\",\"default\":\"ButtonStyleMode.EMPHASIZED\"}}\n设置字体颜色。\n属性名称：fontColor\n属性参数：{'value': {\"type\":\"ResourceColor\",\"required\":true,\"description\":\"字体颜色。\",\"default\":null}}\n设置文本装饰线样式及其颜色。\n属性名称：decoration\n属性参数：{'value': {\"type\":\"DecorationStyleInterface\",\"required\":true,\"description\":\"文本装饰线样式对象。默认值：{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } 说明：style参数不支持卡片能力。\",\"default\":\"{ type: TextDecorationType.None, color: Color.Black, style: TextDecorationStyle.SOLID } \"}}\n设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小。\n属性名称：lineHeight\n属性参数：{'value': {\"type\":[\"number\",\"string\",\"Resource\"],\"required\":true,\"description\":\"文本行高，为number类型时单位为fp。\",\"default\":null}}\n相对偏移，组件相对原本的布局位置进行偏移。\n属性名称：offset\n属性参数：{'value': {\"type\":[\"Position\",\"Edges\",\"LocalizedEdges\"],\"required\":true,\"description\":\"相对偏移，组件相对原本的布局位置进行偏移。offset属性不影响父容器布局，仅在绘制时调整位置。Position类型基于组件自身左上角偏移，Edges类型基于组件自身四边偏移。 offset属性设置 {x: x, y: y} 与设置 {left: x, top: y} 以及 {right: -x, bottom: -y} 效果相同, 类型LocalizedEdges支持镜像模式：LTR模式下start 等同于x，RTL模式下等同于-x\",\"default\":null}}\n设置字体样式。\n属性名称：fontStyle\n属性参数：{'value': {\"type\":\"FontStyle\",\"required\":true,\"description\":\"字体样式。默认值：FontStyle.Normal\",\"default\":\"FontStyle.Normal\"}}\n设置容器元素内主轴方向上的布局。\n属性名称：direction\n属性参数：{'value': {\"type\":\"Direction\",\"required\":true,\"description\":\"设置容器元素内主轴方向上的布局。属性配置为auto的时候，按照系统语言方向进行布局。该属性在Column组件上不生效。\",\"default\":\"Direction.Auto\"}}\n设置容器元素绘制区域内的子元素的对齐方式。\n属性名称：align\n属性参数：{'value': {\"type\":\"Alignment\",\"required\":true,\"description\":\"设置容器元素绘制区域内的子元素的对齐方式。只在Stack、Button、Marquee、StepperItem、text、TextArea、TextInput、FolderStack中生效，其中和文本相关的组件Marquee、text、TextArea、TextInput的align结果参考textAlign。不支持textAlign属性的组件则无法设置水平方向的文字对齐。\",\"default\":\"Alignment.Center\"}}\n示例：该组件通过Row和Column布局实现了一个按钮展示界面。布局宽度占据整个屏幕，高度设为100%。组件的垂直方向上被分为一个Column，其中包含一个Button。Button的宽度由@State变量widthShortSize控制，高度固定为100vp，背景颜色为0x317aff。Button的文本内容由@State变量txt控制，文本样式包括溢出处理方式为TextOverflow.Clip，最大行数为1，字体大小固定为20，字体加粗，字体家族为'cursive'，字体样式为斜体。Button的文本字体大小为40。\n@Entry\n@Component\nstruct buttonTestDemo {\n  @State txt: string = 'overflowTextOverlengthTextOverflow.Clip'; // 按钮的文本内容\n  @State widthShortSize: number = 210; // 按钮的宽度\n\n  build() {\n    Row() {\n      Column() {\n        Button(this.txt) // 创建一个按钮，文本内容为txt\n          .width(this.widthShortSize) // 设置按钮的宽度为widthShortSize\n          .height(100) // 设置按钮的高度为100vp\n          .backgroundColor(0x317aff) // 设置按钮的背景颜色为0x317aff\n          .labelStyle({ \n            overflow: TextOverflow.Clip, // 设置文本溢出处理方式为裁剪\n            maxLines: 1, // 设置文本最大行数为1\n            minFontSize: 20, // 设置最小字体大小为20\n            maxFontSize: 20, // 设置最大字体大小为20\n            font: {\n              size: 20, // 设置字体大小为20\n              weight: FontWeight.Bolder, // 设置字体加粗\n              family: 'cursive', // 设置字体家族为'cursive'\n              style: FontStyle.Italic // 设置字体样式为斜体\n            }\n          })\n          .fontSize(40) // 设置按钮文本的字体大小为40\n      }\n      .width('100%') // 设置Column的宽度为100%\n    }\n    .height('100%') // 设置Row的高度为100%\n  }\n}\n\n"], "related_types": {"LocalizedMargin": {"description": "外边距类型，用于描述组件不同方向的外边距。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "上外边距，组件距其父组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "下外边距，组件距其父组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "左外边距，组件距其父组件左边界的尺寸，从右至左显示语言模式下为右外边距，组件距其父组件右边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "右外边距，组件距其父组件右边界的尺寸，从右至左显示语言模式下为左外边距，组件距其父组件左边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthMetrics": {"description": "用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。", "type": "object", "properties": {"value": {"type": "number", "required": false, "description": "长度属性的值。", "enum": null, "enumDescriptions": null, "default": null}, "unit": {"type": "LengthUnit", "required": false, "description": "长度属性的单位，默认为vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LengthUnit": {"description": "长度属性单位枚举。", "type": "enum", "enum": ["PX", "VP", "FP", "PERCENT", "LPX"], "enumDescriptions": {"PX": "长度类型，用于描述以px像素单位为单位的长度。", "VP": "长度类型，用于描述以vp逻辑像素为单位的长度。", "FP": "长度类型，用于描述以fp字体像素为单位的长度。", "PERCENT": "长度类型，用于描述百分比长度。", "LPX": "长度类型，用于描述以lpx逻辑像素为单位的长度。"}, "examples": null}, "Direction": {"description": "布局方向。", "type": "enum", "enum": ["Ltr", "Rtl", "Auto"], "enumDescriptions": {"Ltr": "元素从左到右布局。", "Rtl": "元素从右到左布局。", "Auto": "使用系统默认布局方向。"}, "examples": null}, "Margin": {"description": "外边距类型，用于描述组件不同方向的外边距。", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "上外边距，组件距其父组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Length", "required": false, "description": "左外边距，组件距其父组件左侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Length", "required": false, "description": "右外边距，组件距其父组件右侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Length", "required": false, "description": "下外边距，组件距其父组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Length": {"description": "长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。", "type": ["string", "number", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "Resource": {"description": "资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。", "type": "Resource", "enum": null, "enumDescriptions": null, "examples": ["```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```", "```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```"]}, "LocalizedPadding": {"description": "内边距类型，用于描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Position": {"description": "位置类型，用于表示一个坐标点。", "type": "object", "properties": {"x": {"type": "Length", "required": false, "description": "x轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}, "y": {"type": "Length", "required": false, "description": "y轴坐标，作为返回值时，类型为number，单位vp。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "PasswordIcon": {"description": "密码输入模式时，能够切换密码隐藏的显示状态的图标和密码显示的隐藏状态的图标。", "type": "object", "properties": {"onIconSrc": {"type": ["string", "Resource"], "required": false, "description": "密码输入模式时，能够切换密码隐藏的显示状态的图标。", "enum": null, "enumDescriptions": null, "default": null}, "offIconSrc": {"type": ["string", "Resource"], "required": false, "description": "密码输入模式时，能够切换密码显示的隐藏状态的图标。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "LocalizedEdges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。", "type": "object", "properties": {"top": {"type": "LengthMetrics", "required": false, "description": "相对顶边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "LengthMetrics", "required": false, "description": "相对底边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "start": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}, "end": {"type": "LengthMetrics", "required": false, "description": "LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "EnterKeyType": {"description": "定义输入框回车键类型。", "type": "enum", "enum": ["Go", "Search", "Send", "Next", "Done", "PREVIOUS", "NEW_LINE"], "enumDescriptions": {"Go": "显示为开始样式。", "Search": "显示为搜索样式。", "Send": "显示为发送样式。", "Next": "显示为下一步样式。", "Done": "显示为完成样式。", "PREVIOUS": "显示为上一步样式。", "NEW_LINE": "显示为换行样式。"}, "examples": null}, "TextInputStyle": {"description": "元服务API： 从API version 11开始，该接口支持在元服务中使用。系统能力： SystemCapability.ArkUI.ArkUI.Full", "type": "enum", "enum": ["Default", "Inline"], "enumDescriptions": {"Default": "默认风格，光标宽1.5vp，光标高度与文本选中底板高度和字体大小相关。", "Inline": "内联输入风格。文本选中底板高度与输入框高度相同。内联输入是在有明显的编辑态/非编辑态的区分场景下使用，例如：文件列表视图中的重命名。不支持showError属性。"}, "examples": null}, "TextInputOptions": {"description": "TextInput文本输入框的配置参数。", "type": "object", "properties": {"placeholder": {"type": "ResourceStr", "required": false, "description": "设置无输入时的提示文本。", "enum": null, "enumDescriptions": null, "default": null}, "text": {"type": "ResourceStr", "required": false, "description": "设置输入框当前的文本内容。该参数支持$$双向绑定变量。", "enum": null, "enumDescriptions": null, "default": null}, "controller": {"type": "TextInputController", "required": false, "description": "设置TextInput控制器。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "TextInputController": {"description": "TextInput组件的控制器继承自TextContentControllerBase。", "type": "object", "properties": {"controller": {"type": "TextInputController", "required": true, "description": "导入对象", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "ResourceStr": {"description": "字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。", "type": ["string", "Resource"], "enum": null, "enumDescriptions": null, "examples": null}, "InputType": {"description": "系统能力： SystemCapability.ArkUI.ArkUI.Full", "type": "enum", "enum": ["Normal", "Password", "Email", "Number", "PhoneNumber", "USER_NAME", "NEW_PASSWORD", "NUMBER_PASSWORD", "NUMBER_DECIMAL", "URL"], "enumDescriptions": {"Normal": "基本输入模式，无特殊限制。", "Password": "密码输入模式。支持输入数字、字母、下划线、空格、特殊字符。密码显示小眼睛图标，默认输入文字短暂显示后变成圆点，从API version 12开始，特定设备上输入文字直接显示为圆点。密码输入模式不支持下划线样式。在已启用密码保险箱的情况下，支持用户名、密码的自动保存和自动填充。", "Email": "邮箱地址输入模式。支持数字、字母、下划线、小数点、!、#、$、%、&、'、*、+、-、/、=、?、^、`、{、|、}、~，以及@字符（只能存在一个@字符）。", "Number": "纯数字输入模式。", "PhoneNumber": "电话号码输入模式。支持输入数字、空格、+ 、-、*、#、(、)，长度不限。", "USER_NAME": "用户名输入模式。在已启用密码保险箱的情况下，支持用户名、密码的自动保存和自动填充。", "NEW_PASSWORD": "新密码输入模式。密码显示小眼睛图标，默认输入文字短暂显示后变成圆点，从API version 12开始，特定设备上输入文字直接显示为圆点。在已启用密码保险箱的情况下，支持自动生成新密码。", "NUMBER_PASSWORD": "纯数字密码输入模式。密码显示小眼睛图标，默认输入文字短暂显示后变成圆点，从API version 12开始，特定设备上输入文字直接显示为圆点。密码输入模式不支持下划线样式。", "NUMBER_DECIMAL": "带小数点的数字输入模式。支持数字，小数点（只能存在一个小数点）。", "URL": "带URL的输入模式。"}, "examples": null}, "Padding": {"description": "内边距类型，描述组件不同方向的内边距。", "type": "object", "properties": {"top": {"type": "Length", "required": false, "description": "上内边距，组件内元素距组件顶部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Length", "required": false, "description": "左内边距，组件内元素距组件左侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Length", "required": false, "description": "右内边距，组件内元素距组件右侧的尺寸。", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Length", "required": false, "description": "下内边距，组件内元素距组件底部的尺寸。", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Edges": {"description": "位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。", "type": "object", "properties": {"top": {"type": "Dimension", "required": false, "description": "相对顶边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "left": {"type": "Dimension", "required": false, "description": "相对左边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "right": {"type": "Dimension", "required": false, "description": "相对右边的偏移量", "enum": null, "enumDescriptions": null, "default": null}, "bottom": {"type": "Dimension", "required": false, "description": "相对底边的偏移量", "enum": null, "enumDescriptions": null, "default": null}}, "examples": null}, "Dimension": {"description": "长度类型，用于描述尺寸单位。", "type": "enum", "enum": ["PX", "VP", "FP", "LPX", "PERCENT", "Resource"], "enumDescriptions": {"PX": "需要指定以px像素单位，如'10px'。", "VP": "需要指定数字或vp像素单位，如10或'10vp'。", "FP": "需要指定以fp像素单位，如'10fp'。", "LPX": "需要指定以lpx像素单位，如'10lpx'。", "PERCENT": "需要指定以%像素单位，如'10%'。", "Resource": "资源引用类型，引入系统资源或者应用资源中的尺寸。"}, "examples": null}, "ButtonOptions": {"description": "按钮样式属性集合, 用于描述按钮相关信息。", "type": "object", "properties": {"type": {"type": "ButtonType", "required": false, "description": "描述按钮显示样式。", "enum": null, "enumDescriptions": null, "default": "ButtonType.Capsule"}, "stateEffect": {"type": "boolean", "required": false, "description": "按钮按下时是否开启按压态显示效果，当设置为false时，按压效果关闭。", "enum": null, "enumDescriptions": null, "default": "true"}, "buttonStyle": {"type": "ButtonStyleMode", "required": false, "description": "描述按钮的样式和重要程度。按钮重要程度：强调按钮>普通按钮>文字按钮。", "enum": null, "enumDescriptions": null, "default": "ButtonStyleMode.EMPHASIZED"}, "controlSize": {"type": "ControlSize", "required": false, "description": "描述按钮的尺寸。", "enum": null, "enumDescriptions": null, "default": "ControlSize.NORMAL"}, "role": {"type": "ButtonRole", "required": false, "description": "描述按钮的角色。", "enum": null, "enumDescriptions": null, "default": "ButtonRole.NORMAL"}}, "examples": null}, "ButtonRole": {"description": "从API version 12开始，该接口支持在ArkTS卡片和元服务中使用。系统能力：SystemCapability.ArkUI.ArkUI.Full", "type": "enum", "enum": ["NORMAL", "ERROR"], "enumDescriptions": {"NORMAL": "正常按钮。", "ERROR": "警示按钮。"}, "examples": null}, "ControlSize": {"description": "该枚举类定义了按钮的尺寸类型", "type": "enum", "enum": ["SMALL", "NORMAL"], "enumDescriptions": {"SMALL": "小尺寸按钮", "NORMAL": "正常尺寸按钮"}, "examples": null}, "ButtonStyleMode": {"description": "该枚举类定义了不同样式的按钮，包括强调按钮、普通按钮和文本按钮。", "type": "enum", "enum": ["EMPHASIZED", "NORMAL", "TEXTUAL"], "enumDescriptions": {"EMPHASIZED": "强调按钮（用于强调当前操作）。", "NORMAL": "普通按钮（一般界面操作）。", "TEXTUAL": "文本按钮（纯文本，无背景颜色）。"}, "examples": null}, "ButtonType": {"description": "按钮类型枚举类，用于定义不同类型的按钮样式。", "type": "enum", "enum": ["Capsule", "Circle", "Normal"], "enumDescriptions": {"Capsule": "胶囊型按钮（圆角默认为高度的一半）。当按钮类型为Capsule时，borderRadius设置不生效，按钮圆角始终为宽、高中较小值的一半。", "Circle": "圆形按钮。当按钮类型为Circle时，若同时设置了宽和高，则borderRadius不生效，且按钮半径为宽高中较小值的一半；若只设置宽、高中的一个，则borderRadius不生效，且按钮半径为所设宽或所设高值的一半；若不设置宽高，则borderRadius为按钮半径；若borderRadius的值为负，则borderRadius的值按照0处理。", "Normal": "普通按钮（默认不带圆角）。按钮圆角通过通用属性borderRadius设置。"}, "examples": null}, "ResourceColor": {"description": "颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析", "type": ["string", "Resource", "Color", "number"], "enum": null, "enumDescriptions": null, "examples": null}}}}, {"id": "KDyjFPz8ePa68iyR9cNB4n", "description": "生成类型文档", "subtasks": [], "details": {"type_documents": ["类型名：LocalizedMargin\n类型描述：外边距类型，用于描述组件不同方向的外边距。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"上外边距，组件距其父组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"下外边距，组件距其父组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"左外边距，组件距其父组件左边界的尺寸，从右至左显示语言模式下为右外边距，组件距其父组件右边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"右外边距，组件距其父组件右边界的尺寸，从右至左显示语言模式下为左外边距，组件距其父组件左边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LengthMetrics\n类型描述：用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。\n参数：{'value': {\"type\":\"number\",\"required\":false,\"description\":\"长度属性的值。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'unit': {\"type\":\"LengthUnit\",\"required\":false,\"description\":\"长度属性的单位，默认为vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：LengthUnit\n枚举类型描述：长度属性单位枚举。\n枚举值：['PX', 'VP', 'FP', 'PERCENT', 'LPX']\n枚举值描述：\n* PX: 长度类型，用于描述以px像素单位为单位的长度。\n* VP: 长度类型，用于描述以vp逻辑像素为单位的长度。\n* FP: 长度类型，用于描述以fp字体像素为单位的长度。\n* PERCENT: 长度类型，用于描述百分比长度。\n* LPX: 长度类型，用于描述以lpx逻辑像素为单位的长度。\n\n", "枚举类型名：Direction\n枚举类型描述：布局方向。\n枚举值：['Ltr', 'Rtl', 'Auto']\n枚举值描述：\n* Ltr: 元素从左到右布局。\n* Rtl: 元素从右到左布局。\n* Auto: 使用系统默认布局方向。\n\n", "类型名：Margin\n类型描述：外边距类型，用于描述组件不同方向的外边距。\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"上外边距，组件距其父组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"左外边距，组件距其父组件左侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"右外边距，组件距其父组件右侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"下外边距，组件距其父组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Length\n类型描述：长度类型，用于描述尺寸单位。\n* string：需要显式指定像素单位，如'10px'，或百分比字符串，如'100%'。\n* number：默认单位为vp。\n* Resource：资源引用类型，引入系统或应用资源中的尺寸。\n类型：['string', 'number', 'Resource']\n", "类型名：Resource\n类型描述：资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。\n类型：Resource\n类型Resource示例：\n```ets\n// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；\n// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；\n// name：资源名称，在资源定义时确定。\n$r('belonging.type.name')\n```\n类型Resource示例：\n```ets\n// filename：工程中resources/rawfile目录下的文件名称。\n$rawfile('filename')\n```\n", "类型名：LocalizedPadding\n类型描述：内边距类型，用于描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Position\n类型描述：位置类型，用于表示一个坐标点。\n参数：{'x': {\"type\":\"Length\",\"required\":false,\"description\":\"x轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'y': {\"type\":\"Length\",\"required\":false,\"description\":\"y轴坐标，作为返回值时，类型为number，单位vp。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：PasswordIcon\n类型描述：密码输入模式时，能够切换密码隐藏的显示状态的图标和密码显示的隐藏状态的图标。\n参数：{'onIconSrc': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"密码输入模式时，能够切换密码隐藏的显示状态的图标。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'offIconSrc': {\"type\":[\"string\",\"Resource\"],\"required\":false,\"description\":\"密码输入模式时，能够切换密码显示的隐藏状态的图标。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：LocalizedEdges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。\n参数：{'top': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对顶边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"相对底边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'start': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'end': {\"type\":\"LengthMetrics\",\"required\":false,\"description\":\"LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：EnterKeyType\n枚举类型描述：定义输入框回车键类型。\n枚举值：['Go', 'Search', 'Send', 'Next', 'Done', 'PREVIOUS', 'NEW_LINE']\n枚举值描述：\n* Go: 显示为开始样式。\n* Search: 显示为搜索样式。\n* Send: 显示为发送样式。\n* Next: 显示为下一步样式。\n* Done: 显示为完成样式。\n* PREVIOUS: 显示为上一步样式。\n* NEW_LINE: 显示为换行样式。\n\n", "枚举类型名：TextInputStyle\n枚举类型描述：元服务API： 从API version 11开始，该接口支持在元服务中使用。系统能力： SystemCapability.ArkUI.ArkUI.Full\n枚举值：['Default', 'Inline']\n枚举值描述：\n* Default: 默认风格，光标宽1.5vp，光标高度与文本选中底板高度和字体大小相关。\n* Inline: 内联输入风格。文本选中底板高度与输入框高度相同。内联输入是在有明显的编辑态/非编辑态的区分场景下使用，例如：文件列表视图中的重命名。不支持showError属性。\n\n", "类型名：TextInputOptions\n类型描述：TextInput文本输入框的配置参数。\n参数：{'placeholder': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"设置无输入时的提示文本。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'text': {\"type\":\"ResourceStr\",\"required\":false,\"description\":\"设置输入框当前的文本内容。该参数支持$$双向绑定变量。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'controller': {\"type\":\"TextInputController\",\"required\":false,\"description\":\"设置TextInput控制器。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：TextInputController\n类型描述：TextInput组件的控制器继承自TextContentControllerBase。\n参数：{'controller': {\"type\":\"TextInputController\",\"required\":true,\"description\":\"导入对象\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：ResourceStr\n类型描述：字符串类型，用于描述字符串入参可以使用的类型。\n* string：字符串类型。\n* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。\n类型：['string', 'Resource']\n", "枚举类型名：InputType\n枚举类型描述：系统能力： SystemCapability.ArkUI.ArkUI.Full\n枚举值：['Normal', 'Password', 'Email', 'Number', 'PhoneNumber', 'USER_NAME', 'NEW_PASSWORD', 'NUMBER_PASSWORD', 'NUMBER_DECIMAL', 'URL']\n枚举值描述：\n* Normal: 基本输入模式，无特殊限制。\n* Password: 密码输入模式。支持输入数字、字母、下划线、空格、特殊字符。密码显示小眼睛图标，默认输入文字短暂显示后变成圆点，从API version 12开始，特定设备上输入文字直接显示为圆点。密码输入模式不支持下划线样式。在已启用密码保险箱的情况下，支持用户名、密码的自动保存和自动填充。\n* Email: 邮箱地址输入模式。支持数字、字母、下划线、小数点、!、#、$、%、&、'、*、+、-、/、=、?、^、`、{、|、}、~，以及@字符（只能存在一个@字符）。\n* Number: 纯数字输入模式。\n* PhoneNumber: 电话号码输入模式。支持输入数字、空格、+ 、-、*、#、(、)，长度不限。\n* USER_NAME: 用户名输入模式。在已启用密码保险箱的情况下，支持用户名、密码的自动保存和自动填充。\n* NEW_PASSWORD: 新密码输入模式。密码显示小眼睛图标，默认输入文字短暂显示后变成圆点，从API version 12开始，特定设备上输入文字直接显示为圆点。在已启用密码保险箱的情况下，支持自动生成新密码。\n* NUMBER_PASSWORD: 纯数字密码输入模式。密码显示小眼睛图标，默认输入文字短暂显示后变成圆点，从API version 12开始，特定设备上输入文字直接显示为圆点。密码输入模式不支持下划线样式。\n* NUMBER_DECIMAL: 带小数点的数字输入模式。支持数字，小数点（只能存在一个小数点）。\n* URL: 带URL的输入模式。\n\n", "类型名：Padding\n类型描述：内边距类型，描述组件不同方向的内边距。\n参数：{'top': {\"type\":\"Length\",\"required\":false,\"description\":\"上内边距，组件内元素距组件顶部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Length\",\"required\":false,\"description\":\"左内边距，组件内元素距组件左侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Length\",\"required\":false,\"description\":\"右内边距，组件内元素距组件右侧的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Length\",\"required\":false,\"description\":\"下内边距，组件内元素距组件底部的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "类型名：Edges\n类型描述：位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。\n参数：{'top': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对顶边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'left': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对左边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'right': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对右边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}, 'bottom': {\"type\":\"Dimension\",\"required\":false,\"description\":\"相对底边的偏移量\",\"enum\":null,\"enumDescriptions\":null,\"default\":null}}\n", "枚举类型名：Dimension\n枚举类型描述：长度类型，用于描述尺寸单位。\n枚举值：['PX', 'VP', 'FP', 'LPX', 'PERCENT', 'Resource']\n枚举值描述：\n* PX: 需要指定以px像素单位，如'10px'。\n* VP: 需要指定数字或vp像素单位，如10或'10vp'。\n* FP: 需要指定以fp像素单位，如'10fp'。\n* LPX: 需要指定以lpx像素单位，如'10lpx'。\n* PERCENT: 需要指定以%像素单位，如'10%'。\n* Resource: 资源引用类型，引入系统资源或者应用资源中的尺寸。\n\n", "类型名：ButtonOptions\n类型描述：按钮样式属性集合, 用于描述按钮相关信息。\n参数：{'type': {\"type\":\"ButtonType\",\"required\":false,\"description\":\"描述按钮显示样式。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"ButtonType.Capsule\"}, 'stateEffect': {\"type\":\"boolean\",\"required\":false,\"description\":\"按钮按下时是否开启按压态显示效果，当设置为false时，按压效果关闭。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"true\"}, 'buttonStyle': {\"type\":\"ButtonStyleMode\",\"required\":false,\"description\":\"描述按钮的样式和重要程度。按钮重要程度：强调按钮>普通按钮>文字按钮。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"ButtonStyleMode.EMPHASIZED\"}, 'controlSize': {\"type\":\"ControlSize\",\"required\":false,\"description\":\"描述按钮的尺寸。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"ControlSize.NORMAL\"}, 'role': {\"type\":\"ButtonRole\",\"required\":false,\"description\":\"描述按钮的角色。\",\"enum\":null,\"enumDescriptions\":null,\"default\":\"ButtonRole.NORMAL\"}}\n", "枚举类型名：ButtonRole\n枚举类型描述：从API version 12开始，该接口支持在ArkTS卡片和元服务中使用。系统能力：SystemCapability.ArkUI.ArkUI.Full\n枚举值：['NORMAL', 'ERROR']\n枚举值描述：\n* NORMAL: 正常按钮。\n* ERROR: 警示按钮。\n\n", "枚举类型名：ControlSize\n枚举类型描述：该枚举类定义了按钮的尺寸类型\n枚举值：['SMALL', 'NORMAL']\n枚举值描述：\n* SMALL: 小尺寸按钮\n* NORMAL: 正常尺寸按钮\n\n", "枚举类型名：ButtonStyleMode\n枚举类型描述：该枚举类定义了不同样式的按钮，包括强调按钮、普通按钮和文本按钮。\n枚举值：['EMPHASIZED', 'NORMAL', 'TEXTUAL']\n枚举值描述：\n* EMPHASIZED: 强调按钮（用于强调当前操作）。\n* NORMAL: 普通按钮（一般界面操作）。\n* TEXTUAL: 文本按钮（纯文本，无背景颜色）。\n\n", "枚举类型名：ButtonType\n枚举类型描述：按钮类型枚举类，用于定义不同类型的按钮样式。\n枚举值：['Capsule', 'Circle', 'Normal']\n枚举值描述：\n* Capsule: 胶囊型按钮（圆角默认为高度的一半）。当按钮类型为Capsule时，borderRadius设置不生效，按钮圆角始终为宽、高中较小值的一半。\n* Circle: 圆形按钮。当按钮类型为Circle时，若同时设置了宽和高，则borderRadius不生效，且按钮半径为宽高中较小值的一半；若只设置宽、高中的一个，则borderRadius不生效，且按钮半径为所设宽或所设高值的一半；若不设置宽高，则borderRadius为按钮半径；若borderRadius的值为负，则borderRadius的值按照0处理。\n* Normal: 普通按钮（默认不带圆角）。按钮圆角通过通用属性borderRadius设置。\n\n", "类型名：ResourceColor\n类型描述：颜色类型，用于描述资源颜色类型。\n* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。\n* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。\n* Color: 颜色枚举值。\n* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析\n类型：['string', 'Resource', 'Color', 'number']\n"]}}], "details": {"android_component": {"name": ["android.support.constraint.ConstraintLayout", "EditText", "Button"], "content": "<android.support.constraint.ConstraintLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"250dp\"\n    android:layout_gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:background=\"@drawable/box2\"\n    android:gravity=\"center\">\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:hint=\"Enter Registered Email Address\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.29000002\" />\n\n    <Button\n        android:id=\"@+id/submit_otp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:layout_marginTop=\"32dp\"\n        android:background=\"@drawable/btn_background\"\n        android:text=\"Submit\"\n        android:textColor=\"@color/color_black_light\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/email\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\"\n        app:layout_constraintVertical_bias=\"0.23000002\" />\n</android.support.constraint.ConstraintLayout>", "layout_description": "约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源app.media.box2，内容居中对齐。\n    - 编辑文本框，宽度占满父容器，高度自适应，外边距为10vp，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于父容器的顶部和底部，水平居中，垂直偏移为0.29。\n    - 按钮，宽度自适应，高度自适应，外边距为8vp，背景引用资源app.media.btn_background，文本内容为“Submit”，文本颜色引用资源app.color.color_black_light，位于编辑文本框的下方，水平居中，垂直偏移为0.23。", "function_description": "实现了一个约束布局容器，容器中包含一个编辑文本框和一个按钮。编辑文本框用于输入电子邮件地址，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于容器的顶部和底部，水平居中，垂直偏移为0.29。按钮位于编辑文本框的下方，显示“Submit”，背景引用资源app.media.btn_background，文本颜色为app.color.color_black_light，水平居中，垂直偏移为0.23。"}}}, {"id": "9zAo6PwKoPuY77yPNts8dp", "description": "转译组件v1", "subtasks": [], "details": {"prompt": "你在一家软件公司工作，你被指派去根据安卓组件描述生成鸿蒙ArkUI代码。\n\n\n\n\n以下是可供参考的鸿蒙组件文档：\n以下是关于鸿蒙ArkUI API 12的组件基本文档：\n## RelativeContainer\n相对布局组件，用于复杂场景中元素对齐的布局。\n## TextInput\n单行文本输入框组件。\n## Button\n按钮组件，可快速创建不同样式的按钮。可以包含单个子组件。\n\n# 声明式UI描述\nArkTS以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n## 创建组件\n根据组件构造方法的不同，创建组件包含有参数和无参数两种方式。\n\n### 无参数\n如果组件的接口定义没有包含必选构造参数，则组件后面的“()”不需要配置任何内容。例如，Divider组件不包含构造参数。\n```ets\nColumn() {\n  Text('item 1')\n  Divider()\n  Text('item 2')\n}\n```\n\n### 有参数\n- Image组件的必选参数src。\n```ets\nImage('https://xyz/test.jpg')\n```\n- Text组件的非必选参数content。\n```ets\n// string类型的参数\nText('test')\n// $r形式引入应用资源，可应用于多语言场景\nText($r('app.string.title_value'))\n// 无参数形式\nText()\n```\n- 变量或表达式也可以用于参数赋值，其中表达式返回的结果类型必须满足参数类型要求。\n例如，设置变量或表达式来构造Image和Text组件的参数。\n```ets\nImage(this.imagePath)\nImage('https://' + this.imageUrl)\nText(`count: ${this.count}`)\n```\n\n## 配置属性\n属性方法以“.”链式调用的方式配置系统组件的样式和其他属性，建议每个属性方法单独写一行。\n\n- 设置Text组件的字体大小。\n```ets\nText('test')\n  .fontSize(20)\n```\n- 配置组件的多个属性。\n```ets\nImage('test.jpg')\n  .alt('error.jpg')\n  .width(100)\n  .height(100)\n```\n- 除了直接传递常量参数外，还可以传递变量或表达式。\n```ets\nText('hello')\n  .fontSize(this.size)\nImage('test.jpg')\n  .width(this.count % 2 === 0 ? 100 : 200)\n  .height(this.offset + 100)\n```\n- 对于系统组件，ArkUI还为其属性预定义了一些枚举类型供开发者调用，枚举类型可以作为参数传递，但必须满足参数类型要求。\n例如，可以按以下方式配置Text组件的颜色和字体样式。\n```ets\nText('hello')\n  .fontSize(20)\n  .fontColor(Color.Red)\n  .fontWeight(FontWeight.Bold)\n```\n\n## 配置事件\n事件方法以“.”链式调用的方式配置系统组件支持的事件，建议每个事件方法单独写一行。\n\n- 使用箭头函数配置组件的事件方法。\n```ets\nButton('Click me')\n  .onClick(() => {\n    this.myText = 'ArkUI';\n  })\n```\n- 使用组件的成员函数配置组件的事件方法，需要bind this。ArkTS语法不推荐使用成员函数配合bind this去配置组件的事件方法。\n```ets\nmyClickHandler(): void {\n  this.counter += 2;\n}\n...\nButton('add counter')\n  .onClick(this.myClickHandler.bind(this))\n```\n- 使用声明的箭头函数，可以直接调用，不需要bind this。\n```ets\nfn = () => {\n  console.info(`counter: ${this.counter}`)\n  this.counter++\n}\n...\nButton('add counter')\n  .onClick(this.fn)\n```\n\n## 配置子组件\n如果组件支持子组件配置，则需在尾随闭包\"{...}\"中为组件添加子组件的UI描述。Column、Row、Stack、Grid、List等组件都是容器组件。\n\n- 容器组件均支持子组件配置，可以实现相对复杂的多级嵌套。\n```ets\nColumn() {\n  Row() {\n    Image('test1.jpg')\n      .width(100)\n      .height(100)\n    Button('click +1')\n      .onClick(() => {\n        console.info('+1 clicked!');\n      })\n  }\n  .width('100%')\n}\n```\n以下是关于安卓组件转译为鸿蒙ArkUI组件的示例代码：\n\n## 示例#1\n### ['TextInput'] 组件\n通过 TextInput 组件实现了一个可输入文本的编辑框，用于在应用中创建一个输入界面。编辑框的宽度占据整个父布局，高度为 50vp，底部边距为 15vp，左右内边距分别为 15vp。编辑框的提示文本为“请输入文字”，字体颜色通过资源文件 $r('app.color.black') 进行设置，字体大小为 16fp，输入类型为普通文本，并启用了自动填充功能。用户可以在编辑框中输入文本进行操作。\n```\nTextInput({ placeholder: '请输入文字'})\n.id('et_1')\n.width('100%')\n.height(50)\n.margin({ bottom: '15vp' })\n.padding({ left: '15vp', right: '15vp' })\n.fontColor($r('app.color.black'))\n.fontSize('16fp')\n.type(InputType.Normal)\n.enableAutoFill(true)\n```\n## 示例#2\n### ['Button', 'Text'] 组件\n通过 Button 组件实现了一个按钮，用于在应用中创建一个按钮界面。按钮的文本内容为“Click Me”，字体颜色为白色，字体大小为 18vp，文本居中对齐，宽度占据整个父布局。按钮的唯一标识符 id 为“rounded_button”，宽度为 200vp，高度为 100vp。用户可以通过点击按钮触发相应的操作。\n```\n      Button() {\nText('Click Me')\n.fontColor(Color.White)\n.fontSize(18)\n.textAlign(TextAlign.Center)\n.width('100%')\n}\n.id('rounded_button')\n.width('200vp')\n.height('100vp')\n```\n## 示例#3\n### ['Row', 'Image', 'TextInput'] 组件\n通过 Row 布局实现了一个自定义的输入视图，包含一个图标和一个密码输入框。图标使用 Image 组件，宽度为 60vp，高度为 60vp，内边距为 15vp，并设置为左对齐。密码输入框使用 TextInput 组件，占位符文本为“请输入密码”，输入类型为密码，占位符颜色为 #DCDCDC，占位符字体大小为 35px，字体大小为 35px，字体颜色为黑色，宽度为 460px，高度为 80px，右侧内边距为 65px，顶部和右侧外边距分别为 10px 和 80px。整个布局确保了图标和输入框在视觉上具有良好的对齐和适当的间距，适合用于用户输入密码的场景。\n```\nRow(){\nImage($r('app.media.input_text'))\n.width(60)\n.height(60)\n.padding(15)\n.align(Alignment.Start)\nTextInput({placeholder:\"请输入密码\"})\n.type(InputType.Password)\n.placeholderColor('#DCDCDC')\n.placeholderFont({size:'35px'})\n.fontSize('35px')\n.fontColor(Color.Black)\n.width('460px')\n.height('80px')\n.padding({\nright:'65px'\n})\n.margin({\ntop:'10px',\nright:'80px'\n})\n}\n```\n\n这些资源目前在项目中已经定义：\n# 资源变量\n## color\nstart_window_background, primary_500, primary_700, accent_500, accent_700, black_trans80, indicator_unselected, blue_grey, red, pink, purple, deep_purple, indigo, blue, light_blue, cyan, teal, green, light_green, lime, yellow, amber, orange, deep_orange, background, even, odd, white, fab, style_color_primary, style_color_primary_dark, style_color_accent, fab_color_pressed, fab_color_shadow, text_like_counter, paint_color, opaque, rippelColor, ldrawer_color, holo_blue, color_black, color_white, color_gray_light, color_black_light, bg_gradient_start, bg_gradient_end, default_background, partial_transparent, transparent, holo_green_theme, holo_blue_light, holo_gray_light, holo_gray_dark, holo_green_light, holo_red_light, holo_blue_dark, holo_green_dark, holo_red_dark, holo_purple, holo_orange_light, holo_orange_dark, holo_blue_bright, holo_gray_bright, primary, primary_dark, ripple, accent, accent_pressed, material_blue_500, waveform_selected, waveform_unselected, waveform_unselected_bkgnd_overlay, selection_border, playback_indicator, grid_line, timecode, timecode_shadow, black, colorButton, material\n## float\nactivity_horizontal_margin, activity_vertical_margin, nav_header_vertical_spacing, nav_header_height\n## integer\nfade_animation_duration, slide_anim_time, slide_animation_duration, config_slide_time\n## string\nmodule_desc, EntryAbility_desc, EntryAbility_label, app_name, slogan, navigation_drawer_open, navigation_drawer_close, action_settings, base_url, img_base_url, cart\n\n# 资源文件\nb1.svg\\n\nbackground.svg\\n\nbox.svg\\n\nbox2.svg\\n\nbox3.svg\\n\nbox4.svg\\n\nbox5.svg\\n\nbox51.svg\\n\nbox6.svg\\n\nbtn_background.svg\\n\nforeground.png\\n\nicon.png\\n\nic_add.svg\\n\nic_arrow_back_black.svg\\n\nic_bookmark_black.svg\\n\nic_bus.svg\\n\nic_call_black.svg\\n\nic_check_black.svg\\n\nic_delete_black.svg\\n\nic_email_black.svg\\n\nic_filter_list_black.svg\\n\nic_history_black.svg\\n\nic_home_black.svg\\n\nic_info_outline_black.svg\\n\nic_location_city_black.svg\\n\nic_lock_outline_black.svg\\n\nic_log_out.svg\\n\nic_message_black.svg\\n\nic_minus_black.svg\\n\nic_person_black.svg\\n\nic_search.svg\\n\nic_search_black.svg\\n\nic_shopping_cart_black.svg\\n\nic_shopping_cart_white.svg\\n\nlayered_image.json\\n\nprofile_bg.svg\\n\nseat_bg.svg\\n\nstartIcon.png\\n\ntesttoolbar.svg\\n\ntoolbar.svg\\n\n\n技术主管已经将代码转译分为以下步骤：\n1. 转译LinearLayout容器及其内部的所有子组件，包括背景颜色和布局对齐方式。\\n\n2. 转译ConstraintLayout容器及其内部的EditText和Button组件，包括布局约束和样式。\\n\n\n\n你当前需要处理的任务是：\n转译ConstraintLayout容器及其内部的EditText和Button组件，包括布局约束和样式。\n\n以下是待转译的安卓组件描述：\n# 待转译的安卓组件名：['android.support.constraint.ConstraintLayout', 'EditText', 'Button']\n功能描述：实现了一个约束布局容器，容器中包含一个编辑文本框和一个按钮。编辑文本框用于输入电子邮件地址，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于容器的顶部和底部，水平居中，垂直偏移为0.29。按钮位于编辑文本框的下方，显示“Submit”，背景引用资源app.media.btn_background，文本颜色为app.color.color_black_light，水平居中，垂直偏移为0.23。\n安卓布局描述：约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源app.media.box2，内容居中对齐。\n    - 编辑文本框，宽度占满父容器，高度自适应，外边距为10vp，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于父容器的顶部和底部，水平居中，垂直偏移为0.29。\n    - 按钮，宽度自适应，高度自适应，外边距为8vp，背景引用资源app.media.btn_background，文本内容为“Submit”，文本颜色引用资源app.color.color_black_light，位于编辑文本框的下方，水平居中，垂直偏移为0.23。\n实现转译的思路：选择RelativeContainer组件来实现ConstraintLayout的功能，因为它支持复杂的相对布局。TextInput组件用于实现EditText的功能，Button组件用于实现Button的功能。通过设置这些组件的属性，可以实现与安卓组件相同的布局和样式。\n<android.support.constraint.ConstraintLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"250dp\"\n    android:layout_gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:background=\"@drawable/box2\"\n    android:gravity=\"center\">\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:hint=\"Enter Registered Email Address\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.29000002\" />\n\n    <Button\n        android:id=\"@+id/submit_otp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:layout_marginTop=\"32dp\"\n        android:background=\"@drawable/btn_background\"\n        android:text=\"Submit\"\n        android:textColor=\"@color/color_black_light\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/email\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\"\n        app:layout_constraintVertical_bias=\"0.23000002\" />\n</android.support.constraint.ConstraintLayout>\n\n\n你的工作是根据**鸿蒙组件文档**、当前项目信息准确地、完整的根据安卓组件描述生成鸿蒙ArkUI组件代码，不可以使用不存在的鸿蒙组件以及不存在的属性和事件。\n在生成时，你需要确保生成过程中所有使用的ArkUI组件、属性和事件与安卓组件描述实现的功能、行为一致。\n在整个过程中，请严格遵循文档规范，每一步都需要详细对照官方文档，确保没有任何遗漏或误解。\n**重要**：你必须严格按照待转译的安卓组件描述来编写鸿蒙ArkUI代码，不可忽略任何可以实现的属性、样式、功能等，也不可以添加任何未在安卓组件描述中提到的功能。\n**重要**：必须确保所选用的组件、类型、属性和方法完全符合鸿蒙ArkUI官方文档的定义与规范, 必须确保使用的资源文件都已被定义。\n**重要**：当你无法通过单个组件实现功能时，可以通过组合多个组件来实现，但不可选择不存在的组件，例如Checkbox需要与Text组件搭配才能够实现复选框旁侧有文字的效果，卡片需要利用Stack布局及Text等组件来实现。\n**重要**：ArkUI以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法。\n\n在你编写鸿蒙ArUI组件时，需要遵守以下规则：\n* 1. 当组件的宽度和高度是根据内容自适应时，需要使用'auto'；当组件的宽度和高度是跟随父组件时，需要使用'100%'，例如：android:layout_width=\"wrap_content\"应该转译为width=\"auto\"；android:layout_width=\"match_parent\"应该转译为width=\"100%\"。\n* 2. 引用资源时，需要使用$r('app.xxx.yyy'), 其中xxx为资源类型，yyy为资源名称，例如：Image($r('app.media.custom_background'))。\n* 3. 对于安卓系统属性例如@attr/black，在鸿蒙中你应该将其转译为Color.Black。\n* 4. 在鸿蒙中，对于marquee效果的文本，你应该使用.textOverflow({ overflow: TextOverflow.MARQUEE })即可，不需要额外的设置。\n* 5. 在鸿蒙中，当你转译的只有容器组件时，你需要注明子组件所在的位置，例如：Scroll() {\\n  Column() {\\n    // 子组件\\n  }\\n}。\n* 6. 在鸿蒙中，你应该根据所需效果确保为每一个Image添加objectFit，以保证图片的显示效果，例如：Image(xxx)\\n  .objectFit(ImageFit.Contain)。\n\n\n在转译过程中，你需要严格遵守以下规则：\n### 规则 1\n你必须准确、完整地实现安卓布局代码地转译。\n准确意味着你需要将安卓布局代码中的每个组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要添加任何多余的或不存在的组件、属性、值。\n完整意味着你需要将安卓布局代码中的所有组件、属性、值都转译为对应的鸿蒙ArkUI代码，一定不要遗漏任何组件、属性、值。\n正确示例：\n```\n安卓布局文件：\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"@string/lorem_ipsum\" />\n对应的鸿蒙ArkUI代码：\nText($r(\"app.string.lorem_ipsum\"))\n  .id(\"textview_first\")\n  .width('auto')\n  .height('auto')\n```\n错误示例：\n```\n安卓布局文件\n<TextView\n    android:id=\"@+id/textview_first\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"16dp\"\n    android:text=\"@string/lorem_ipsum\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintEnd_toEndOf=\"parent\"\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toBottomOf=\"@id/button_first\" />\n错误的鸿蒙ArkUI代码：\n// 未完整、准确地实现安卓布局代码的转译。\n// 遗漏了id、marginTop、constraintBottom_toBottomOf、constraintEnd_toEndOf、constraintStart_toStartOf、constraintTop_toBottomOf属性，并且添加了额外的maxLines属性。\nText($r(\"app.string.lorem_ipsum\"))\n  .maxLines(10)\n修改后的正确鸿蒙ArkUI代码：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        top: { anchor: 'button_first', align: VerticalAlign.Bottom },  // 对app:layout_constraintTop_toBottomOf=\"@id/button_first\"的转译\n        bottom: { anchor: '__container__', align: VerticalAlign.Bottom },  // 对app:layout_constraintBottom_toBottomOf=\"parent\"的转译\n        left: { anchor: '__container__', align: HorizontalAlign.Start },  // 对app:layout_constraintStart_toStartOf=\"parent\"的转译\n        right: { anchor: '__container__', align: HorizontalAlign.End }  // 对app:layout_constraintEnd_toEndOf=\"parent\"的转译\n    })  // 使用RelativeContainer与alignRules实现对layout_constraintXXX_toXXXOf属性的转译\n}\n额外示例：\n利用RelativeContainer实现子组件垂直水平居中：\nRelativeContainer() {\n  Text($r('app.string.lorem_ipsum'))  // 对android:text=\"@string/lorem_ipsum\"的转译\n    .id('textview_first')  // 对android:id=\"@+id/textview_first\"的转译\n    .margin({ top: '16vp' })  // 对android:layout_marginTop=\"16dp\"的转译\n    .alignRules({\n        center: {anchor: '__container__', align: VerticalAlign.Center},\n        middle: {anchor: '__container__', align: HorizontalAlign.Center}\n    })\n}\n```\n\n", "translated_component": {"harmony_component": "RelativeContainer() {\n  TextInput({ placeholder: 'Enter Registered Email Address' })\n    .id('email')\n    .width('100%')\n    .height('auto')\n    .margin({ top: '10vp', bottom: '10vp', start: '8vp', end: '8vp' })\n    .type(InputType.Email)\n    .alignRules({\n      top: { anchor: '__container__', align: VerticalAlign.Top },\n      bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End },\n      verticalBias: 0.29\n    })\n\n  Button() {\n    Text('Submit')\n      .fontColor($r('app.color.color_black_light'))\n  }\n  .id('submit_otp')\n  .width('auto')\n  .height('auto')\n  .margin({ top: '32vp', bottom: '8vp', end: '24vp' })\n  .backgroundImage($r('app.media.btn_background'))\n  .alignRules({\n    top: { anchor: 'email', align: VerticalAlign.Bottom },\n    bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n    left: { anchor: 'email', align: HorizontalAlign.Start },\n    right: { anchor: '__container__', align: HorizontalAlign.End },\n    verticalBias: 0.23\n  })\n}\n.width('100%')\n.height('250vp')\n.margin('20vp')\n.backgroundImage($r('app.media.box2'))\n.alignContent(AlignContent.Center)", "explanation": "1. 使用RelativeContainer组件来实现ConstraintLayout的功能，支持复杂的相对布局。\n2. TextInput组件用于实现EditText的功能，设置placeholder、width、height、margin、type等属性。\n3. Button组件用于实现Button的功能，设置文本内容、文本颜色、width、height、margin、背景图片等属性。\n4. 通过alignRules属性实现布局约束，确保组件在容器中的相对位置和偏移。\n5. 设置容器的width、height、margin、背景图片等属性，确保整体布局与安卓组件描述一致。"}}}, {"id": "DyEBRF5y75w92eQQdGRZ88", "description": "后处理鸿蒙组件代码", "subtasks": [], "details": {"harmony_component_code": "RelativeContainer() {\n  TextInput({ placeholder: 'Enter Registered Email Address' })\n    .id('email')\n    .width('100%')\n    .height('auto')\n    .margin({ top: '10vp', bottom: '10vp', left: '8vp', right: '8vp' })\n    .type(InputType.Email)\n    .alignRules({\n      top: { anchor: '__container__', align: VerticalAlign.Top },\n      bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End },\n      verticalBias: 0.29\n    })\n\n  Button() {\n    Text('Submit')\n      .fontColor($r('app.color.color_black_light'))\n  }\n  .id('submit_otp')\n  .width('auto')\n  .height('auto')\n  .margin({ top: '10vp', bottom: '10vp', left: '8vp', right: '8vp' })\n  .backgroundImage($r('app.media.btn_background'))\n  .alignRules({\n    top: { anchor: 'email', align: VerticalAlign.Bottom },\n    bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n    left: { anchor: 'email', align: HorizontalAlign.Start },\n    right: { anchor: '__container__', align: HorizontalAlign.End },\n    verticalBias: 0.23\n  })\n}\n.width('100%')\n.height('250vp')\n.margin('20vp')\n.backgroundImage($r('app.media.box2'))\n.alignContent(AlignContent.Center)"}}], "details": null}], "details": {"breakdown_android_layout": {"tasks": [{"description": "转译LinearLayout容器及其内部的所有子组件，包括背景颜色和布局对齐方式。", "done": false, "component": {"name": ["LinearLayout"], "content": "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">"}}, {"description": "转译ConstraintLayout容器及其内部的EditText和Button组件，包括布局约束和样式。", "done": false, "component": {"name": ["android.support.constraint.ConstraintLayout", "EditText", "Button"], "content": "<android.support.constraint.ConstraintLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"250dp\"\n    android:layout_gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:background=\"@drawable/box2\"\n    android:gravity=\"center\">\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:hint=\"Enter Registered Email Address\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.29000002\" />\n\n    <Button\n        android:id=\"@+id/submit_otp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:layout_marginTop=\"32dp\"\n        android:background=\"@drawable/btn_background\"\n        android:text=\"Submit\"\n        android:textColor=\"@color/color_black_light\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/email\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\"\n        app:layout_constraintVertical_bias=\"0.23000002\" />\n</android.support.constraint.ConstraintLayout>"}}]}, "translated_android_components": [{"description": "转译LinearLayout容器及其内部的所有子组件，包括背景颜色和布局对齐方式。", "source_component": "LinearLayout", "source_component_code": "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/cardview_dark_background\"\n    android:gravity=\"center\"\n    tools:context=\"app.infiniverse.grocery.ForgetActivity\">", "source_component_description": "垂直线性容器，宽度占满父容器，高度占满父容器，背景颜色引用资源app.color.cardview_dark_background，内容对齐方式为居中。", "target_component": ["Column"], "target_component_code": "Column() {\n  // 子组件\n}\n.width('100%')\n.height('100%')\n.backgroundColor($r('app.color.cardview_dark_background'))\n.alignItems(HorizontalAlign.Center)\n.justifyContent(FlexAlign.Center)", "target_component_description": "实现了一个垂直线性容器，容器背景颜色引用了 app.color.cardview_dark_background 资源，内容在容器中居中对齐。\n\n垂直线性容器，宽度占满父容器，高度占满父容器，背景颜色引用资源app.color.cardview_dark_background，内容对齐方式为居中。", "explanation": "根据安卓组件描述，LinearLayout被转译为鸿蒙ArkUI的Column组件。Column组件的宽度和高度设置为'100%'以占满父容器，背景颜色通过$r('app.color.cardview_dark_background')引用资源。内容对齐方式通过.alignItems(HorizontalAlign.Center)和.justifyContent(FlexAlign.Center)实现居中对齐。子组件部分需要根据实际需求进行填充。"}, {"description": "转译ConstraintLayout容器及其内部的EditText和Button组件，包括布局约束和样式。", "source_component": "android.support.constraint.ConstraintLayout", "source_component_code": "<android.support.constraint.ConstraintLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"250dp\"\n    android:layout_gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:background=\"@drawable/box2\"\n    android:gravity=\"center\">\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:hint=\"Enter Registered Email Address\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.29000002\" />\n\n    <Button\n        android:id=\"@+id/submit_otp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:layout_marginTop=\"32dp\"\n        android:background=\"@drawable/btn_background\"\n        android:text=\"Submit\"\n        android:textColor=\"@color/color_black_light\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/email\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\"\n        app:layout_constraintVertical_bias=\"0.23000002\" />\n</android.support.constraint.ConstraintLayout>", "source_component_description": "约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源app.media.box2，内容居中对齐。\n    - 编辑文本框，宽度占满父容器，高度自适应，外边距为10vp，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于父容器的顶部和底部，水平居中，垂直偏移为0.29。\n    - 按钮，宽度自适应，高度自适应，外边距为8vp，背景引用资源app.media.btn_background，文本内容为“Submit”，文本颜色引用资源app.color.color_black_light，位于编辑文本框的下方，水平居中，垂直偏移为0.23。", "target_component": ["RelativeContainer", "TextInput", "Button"], "target_component_code": "RelativeContainer() {\n  TextInput({ placeholder: 'Enter Registered Email Address' })\n    .id('email')\n    .width('100%')\n    .height('auto')\n    .margin({ top: '10vp', bottom: '10vp', left: '8vp', right: '8vp' })\n    .type(InputType.Email)\n    .alignRules({\n      top: { anchor: '__container__', align: VerticalAlign.Top },\n      bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End },\n      verticalBias: 0.29\n    })\n\n  Button() {\n    Text('Submit')\n      .fontColor($r('app.color.color_black_light'))\n  }\n  .id('submit_otp')\n  .width('auto')\n  .height('auto')\n  .margin({ top: '10vp', bottom: '10vp', left: '8vp', right: '8vp' })\n  .backgroundImage($r('app.media.btn_background'))\n  .alignRules({\n    top: { anchor: 'email', align: VerticalAlign.Bottom },\n    bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n    left: { anchor: 'email', align: HorizontalAlign.Start },\n    right: { anchor: '__container__', align: HorizontalAlign.End },\n    verticalBias: 0.23\n  })\n}\n.width('100%')\n.height('250vp')\n.margin('20vp')\n.backgroundImage($r('app.media.box2'))\n.alignContent(AlignContent.Center)", "target_component_description": "实现了一个约束布局容器，容器中包含一个编辑文本框和一个按钮。编辑文本框用于输入电子邮件地址，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于容器的顶部和底部，水平居中，垂直偏移为0.29。按钮位于编辑文本框的下方，显示“Submit”，背景引用资源app.media.btn_background，文本颜色为app.color.color_black_light，水平居中，垂直偏移为0.23。\n\n约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源app.media.box2，内容居中对齐。\n    - 编辑文本框，宽度占满父容器，高度自适应，外边距为10vp，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于父容器的顶部和底部，水平居中，垂直偏移为0.29。\n    - 按钮，宽度自适应，高度自适应，外边距为8vp，背景引用资源app.media.btn_background，文本内容为“Submit”，文本颜色引用资源app.color.color_black_light，位于编辑文本框的下方，水平居中，垂直偏移为0.23。", "explanation": "1. 使用RelativeContainer组件来实现ConstraintLayout的功能，支持复杂的相对布局。\n2. TextInput组件用于实现EditText的功能，设置placeholder、width、height、margin、type等属性。\n3. Button组件用于实现Button的功能，设置文本内容、文本颜色、width、height、margin、背景图片等属性。\n4. 通过alignRules属性实现布局约束，确保组件在容器中的相对位置和偏移。\n5. 设置容器的width、height、margin、背景图片等属性，确保整体布局与安卓组件描述一致。"}]}}, "assemble_harmony_layout": "根据技术主管分配的任务和已经完成的转译结果，我将合并所有的ArkUI组件代码，形成一个整体的鸿蒙ArkUI布局文件。以下是合并后的代码：\n\n```ets\n// activity_forget.ets\n@Entry\n@Component\nstruct ForgetActivity {\n  build() {\n    Column() {\n      RelativeContainer() {\n        TextInput({ placeholder: 'Enter Registered Email Address' })\n          .id('email')\n          .width('100%')\n          .height('auto')\n          .margin({ top: '10vp', bottom: '10vp', left: '8vp', right: '8vp' })\n          .type(InputType.Email)\n          .alignRules({\n            top: { anchor: '__container__', align: VerticalAlign.Top },\n            bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n            left: { anchor: '__container__', align: HorizontalAlign.Start },\n            right: { anchor: '__container__', align: HorizontalAlign.End },\n            verticalBias: 0.29\n          })\n\n        Button() {\n          Text('Submit')\n            .fontColor($r('app.color.color_black_light'))\n        }\n        .id('submit_otp')\n        .width('auto')\n        .height('auto')\n        .margin({ top: '32vp', bottom: '8vp', left: '8vp', right: '24vp' })\n        .backgroundImage($r('app.media.btn_background'))\n        .alignRules({\n          top: { anchor: 'email', align: VerticalAlign.Bottom },\n          bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n          left: { anchor: 'email', align: HorizontalAlign.Start },\n          right: { anchor: '__container__', align: HorizontalAlign.End },\n          verticalBias: 0.23\n        })\n      }\n      .width('100%')\n      .height('250vp')\n      .margin('20vp')\n      .backgroundImage($r('app.media.box2'))\n      .alignContent(AlignContent.Center)\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundColor($r('app.color.cardview_dark_background'))\n    .alignItems(HorizontalAlign.Center)\n    .justifyContent(FlexAlign.Center)\n  }\n}\n```\n\n### 代码说明：\n1. **Column容器**：\n   - 作为最外层的容器，宽度占满父容器，高度占满父容器，背景颜色引用资源`app.color.cardview_dark_background`，内容对齐方式为居中。\n\n2. **RelativeContainer容器**：\n   - 作为内部的约束布局容器，宽度占满父容器，高度为250vp，外边距为20vp，背景引用资源`app.media.box2`，内容居中对齐。\n\n3. **TextInput组件**：\n   - 用于输入电子邮件地址，提示文本为“Enter Registered Email Address”，输入类型为电子邮件地址，位于容器的顶部和底部，水平居中，垂直偏移为0.29。\n\n4. **Button组件**：\n   - 显示“Submit”，背景引用资源`app.media.btn_background`，文本颜色为`app.color.color_black_light`，位于编辑文本框的下方，水平居中，垂直偏移为0.23。\n\n### 注意事项：\n- **资源引用**：确保所有引用的资源（如颜色、背景图片等）在鸿蒙项目中已定义，并且路径正确。\n- **布局约束**：确保所有组件的布局约束正确，特别是`alignRules`中的约束关系，以保证组件在不同屏幕尺寸下的布局一致性。\n- **代码结构**：保持代码结构清晰，每个组件的属性和事件配置单独一行，便于后续维护和调试。\n\n通过以上步骤，我们已经将安卓布局文件成功转译为鸿蒙ArkUI布局文件，并且确保了布局的语义和结构一致性。", "time": 174.98210549354553}