{
    "name": "app/src/main/res/layout/activity_change_password.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.v7.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    tools:context=\"app.infiniverse.grocery.ChangePassword\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@drawable/nav_header_bg\" />\n\n    <android.support.v7.widget.CardView\n        android:layout_width=\"match_parent\"\n        android:layout_gravity=\"center\"\n        android:layout_margin=\"40dp\"\n        android:elevation=\"6dp\"\n        app:cardElevation=\"5dp\"\n        android:layout_height=\"wrap_content\">\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"@drawable/box2\">\n\n            <EditText\n                android:id=\"@+id/otp\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentTop=\"true\"\n                android:layout_centerHorizontal=\"true\"\n                android:layout_marginTop=\"38dp\"\n                android:ems=\"10\"\n                android:hint=\"Old Password\"\n                android:inputType=\"textPassword\" />\n\n            <EditText\n                android:id=\"@+id/new_psw\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignStart=\"@+id/otp\"\n                android:layout_below=\"@+id/otp\"\n                android:layout_marginTop=\"10dp\"\n                android:ems=\"10\"\n                android:hint=\"New Password\"\n                android:inputType=\"textPassword\" />\n\n            <EditText\n                android:id=\"@+id/conf_psw\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignStart=\"@+id/new_psw\"\n                android:layout_below=\"@+id/new_psw\"\n                android:layout_marginTop=\"10dp\"\n                android:ems=\"10\"\n                android:hint=\"Confirm Password\"\n                android:inputType=\"textPassword\" />\n\n            <Button\n                android:id=\"@+id/change\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginBottom=\"10dp\"\n                android:background=\"@drawable/btn_background\"\n                android:layout_alignEnd=\"@+id/conf_psw\"\n                android:layout_below=\"@+id/conf_psw\"\n                android:layout_marginTop=\"26dp\"\n                android:textColor=\"@color/color_black_light\"\n                android:text=\"Change\" />\n        </RelativeLayout>\n    </android.support.v7.widget.CardView>\n</android.support.v7.widget.CardView>\n\n",
    "java": "package app.infiniverse.grocery;\n\nimport android.content.Context;\nimport android.content.SharedPreferences;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.support.v7.app.AppCompatActivity;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.net.URLEncoder;\n\npublic class ChangePassword extends AppCompatActivity {\n\n    EditText tvOldPsw,tvNewPsw,tvConfPsw;\n    Button bChange;\n    public static final String PREFS = \"PREFS\";\n    SharedPreferences sp;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_change_password);\n\n        tvOldPsw=findViewById(R.id.otp);\n        tvNewPsw=findViewById(R.id.new_psw);\n        tvConfPsw=findViewById(R.id.conf_psw);\n\n        bChange=findViewById(R.id.change);\n\n        sp = getSharedPreferences(PREFS, Context.MODE_PRIVATE);\n\n\n//        Toast.makeText(this, sp.getString(\"loginid\",null), Toast.LENGTH_SHORT).show();\n\n\n        bChange.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                if(tvNewPsw.getText().toString().equals(tvConfPsw.getText().toString())){\n\n\n\n\n                    class ChangePasswordAsync extends AsyncTask<String, Void, String> {\n                        @Override\n                        protected void onPreExecute() {\n                            super.onPreExecute();\n                        }\n                        @Override\n                        protected void onPostExecute(String s) {\n                            super.onPostExecute(s);\n                            Toast.makeText(ChangePassword.this, s, Toast.LENGTH_SHORT).show();\n                            if(s.equals(\"Password Changed Successfully\"))\n                            {\n                                tvOldPsw.setText(\"\");\n                                tvNewPsw.setText(\"\");\n                                tvConfPsw.setText(\"\");\n                                finish();\n\n                            }\n\n\n                        }\n                        @Override\n                        protected String doInBackground(String... params) {\n\n                            String urls = getResources().getString(R.string.base_url).concat(\"changePassword/\");\n                            try {\n                                URL url = new URL(urls);\n                                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\n                                httpURLConnection.setRequestMethod(\"POST\");\n                                httpURLConnection.setDoInput(true);\n                                httpURLConnection.setDoOutput(true);\n                                OutputStream outputStream = httpURLConnection.getOutputStream();\n                                BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, \"UTF-8\"));\n                                String post_Data = URLEncoder.encode(\"login_id\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[0], \"UTF-8\") + \"&\" +\n                                        URLEncoder.encode(\"password\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[1], \"UTF-8\") + \"&\" +\n                                        URLEncoder.encode(\"new_password\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[2], \"UTF-8\");\n\n                                bufferedWriter.write(post_Data);\n                                bufferedWriter.flush();\n                                bufferedWriter.close();\n                                outputStream.close();\n                                InputStream inputStream = httpURLConnection.getInputStream();\n                                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));\n                                String result = \"\", line = \"\";\n                                while ((line = bufferedReader.readLine()) != null) {\n                                    result += line;\n                                }\n                                return result;\n                            } catch (Exception e) {\n\n                                return e.toString();\n                            }\n                        }\n                    }\n\n                    //creating asynctask object and executing it\n                    ChangePasswordAsync changePasswordAsync = new ChangePasswordAsync();\n                    changePasswordAsync.execute(sp.getString(\"loginid\",null),tvOldPsw.getText().toString(),tvNewPsw.getText().toString());\n                }else{\n                    Toast.makeText(ChangePassword.this, \"Password Did Not Matched\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }\n}\n",
    "contains": [],
    "mock_data": {},
    "source": "GoGrocery",
    "time": 39.80954670906067,
    "result": {
        "harmony_component_code": "Column() {\n  Stack() {\n    Image($r('app.media.nav_header_bg'))\n      .width('100%')\n      .height('100%')\n      .objectFit(ImageFit.Cover)\n    Card() {\n      Column() {\n        TextInput()\n          .id('otp')\n          .width('auto')\n          .height('auto')\n          .margin({ top: '38vp', left: '50%', transform: [{ translateX: '-50%' }] })\n          .placeholder('Old Password')\n          .password(true)\n        TextInput()\n          .id('new_psw')\n          .width('auto')\n          .height('auto')\n          .margin({ top: '10vp' })\n          .placeholder('New Password')\n          .password(true)\n        TextInput()\n          .id('conf_psw')\n          .width('auto')\n          .height('auto')\n          .margin({ top: '10vp' })\n          .placeholder('Confirm Password')\n          .password(true)\n        Button('Change')\n          .id('change')\n          .width('auto')\n          .height('auto')\n          .margin({ top: '26vp', bottom: '10vp' })\n          .backgroundColor($r('app.media.btn_background'))\n          .fontColor(Color.Black)\n      }\n      .width('100%')\n      .padding('40vp')\n      .backgroundColor($r('app.media.box2'))\n    }\n    .width('100%')\n    .height('auto')\n    .margin('40vp')\n    .elevation('6vp')\n    .cardElevation('5vp')\n  }\n  .width('100%')\n  .height('100%')\n}"
    },
    "explanation": "1. 使用Column作为根布局，包含一个Stack组件来实现背景图片和CardView的叠加效果。\n2. 背景图片使用Image组件，设置为全屏覆盖。\n3. Card组件用于包裹内容，设置宽度和高度为自适应，并添加边距和阴影效果。\n4. 内部使用Column布局来排列EditText和Button组件。\n5. 每个EditText组件设置为自适应宽度和高度，并根据布局要求设置边距和占位符。\n6. Button组件设置为自适应宽度和高度，并设置背景颜色和文本颜色。\n7. 所有组件的宽度和高度根据安卓布局描述进行转译，使用'auto'表示自适应，'100%'表示占满父组件。\n8. 引用资源时，使用$r('app.xxx.yyy')格式。\n9. 对于密码输入框，使用.password(true)属性来实现密码隐藏功能。"
}