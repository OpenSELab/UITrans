{
    "name": "app/src/main/res/layout/activity_my_cart.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\"\n    android:background=\"@color/white\"\n    android:orientation=\"vertical\"\n    tools:context=\"app.infiniverse.grocery.MyCart\">\n\n    <include layout=\"@layout/toolbar\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:layout_marginTop=\"35dp\"\n        android:visibility=\"gone\" />\n\n    <LinearLayout\n        android:id=\"@+id/ll_item_products\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_marginBottom=\"10dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"10dp\"\n        android:layout_weight=\"1\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n\n        <android.support.v7.widget.RecyclerView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n            android:id=\"@+id/recyclerview_item_products\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/ll_item\"\n        android:layout_width=\"fill_parent\"\n        android:visibility=\"gone\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@color/holo_red_dark\"\n        android:gravity=\"bottom|end\">\n\n\n        <android.support.constraint.ConstraintLayout\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"60dp\"\n            android:layout_gravity=\"bottom\"\n            android:background=\"@drawable/box6\"\n            android:baselineAligned=\"false\"\n            android:orientation=\"vertical\">\n\n            <TextView\n                android:id=\"@+id/textView3\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginStart=\"8dp\"\n                android:layout_marginTop=\"10dp\"\n                android:text=\"Total Savings : \"\n                android:textColor=\"@color/black\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toTopOf=\"parent\" />\n\n            <TextView\n                android:id=\"@+id/total_discount\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"\"\n                app:layout_constraintBaseline_toBaselineOf=\"@+id/textView3\"\n                app:layout_constraintStart_toStartOf=\"@+id/total_amount\" />\n\n            <TextView\n                android:id=\"@+id/textView5\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginStart=\"8dp\"\n                android:layout_marginTop=\"3dp\"\n                android:text=\"Payable Amount : \"\n                android:textColor=\"@color/black\"\n                android:textStyle=\"bold\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toBottomOf=\"@+id/textView3\" />\n\n            <TextView\n                android:id=\"@+id/total_amount\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"18dp\"\n                android:layout_marginStart=\"8dp\"\n                android:text=\"\"\n                android:textColor=\"@color/black\"\n                android:textStyle=\"bold\"\n                app:layout_constraintBaseline_toBaselineOf=\"@+id/textView5\"\n                app:layout_constraintStart_toEndOf=\"@+id/textView5\" />\n\n            <Button\n                android:id=\"@+id/proceed\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginRight=\"5dp\"\n                android:background=\"@drawable/btn_background\"\n                android:padding=\"10dp\"\n                android:textStyle=\"bold\"\n                android:textColor=\"@color/color_black_light\"\n                android:text=\"Place Order\"\n                app:layout_constraintBottom_toBottomOf=\"parent\"\n                app:layout_constraintRight_toRightOf=\"parent\"\n                app:layout_constraintTop_toTopOf=\"parent\" />\n\n\n        </android.support.constraint.ConstraintLayout>\n    </LinearLayout>\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:id=\"@+id/empty_cart\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n        <ImageView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"145dp\"\n            android:layout_marginTop=\"130dp\"\n            android:src=\"@drawable/ic_shopping_cart_black\" />\n\n        <TextView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:gravity=\"center\"\n            android:text=\"Your Cart is Empty\" />\n\n        <TextView\n            android:id=\"@+id/startshopping\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:fontFamily=\"@font/nunito_sans\"\n            android:gravity=\"center\"\n            android:text=\"Start Shopping\"\n            android:textColor=\"#DA4453\"\n            android:textStyle=\"bold\" />\n\n    </LinearLayout>\n\n</LinearLayout>\n",
    "java": "package app.infiniverse.grocery;\n\nimport android.app.AlertDialog;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.Toolbar;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.LinearLayout;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.net.URLEncoder;\n\npublic class MyCart extends AppCompatActivity {\n    public static final String PREFS = \"PREFS\";\n    SharedPreferences sp;\n    double savings = 0;\n    double payable_amt = 0;\n    TextView tvSavings, tvPayableAmt, start_shopping;\n    Button proceed;\n    LinearLayout l1, l2, empty;\n    private ProgressBar mProgressBar;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_my_cart);\n        Toolbar toolbar = findViewById(R.id.mytoolbar);\n        setSupportActionBar(toolbar);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        getSupportActionBar().setTitle(\"My Cart\");\n\n\n        sp = getSharedPreferences(PREFS, Context.MODE_PRIVATE);\n        String login_id = sp.getString(\"loginid\", null);\n\n        tvSavings = findViewById(R.id.total_discount);\n        tvPayableAmt = findViewById(R.id.total_amount);\n        proceed = findViewById(R.id.proceed);\n        mProgressBar = findViewById(R.id.progressBar);\n        l1 = findViewById(R.id.ll_item_products);\n        l2 = findViewById(R.id.ll_item);\n        empty = findViewById(R.id.empty_cart);\n        start_shopping=findViewById(R.id.startshopping);\n\n        start_shopping.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\n                startActivity(intent);\n                finish();\n\n            }\n        });\n\n\n\n        mProgressBar.setVisibility(View.VISIBLE);\n\n\n\n\n        class CartItems extends AsyncTask<String, Void, String> {\n\n            @Override\n            protected String doInBackground(String... params) {\n                String cartProductsURL = getResources().getString(R.string.base_url) + \"cartProducts/\";\n                try {\n                    URL url = new URL(cartProductsURL);\n                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\n                    httpURLConnection.setRequestMethod(\"POST\");\n                    httpURLConnection.setDoInput(true);\n                    httpURLConnection.setDoOutput(true);\n                    OutputStream outputStream = httpURLConnection.getOutputStream();\n                    BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, \"UTF-8\"));\n                    String post_Data = URLEncoder.encode(\"login_id\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[0], \"UTF-8\");\n\n                    bufferedWriter.write(post_Data);\n                    bufferedWriter.flush();\n                    bufferedWriter.close();\n                    outputStream.close();\n                    InputStream inputStream = httpURLConnection.getInputStream();\n                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));\n                    String result = \"\", line = \"\";\n                    while ((line = bufferedReader.readLine()) != null) {\n                        result += line;\n                    }\n                    return result;\n                } catch (Exception e) {\n                    return e.toString();\n                }\n            }\n\n            @Override\n            protected void onPostExecute(String s) {\n                super.onPostExecute(s);\n                AlertDialog.Builder builder = new AlertDialog.Builder(MyCart.this);\n                builder.setTitle(\"Received Message\");\n\n                try {\n\n                    JSONArray productArray = new JSONArray(s);\n                    if (productArray.length() != 0) {\n\n\n                        String[] product_ids = new String[productArray.length()];\n                        String[] product_names = new String[productArray.length()];\n                        String[] product_descs = new String[productArray.length()];\n                        String[] product_imgs = new String[productArray.length()];\n                        String[] product_prices = new String[productArray.length()];\n                        String[] product_brands = new String[productArray.length()];\n                        String[] product_sps = new String[productArray.length()];\n                        String[] product_dps = new String[productArray.length()];\n                        String[] product_qtys = new String[productArray.length()];\n\n\n                        JSONObject json_data = new JSONObject();\n                        for (int i = 0; i < productArray.length(); i++) {\n                            json_data = productArray.getJSONObject(i);\n\n                            product_ids[i] = json_data.getString(\"id\");\n                            product_names[i] = json_data.getString(\"name\");\n                            product_descs[i] = json_data.getString(\"description\");\n                            product_imgs[i] = json_data.getString(\"image\");\n                            product_prices[i] = \" \\u20B9 \" + json_data.getString(\"mrp\") + \" \";\n                            product_brands[i] = json_data.getString(\"brand\");\n                            product_sps[i] = \" \\u20B9 \" + json_data.getString(\"selling_price\") + \" \";\n                            double p_mrp = Double.parseDouble(json_data.getString(\"mrp\"));\n                            double p_sp = Double.parseDouble(json_data.getString(\"selling_price\"));\n                            double p_dp = (p_mrp - p_sp) / (p_mrp / 100);\n                            int p_dp_i = (int) p_dp;\n                            product_dps[i] = String.valueOf(p_dp_i);\n                            product_qtys[i] = json_data.getString(\"qty\");\n                            int p_qty = Integer.parseInt(json_data.getString(\"qty\"));\n                            savings = savings + ((p_mrp - p_sp) * p_qty);\n                            payable_amt = payable_amt + (p_sp * p_qty);\n\n\n                        }\n                        tvSavings.setText(\"\\u20B9\" + Double.toString(savings));\n                        tvPayableAmt.setText(\"\\u20B9\" + Double.toString(payable_amt));\n\n                        l1.setVisibility(View.VISIBLE);\n                        l2.setVisibility(View.VISIBLE);\n                        mProgressBar.setVisibility(View.GONE);\n\n                        RecyclerView cart_item_recyclerview = findViewById(R.id.recyclerview_item_products);\n                        cart_item_recyclerview.setLayoutManager(new LinearLayoutManager(MyCart.this));\n                        cart_item_recyclerview.setAdapter(new Cart_Item_Adapter(product_ids, product_names, product_descs, product_imgs, product_prices, product_brands, product_sps, product_dps, product_qtys, tvSavings,tvPayableAmt, MyCart.this));\n                    } else {\n                        mProgressBar.setVisibility(View.GONE);\n                        empty.setVisibility(View.VISIBLE);\n                    }\n                } catch (JSONException e) {\n                    builder.setCancelable(true);\n                    builder.setTitle(\"No Internet Connection\");\n//                    builder.setMessage(s);\n                    builder.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialogInterface, int i) {\n\n                        }\n                    });\n                    builder.show();\n                }\n\n            }\n\n            @Override\n            protected void onPreExecute() {\n                super.onPreExecute();\n            }\n\n\n        }\n        CartItems items = new CartItems();\n        items.execute(login_id);\n\n\n        proceed.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                class PlaceOrder extends AsyncTask<String, Void, String> {\n\n                    @Override\n                    protected String doInBackground(String... params) {\n                        String cartProductsURL = getResources().getString(R.string.base_url) + \"placeOrder/\";\n\n                        try {\n                            URL url = new URL(cartProductsURL);\n                            HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\n                            httpURLConnection.setRequestMethod(\"POST\");\n                            httpURLConnection.setDoInput(true);\n                            httpURLConnection.setDoOutput(true);\n                            OutputStream outputStream = httpURLConnection.getOutputStream();\n                            BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, \"UTF-8\"));\n                            String post_Data = URLEncoder.encode(\"login_id\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[0], \"UTF-8\")+\"&\"+\n                                    URLEncoder.encode(\"savings\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[1], \"UTF-8\")+\"&\"+\n                                    URLEncoder.encode(\"payableamt\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[2], \"UTF-8\");\n\n                            bufferedWriter.write(post_Data);\n                            bufferedWriter.flush();\n                            bufferedWriter.close();\n                            outputStream.close();\n                            InputStream inputStream = httpURLConnection.getInputStream();\n                            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));\n                            String result = \"\", line = \"\";\n                            while ((line = bufferedReader.readLine()) != null) {\n                                result += line;\n                            }\n                            return result;\n                        } catch (Exception e) {\n                            return e.toString();\n                        }\n                    }\n\n                    @Override\n                    protected void onPostExecute(String s) {\n                        super.onPostExecute(s);\n                        AlertDialog.Builder builder = new AlertDialog.Builder(MyCart.this);\n                        builder.setTitle(\"Successful\")\n                                .setMessage(\"Order Placed Successfully\")\n                                .setIcon(R.drawable.ic_check_black)\n                                .setCancelable(false)\n                                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\n                                    @Override\n                                    public void onClick(DialogInterface dialogInterface, int i) {\n\n                                        Intent ii = new Intent(MyCart.this, OrderActivity.class);\n                                        startActivity(ii);\n                                        finish();\n                                    }\n                                });\n                        builder.show();\n                    }\n\n                    @Override\n                    protected void onPreExecute() {\n                        super.onPreExecute();\n                    }\n\n\n                }\n                PlaceOrder placeOrderOBJ = new PlaceOrder();\n                placeOrderOBJ.execute(sp.getString(\"loginid\", null),tvSavings.getText().toString(),tvPayableAmt.getText().toString());\n            }\n        });\n\n\n    }\n\n}\n",
    "contains": [
        "app/src/main/res/layout/list_item_cart.xml",
        "app/src/main/res/layout/toolbar.xml"
    ],
    "mock_data": {},
    "source": "GoGrocery",
    "time": 61.82788825035095,
    "result": {
        "harmony_component_code": "Column() {\n  // Include toolbar\n  // Assuming toolbar is a predefined component or layout\n  Toolbar()\n\n  // ProgressBar\n  ProgressBar()\n    .id('progressBar')\n    .width('auto')\n    .height('auto')\n    .align(Alignment.Center)\n    .marginTop('35vp')\n    .visibility(Visibility.Hidden)\n\n  // LinearLayout for products\n  Column() {\n    // RecyclerView equivalent in HarmonyOS\n    List() {\n      // Placeholder for list items\n    }\n    .id('recyclerview_item_products')\n    .width('100%')\n    .height('auto')\n  }\n  .id('ll_item_products')\n  .width('100%')\n  .height('0vp')\n  .margin({ bottom: '10vp', end: '8vp', start: '8vp', top: '10vp' })\n  .visibility(Visibility.Hidden)\n\n  // LinearLayout for total and order button\n  Column() {\n    Stack() {\n      Text('Total Savings : ')\n        .id('textView3')\n        .width('auto')\n        .height('auto')\n        .margin({ start: '8vp', top: '10vp' })\n        .fontColor(Color.Black)\n      Text('')\n        .id('total_discount')\n        .width('auto')\n        .height('auto')\n      Text('Payable Amount : ')\n        .id('textView5')\n        .width('auto')\n        .height('auto')\n        .margin({ start: '8vp', top: '3vp' })\n        .fontColor(Color.Black)\n        .fontWeight(FontWeight.Bold)\n      Text('')\n        .id('total_amount')\n        .width('auto')\n        .height('18vp')\n        .margin({ start: '8vp' })\n        .fontColor(Color.Black)\n        .fontWeight(FontWeight.Bold)\n      Button('Place Order')\n        .id('proceed')\n        .width('auto')\n        .height('auto')\n        .margin({ right: '5vp' })\n        .padding('10vp')\n        .fontWeight(FontWeight.Bold)\n        .fontColor($r('app.color.color_black_light'))\n    }\n    .width('100%')\n    .height('60vp')\n    .backgroundColor($r('app.color.holo_red_dark'))\n    .align(Alignment.BottomEnd)\n  }\n  .id('ll_item')\n  .width('100%')\n  .height('auto')\n  .visibility(Visibility.Hidden)\n\n  // LinearLayout for empty cart\n  Column() {\n    Image($r('app.media.ic_shopping_cart_black'))\n      .width('100%')\n      .height('145vp')\n      .marginTop('130vp')\n    Text('Your Cart is Empty')\n      .width('100%')\n      .height('auto')\n      .textAlign(TextAlign.Center)\n    Text('Start Shopping')\n      .id('startshopping')\n      .width('100%')\n      .height('auto')\n      .textAlign(TextAlign.Center)\n      .font($r('app.font.nunito_sans'))\n      .fontColor('#DA4453')\n      .fontWeight(FontWeight.Bold)\n  }\n  .id('empty_cart')\n  .width('100%')\n  .height('100%')\n  .visibility(Visibility.Hidden)\n}\n.width('100%')\n.height('100%')\n.backgroundColor($r('app.color.white'))"
    },
    "explanation": "1. The root LinearLayout is translated to a Column component in HarmonyOS, maintaining the vertical orientation and full width and height.\n2. The include tag for the toolbar is assumed to be a predefined component or layout in HarmonyOS.\n3. The ProgressBar is translated to a ProgressBar component with appropriate attributes like id, width, height, alignment, marginTop, and visibility.\n4. The LinearLayout containing the RecyclerView is translated to a Column with a List component inside it. The List component is a placeholder for the actual list items.\n5. The LinearLayout for displaying total savings and the order button is translated to a Column with a Stack component inside it. The Stack component is used to layer the Text and Button components.\n6. The LinearLayout for the empty cart state is translated to a Column with Image and Text components inside it, maintaining the layout and styling as described in the Android XML.\n7. All components and attributes are translated according to the rules provided, ensuring that the functionality and behavior are consistent with the original Android layout."
}