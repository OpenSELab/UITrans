{
    "name": "app/src/main/res/layout/activity_book_details.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\"\n              android:background=\"@color/background_floating_material_dark\"\n              android:orientation=\"vertical\">\n\n    <androidx.viewpager.widget.ViewPager\n        android:id=\"@+id/view_pager\"\n        android:padding=\"@dimen/padding_book\"\n        android:elevation=\"16dp\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/>\n\n</LinearLayout>",
    "java": "package org.bookdash.android.presentation.readbook\n\nimport android.os.Bundle\nimport android.view.ViewTreeObserver\nimport android.view.WindowManager\nimport android.widget.Toast\nimport androidx.lifecycle.Observer\nimport androidx.lifecycle.ViewModelProviders\nimport androidx.viewpager.widget.ViewPager\nimport com.google.firebase.crashlytics.FirebaseCrashlytics\nimport org.bookdash.android.R\nimport org.bookdash.android.domain.model.gson.BookPages\nimport org.bookdash.android.presentation.activity.BaseAppCompatActivity\n\n\nclass BookDetailActivity : BaseAppCompatActivity() {\n    private lateinit var viewPager: ViewPager\n\n    private lateinit var pageAdapter: PageAdapter\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_book_details)\n        window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON)\n\n        viewPager = findViewById(R.id.view_pager)\n        viewPager.viewTreeObserver.addOnPreDrawListener(object : ViewTreeObserver.OnPreDrawListener {\n            override fun onPreDraw(): Boolean {\n                viewPager.viewTreeObserver.removeOnPreDrawListener(this)\n                viewPager.translationX = viewPager.measuredWidth.toFloat()\n                viewPager.animate().translationXBy((-viewPager.measuredWidth).toFloat()).duration = 1000\n                return true\n            }\n        })\n        //val book = intent.getStringExtra(BOOK_ARG)\n        val bookPages = intent.getParcelableExtra<BookPages>(BOOK_PAGES)\n        if (bookPages == null) {\n            onBookPagesNull()\n            return\n        }\n        bookPages.pages.add(0, null)\n        val bookLocation = intent.getStringExtra(LOCATION_BOOK)\n        pageAdapter = PageAdapter(supportFragmentManager, bookPages.pages,\n                bookLocation)\n\n        viewPager.adapter = pageAdapter\n        viewPager.offscreenPageLimit = 1\n\n        setupViewModelListeners()\n    }\n\n    private fun setupViewModelListeners() {\n        val readBookViewModel = ViewModelProviders.of(this).get<ReadBookViewModel>(ReadBookViewModel::class.java)\n        readBookViewModel.pageBackEventTrigger.observe(this, Observer {\n            if (viewPager.currentItem != 0) {\n                viewPager.setCurrentItem(viewPager.currentItem - 1, true)\n            }\n        })\n        readBookViewModel.pageForwardEventTrigger.observe(this, Observer {\n            if (viewPager.currentItem != viewPager.childCount - 1) {\n                viewPager.setCurrentItem(viewPager.currentItem + 1, true)\n            }\n        })\n    }\n\n    /**\n     * Called when this Activity was launched with no book pages.\n     * TODO Remove this method once bookPages == null bug is fixed.\n     */\n    private fun onBookPagesNull() {\n        FirebaseCrashlytics.getInstance().recordException(Exception(\"Book pages null when opening book detail.\"))\n        Toast.makeText(applicationContext, R.string.failed_to_open_book, Toast.LENGTH_LONG).show()\n        finish()\n    }\n\n    override fun getScreenName(): String {\n        return \"BookDetailScreen\"\n    }\n\n    companion object {\n        val BOOK_PAGES = \"book_pages\"\n        val LOCATION_BOOK = \"book_location\"\n        val BOOK_ARG = \"book_obj\"\n    }\n\n\n}\n",
    "contains": [],
    "mock_data": {},
    "source": "bookdash",
    "time": 13.65575909614563,
    "result": {
        "harmony_component_code": "Column() {\n  Stack() {\n    // 子组件\n  }\n    .width('100%')\n    .height('100%')\n    .backgroundColor($r('app.color.background_floating_material_dark'))\n    .padding($r('app.dimen.padding_book'))\n    .elevation(16)\n}\n"
    },
    "explanation": "1. 使用Column作为根容器，因为LinearLayout在安卓中是垂直布局。\n2. 使用Stack组件来替代ViewPager，因为鸿蒙目前没有直接对应的ViewPager组件，但Stack可以实现类似的效果。\n3. 设置Stack的宽度为100%，高度为100%，以匹配安卓中的match_parent。\n4. 设置背景颜色为$r('app.color.background_floating_material_dark')，对应安卓中的android:background属性。\n5. 设置padding为$r('app.dimen.padding_book')，对应安卓中的android:padding属性。\n6. 设置elevation为16，对应安卓中的android:elevation属性。"
}