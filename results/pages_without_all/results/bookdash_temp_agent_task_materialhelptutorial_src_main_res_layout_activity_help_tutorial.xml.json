{
    "name": "materialhelptutorial/src/main/res/layout/activity_help_tutorial.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<!--\nMIT License\n\nCopyright (c) 2015 Rebecca Franks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the \"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject\nto the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-->\n\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:id=\"@+id/activity_help_root\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <androidx.viewpager.widget.ViewPager\n        android:id=\"@+id/activity_help_view_pager\"\n        android:clipToPadding=\"false\"\n        android:clipChildren=\"false\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_above=\"@+id/linear_layout_indicator\">\n\n    </androidx.viewpager.widget.ViewPager>\n\n    <View android:layout_width=\"match_parent\"\n\n        android:layout_above=\"@+id/linear_layout_indicator\"\n        android:layout_height=\"1dp\"\n        android:background=\"#E0E0E0\"\n        />\n    <LinearLayout\n        android:id=\"@+id/linear_layout_indicator\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"56dp\"\n        android:weightSum=\"1\"\n        android:layout_alignParentBottom=\"true\"\n        android:orientation=\"horizontal\">\n\n        <Button\n            android:id=\"@+id/activity_help_skip_textview\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"match_parent\"\n            android:layout_alignParentBottom=\"true\"\n            android:layout_centerInParent=\"true\"\n            style=\"@android:style/Widget.Holo.Button.Borderless\"\n            android:fontFamily=\"sans-serif\"\n            android:gravity=\"center\"\n            android:text=\"@string/tutorial_skip\"\n            android:textColor=\"@color/tutorial_buttonTextColor\"\n            android:textSize=\"18sp\"\n            android:layout_weight=\"0.25\" />\n\n        <za.co.riggaroo.materialhelptutorial.view.CirclePageIndicator\n            android:id=\"@+id/activity_help_view_page_indicator\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_above=\"@id/activity_help_skip_textview\"\n            app:fillColor=\"#41FFFFFF\"\n            app:pageColor=\"#14FFFFFF\"\n            app:radius=\"6dp\"\n            android:layout_weight=\"0.5\"\n            app:strokeColor=\"#E0E0E0\"\n            app:strokeWidth=\"0dp\"\n            android:layout_gravity=\"center_vertical\"\n            android:minHeight=\"24dp\" />\n\n        <LinearLayout\n            android:layout_width=\"0dp\"\n            android:layout_weight=\"0.25\"\n            android:orientation=\"vertical\"\n            android:layout_height=\"match_parent\">\n            <ImageButton\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:src=\"@drawable/ic_navigate_next\"\n                style=\"@android:style/Widget.Holo.Button.Borderless\"\n                android:id=\"@+id/activity_next_button\"\n                android:layout_margin=\"8dp\"\n                android:visibility=\"visible\"\n                android:padding=\"16dp\" />\n            <Button\n                android:id=\"@+id/activity_tutorial_done\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                style=\"@android:style/Widget.Holo.Button.Borderless\"\n                android:fontFamily=\"sans-serif\"\n                android:gravity=\"center\"\n                android:text=\"@string/tutorial_done\"\n                android:textColor=\"@color/tutorial_buttonTextColor\"\n                android:textSize=\"18sp\"\n                android:visibility=\"gone\" />\n        </LinearLayout>\n\n    </LinearLayout>\n\n\n</RelativeLayout>",
    "java": "/*\nMIT License\n\nCopyright (c) 2015 Rebecca Franks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the \"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject\nto the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npackage za.co.riggaroo.materialhelptutorial.tutorial;\n\n\nimport android.app.ActionBar;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.Window;\nimport android.view.WindowManager;\nimport android.widget.Button;\nimport android.widget.ImageButton;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.viewpager.widget.ViewPager;\n\nimport java.util.List;\n\nimport za.co.riggaroo.materialhelptutorial.MaterialTutorialFragment;\nimport za.co.riggaroo.materialhelptutorial.R;\nimport za.co.riggaroo.materialhelptutorial.TutorialItem;\nimport za.co.riggaroo.materialhelptutorial.adapter.MaterialTutorialAdapter;\nimport za.co.riggaroo.materialhelptutorial.view.CirclePageIndicator;\n\npublic class MaterialTutorialActivity extends AppCompatActivity implements MaterialTutorialContract.View {\n\n    public static final String MATERIAL_TUTORIAL_ARG_TUTORIAL_ITEMS = \"tutorial_items\";\n    private static final String TAG = \"MaterialTutActivity\";\n    private ViewPager mHelpTutorialViewPager;\n    private View mRootView;\n    private TextView mTextViewSkip;\n    private ImageButton mNextButton;\n    private Button mDoneButton;\n    private MaterialTutorialPresenter materialTutorialPresenter;\n\n    private View.OnClickListener finishTutorialClickListener = new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            materialTutorialPresenter.doneOrSkipClick();\n\n        }\n    };\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_help_tutorial);\n\n        materialTutorialPresenter = new MaterialTutorialPresenter(this, this);\n        setStatusBarColor();\n        ActionBar actionBar = getActionBar();\n\n        if (actionBar != null) {\n            getActionBar().hide();\n        }\n        mRootView = findViewById(R.id.activity_help_root);\n        mHelpTutorialViewPager = (ViewPager) findViewById(R.id.activity_help_view_pager);\n        mTextViewSkip = (TextView) findViewById(R.id.activity_help_skip_textview);\n        mNextButton = (ImageButton) findViewById(R.id.activity_next_button);\n        mDoneButton = (Button) findViewById(R.id.activity_tutorial_done);\n\n        mTextViewSkip.setOnClickListener(finishTutorialClickListener);\n        mDoneButton.setOnClickListener(finishTutorialClickListener);\n\n\n        mNextButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                materialTutorialPresenter.nextClick();\n\n\n            }\n        });\n        List<TutorialItem> tutorialItems = getIntent().getParcelableArrayListExtra(MATERIAL_TUTORIAL_ARG_TUTORIAL_ITEMS);\n        if (tutorialItems == null) {\n            showEndTutorial();\n        } else {\n            materialTutorialPresenter.loadViewPagerFragments(tutorialItems);\n        }\n    }\n\n    private void setStatusBarColor() {\n        if (isFinishing()) {\n            return;\n        }\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            Window window = getWindow();\n            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\n            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n        }\n    }\n\n    @Override\n    public void showNextTutorial() {\n        int currentItem = mHelpTutorialViewPager.getCurrentItem();\n        if (currentItem < materialTutorialPresenter.getNumberOfTutorials()) {\n            mHelpTutorialViewPager.setCurrentItem(mHelpTutorialViewPager.getCurrentItem() + 1);\n        }\n    }\n\n    @Override\n    public void showEndTutorial() {\n        setResult(RESULT_OK);\n        finish();\n    }\n\n    @Override\n    public void setBackgroundColor(int color) {\n        mRootView.setBackgroundColor(color);\n    }\n\n    @Override\n    public void showDoneButton() {\n        mTextViewSkip.setVisibility(View.INVISIBLE);\n        mNextButton.setVisibility(View.GONE);\n        mDoneButton.setVisibility(View.VISIBLE);\n    }\n\n    @Override\n    public void showSkipButton() {\n        mTextViewSkip.setVisibility(View.VISIBLE);\n        mNextButton.setVisibility(View.VISIBLE);\n        mDoneButton.setVisibility(View.GONE);\n    }\n\n    @Override\n    public void setViewPagerFragments(List<MaterialTutorialFragment> materialTutorialFragments) {\n        mHelpTutorialViewPager.setAdapter(new MaterialTutorialAdapter(getSupportFragmentManager(), materialTutorialFragments));\n        CirclePageIndicator mCirclePageIndicator = (CirclePageIndicator) findViewById(R.id.activity_help_view_page_indicator);\n\n        mCirclePageIndicator.setViewPager(mHelpTutorialViewPager);\n        mCirclePageIndicator.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n            @Override\n            public void onPageScrolled(int i, float v, int i2) {\n\n            }\n\n            @Override\n            public void onPageSelected(int i) {\n                materialTutorialPresenter.onPageSelected(mHelpTutorialViewPager.getCurrentItem());\n\n            }\n\n            @Override\n            public void onPageScrollStateChanged(int i) {\n\n            }\n        });\n        mHelpTutorialViewPager.setPageTransformer(true, new ViewPager.PageTransformer() {\n                    @Override\n                    public void transformPage(View page, float position) {\n                        materialTutorialPresenter.transformPage(page, position);\n                    }\n                }\n\n        );\n    }\n}\n",
    "contains": [],
    "mock_data": {},
    "source": "bookdash",
    "time": 39.42560362815857,
    "result": {
        "harmony_component_code": "Column() {\n  Stack() {\n    Scroll() {\n      Column() {\n        // 子组件\n      }\n    }\n    .width('100%')\n    .height('100%')\n    .clip(true)\n    .clipChildren(true)\n    Divider()\n      .width('100%')\n      .height('1vp')\n      .backgroundColor(Color.Gray)\n    Row() {\n      Button('Skip') {\n        Text($r('app.string.tutorial_skip'))\n          .fontSize('18fp')\n          .fontFamily('sans-serif')\n          .textAlign(TextAlign.Center)\n          .fontColor($r('app.color.tutorial_buttonTextColor'))\n      }\n      .width('25%')\n      .height('56vp')\n      .align(Alignment.Center)\n      CirclePageIndicator()\n        .width('50%')\n        .height('24vp')\n        .align(Alignment.Center)\n        .fillColor(Color.White)\n        .pageColor(Color.White)\n        .radius('6vp')\n        .strokeColor(Color.Gray)\n        .strokeWidth('0vp')\n      Row() {\n        Image($r('app.media.ic_navigate_next'))\n          .width('100%')\n          .height('100%')\n          .objectFit(ImageFit.Contain)\n          .margin('8vp')\n          .padding('16vp')\n        Button('Done') {\n          Text($r('app.string.tutorial_done'))\n            .fontSize('18fp')\n            .fontFamily('sans-serif')\n            .textAlign(TextAlign.Center)\n            .fontColor($r('app.color.tutorial_buttonTextColor'))\n        }\n        .width('100%')\n        .height('100%')\n        .visibility(Visibility.Hidden)\n      }\n      .width('25%')\n      .height('56vp')\n    }\n    .width('100%')\n    .height('56vp')\n    .align(Alignment.Bottom)\n  }\n  .width('100%')\n  .height('100%')\n}"
    },
    "explanation": "1. 使用Column作为根容器，包含一个Stack组件，用于实现RelativeLayout的效果。\n2. 在Stack中，使用Scroll组件包裹Column，实现ViewPager的功能，并设置宽度和高度为100%。\n3. 添加一个Divider组件，设置宽度和高度，模拟安卓中的View组件。\n4. 使用Row组件实现LinearLayout的效果，包含三个子组件：Skip按钮、CirclePageIndicator和包含Next按钮和Done按钮的Row组件。\n5. 每个组件的属性根据安卓布局文件中的定义进行设置，确保功能和样式一致。\n6. 使用$r('app.xxx.yyy')引用资源文件，确保资源文件已被定义。\n7. 使用.align(Alignment.Bottom)确保Row组件位于底部。"
}