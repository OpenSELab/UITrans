{
    "name": "app\\src\\main\\res\\layout\\activity_map.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.coordinatorlayout.widget.CoordinatorLayout\nxmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:fitsSystemWindows=\"true\">\n\n<fragment\nandroid:id=\"@+id/mapFragment\"\nandroid:name=\"de.grobox.transportr.map.MapFragment\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"/>\n\n<androidx.cardview.widget.CardView\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"48dp\"\nandroid:layout_marginEnd=\"16dp\"\nandroid:layout_marginLeft=\"16dp\"\nandroid:layout_marginRight=\"16dp\"\nandroid:layout_marginStart=\"16dp\"\nandroid:layout_marginTop=\"16dp\">\n\n<ImageButton\nandroid:id=\"@+id/menu\"\nandroid:layout_width=\"48dp\"\nandroid:layout_height=\"48dp\"\nandroid:background=\"?attr/selectableItemBackground\"\nandroid:clickable=\"true\"\nandroid:contentDescription=\"@string/material_drawer_open\"\nandroid:focusable=\"true\"\nandroid:scaleType=\"center\"\nandroid:src=\"@drawable/ic_menu_black\"\napp:tint=\"?colorControlNormal\"\napp:srcCompat=\"@drawable/ic_menu_black\"/>\n\n<de.grobox.transportr.locations.LocationView\nandroid:id=\"@+id/search\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:layout_marginLeft=\"48dp\"\nandroid:layout_marginStart=\"48dp\"\nandroid:gravity=\"center_vertical\"\napp:elevation=\"@dimen/cardview_default_elevation\"\napp:hint=\"@string/search_hint\"\napp:showIcon=\"false\"/>\n\n</androidx.cardview.widget.CardView>\n\n<com.google.android.material.floatingactionbutton.FloatingActionButton\nandroid:id=\"@+id/directionsFab\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_gravity=\"bottom|end\"\nandroid:layout_marginBottom=\"88dp\"\nandroid:layout_marginEnd=\"16dp\"\nandroid:layout_marginRight=\"16dp\"\nandroid:clickable=\"true\"\nandroid:focusable=\"true\"\nandroid:tint=\"@color/md_white_1000\"\napp:backgroundTint=\"@color/primary\"\napp:behavior_autoHide=\"true\"\napp:fabSize=\"normal\"\napp:layout_anchor=\"@+id/bottomSheet\"\napp:layout_anchorGravity=\"top|end\"\napp:srcCompat=\"@drawable/ic_menu_directions\"/>\n\n<FrameLayout\nandroid:id=\"@+id/bottomSheet\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"\napp:behavior_hideable=\"true\"\napp:elevation=\"5dp\"\napp:layout_behavior=\"com.google.android.material.bottomsheet.BottomSheetBehavior\"/>\n\n</androidx.coordinatorlayout.widget.CoordinatorLayout>\n",
    "java": "package de.grobox.transportr.map;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.StrictMode;\nimport android.os.StrictMode.ThreadPolicy;\nimport android.os.StrictMode.VmPolicy;\nimport android.view.View;\n\nimport com.google.android.material.bottomsheet.BottomSheetBehavior;\nimport com.google.android.material.bottomsheet.BottomSheetBehavior.BottomSheetCallback;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.mapbox.mapboxsdk.geometry.LatLng;\n\nimport javax.annotation.ParametersAreNonnullByDefault;\nimport javax.inject.Inject;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.lifecycle.ViewModelProvider;\nimport de.grobox.transportr.BuildConfig;\nimport de.grobox.transportr.R;\nimport de.grobox.transportr.data.locations.FavoriteLocation.FavLocationType;\nimport de.grobox.transportr.locations.LocationFragment;\nimport de.grobox.transportr.locations.LocationView;\nimport de.grobox.transportr.locations.LocationView.LocationViewListener;\nimport de.grobox.transportr.locations.WrapLocation;\nimport de.grobox.transportr.networks.TransportNetwork;\nimport de.grobox.transportr.ui.TransportrChangeLog;\nimport de.grobox.transportr.utils.OnboardingBuilder;\n\nimport static android.content.Intent.ACTION_VIEW;\nimport static com.google.android.material.bottomsheet.BottomSheetBehavior.PEEK_HEIGHT_AUTO;\nimport static com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_COLLAPSED;\nimport static com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_EXPANDED;\nimport static com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_HIDDEN;\nimport static de.grobox.transportr.locations.WrapLocation.WrapType.GPS;\nimport static de.grobox.transportr.trips.search.DirectionsActivity.ACTION_SEARCH;\nimport static de.grobox.transportr.utils.Constants.WRAP_LOCATION;\nimport static de.grobox.transportr.utils.IntentUtils.findDirections;\nimport static uk.co.samuelwall.materialtaptargetprompt.MaterialTapTargetPrompt.STATE_DISMISSED;\nimport static uk.co.samuelwall.materialtaptargetprompt.MaterialTapTargetPrompt.STATE_FOCAL_PRESSED;\n\n@ParametersAreNonnullByDefault\npublic class MapActivity extends DrawerActivity implements LocationViewListener {\n\n@Inject ViewModelProvider.Factory viewModelFactory;\n\nprivate MapViewModel viewModel;\nprivate LocationView search;\nprivate BottomSheetBehavior bottomSheetBehavior;\n\nprivate @Nullable LocationFragment locationFragment;\nprivate boolean transportNetworkInitialized = false;\n\n@Override\npublic void onCreate(@Nullable Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nif (BuildConfig.DEBUG) enableStrictMode();\ngetComponent().inject(this);\nsetContentView(R.layout.activity_map);\nsetupDrawer(savedInstanceState);\n\nView menu = findViewById(R.id.menu);\nmenu.setOnClickListener(view -> openDrawer());\n\nsearch = findViewById(R.id.search);\nsearch.setLocationViewListener(this);\n\nView bottomSheet = findViewById(R.id.bottomSheet);\nbottomSheetBehavior = BottomSheetBehavior.from(bottomSheet);\nbottomSheetBehavior.setBottomSheetCallback(new BottomSheetCallback() {\n@Override\npublic void onStateChanged(@NonNull View bottomSheet, int newState) {\nif (newState == STATE_HIDDEN) {\nsearch.clearLocation();\nsearch.reset();\nviewModel.setPeekHeight(0);\n}\n}\n\n@Override\npublic void onSlide(@NonNull View bottomSheet, float slideOffset) {\n}\n});\n\n// get view model and observe data\nviewModel = new ViewModelProvider(this, viewModelFactory).get(MapViewModel.class);\nviewModel.getTransportNetwork().observe(this, this::onTransportNetworkChanged);\nviewModel.getHome().observe(this, homeLocation -> search.setHomeLocation(homeLocation));\nviewModel.getWork().observe(this, workLocation -> search.setWorkLocation(workLocation));\nviewModel.getLocations().observe(this, favoriteLocations -> search.setFavoriteLocations(favoriteLocations));\nviewModel.getMapClicked().observe(this, no -> onMapClicked());\nviewModel.getMarkerClicked().observe(this, no -> onMarkerClicked());\nviewModel.getSelectedLocation().observe(this, this::onLocationSelected);\nviewModel.getSelectedLocationClicked().observe(this, this::onSelectedLocationClicked);\nviewModel.getPeekHeight().observe(this, height -> {\nif (height != null) bottomSheetBehavior.setPeekHeight(height);\n});\n\nFloatingActionButton directionsFab = findViewById(R.id.directionsFab);\ndirectionsFab.setOnClickListener(view -> {\nWrapLocation from = new WrapLocation(GPS);\nWrapLocation to = null;\nif (locationFragment != null && locationFragmentVisible()) {\nto = locationFragment.getLocation();\n}\nfindDirections(MapActivity.this, from, null, to);\n});\n\nIntent intent = getIntent();\nif (intent != null) onNewIntent(intent);\n\nif (savedInstanceState == null) {\nshowSavedSearches();\ncheckAndShowChangelog();\n} else {\nlocationFragment = (LocationFragment) getSupportFragmentManager().findFragmentByTag(LocationFragment.TAG);\n}\n}\n\nprivate void showSavedSearches() {\nSavedSearchesFragment f = new SavedSearchesFragment();\ngetSupportFragmentManager().beginTransaction()\n.replace(R.id.bottomSheet, f, SavedSearchesFragment.class.getSimpleName())\n.commitNow(); // otherwise takes some time and empty bottomSheet will not be shown\nbottomSheetBehavior.setState(STATE_COLLAPSED);\nviewModel.setPeekHeight(PEEK_HEIGHT_AUTO);\n}\n\nprivate void onTransportNetworkChanged(TransportNetwork network) {\nif (transportNetworkInitialized) {\nviewModel.selectLocation(null);\nsearch.setLocation(null);\ncloseDrawer();\nshowSavedSearches();\nrecreate();\n} else {\n// it didn't really change, this is just the first notification from LiveData Observer\nsearch.setTransportNetwork(network);\ntransportNetworkInitialized = true;\n}\n}\n\n@Override\npublic void onLocationItemClick(final WrapLocation loc, FavLocationType type) {\nviewModel.selectLocation(loc);\n}\n\n@Override\npublic void onLocationCleared(FavLocationType type) {\nbottomSheetBehavior.setState(STATE_HIDDEN);\nviewModel.selectLocation(null);\nsearch.postDelayed(() -> { // show dropdown again after it got hidden by hiding the bottom sheet\nsearch.onClick();\n}, 500);\n}\n\nprivate void onLocationSelected(@Nullable WrapLocation loc) {\nif (loc == null) return;\n\nlocationFragment = LocationFragment.newInstance(loc);\ngetSupportFragmentManager().beginTransaction()\n.replace(R.id.bottomSheet, locationFragment, LocationFragment.TAG)\n.commit(); // takes some time and empty bottomSheet will not be shown\nbottomSheetBehavior.setState(STATE_COLLAPSED);\n\n// show on-boarding dialog\nif (getSettingsManager().showLocationFragmentOnboarding()) {\nnew OnboardingBuilder(this)\n.setTarget(R.id.bottomSheet)\n.setPrimaryText(R.string.onboarding_location_title)\n.setSecondaryText(R.string.onboarding_location_message)\n.setPromptStateChangeListener((prompt, state) -> {\nif (state == STATE_DISMISSED || state == STATE_FOCAL_PRESSED) {\ngetSettingsManager().locationFragmentOnboardingShown();\nviewModel.selectedLocationClicked(loc.getLatLng());\n}\n})\n.show();\n}\n}\n\nprivate void onSelectedLocationClicked(@Nullable LatLng latLng) {\nif (latLng == null) return;\nbottomSheetBehavior.setState(STATE_EXPANDED);\n}\n\nprivate void onMapClicked() {\nsearch.clearFocus(); // also hides soft keyboard\n}\n\nprivate void onMarkerClicked() {\nif (locationFragment != null) search.setLocation(locationFragment.getLocation());\nbottomSheetBehavior.setState(STATE_COLLAPSED);\n}\n\nprivate boolean locationFragmentVisible() {\nreturn locationFragment != null && locationFragment.isVisible() && bottomSheetBehavior.getState() != STATE_HIDDEN;\n}\n\n@Override\nprotected void onNewIntent(Intent intent) {\nsuper.onNewIntent(intent);\nif (intent == null || intent.getAction() == null) return;\n\nif (intent.getAction().equals(ACTION_VIEW) && intent.getData() != null) {\nviewModel.setGeoUri(intent.getData());\n} else if (intent.getAction().equals(ACTION_SEARCH)) {\nWrapLocation location = (WrapLocation) intent.getSerializableExtra(WRAP_LOCATION);\nviewModel.selectLocation(location);\nviewModel.findNearbyStations(location);\n}\n}\n\nprivate void checkAndShowChangelog() {\nTransportrChangeLog cl = new TransportrChangeLog(this, getSettingsManager());\nif (cl.isFirstRun() && !cl.isFirstRunEver()) {\ncl.getLogDialog().show();\n}\n}\n\nprivate void enableStrictMode() {\nThreadPolicy.Builder threadPolicy = new ThreadPolicy.Builder();\nthreadPolicy.detectAll();\nthreadPolicy.penaltyLog();\nStrictMode.setThreadPolicy(threadPolicy.build());\n\nVmPolicy.Builder vmPolicy = new VmPolicy.Builder();\nvmPolicy.detectAll();\nvmPolicy.penaltyLog();\nStrictMode.setVmPolicy(vmPolicy.build());\n}\n\n} ",
    "contains": [
        "app\\src\\main\\res\\layout\\fragment_map.xml"
    ],
    "mock_data": {},
    "source": "Transportr",
    "time": 34.46920824050903,
    "result": {
        "harmony_component_code": "Column() {\n  Stack() {\n    // MapFragment\n    // Assuming MapFragment is a custom component in Harmony\n    MapFragment()\n      .width('100%')\n      .height('100%')\n\n    // CardView\n    Stack() {\n      Image($r('app.media.ic_menu_black'))\n        .width(48)\n        .height(48)\n        .objectFit(ImageFit.Center)\n        .onClick(() => {\n          // Handle menu click\n        })\n\n      LocationView()\n        .width('100%')\n        .height('100%')\n        .margin({ left: 48 })\n        .alignItems(HorizontalAlign.Center)\n        .justifyContent(FlexAlign.Center)\n    }\n    .width('100%')\n    .height(48)\n    .margin({ top: 16, left: 16, right: 16 })\n    .backgroundColor(Color.White)\n    .borderRadius(4)\n    .elevation(2)\n\n    // FloatingActionButton\n    Button() {\n      Image($r('app.media.ic_menu_directions'))\n        .width(24)\n        .height(24)\n        .objectFit(ImageFit.Center)\n    }\n    .width(56)\n    .height(56)\n    .position({ x: '100%', y: '100%' })\n    .margin({ bottom: 88, right: 16 })\n    .backgroundColor($r('app.color.primary'))\n    .onClick(() => {\n      // Handle directionsFab click\n    })\n\n    // BottomSheet\n    Stack() {\n      // BottomSheet content\n    }\n    .width('100%')\n    .height('auto')\n    .position({ x: 0, y: '100%' })\n    .margin({ bottom: 0 })\n    .backgroundColor(Color.White)\n    .borderRadius(16)\n    .elevation(5)\n  }\n  .width('100%')\n  .height('100%')\n}"
    },
    "explanation": "1. The root component is a Column with a Stack inside to mimic the CoordinatorLayout behavior.\n2. The MapFragment is assumed to be a custom component in Harmony and is placed at the top of the Stack.\n3. The CardView is implemented using a Stack with an Image and a custom LocationView component inside.\n4. The FloatingActionButton is implemented using a Button with an Image inside.\n5. The BottomSheet is implemented using a Stack with placeholder content for now.\n6. All components are positioned and styled according to the original Android layout description."
}