{
    "name": "app/src/main/res/layout/activity_book_information.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n    >\n\n    <data>\n\n        <import type=\"android.view.View\"/>\n\n        <import type=\"android.text.TextUtils\"/>\n\n        <variable\n            name=\"downloadClick\"\n            type=\"View.OnClickListener\"/>\n\n        <variable\n            name=\"bookInfo\"\n            type=\"org.bookdash.android.domain.model.firebase.FireBookDetails\"/>\n    </data>\n\n    <FrameLayout>\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <fr.castorflex.android.circularprogressbar.CircularProgressBar\n                android:id=\"@+id/activity_loading_book_info\"\n                android:layout_width=\"48dp\"\n                android:layout_height=\"48dp\"\n                android:layout_alignParentBottom=\"false\"\n                android:layout_centerInParent=\"true\"\n                android:layout_marginBottom=\"8dp\"\n                android:layout_marginTop=\"16dp\"\n                android:indeterminate=\"true\"\n                app:cpb_color=\"@color/colorAccent\"\n                app:cpb_max_sweep_angle=\"300\"\n                app:cpb_min_sweep_angle=\"10\"\n                app:cpb_rotation_speed=\"1.0\"\n                app:cpb_stroke_width=\"4dp\"\n                app:cpb_sweep_speed=\"1.0\"/>\n\n            <LinearLayout\n                android:id=\"@+id/linear_layout_error\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerInParent=\"true\"\n                android:orientation=\"vertical\"\n                android:visibility=\"gone\">\n\n                <ImageView\n                    android:id=\"@+id/image_view_sad_cloud\"\n                    android:layout_width=\"150dp\"\n                    android:layout_height=\"150dp\"\n                    android:layout_gravity=\"center_horizontal\"\n                    android:src=\"@drawable/lb_ic_sad_cloud\"/>\n\n                <TextView\n                    android:id=\"@+id/text_view_error_screen\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_gravity=\"center\"\n                    android:layout_margin=\"8dp\"\n                    android:text=\"@string/error_loading_books\"/>\n\n                <Button\n                    android:id=\"@+id/button_retry\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_gravity=\"center_horizontal\"\n                    android:text=\"@string/button_retry_text\"/>\n            </LinearLayout>\n        </RelativeLayout>\n\n        <androidx.coordinatorlayout.widget.CoordinatorLayout\n            android:id=\"@+id/coordinator_layout_content\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:fitsSystemWindows=\"true\"\n            android:visibility=\"visible\">\n\n            <ImageView\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:scaleType=\"centerCrop\"\n                android:src=\"@drawable/appbackground\"/>\n\n\n            <com.google.android.material.appbar.AppBarLayout\n                android:id=\"@+id/app_bar_layout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"200dp\"\n                android:fitsSystemWindows=\"true\"\n                android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\">\n\n                <com.google.android.material.appbar.CollapsingToolbarLayout\n                    android:id=\"@+id/collapsing_toolbar\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    app:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n                    app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n                    app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"\n                    app:title=\"@{bookInfo.bookTitle}\">\n\n                    <ImageView\n                        android:id=\"@+id/image_view_book_cover\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:scaleType=\"centerCrop\"\n                        android:transitionName=\"@string/transition_book\"\n\n                        app:layout_collapseMode=\"parallax\"\n                        app:layout_collapseParallaxMultiplier=\"0.7\"/>\n\n                    <View\n                        android:id=\"@+id/toolbar_background_gradient\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"match_parent\"/>\n\n                    <androidx.appcompat.widget.Toolbar\n                        android:id=\"@+id/toolbar\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"?attr/actionBarSize\"\n                        app:layout_collapseMode=\"pin\"\n                        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n                        app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"/>\n\n                </com.google.android.material.appbar.CollapsingToolbarLayout>\n\n            </com.google.android.material.appbar.AppBarLayout>\n\n            <androidx.core.widget.NestedScrollView\n                android:id=\"@+id/scrollViewBookInfo\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:visibility=\"visible\"\n\n                app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:orientation=\"vertical\"\n                    android:paddingTop=\"24dp\">\n\n                    <androidx.cardview.widget.CardView\n                            android:id=\"@+id/card_view_main_book_info\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginBottom=\"4dp\"\n                            android:layout_marginLeft=\"@dimen/activity_horizontal_margin\"\n                            android:layout_marginRight=\"@dimen/activity_horizontal_margin\"\n\n                            android:layout_marginTop=\"8dp\"\n                            android:visibility=\"@{TextUtils.isEmpty(bookInfo.bookDescription) ? View.GONE : View.VISIBLE}\"\n                            app:cardCornerRadius=\"8dp\"\n                            >\n\n                        <RelativeLayout\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\"wrap_content\"\n                                android:orientation=\"vertical\">\n\n                            <TextView\n                                    android:id=\"@+id/textview_about_heading\"\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"48dp\"\n                                    android:layout_marginLeft=\"16dp\"\n                                    android:layout_marginRight=\"16dp\"\n                                    android:fontFamily=\"sans-serif\"\n                                    android:gravity=\"center_vertical\"\n                                    android:text=\"@string/about_book_info\"\n                                    android:textColor=\"@color/text_secondary_dark\"\n                                    android:textSize=\"14sp\"/>\n\n                            <TextView\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"48dp\"\n                                    android:layout_alignParentEnd=\"false\"\n                                    android:layout_alignParentRight=\"true\"\n                                    android:layout_marginBottom=\"16dp\"\n                                    android:layout_marginLeft=\"16dp\"\n                                    android:layout_marginRight=\"16dp\"\n                                    android:layout_toRightOf=\"@id/textview_about_heading\"\n                                    android:fontFamily=\"sans-serif\"\n                                    android:gravity=\"center_vertical|right\"\n                                    android:text=\"@{bookInfo.getCreatedDateFormatted()}\"\n                                    android:textColor=\"@color/text_secondary_dark\"\n                                    android:textSize=\"14sp\"\n                                    />\n\n\n                            <TextView\n                                    android:layout_width=\"match_parent\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:layout_below=\"@id/textview_about_heading\"\n                                    android:layout_marginBottom=\"16dp\"\n                                    android:layout_marginLeft=\"16dp\"\n                                    android:layout_marginRight=\"16dp\"\n                                    android:layout_marginTop=\"2dp\"\n                                    android:fontFamily=\"sans-serif\"\n                                    android:text=\"@{bookInfo.bookDescription}\"\n                                    android:textColor=\"@color/text_color_primary_dark\"\n                                    android:textSize=\"16sp\"/>\n\n                        </RelativeLayout>\n\n                    </androidx.cardview.widget.CardView>\n\n                    <androidx.cardview.widget.CardView\n                            android:id=\"@+id/contributor_card\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginBottom=\"4dp\"\n                            android:layout_marginLeft=\"@dimen/activity_horizontal_margin\"\n                            android:layout_marginRight=\"@dimen/activity_horizontal_margin\"\n                            android:layout_marginTop=\"8dp\"\n                            android:paddingTop=\"4dp\"\n                            android:visibility=\"visible\"\n                            app:cardCornerRadius=\"8dp\"\n                            >\n\n                        <LinearLayout\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\"wrap_content\"\n                                android:orientation=\"vertical\">\n\n                            <TextView\n                                    android:layout_width=\"match_parent\"\n                                    android:layout_height=\"48dp\"\n                                    android:layout_marginLeft=\"16dp\"\n                                    android:layout_marginRight=\"16dp\"\n                                    android:fontFamily=\"sans-serif\"\n                                    android:gravity=\"center_vertical\"\n                                    android:text=\"@string/contributors\"\n                                    android:textColor=\"@color/text_secondary_dark\"\n                                    android:textSize=\"14sp\"/>\n\n                            <androidx.recyclerview.widget.RecyclerView\n                                    android:id=\"@+id/recyclerview_contributors\"\n                                    android:layout_width=\"match_parent\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:orientation=\"vertical\">\n\n                            </androidx.recyclerview.widget.RecyclerView>\n\n\n                        </LinearLayout>\n\n                    </androidx.cardview.widget.CardView>\n                </LinearLayout>\n\n            </androidx.core.widget.NestedScrollView>\n\n            <view\n                android:id=\"@+id/fab_download\"\n                class=\"mbanje.kurt.fabbutton.FabButton\"\n                android:layout_width=\"@dimen/fab_button_size\"\n                android:layout_height=\"@dimen/fab_button_size\"\n                android:layout_marginRight=\"@dimen/fab_margin_right\"\n                android:color=\"?attr/colorPrimaryDark\"\n                android:indeterminate=\"false\"\n                android:max=\"100\"\n                android:onClick=\"@{downloadClick}\"\n                android:src=\"@drawable/ic_file_download\"\n                android:visibility=\"visible\"\n                app:fbb_autoStart=\"false\"\n                app:fbb_endBitmap=\"@drawable/ic_open_book\"\n                app:fbb_hideProgressOnComplete=\"true\"\n                app:fbb_progressColor=\"?attr/colorAccent\"\n                app:fbb_progressWidthRatio=\"0.1\"\n                app:fbb_showEndBitmap=\"true\"\n                app:fbb_showShadow=\"true\"\n                app:layout_anchor=\"@id/app_bar_layout\"\n                app:layout_anchorGravity=\"bottom|right|end\"/>\n\n        </androidx.coordinatorlayout.widget.CoordinatorLayout>\n\n    </FrameLayout>\n\n\n</layout>\n",
    "java": "package org.bookdash.android.presentation.bookinfo;\n\nimport android.app.Activity;\nimport android.content.ActivityNotFoundException;\nimport android.content.Intent;\nimport android.content.pm.ActivityInfo;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.graphics.drawable.GradientDrawable;\nimport android.net.Uri;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.transition.Transition;\nimport android.util.DisplayMetrics;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewTreeObserver;\nimport android.view.Window;\nimport android.view.animation.AccelerateInterpolator;\nimport android.view.animation.OvershootInterpolator;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.annotation.StringRes;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.cardview.widget.CardView;\nimport androidx.coordinatorlayout.widget.CoordinatorLayout;\nimport androidx.core.content.ContextCompat;\nimport androidx.core.graphics.ColorUtils;\nimport androidx.databinding.DataBindingUtil;\nimport androidx.palette.graphics.Palette;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions;\nimport com.bumptech.glide.request.target.CustomTarget;\nimport com.google.android.material.appbar.AppBarLayout;\nimport com.google.android.material.appbar.CollapsingToolbarLayout;\nimport com.google.android.material.snackbar.Snackbar;\nimport com.google.firebase.storage.StorageReference;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.config.GlideApp;\nimport org.bookdash.android.databinding.ActivityBookInformationBinding;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.domain.model.firebase.FireBookDetails;\nimport org.bookdash.android.domain.model.firebase.FireContributor;\nimport org.bookdash.android.domain.model.gson.BookPages;\nimport org.bookdash.android.presentation.activity.BaseAppCompatActivity;\nimport org.bookdash.android.presentation.readbook.BookDetailActivity;\n\nimport java.util.List;\n\nimport mbanje.kurt.fabbutton.FabButton;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.schedulers.Schedulers;\n\n\npublic class BookInfoActivity extends BaseAppCompatActivity implements BookInfoContract.View {\n    public static final String BOOK_PARCEL = \"book_parcel\";\n    private static final String TAG = \"BookInfoActivity\";\n    /**\n     * Presenter object\n     */\n    private BookInfoContract.Presenter bookInfoPresenter;\n\n    /**\n     * Views\n     */\n    private CollapsingToolbarLayout collapsingToolbarLayout;\n    private FabButton floatingActionButton;\n    private View gradientBackground;\n    private RecyclerView contributorRecyclerView;\n    private View scrollView;\n    private ImageView imageViewBook;\n    private AppBarLayout appBarLayout;\n    private CoordinatorLayout coordinatorLayout;\n    private View errorLayout;\n    private TextView errorText;\n    private ActivityBookInformationBinding binding;\n    private ProgressBar loadingProgressBar;\n    private CardView contributorCard, mainBookCard;\n    private Toolbar toolbar;\n    private ActionBar actionBar;\n    private FireBookDetails bookInfo;\n    private Button errorRetryButton;\n    private int progress = 0;\n\n    public static void startBookInfo(Activity activity, FireBookDetails bookDetails) {\n        Intent intent = new Intent(activity, BookInfoActivity.class);\n        intent.putExtra(BookInfoActivity.BOOK_PARCEL, bookDetails);\n        activity.startActivity(intent);\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_book_information);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            getWindow().getSharedElementReturnTransition().addListener(new Transition.TransitionListener() {\n                @Override\n                public void onTransitionStart(Transition transition) {\n                    floatingActionButton.animate().scaleY(0).scaleX(0).setInterpolator(new AccelerateInterpolator())\n                            .setDuration(getResources().getInteger(android.R.integer.config_shortAnimTime)).start();\n\n                }\n\n                @Override\n                public void onTransitionEnd(Transition transition) {\n                    enterAnimation();\n                }\n\n                @Override\n                public void onTransitionCancel(Transition transition) {\n\n                }\n\n                @Override\n                public void onTransitionPause(Transition transition) {\n\n                }\n\n                @Override\n                public void onTransitionResume(Transition transition) {\n\n                }\n            });\n            postponeEnterTransition();\n        }\n        contributorRecyclerView = (RecyclerView) findViewById(R.id.recyclerview_contributors);\n        contributorCard = (CardView) findViewById(R.id.contributor_card);\n        imageViewBook = (ImageView) findViewById(R.id.image_view_book_cover);\n        appBarLayout = (AppBarLayout) findViewById(R.id.app_bar_layout);\n        mainBookCard = (CardView) findViewById(R.id.card_view_main_book_info);\n        toolbar = (Toolbar) findViewById(R.id.toolbar);\n        coordinatorLayout = (CoordinatorLayout) findViewById(R.id.coordinator_layout_content);\n        errorLayout = findViewById(R.id.linear_layout_error);\n        errorText = (TextView) findViewById(R.id.text_view_error_screen);\n\n        errorRetryButton = (Button) findViewById(R.id.button_retry);\n        loadingProgressBar = (ProgressBar) findViewById(R.id.activity_loading_book_info);\n        setSupportActionBar(toolbar);\n        actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n        }\n        scrollView = findViewById(R.id.scrollViewBookInfo);\n        collapsingToolbarLayout = (CollapsingToolbarLayout) findViewById(R.id.collapsing_toolbar);\n\n        gradientBackground = findViewById(R.id.toolbar_background_gradient);\n        floatingActionButton = (FabButton) findViewById(R.id.fab_download);\n        floatingActionButton.setScaleX(0);\n        floatingActionButton.setScaleY(0);\n        binding.setDownloadClick(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (bookInfo == null) {\n                    showSnackBarMessage(R.string.book_not_available);\n                    return;\n                }\n                if (!bookInfo.isDownloadedAlready()) {\n                    floatingActionButton.resetIcon();\n                    floatingActionButton.showProgress(true);\n                    floatingActionButton.setProgress(0);\n                }\n                bookInfoPresenter.downloadBook(bookInfo);\n            }\n        });\n\n\n        bookInfoPresenter = new BookInfoPresenter(Injection.provideBookService(), Injection.provideDownloadService(),\n                Injection.provideAnalytics(), Schedulers.io(), AndroidSchedulers.mainThread());\n        bookInfoPresenter.attachView(this);\n        calculateLayoutHeight();\n        imageViewBook.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {\n            @Override\n            public boolean onPreDraw() {\n                imageViewBook.getViewTreeObserver().removeOnPreDrawListener(this);\n\n                enterAnimation();\n                return true;\n            }\n        });\n        final FireBookDetails bookDetailParcelable = getIntent().getParcelableExtra(BOOK_PARCEL);\n\n        if (bookDetailParcelable != null) {\n            setBookInfoBinding(bookDetailParcelable);\n            startLoadingBook(bookDetailParcelable);\n            showBookDetailView();\n        } else {\n            onNewIntent(getIntent());\n        }\n\n    }\n\n    private void enterAnimation() {\n\n        floatingActionButton.setScaleX(0);\n        floatingActionButton.setScaleY(0);\n        floatingActionButton.animate().setStartDelay(500).scaleY(1).scaleX(1)\n                .setInterpolator(new OvershootInterpolator())\n                .setDuration(getResources().getInteger(android.R.integer.config_mediumAnimTime)).start();\n    }\n\n    @SuppressWarnings(\"SuspiciousNameCombination\")\n    private void calculateLayoutHeight() {\n        if (getResources().getConfiguration().orientation == ActivityInfo.SCREEN_ORIENTATION_PORTRAIT) {\n            Log.d(TAG, \"Setting image height\");\n            DisplayMetrics dMetrics = new DisplayMetrics();\n            getWindowManager().getDefaultDisplay().getMetrics(dMetrics);\n            CollapsingToolbarLayout.LayoutParams lp = (CollapsingToolbarLayout.LayoutParams) imageViewBook\n                    .getLayoutParams();\n            lp.height = dMetrics.widthPixels;\n            imageViewBook.setLayoutParams(lp);\n\n            CoordinatorLayout.LayoutParams lp2 = (CoordinatorLayout.LayoutParams) appBarLayout.getLayoutParams();\n            lp2.height = dMetrics.widthPixels;\n            appBarLayout.setLayoutParams(lp2);\n        }\n    }\n\n    private void startLoadingBook(final FireBookDetails bookDetailId) {\n        errorRetryButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                bookInfoPresenter.loadContributorInformation(bookDetailId);\n            }\n        });\n\n        bookInfoPresenter.loadContributorInformation(bookDetailId);\n        showBookDetailView();\n    }\n\n    @Override\n    public void showBookDetailView() {\n        mainBookCard.setVisibility(View.VISIBLE);\n        loadingProgressBar.setVisibility(View.GONE);\n        errorLayout.setVisibility(View.GONE);\n        coordinatorLayout.setVisibility(View.VISIBLE);\n        scrollView.setVisibility(View.VISIBLE);\n        floatingActionButton.setVisibility(View.VISIBLE);\n    }\n\n    protected void onNewIntent(Intent intent) {\n        super.onNewIntent(intent);\n        String action = intent.getAction();\n        String data = intent.getDataString();\n        Log.d(TAG, \"onNewIntent() called: action\" + action);\n\n        if (Intent.ACTION_VIEW.equals(action) && data != null) {\n            Uri uri = Uri.parse(data);\n            String bookId = uri.getLastPathSegment();\n            String invitationId = uri.getQueryParameter(\"invitation_id\");\n            Log.d(TAG, \"Action View: book id:\" + bookId + \". Full URL:\" + uri\n                    .toString() + \". InvitationId:\" + invitationId);\n            //  startLoadingBook(bookId);\n        }\n    }\n\n    private void loadImage(StorageReference url) {\n        GlideApp.with(this).load(url)\n                .transition(DrawableTransitionOptions.withCrossFade())\n                .into(new CustomTarget<Drawable>() {\n                    @Override\n                    public void onResourceReady(@NonNull Drawable resource, @Nullable com.bumptech.glide.request.transition.Transition<? super Drawable> transition) {\n\n                        Bitmap bitmap = drawableToBitmap(resource);\n                        onImageLoaded(bitmap);\n                        extractPaletteColors(bitmap);\n                    }\n\n                    @Override\n                    public void onLoadCleared(@Nullable Drawable placeholder) {\n                        // Clear the view.\n                        onImageLoaded(null);\n                    }\n                });\n    }\n    public static Bitmap drawableToBitmap (Drawable drawable) {\n        Bitmap bitmap = null;\n\n        if (drawable instanceof BitmapDrawable) {\n            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;\n            if(bitmapDrawable.getBitmap() != null) {\n                return bitmapDrawable.getBitmap();\n            }\n        }\n\n        if(drawable.getIntrinsicWidth() <= 0 || drawable.getIntrinsicHeight() <= 0) {\n            bitmap = Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888); // Single color bitmap will be created of 1x1 pixel\n        } else {\n            bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\n        }\n\n        Canvas canvas = new Canvas(bitmap);\n        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());\n        drawable.draw(canvas);\n        return bitmap;\n    }\n    private void onImageLoaded(@Nullable Bitmap bitmap) {\n        imageViewBook.setImageBitmap(bitmap);\n\n    }\n\n    private void extractPaletteColors(Bitmap resource) {\n        Palette.from(resource).generate(new Palette.PaletteAsyncListener() {\n            @Override\n            public void onGenerated(Palette palette) {\n                if (null == palette) {\n                    return;\n                }\n                Log.d(\"onGenerated\", palette.toString());\n                Palette.Swatch toolbarSwatch = palette.getMutedSwatch();\n\n                int toolbarColor = toolbarSwatch != null ? toolbarSwatch.getRgb() : ContextCompat\n                        .getColor(getApplicationContext(), R.color.colorPrimary);\n                int accentColor = palette\n                        .getVibrantColor(ContextCompat.getColor(getApplicationContext(), R.color.colorAccent));\n\n                setToolbarColor(toolbarColor);\n                setAccentColor(accentColor);\n\n                if (toolbarSwatch != null) {\n                    float[] darkerShade = toolbarSwatch.getHsl();\n                    darkerShade[2] = darkerShade[2] * 0.8f; //Make it a darker shade for the status bar\n                    setStatusBarColor(ColorUtils.HSLToColor(darkerShade));\n                } else {\n                    setStatusBarColor(ContextCompat.getColor(getApplicationContext(), R.color.colorPrimaryDark));\n                }\n            }\n        });\n    }\n\n    private void setToolbarColor(int color) {\n        if (collapsingToolbarLayout != null) {\n            collapsingToolbarLayout.setStatusBarScrimColor(color);\n            collapsingToolbarLayout.setContentScrimColor(color);\n        } else {\n            actionBar.setBackgroundDrawable(new ColorDrawable(color));\n        }\n        floatingActionButton.setRingProgressColor(color);\n\n        if (gradientBackground != null) {\n            GradientDrawable gradientDrawable = new GradientDrawable();\n            gradientDrawable.setColor(color);\n            gradientDrawable.setAlpha(140);\n            gradientBackground.setBackground(gradientDrawable);\n        }\n    }\n\n    private void setAccentColor(int accentColor) {\n        floatingActionButton.setColor(accentColor);\n\n    }\n\n    private void setStatusBarColor(int color) {\n        if (isFinishing()) {\n            return;\n        }\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            Window window = getWindow();\n            window.setStatusBarColor(color);\n        }\n    }\n\n    @Override\n    public void showError(String errorMessage) {\n        loadingProgressBar.setVisibility(View.GONE);\n        errorLayout.setVisibility(View.VISIBLE);\n        errorText.setText(errorMessage);\n    }\n\n    @Override\n    public void showError(@StringRes int stringRes) {\n        showError(getString(stringRes));\n    }\n\n    @Override\n    public void showSnackBarMessage(final int message, final String errorDetail) {\n        Snackbar.make(scrollView, getString(message, errorDetail), Snackbar.LENGTH_LONG).show();\n\n    }\n\n    @Override\n    public void showSnackBarMessage(int message) {\n        Snackbar.make(scrollView, message, Snackbar.LENGTH_LONG).show();\n\n    }\n\n    @Override\n    public void showDownloadProgress(final int downloadProgress) {\n        if (progress == downloadProgress || downloadProgress == 0) {\n            return;\n        }\n        progress = downloadProgress;\n        Log.d(TAG, \"Download progress:\" + downloadProgress);\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                floatingActionButton.setProgress(downloadProgress);\n            }\n        });\n\n    }\n\n    @Override\n    public void showDownloadFinished() {\n        Log.d(TAG, \"Download finished\");\n        floatingActionButton.setProgress(100.0f);\n    }\n\n    @Override\n    public void setToolbarTitle(String title) {\n        toolbar.setTitle(title);\n        ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setTitle(title);\n        }\n        if (collapsingToolbarLayout != null) {\n            collapsingToolbarLayout.setTitle(title);\n        }\n    }\n\n    @Override\n    public void setBookInfoBinding(FireBookDetails bookInfo) {\n        this.bookInfo = bookInfo;\n        binding.setBookInfo(bookInfo);\n        if (bookInfo.isDownloadedAlready()) {\n            showDownloadFinished();\n        }\n        loadImage(bookInfo.getFirebaseBookCoverUrl());\n    }\n\n    @Override\n    public void openBook(FireBookDetails bookDetail, BookPages bookPages, String location) {\n        if (isFinishing()) {\n            return;\n        }\n        Intent intent = new Intent(BookInfoActivity.this, BookDetailActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        intent.putExtra(BookDetailActivity.Companion.getBOOK_PAGES(), bookPages);\n        intent.putExtra(BookDetailActivity.Companion.getBOOK_ARG(), bookDetail.getBookTitle());\n        intent.putExtra(BookDetailActivity.Companion.getLOCATION_BOOK(), location);\n        startActivity(intent);\n    }\n\n    @Override\n    public void showContributors(List<FireContributor> list) {\n        if (list == null || list.size() == 0) {\n            contributorCard.setVisibility(View.GONE);\n            return;\n        }\n        contributorCard.setVisibility(View.VISIBLE);\n        ContributorAdapter contributorAdapter = new ContributorAdapter(list, this);\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);\n        contributorRecyclerView.setLayoutManager(linearLayoutManager);\n        contributorRecyclerView.setAdapter(contributorAdapter);\n    }\n\n    @Override\n    public void sendShareEvent(String bookTitle) {\n        try {\n            Intent sendIntent = new Intent();\n            sendIntent.setAction(Intent.ACTION_SEND);\n            sendIntent.putExtra(Intent.EXTRA_TEXT, getString(R.string.sharing_book_title, bookTitle));\n            sendIntent.setType(\"text/plain\");\n            startActivity(sendIntent);\n        } catch (ActivityNotFoundException anfe) {\n            showSnackBarMessage(R.string.share_book_error_no_apps_found);\n        }\n    }\n\n    @Override\n    protected String getScreenName() {\n        return \"BookInfoActivity\";\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu_book_info, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n\n        int id = item.getItemId();\n\n        if (id == R.id.action_share_book) {\n            bookInfoPresenter.shareBookClicked(bookInfo);\n            return true;\n        } else if (id == android.R.id.home) {\n            onBackPressed();\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        bookInfoPresenter.detachView();\n    }\n}\n",
    "contains": [
        "app/src/main/res/menu/menu_book_info.xml"
    ],
    "mock_data": {
        "bookInfo": {
            "bookTitle": "Sample Book Title",
            "bookCoverPageUrl": "https://example.com/cover.jpg",
            "bookEnabled": true,
            "bookLanguage": "English",
            "bookLanguageAbbreviation": "en",
            "bookId": "12345",
            "bookDescription": "This is a sample book description.",
            "contributorsIndexedKeys": [
                "contributor1",
                "contributor2"
            ],
            "isDownloading": false,
            "bookUrl": "https://example.com/book.pdf",
            "createdDate": 1633046400000
        }
    },
    "source": "bookdash",
    "time": 118.14767265319824,
    "result": {
        "harmony_component_code": "Column() {\n  RelativeContainer() {\n    CircularProgressBar()\n      .id('activity_loading_book_info')\n      .width('48vp')\n      .height('48vp')\n      .alignRules({\n        center: { anchor: '__container__', align: VerticalAlign.Center },\n        middle: { anchor: '__container__', align: HorizontalAlign.Center }\n      })\n      .margin({ top: '16vp', bottom: '8vp' })\n      .indeterminate(true)\n      .color($r('app.color.colorAccent'))\n      .maxSweepAngle(300)\n      .minSweepAngle(10)\n      .rotationSpeed(1.0)\n      .strokeWidth('4vp')\n      .sweepSpeed(1.0)\n\n    Column() {\n      Image($r('app.media.lb_ic_sad_cloud'))\n        .id('image_view_sad_cloud')\n        .width('150vp')\n        .height('150vp')\n        .margin({ top: '8vp', bottom: '8vp' })\n\n      Text($r('app.string.error_loading_books'))\n        .id('text_view_error_screen')\n        .width('auto')\n        .height('auto')\n        .margin({ top: '8vp', bottom: '8vp' })\n\n      Button($r('app.string.button_retry_text'))\n        .id('button_retry')\n        .width('auto')\n        .height('auto')\n        .onClick(() => {\n          // Retry logic here\n        })\n    }\n    .id('linear_layout_error')\n    .width('100%')\n    .height('auto')\n    .visibility(Visibility.None)\n    .alignRules({\n      center: { anchor: '__container__', align: VerticalAlign.Center },\n      middle: { anchor: '__container__', align: HorizontalAlign.Center }\n    })\n  }\n  .width('100%')\n  .height('100%')\n\n  Stack() {\n    Image($r('app.media.appbackground'))\n      .width('100%')\n      .height('100%')\n      .objectFit(ImageFit.Cover)\n\n    Column() {\n      CollapsingToolbarLayout() {\n        Image($r('app.media.transition_book'))\n          .id('image_view_book_cover')\n          .width('100%')\n          .height('auto')\n          .objectFit(ImageFit.Cover)\n          .collapseMode(CollapseMode.Parallax)\n          .collapseParallaxMultiplier(0.7)\n\n        View()\n          .id('toolbar_background_gradient')\n          .width('100%')\n          .height('100%')\n\n        Toolbar()\n          .id('toolbar')\n          .width('100%')\n          .height('?attr/actionBarSize')\n          .collapseMode(CollapseMode.Pin)\n          .popupTheme($r('app.style.ThemeOverlay.AppCompat.Light'))\n          .theme($r('app.style.ThemeOverlay.AppCompat.Dark.ActionBar'))\n      }\n      .id('collapsing_toolbar')\n      .width('100%')\n      .height('200vp')\n      .scrollFlags([ScrollFlag.Scroll, ScrollFlag.ExitUntilCollapsed])\n      .popupTheme($r('app.style.ThemeOverlay.AppCompat.Light'))\n      .theme($r('app.style.ThemeOverlay.AppCompat.Dark.ActionBar'))\n      .title(this.bookInfo.bookTitle)\n\n      Scroll() {\n        Column() {\n          CardView() {\n            RelativeContainer() {\n              Text($r('app.string.about_book_info'))\n                .id('textview_about_heading')\n                .width('auto')\n                .height('48vp')\n                .margin({ left: '16vp', right: '16vp' })\n                .fontFamily('sans-serif')\n                .fontSize('14fp')\n                .fontColor($r('app.color.text_secondary_dark'))\n\n              Text(this.bookInfo.getCreatedDateFormatted())\n                .width('auto')\n                .height('48vp')\n                .margin({ left: '16vp', right: '16vp' })\n                .fontFamily('sans-serif')\n                .fontSize('14fp')\n                .fontColor($r('app.color.text_secondary_dark'))\n                .alignRules({\n                  right: { anchor: '__container__', align: HorizontalAlign.End }\n                })\n\n              Text(this.bookInfo.bookDescription)\n                .width('100%')\n                .height('auto')\n                .margin({ left: '16vp', right: '16vp', top: '2vp', bottom: '16vp' })\n                .fontFamily('sans-serif')\n                .fontSize('16fp')\n                .fontColor($r('app.color.text_color_primary_dark'))\n            }\n            .width('100%')\n            .height('auto')\n          }\n          .id('card_view_main_book_info')\n          .width('100%')\n          .height('auto')\n          .margin({ left: $r('app.dimen.activity_horizontal_margin'), right: $r('app.dimen.activity_horizontal_margin'), top: '8vp', bottom: '4vp' })\n          .visibility(this.bookInfo.bookDescription ? Visibility.Visible : Visibility.None)\n          .cardCornerRadius('8vp')\n\n          CardView() {\n            Column() {\n              Text($r('app.string.contributors'))\n                .width('100%')\n                .height('48vp')\n                .margin({ left: '16vp', right: '16vp' })\n                .fontFamily('sans-serif')\n                .fontSize('14fp')\n                .fontColor($r('app.color.text_secondary_dark'))\n\n              RecyclerView()\n                .id('recyclerview_contributors')\n                .width('100%')\n                .height('auto')\n                .orientation(Axis.Vertical)\n            }\n            .width('100%')\n            .height('auto')\n          }\n          .id('contributor_card')\n          .width('100%')\n          .height('auto')\n          .margin({ left: $r('app.dimen.activity_horizontal_margin'), right: $r('app.dimen.activity_horizontal_margin'), top: '8vp', bottom: '4vp' })\n          .cardCornerRadius('8vp')\n        }\n        .width('100%')\n        .height('100%')\n        .padding({ top: '24vp' })\n      }\n      .id('scrollViewBookInfo')\n      .width('100%')\n      .height('100%')\n      .visibility(Visibility.Visible)\n\n      FabButton()\n        .id('fab_download')\n        .width($r('app.dimen.fab_button_size'))\n        .height($r('app.dimen.fab_button_size'))\n        .margin({ right: $r('app.dimen.fab_margin_right') })\n        .color($r('app.color.colorPrimaryDark'))\n        .indeterminate(false)\n        .max(100)\n        .onClick(this.downloadClick)\n        .src($r('app.media.ic_file_download'))\n        .visibility(Visibility.Visible)\n        .autoStart(false)\n        .endBitmap($r('app.media.ic_open_book'))\n        .hideProgressOnComplete(true)\n        .progressColor($r('app.color.colorAccent'))\n        .progressWidthRatio(0.1)\n        .showEndBitmap(true)\n        .showShadow(true)\n        .layoutAnchor('app_bar_layout')\n        .layoutAnchorGravity([LayoutAnchorGravity.Bottom, LayoutAnchorGravity.Right, LayoutAnchorGravity.End])\n    }\n    .id('coordinator_layout_content')\n    .width('100%')\n    .height('100%')\n    .fitsSystemWindows(true)\n    .visibility(Visibility.Visible)\n  }\n  .width('100%')\n  .height('100%')\n}"
    },
    "explanation": "1. 使用Column作为根布局，包含两个主要部分：CircularProgressBar和错误信息展示的LinearLayout，以及包含主要内容的CoordinatorLayout。\n2. CircularProgressBar通过RelativeContainer实现居中对齐，并设置其属性和样式。\n3. 错误信息展示的LinearLayout通过Column实现，包含ImageView、Text和Button，并设置其属性和样式。\n4. CoordinatorLayout通过Stack实现，包含背景图片、CollapsingToolbarLayout、Scroll和FabButton。\n5. CollapsingToolbarLayout通过Column实现，包含ImageView、View和Toolbar，并设置其属性和样式。\n6. Scroll通过Column实现，包含两个CardView，分别展示书籍信息和贡献者信息，并设置其属性和样式。\n7. FabButton通过设置其属性和样式，实现下载按钮的功能。\n8. 所有组件的属性和样式均严格按照安卓布局文件中的描述进行转译，确保功能和行为一致。"
}