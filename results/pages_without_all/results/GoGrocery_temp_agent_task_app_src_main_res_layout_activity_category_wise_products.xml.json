{
    "name": "app/src/main/res/layout/activity_category_wise_products.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"vertical\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"app.infiniverse.grocery.Category_wise_products\">\n\n    <include layout=\"@layout/toolbar\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:layout_marginTop=\"35dp\"\n        android:visibility=\"gone\" />\n\n\n    <LinearLayout\n        android:id=\"@+id/ll_products\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:visibility=\"gone\"\n        android:layout_marginTop=\"10dp\"\n        android:background=\"#d2d2d2\"\n        android:orientation=\"vertical\">\n\n        <android.support.v7.widget.RecyclerView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n            android:id=\"@+id/recyclerview_products\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n    </LinearLayout>\n\n    <android.support.constraint.ConstraintLayout\n        android:id=\"@+id/ll_empty\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"10dp\"\n        android:background=\"#ffffff\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n        <ImageView\n            android:id=\"@+id/imageView2\"\n            android:layout_width=\"169dp\"\n            android:layout_height=\"153dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginEnd=\"8dp\"\n            android:layout_marginStart=\"8dp\"\n            android:layout_marginTop=\"8dp\"\n            android:src=\"@drawable/ic_search\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintVertical_bias=\"0.26999998\" />\n\n        <TextView\n            android:id=\"@+id/textView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginEnd=\"8dp\"\n            android:layout_marginStart=\"8dp\"\n            android:text=\"No Items In This Category\"\n            android:textColor=\"@color/blue_grey\"\n            android:textSize=\"17sp\"\n            app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n    </android.support.constraint.ConstraintLayout>\n\n</LinearLayout>\n",
    "java": "package app.infiniverse.grocery;\n\nimport android.app.AlertDialog;\nimport android.app.SearchManager;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.support.constraint.ConstraintLayout;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.SearchView;\nimport android.support.v7.widget.Toolbar;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.LinearLayout;\nimport android.widget.ProgressBar;\nimport android.widget.Toast;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.net.URLEncoder;\n\npublic class Category_wise_products extends AppCompatActivity implements AddorRemoveCallbacks {\n\n    public static final String PREFS = \"PREFS\";\n    LinearLayout ll;\n    SharedPreferences sp;\n    ConstraintLayout cl;\n    int cart_count;\n    private ProgressBar mProgressBar;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_category_wise_products);\n        Toolbar toolbar = findViewById(R.id.mytoolbar);\n        setSupportActionBar(toolbar);\n        sp = getApplicationContext().getSharedPreferences(PREFS, MODE_PRIVATE);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        mProgressBar = findViewById(R.id.progressBar);\n\n        Bundle extras = getIntent().getExtras();\n        cart_count = Integer.parseInt(extras.getString(\"cart_count\"));\n\n        ll = findViewById(R.id.ll_products);\n\n        cl= findViewById(R.id.ll_empty);\n\n        Bundle bundle = getIntent().getExtras();\n        final String sub_cat_id = bundle.getString(\"sub_cat_id\");\n        final String sub_category = bundle.getString(\"sub_category\");\n\n        getSupportActionBar().setTitle(sub_category);\n\n\n        mProgressBar.setVisibility(View.VISIBLE);\n\n        class Products extends AsyncTask<String, Void, String> {\n\n            @Override\n            protected String doInBackground(String... params) {\n                String productUrl = getResources().getString(R.string.base_url) + \"getProductsOfSubCategory/\" + sub_cat_id;\n\n                try {\n                    URL url = new URL(productUrl);\n\n                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\n                    httpURLConnection.setRequestMethod(\"POST\");\n                    httpURLConnection.setDoInput(true);\n                    httpURLConnection.setDoOutput(true);\n\n                    InputStream inputStream = httpURLConnection.getInputStream();\n                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));\n                    String result = \"\", line = \"\";\n                    while ((line = bufferedReader.readLine()) != null) {\n                        result += line;\n                    }\n                    return result;\n                } catch (Exception e) {\n                    return e.toString();\n                }\n            }\n\n            @Override\n            protected void onPostExecute(String s) {\n                super.onPostExecute(s);\n                AlertDialog.Builder builder = new AlertDialog.Builder(Category_wise_products.this);\n                builder.setTitle(\"Received Message\");\n\n                try {\n\n                    JSONArray productArray = new JSONArray(s);\n\n                    String[] product_ids = new String[productArray.length()];\n                    String[] product_names = new String[productArray.length()];\n                    String[] product_descs = new String[productArray.length()];\n                    String[] product_imgs = new String[productArray.length()];\n                    String[] product_prices = new String[productArray.length()];\n                    String[] product_brands = new String[productArray.length()];\n                    String[] product_sps = new String[productArray.length()];\n                    String[] product_dps = new String[productArray.length()];\n\n\n                    JSONObject json_data = new JSONObject();\n                    for (int i = 0; i < productArray.length(); i++) {\n                        json_data = productArray.getJSONObject(i);\n                        product_ids[i] = json_data.getString(\"id\");\n                        product_names[i] = json_data.getString(\"name\");\n                        product_descs[i] = json_data.getString(\"description\");\n                        product_imgs[i] = json_data.getString(\"image\");\n                        product_prices[i] = json_data.getString(\"mrp\") + \" /-\";\n                        product_brands[i] = json_data.getString(\"brand\");\n                        product_sps[i] = \"\\u20B9\" + json_data.getString(\"selling_price\") + \" /-\";\n                        double p_mrp = Double.parseDouble(json_data.getString(\"mrp\"));\n                        double p_sp = Double.parseDouble(json_data.getString(\"selling_price\"));\n                        double p_dp = (p_mrp - p_sp) / (p_mrp / 100);\n                        int p_dp_i = (int) p_dp;\n                        product_dps[i] = String.valueOf(p_dp_i);\n\n\n                    }\n\n                    mProgressBar.setVisibility(View.GONE);\n                    if (productArray.length() == 0) {\n\n                        cl.setVisibility(View.VISIBLE);\n                    } else {\n                        ll.setVisibility(View.VISIBLE);\n                        RecyclerView product_recyclerview = findViewById(R.id.recyclerview_products);\n                        product_recyclerview.setNestedScrollingEnabled(false);\n                        product_recyclerview.setLayoutManager(new LinearLayoutManager(Category_wise_products.this));\n                        product_recyclerview.setAdapter(new Recent_Products_Adapter(product_ids, product_names, product_descs, product_imgs, product_prices, product_brands, product_sps, product_dps, Category_wise_products.this));\n\n                    }\n                } catch (JSONException e) {\n                    builder.setCancelable(true);\n                    builder.setTitle(\"No Internet Connection\");\n//                    builder.setMessage(s);\n                    builder.setMessage(\"Please Connect to internet\");\n                    builder.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialogInterface, int i) {\n\n                        }\n                    });\n                    builder.show();\n                }\n\n            }\n\n            @Override\n            protected void onPreExecute() {\n                super.onPreExecute();\n            }\n\n\n        }\n        Products products = new Products();\n        products.execute();\n\n\n    }\n\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.home, menu);\n\n        final MenuItem menuItem = menu.findItem(R.id.cart);\n        MenuItem menuItem2 = menu.findItem(R.id.action_search);\n        menuItem2.setVisible(false);\n        menuItem.setIcon(Converter.convertLayoutToImage(Category_wise_products.this, cart_count, R.drawable.ic_shopping_cart_white));\n\n\n        if (sp.getString(\"loginid\", null) != null) {\n            class GetCartItemCount extends AsyncTask<String, Void, String> {\n\n                @Override\n                protected void onPreExecute() {\n                    super.onPreExecute();\n                }\n\n                @Override\n                protected void onPostExecute(String s) {\n                    super.onPostExecute(s);\n                    cart_count = Integer.parseInt(s);\n                    menuItem.setIcon(Converter.convertLayoutToImage(Category_wise_products.this, cart_count, R.drawable.ic_shopping_cart_white));\n                }\n\n                @Override\n                protected String doInBackground(String... params) {\n\n                    String urls = getResources().getString(R.string.base_url).concat(\"getItemCount/\");\n                    try {\n                        URL url = new URL(urls);\n                        HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\n                        httpURLConnection.setRequestMethod(\"POST\");\n                        httpURLConnection.setDoInput(true);\n                        httpURLConnection.setDoOutput(true);\n                        OutputStream outputStream = httpURLConnection.getOutputStream();\n                        BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, \"UTF-8\"));\n                        String post_Data = URLEncoder.encode(\"login_id\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[0], \"UTF-8\");\n\n                        bufferedWriter.write(post_Data);\n                        bufferedWriter.flush();\n                        bufferedWriter.close();\n                        outputStream.close();\n                        InputStream inputStream = httpURLConnection.getInputStream();\n                        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));\n                        String result = \"\", line = \"\";\n                        while ((line = bufferedReader.readLine()) != null) {\n                            result += line;\n                        }\n                        return result;\n                    } catch (Exception e) {\n                        return e.toString();\n                    }\n                }\n            }\n\n            //creating asynctask object and executing it\n            GetCartItemCount catItemObj = new GetCartItemCount();\n            catItemObj.execute(sp.getString(\"loginid\", null));\n        }\n\n        SearchManager searchManager =\n                (SearchManager) getSystemService(Context.SEARCH_SERVICE);\n        SearchView searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();\n        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\n\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n\n\n        int id = item.getItemId();\n\n        if (id == R.id.cart) {\n\n\n            if (sp.getString(\"loginid\", null) != null) {\n                Intent i = new Intent(this, MyCart.class);\n                startActivity(i);\n                return true;\n            } else {\n                AlertDialog.Builder builder = new AlertDialog.Builder(Category_wise_products.this);\n                builder.setTitle(\"Heyy..\")\n                        .setMessage(\"To see your cart you have to login first. Do you want to login \")\n                        .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                Intent intent = new Intent(Category_wise_products.this, LoginActivity.class);\n                                startActivity(intent);\n                            }\n                        })\n                        .setNegativeButton(\"No Just Continue \", new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                            }\n                        })\n                        .setCancelable(false);\n                builder.show();\n            }\n        }\n\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    protected void onPostResume() {\n        super.onPostResume();\n        invalidateOptionsMenu();\n\n    }\n\n    @Override\n    public void onAddProduct() {\n        cart_count++;\n        invalidateOptionsMenu();\n\n    }\n\n    @Override\n    public void onRemoveProduct() {\n        cart_count--;\n        invalidateOptionsMenu();\n    }\n}\n",
    "contains": [
        "app/src/main/res/menu/home.xml",
        "app/src/main/res/layout/list_recent_products.xml",
        "app/src/main/res/layout/toolbar.xml"
    ],
    "mock_data": {},
    "source": "GoGrocery",
    "time": 39.27103233337402,
    "result": {
        "harmony_component_code": "Column() {\n  // Include toolbar layout\n  // Assuming toolbar layout is already defined and included\n  \n  ProgressBar()\n    .id('progressBar')\n    .width('auto')\n    .height('auto')\n    .align(Alignment.Center)\n    .marginTop('35vp')\n    .visibility(Visibility.Hidden)\n  \n  Column() {\n    List() {\n      // Assuming ListItem components will be added here dynamically\n    }\n    .id('recyclerview_products')\n    .width('100%')\n    .height('auto')\n  }\n  .id('ll_products')\n  .width('100%')\n  .height('100%')\n  .margin({ end: '8vp', start: '8vp' })\n  .visibility(Visibility.Hidden)\n  .marginTop('10vp')\n  .backgroundColor('#d2d2d2')\n  \n  Stack() {\n    Image($r('app.media.ic_search'))\n      .id('imageView2')\n      .width('169vp')\n      .height('153vp')\n      .margin({ bottom: '8vp', end: '8vp', start: '8vp', top: '8vp' })\n      .objectFit(ImageFit.Contain)\n    \n    Text('No Items In This Category')\n      .id('textView')\n      .width('auto')\n      .height('auto')\n      .margin({ bottom: '8vp', end: '8vp', start: '8vp' })\n      .fontSize('17fp')\n      .fontColor($r('app.color.blue_grey'))\n  }\n  .id('ll_empty')\n  .width('100%')\n  .height('100%')\n  .margin({ end: '8vp', start: '8vp', top: '10vp' })\n  .backgroundColor('#ffffff')\n  .visibility(Visibility.Hidden)\n}\n.width('100%')\n.height('100%')\n.backgroundColor('#ffffff')"
    },
    "explanation": "1. The root LinearLayout is translated to a Column component in ArkUI, maintaining the vertical orientation.\n2. The include tag for the toolbar is commented out as it assumes the toolbar layout is already defined and included elsewhere.\n3. The ProgressBar is translated with its properties like id, width, height, alignment, marginTop, and visibility.\n4. The nested LinearLayout containing the RecyclerView is translated to a Column with a List component inside it. The List component is assumed to be populated dynamically with ListItem components.\n5. The ConstraintLayout is translated to a Stack component, which allows for flexible positioning of its children. The Image and Text components inside the Stack are translated with their respective properties like id, width, height, margin, font size, and color.\n6. All components maintain their visibility properties as specified in the original Android layout."
}