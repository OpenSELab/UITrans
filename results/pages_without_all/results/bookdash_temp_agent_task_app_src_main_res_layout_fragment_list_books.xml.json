{
    "name": "app/src/main/res/layout/fragment_list_books.xml",
    "content": "<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    tools:context=\".presentation.main.MainActivity\">\n\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/appbackground\" />\n\n    <com.google.android.material.appbar.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        android:theme=\"@style/AppTheme.AppBarOverlay\">\n\n        <androidx.appcompat.widget.Toolbar\n            android:id=\"@+id/toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            android:background=\"?attr/colorPrimary\"\n            android:title=\"@string/book_dash\"\n            app:layout_scrollFlags=\"scroll|enterAlways\"\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\" />\n\n        <LinearLayout\n            android:id=\"@+id/container_language\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"@drawable/language_selector\"\n            android:gravity=\"right\"\n            android:paddingLeft=\"4dp\"\n            android:paddingTop=\"4dp\"\n            android:paddingRight=\"@dimen/book_list_language_bar_right_padding\"\n            android:paddingBottom=\"4dp\"\n            app:layout_scrollFlags=\"scroll|enterAlways\">\n\n            <androidx.appcompat.widget.AppCompatTextView\n                android:id=\"@+id/text_current_language\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:drawablePadding=\"4dp\"\n                android:ellipsize=\"end\"\n                android:fontFamily=\"sans-serif\"\n                android:maxLines=\"1\"\n                android:text=\"@string/language_selection_heading\"\n                android:textColor=\"@color/text_color_primary_dark\"\n                android:textSize=\"16sp\"\n                app:drawableRightCompat=\"@drawable/ic_arrow_down_24\" />\n        </LinearLayout>\n    </com.google.android.material.appbar.AppBarLayout>\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <fr.castorflex.android.circularprogressbar.CircularProgressBar\n            android:id=\"@+id/activity_loading_books\"\n            android:layout_width=\"48dp\"\n            android:layout_height=\"48dp\"\n            android:layout_alignParentBottom=\"false\"\n            android:layout_centerInParent=\"true\"\n            android:layout_gravity=\"center\"\n            android:layout_marginTop=\"16dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:foregroundGravity=\"center|center_vertical|center_horizontal\"\n            android:indeterminate=\"true\"\n            app:cpb_color=\"@color/colorAccent\"\n            app:cpb_max_sweep_angle=\"300\"\n            app:cpb_min_sweep_angle=\"10\"\n            app:cpb_rotation_speed=\"1.0\"\n            app:cpb_stroke_width=\"4dp\"\n            app:cpb_sweep_speed=\"1.0\"\n            />\n    </RelativeLayout>\n\n\n    <LinearLayout\n        android:id=\"@+id/linear_layout_error\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n        <ImageView\n            android:id=\"@+id/image_view_sad_cloud\"\n            android:layout_width=\"150dp\"\n            android:layout_height=\"150dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:src=\"@drawable/lb_ic_sad_cloud\" />\n\n        <TextView\n            android:id=\"@+id/text_view_error_screen\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:layout_margin=\"8dp\"\n            android:text=\"@string/error_loading_books\" />\n\n        <Button\n            android:id=\"@+id/button_retry\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"@string/button_retry_text\" />\n    </LinearLayout>\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/recycler_view_books\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:clipToPadding=\"false\"\n        android:fitsSystemWindows=\"true\"\n        android:gravity=\"center_horizontal\"\n        android:paddingLeft=\"@dimen/book_list_padding\"\n        android:paddingTop=\"@dimen/book_list_padding\"\n        android:paddingRight=\"@dimen/book_list_padding\"\n        android:scrollbars=\"vertical\"\n        android:visibility=\"visible\"\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n        tools:listitem=\"@layout/list_item_book\" />\n\n</androidx.coordinatorlayout.widget.CoordinatorLayout>",
    "java": "package org.bookdash.android.presentation.listbooks;\n\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.GridLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.android.material.snackbar.Snackbar;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.domain.model.firebase.FireBookDetails;\nimport org.bookdash.android.presentation.bookinfo.BookInfoActivity;\nimport org.bookdash.android.presentation.main.NavDrawerInterface;\nimport org.bookdash.android.presentation.search.SearchActivity;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport fr.castorflex.android.circularprogressbar.CircularProgressBar;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.schedulers.Schedulers;\n\n\npublic class ListBooksFragment extends Fragment implements ListBooksContract.View {\n\n    private static final String TAG = ListBooksFragment.class.getCanonicalName();\n    private static final int BOOK_DETAIL_REQUEST_CODE = 43;\n    private ListBooksContract.Presenter listBooksPresenter;\n    private Button buttonRetry;\n    private RecyclerView recyclerViewBooks;\n    private CircularProgressBar circularProgressBar;\n    private LinearLayout linearLayoutErrorScreen;\n    private TextView textViewErrorMessage;\n    private LinearLayout linearLayoutContainerLanguage;\n    private TextView textViewCurrentLanguage;\n    private NavDrawerInterface navDrawerInterface;\n    private BookAdapter bookAdapter;\n    private View.OnClickListener bookClickListener = new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            BookViewHolder viewHolder = (BookViewHolder) v.getTag();\n            FireBookDetails bookDetailResult = viewHolder.bookDetail;\n            BookInfoActivity.startBookInfo(ListBooksFragment.this.getActivity(), bookDetailResult);\n        }\n    };\n    private DialogInterface.OnClickListener languageClickListener = new DialogInterface.OnClickListener() {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            if (dialog != null) {\n                dialog.dismiss();\n            }\n\n            listBooksPresenter.saveSelectedLanguage(which);\n\n        }\n    };\n\n    public static Fragment newInstance() {\n        return new ListBooksFragment();\n    }\n\n    @Override\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        Log.d(TAG,\n                \"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], resultCode = [\" + resultCode + \"], data = [\" + data + \"]\");\n\n        if (requestCode == BOOK_DETAIL_REQUEST_CODE) {\n            if (bookAdapter != null) {\n                bookAdapter.notifyDataSetChanged();\n            }\n        }\n    }\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof NavDrawerInterface) {\n            navDrawerInterface = (NavDrawerInterface) context;\n\n        }\n    }\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,\n                             @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_list_books, container, false);\n    }\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        listBooksPresenter = new ListBooksPresenter(Injection.provideSettingsRepo(getActivity()),\n                Injection.provideBookService(), Injection.provideAnalytics(), Schedulers.io(),\n                AndroidSchedulers.mainThread());\n        listBooksPresenter.attachView(this);\n        circularProgressBar = view.findViewById(R.id.activity_loading_books);\n        linearLayoutErrorScreen = view.findViewById(R.id.linear_layout_error);\n        buttonRetry = view.findViewById(R.id.button_retry);\n        textViewErrorMessage = view.findViewById(R.id.text_view_error_screen);\n        linearLayoutContainerLanguage = view.findViewById(R.id.container_language);\n        textViewCurrentLanguage = view.findViewById(R.id.text_current_language);\n        recyclerViewBooks = view.findViewById(R.id.recycler_view_books);\n        recyclerViewBooks.setLayoutManager(\n                new GridLayoutManager(getActivity(), getContext().getResources().getInteger(R.integer.book_span)));\n        buttonRetry.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Log.d(TAG, \"Retry button clicked\");\n                listBooksPresenter.loadBooksForLanguagePreference();\n            }\n        });\n        linearLayoutContainerLanguage.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                listBooksPresenter.clickOpenLanguagePopover();\n            }\n        });\n        Toolbar toolbar = view.findViewById(R.id.toolbar);\n        if (navDrawerInterface != null) {\n            navDrawerInterface.setToolbar(toolbar);\n        }\n        final ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();\n\n\n        if (actionBar != null) {\n            actionBar.setHomeAsUpIndicator(R.drawable.ic_menu_24dp);\n            actionBar.setDisplayHomeAsUpEnabled(true);\n            actionBar.setTitle(getString(R.string.book_dash));\n        }\n        listBooksPresenter.loadLanguages();\n        listBooksPresenter.loadBooksForLanguagePreference();\n        setHasOptionsMenu(true);\n    }\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        listBooksPresenter.detachView();\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        navDrawerInterface = null;\n    }\n\n    @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n        inflater.inflate(R.menu.menu_main, menu);\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        if (item.getItemId() == R.id.action_search_books) {\n            listBooksPresenter.openSearchScreen();\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    private void runUiThread(Runnable runnable) {\n        Activity activity = getActivity();\n        if (activity == null) {\n            return;\n        }\n        activity.runOnUiThread(runnable);\n    }\n\n\n    @Override\n    public void showErrorScreen(final boolean show, final String errorMessage, final boolean showRetryButton) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                if (show) {\n                    linearLayoutErrorScreen.setVisibility(View.VISIBLE);\n                    recyclerViewBooks.setVisibility(View.GONE);\n                } else {\n                    linearLayoutErrorScreen.setVisibility(View.GONE);\n                    recyclerViewBooks.setVisibility(View.VISIBLE);\n                }\n                buttonRetry.setVisibility(showRetryButton ? View.VISIBLE : View.GONE);\n                textViewErrorMessage.setText(errorMessage);\n            }\n        });\n\n\n    }\n\n\n    @Override\n    public void showLoading(final boolean visible) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n//                if (visible) {\n                if (false){\n                    linearLayoutErrorScreen.setVisibility(View.GONE);\n                    buttonRetry.setVisibility(View.GONE);\n                    recyclerViewBooks.setVisibility(View.GONE);\n                    circularProgressBar.setVisibility(View.VISIBLE);\n                } else {\n                    linearLayoutErrorScreen.setVisibility(View.GONE);\n                    buttonRetry.setVisibility(View.GONE);\n                    circularProgressBar.setVisibility(View.GONE);\n                    recyclerViewBooks.setVisibility(View.GONE);\n                }\n\n            }\n        });\n\n    }\n\n\n    @Override\n    public void showBooks(final List<FireBookDetails> bookDetailList) {\n//        runUiThread(new Runnable() {\n//            @Override\n//            public void run() {\n//                if (bookDetailList.isEmpty()) {\n//                    showErrorScreen(true, getString(R.string.no_books_available), true);\n//                }\n//                bookAdapter = new BookAdapter(bookDetailList, ListBooksFragment.this.getActivity(), bookClickListener);\n//                recyclerViewBooks.setAdapter(bookAdapter);\n//            }\n//        });\n    //使用模拟数据\n        System.out.println(\"开始使用模拟数据.........\");\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                // 使用模拟数据\n                List<FireBookDetails> mockBooks = generateMockBooks();\n\n                if (mockBooks.isEmpty()) {\n                    showErrorScreen(true, getString(R.string.no_books_available), true);\n                }\n                bookAdapter = new BookAdapter(mockBooks, ListBooksFragment.this.getActivity(), bookClickListener);\n                recyclerViewBooks.setAdapter(bookAdapter);\n            }\n        });\n\n\n    }\n\n\n    @Override\n    public void showSnackBarError(final int message) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                Snackbar.make(recyclerViewBooks, message, Snackbar.LENGTH_LONG).show();\n            }\n        });\n    }\n\n\n    @Override\n    public void showLanguagePopover(final String[] languages, final int selected) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                AlertDialog alertDialogLanguages = new AlertDialog.Builder(getActivity())\n                        .setTitle(getString(R.string.language_selection_heading))\n                        .setSingleChoiceItems(languages, selected, languageClickListener).create();\n                alertDialogLanguages.show();\n            }\n        });\n\n    }\n\n    @Override\n    public void startSearchActivity() {\n        SearchActivity.start(getActivity());\n    }\n\n    @Override\n    public void onSelectedLanguageChanged(final String selectedLanguage) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                textViewCurrentLanguage.setText(selectedLanguage);\n            }\n        });\n    }\n    /**\n     * 模拟数据生成方法\n     * **/\n    private List<FireBookDetails> generateMockBooks() {\n        List<FireBookDetails> mockBooks = new ArrayList<>();\n\n        for (int i = 1; i <= 10; i++) {\n            FireBookDetails book = new FireBookDetails();\n            book.setBookId(\"book_\" + i);\n            book.setBookTitle(\"Book Title \" + i);\n            book.setBookDescription(\"Book Description \" + i);\n            book.setBookCoverPageUrl(\"http://example.com/book_cover_\" + i + \".jpg\");\n            mockBooks.add(book);\n        }\n\n        return mockBooks;\n    }\n\n}\n",
    "contains": [
        "app/src/main/res/menu/menu_main.xml",
        "app/src/main/res/layout/list_item_book.xml"
    ],
    "mock_data": {},
    "source": "bookdash",
    "time": 58.81483793258667,
    "result": {
        "harmony_component_code": "Column() {\n  Image($r('app.media.appbackground'))\n    .width('100%')\n    .height('100%')\n    .objectFit(ImageFit.Cover)\n  Column() {\n    Toolbar()\n      .width('100%')\n      .height('56vp')\n      .backgroundColor(Color.Primary)\n      .title($r('app.string.book_dash'))\n      .scrollable(true)\n    LinearContainer() {\n      Text($r('app.string.language_selection_heading'))\n        .id('text_current_language')\n        .width('auto')\n        .height('auto')\n        .fontFamily('sans-serif')\n        .fontSize('16fp')\n        .textColor(Color.TextPrimaryDark)\n        .drawableRight($r('app.media.ic_arrow_down_24'))\n        .padding({ left: '4vp', top: '4vp', right: $r('app.dimens.book_list_language_bar_right_padding'), bottom: '4vp' })\n    }\n    .width('100%')\n    .height('auto')\n    .backgroundColor($r('app.media.language_selector'))\n    .padding({ left: '4vp', top: '4vp', right: $r('app.dimens.book_list_language_bar_right_padding'), bottom: '4vp' })\n    .scrollable(true)\n  }\n  .width('100%')\n  .height('auto')\n  .backgroundColor(Color.AppBarOverlay)\n  RelativeContainer() {\n    CircularProgressIndicator()\n      .id('activity_loading_books')\n      .width('48vp')\n      .height('48vp')\n      .color(Color.Accent)\n      .maxSweepAngle(300)\n      .minSweepAngle(10)\n      .rotationSpeed(1.0)\n      .strokeWidth('4vp')\n      .sweepSpeed(1.0)\n      .alignRules({\n        center: { anchor: '__container__', align: VerticalAlign.Center },\n        middle: { anchor: '__container__', align: HorizontalAlign.Center }\n      })\n  }\n  LinearContainer() {\n    Image($r('app.media.lb_ic_sad_cloud'))\n      .id('image_view_sad_cloud')\n      .width('150vp')\n      .height('150vp')\n      .objectFit(ImageFit.Contain)\n    Text($r('app.string.error_loading_books'))\n      .id('text_view_error_screen')\n      .width('auto')\n      .height('auto')\n      .margin('8vp')\n    Button($r('app.string.button_retry_text'))\n      .id('button_retry')\n      .width('auto')\n      .height('auto')\n  }\n  .id('linear_layout_error')\n  .width('100%')\n  .height('auto')\n  .visibility(Visibility.Hidden)\n  List() {\n    // 子组件\n  }\n  .id('recycler_view_books')\n  .width('100%')\n  .height('100%')\n  .padding({ left: $r('app.dimens.book_list_padding'), top: $r('app.dimens.book_list_padding'), right: $r('app.dimens.book_list_padding') })\n  .scrollable(true)\n}\n.width('100%')\n.height('100%')"
    },
    "explanation": "1. 使用Column作为根容器，包含所有子组件。\n2. Image组件用于显示背景图片，设置width和height为100%以覆盖整个屏幕，并使用objectFit(ImageFit.Cover)确保图片覆盖整个区域。\n3. Toolbar组件用于显示顶部工具栏，设置width为100%，height为56vp，背景颜色为Color.Primary，并设置标题为$r('app.string.book_dash')。\n4. LinearContainer用于包含语言选择文本，设置宽度为100%，高度为auto，背景颜色为$r('app.media.language_selector')，并设置padding。\n5. RelativeContainer用于包含加载指示器，设置宽度为48vp，高度为48vp，并使用alignRules使其居中。\n6. LinearContainer用于包含错误信息和重试按钮，设置宽度为100%，高度为auto，并设置visibility为Hidden。\n7. List组件用于显示书籍列表，设置宽度为100%，高度为100%，并设置padding。"
}