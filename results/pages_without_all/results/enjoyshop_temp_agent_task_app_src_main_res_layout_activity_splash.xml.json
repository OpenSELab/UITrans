{
    "name": "app/src/main/res/layout/activity_splash.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:background=\"@drawable/splash\"\nandroid:orientation=\"vertical\"\n>\n\n<LinearLayout\nandroid:id=\"@+id/ll_time\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:orientation=\"horizontal\"\nandroid:layout_gravity=\"end\"\nandroid:layout_marginRight=\"10dp\"\nandroid:layout_marginTop=\"10dp\"\nandroid:background=\"@drawable/time_bg\"\nandroid:clickable=\"true\"\n>\n\n<TextView\nandroid:id=\"@+id/tv_time\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:padding=\"5dp\"\nandroid:text=\"3\"\nandroid:textColor=\"@color/white\"\nandroid:textSize=\"15sp\"\n/>\n\n<TextView\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:padding=\"5dp\"\nandroid:text=\"跳转\"\nandroid:textColor=\"@color/white\"\nandroid:textSize=\"15sp\"\n/>\n</LinearLayout>\n</FrameLayout>",
    "java": "package com.enjoyshop.activity;\n\nimport android.content.Intent;\nimport android.view.View;\nimport android.widget.TextView;\n\nimport com.enjoyshop.R;\nimport com.enjoyshop.utils.PreferencesUtils;\n\nimport java.util.Timer;\nimport java.util.TimerTask;\n\nimport butterknife.BindView;\nimport butterknife.OnClick;\n\n/**\n * Created by:高勤\n * Email: 984992087@qq.com\n * Time:  2017/8/22\n * Describe:欢迎界面\n * 无标题栏和全屏必须写在 setContentView前面\n */\n\npublic class SplashActivity extends BaseActivity implements View.OnClickListener {\n\n    @BindView(R.id.tv_time)\n    TextView mTvTime;\n    private int duration = 3;      //倒计时3秒\n    Timer timer = new Timer();\n\n    @Override\n    protected int getContentResourseId() {\n\n        //必须写在这里,不能写在 init 中.先全屏,再加载试图\n//        requestWindowFeature(Window.FEATURE_NO_TITLE);       // 无标题栏\n//        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager\n//                .LayoutParams.FLAG_FULLSCREEN);    //全屏\n\n        return R.layout.activity_splash;\n    }\n\n    @Override\n    protected void init() {\n\n        /**\n         * 第二个参数的意思是，当你调用该方法后，该方法必然会调用 TimerTask 类 TimerTask 类 中的 run()\n         * 方法，这个参数就是这两者之间的差值，转换成汉语的意思就是说，用户调用 schedule() 方法后，\n         * 要等待这么长的时间才可以第一次执行 run() 方法。即推迟多久执行\n         *\n           第三个参数的意思就是，第一次调用之后，从第二次开始每隔多长的时间调用一次 run() 方法。即执行多久多长时间\n         */\n        timer.schedule(task, 1000, 1000);\n    }\n\n    /**\n     * 必须重写base中的setStatusBar方法.要不然用继承父类的沉浸式状态栏\n     */\n    @Override\n    protected void setStatusBar() {\n        //里面什么东西都没有\n    }\n\n    /**\n     * 界面的跳转\n     */\n    private void jumpActivity() {\n\n        boolean isFirst = PreferencesUtils.getBoolean(SplashActivity.this, \"isFirst\", true);\n        //默认为第一次\n\n        if (isFirst) {\n            PreferencesUtils.putBoolean(SplashActivity.this, \"isFirst\", false);\n            startActivity(new Intent(SplashActivity.this, GuideActivity.class));\n        } else {\n            startActivity(new Intent(SplashActivity.this, MainActivity.class));\n        }\n\n        finish();\n    }\n\n    /**\n     * 如果点击了,停止倒计时,直接跳转\n     */\n    @OnClick(R.id.ll_time)\n    public void onClick(View v) {\n        timer.cancel();\n        jumpActivity();\n    }\n\n\n    private TimerTask task = new TimerTask() {\n        @Override\n        public void run() {\n\n            runOnUiThread(new Runnable() {      // UI thread\n                @Override\n                public void run() {\n                    duration--;\n                    mTvTime.setText(duration + \"\");\n                    if (duration < 2) {\n                        timer.cancel();\n                        jumpActivity();\n                    }\n                }\n            });\n\n        }\n    };\n\n}\n",
    "contains": [],
    "source": "enjoyshop",
    "time": 23.040432691574097,
    "result": {
        "harmony_component_code": "Stack() {\n  Image($r('app.media.splash'))\n    .width('100%')\n    .height('100%')\n    .objectFit(ImageFit.Cover)\n  \n  Column() {\n    Row() {\n      Text('3')\n        .width('auto')\n        .height('auto')\n        .padding(5)\n        .fontSize(15)\n        .fontColor(Color.White)\n      Text('跳转')\n        .width('auto')\n        .height('auto')\n        .padding(5)\n        .fontSize(15)\n        .fontColor(Color.White)\n    }\n    .width('auto')\n    .height('auto')\n    .margin({ right: 10, top: 10 })\n    .backgroundColor($r('app.media.time_bg'))\n    .layoutWeight(1)\n  }\n  .align(Alignment.End)\n}\n.width('100%')\n.height('100%')"
    },
    "explanation": "1. 使用Stack组件作为根容器，模拟FrameLayout的布局行为，设置背景图片并覆盖整个屏幕。\n2. 在Stack中嵌套Column组件，模拟LinearLayout的垂直布局，并设置其对齐方式为右对齐。\n3. 在Column中嵌套Row组件，模拟LinearLayout的水平布局，包含两个Text组件，分别显示时间和跳转文本。\n4. 为Text组件设置字体大小、颜色和内边距，确保与原安卓布局一致。\n5. 为Row组件设置背景颜色、外边距和宽度高度自适应，确保与原安卓布局一致。\n6. 为Stack组件设置宽度和高度为100%，确保覆盖整个屏幕。"
}