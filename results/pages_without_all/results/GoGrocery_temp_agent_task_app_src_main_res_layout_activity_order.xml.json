{
    "name": "app/src/main/res/layout/activity_order.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:background=\"#ffffff\"\n    android:orientation=\"vertical\"\n\n    tools:context=\"app.infiniverse.grocery.OrderActivity\">\n\n    <include layout=\"@layout/toolbar\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:layout_marginTop=\"35dp\"\n        android:visibility=\"gone\" />\n\n    <android.support.v7.widget.RecyclerView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:id=\"@+id/recyclerview_order_details\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"3dp\" />\n\n    <android.support.constraint.ConstraintLayout\n        android:id=\"@+id/ll_empty\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"10dp\"\n        android:background=\"#ffffff\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n        <ImageView\n            android:id=\"@+id/imageView2\"\n            android:layout_width=\"169dp\"\n            android:layout_height=\"153dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginEnd=\"8dp\"\n            android:layout_marginStart=\"8dp\"\n            android:layout_marginTop=\"8dp\"\n            android:src=\"@drawable/ic_message_black\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintVertical_bias=\"0.26999998\" />\n\n        <TextView\n            android:id=\"@+id/textView\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginEnd=\"8dp\"\n            android:layout_marginStart=\"8dp\"\n            android:text=\"No Orders Yet\"\n            android:textColor=\"@color/blue_grey\"\n            android:textSize=\"20sp\"\n            app:layout_constraintBottom_toBottomOf=\"@+id/imageView2\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/imageView2\" />\n\n    </android.support.constraint.ConstraintLayout>\n\n</LinearLayout>",
    "java": "package app.infiniverse.grocery;\n\nimport android.app.AlertDialog;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.SharedPreferences;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.support.constraint.ConstraintLayout;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.Toolbar;\nimport android.view.View;\nimport android.widget.ProgressBar;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.net.URLEncoder;\n\npublic class OrderActivity extends AppCompatActivity {\n\n\n    public static final String PREFS = \"PREFS\";\n    SharedPreferences sp;\n    ConstraintLayout cl;\n    private ProgressBar mProgressBar;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_order);\n        Toolbar toolbar = findViewById(R.id.mytoolbar);\n        setSupportActionBar(toolbar);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        getSupportActionBar().setTitle(\"Order History\");\n        mProgressBar = findViewById(R.id.progressBar);\n\n\n        cl = findViewById(R.id.ll_empty);\n        mProgressBar.setVisibility(View.VISIBLE);\n\n\n        sp = getSharedPreferences(PREFS, Context.MODE_PRIVATE);\n\n        class RecentProducts extends AsyncTask<String, Void, String> {\n\n            @Override\n            protected String doInBackground(String... params) {\n                String orderUrl = getResources().getString(R.string.base_url) + \"orders/\";\n\n                try {\n                    URL url = new URL(orderUrl);\n                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\n                    httpURLConnection.setRequestMethod(\"POST\");\n                    httpURLConnection.setDoInput(true);\n                    httpURLConnection.setDoOutput(true);\n                    OutputStream outputStream = httpURLConnection.getOutputStream();\n                    BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, \"UTF-8\"));\n                    String post_Data = URLEncoder.encode(\"login_id\", \"UTF-8\") + \"=\" + URLEncoder.encode(params[0], \"UTF-8\");\n\n                    bufferedWriter.write(post_Data);\n                    bufferedWriter.flush();\n                    bufferedWriter.close();\n                    outputStream.close();\n                    InputStream inputStream = httpURLConnection.getInputStream();\n                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));\n                    String result = \"\", line = \"\";\n                    while ((line = bufferedReader.readLine()) != null) {\n                        result += line;\n                    }\n                    return result;\n                } catch (Exception e) {\n                    return e.toString();\n                }\n            }\n\n            @Override\n            protected void onPostExecute(String s) {\n                super.onPostExecute(s);\n                AlertDialog.Builder builder = new AlertDialog.Builder(OrderActivity.this);\n                builder.setTitle(\"Received Message\");\n\n                try {\n\n                    JSONArray orderArray = new JSONArray(s);\n\n                    String[] order_ids = new String[orderArray.length()];\n                    String[] order_savings = new String[orderArray.length()];\n                    String[] order_payableamts = new String[orderArray.length()];\n                    String[] order_status = new String[orderArray.length()];\n                    String[] order_dts = new String[orderArray.length()];\n\n\n                    JSONObject json_data = new JSONObject();\n                    for (int i = 0; i < orderArray.length(); i++) {\n                        json_data = orderArray.getJSONObject(i);\n                        order_ids[i] = json_data.getString(\"id\");\n                        order_savings[i] = json_data.getString(\"savings\");\n                        order_payableamts[i] = json_data.getString(\"payableamt\");\n                        order_status[i] = json_data.getString(\"status\");\n                        order_dts[i] = json_data.getString(\"order_dt\");\n\n                    }\n\n                    mProgressBar.setVisibility(View.GONE);\n                    if (orderArray.length() == 0) {\n\n                        cl.setVisibility(View.VISIBLE);\n                    } else {\n                        RecyclerView order_recyclerview = findViewById(R.id.recyclerview_order_details);\n                        order_recyclerview.setNestedScrollingEnabled(false);\n                        order_recyclerview.setLayoutManager(new LinearLayoutManager(OrderActivity.this));\n                        order_recyclerview.setAdapter(new Customer_Order_Adapter(order_ids, order_savings, order_payableamts, order_status, order_dts, OrderActivity.this));\n                    }\n                } catch (JSONException e) {\n                    builder.setCancelable(true);\n                    builder.setTitle(\"No Internet Connection\");\n//                    builder.setMessage(s);\n                    builder.setNeutralButton(\"OK\", new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialogInterface, int i) {\n\n                        }\n                    });\n                    builder.show();\n                }\n\n            }\n\n            @Override\n            protected void onPreExecute() {\n                super.onPreExecute();\n            }\n\n\n        }\n        RecentProducts recentProducts = new RecentProducts();\n        recentProducts.execute(sp.getString(\"loginid\", null));\n\n\n    }\n}\n",
    "contains": [
        "app/src/main/res/layout/list_orders.xml",
        "app/src/main/res/layout/toolbar.xml"
    ],
    "mock_data": {},
    "source": "GoGrocery",
    "time": 41.37464737892151,
    "result": {
        "harmony_component_code": "Column() {\n  // Include toolbar layout\n  // Assuming toolbar is defined in a separate file and included here\n  \n  ProgressBar()\n    .id('progressBar')\n    .width('auto')\n    .height('auto')\n    .align(Alignment.Center)\n    .marginTop('35vp')\n    .visibility(Visibility.Hidden)\n  \n  List() {\n    // Assuming List is used to replace RecyclerView\n    // List items will be defined here\n  }\n  .width('100%')\n  .height('auto')\n  .margin({ bottom: '3vp' })\n  \n  Stack() {\n    Image($r('app.media.ic_message_black'))\n      .id('imageView2')\n      .width('169vp')\n      .height('153vp')\n      .margin({ top: '8vp', bottom: '8vp', start: '8vp', end: '8vp' })\n      .objectFit(ImageFit.Contain)\n      .alignRules({\n        top: { anchor: '__container__', align: VerticalAlign.Top },\n        bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n        left: { anchor: '__container__', align: HorizontalAlign.Start },\n        right: { anchor: '__container__', align: HorizontalAlign.End }\n      })\n    \n    Text('No Orders Yet')\n      .id('textView')\n      .width('auto')\n      .height('auto')\n      .margin({ top: '8vp', bottom: '8vp', start: '8vp', end: '8vp' })\n      .fontSize('20fp')\n      .fontColor(Color.BlueGrey)\n      .alignRules({\n        top: { anchor: 'imageView2', align: VerticalAlign.Bottom },\n        bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n        left: { anchor: '__container__', align: HorizontalAlign.Start },\n        right: { anchor: '__container__', align: HorizontalAlign.End }\n      })\n  }\n  .id('ll_empty')\n  .width('100%')\n  .height('100%')\n  .margin({ top: '10vp', start: '8vp', end: '8vp' })\n  .backgroundColor(Color.White)\n  .visibility(Visibility.Hidden)\n}\n.width('100%')\n.height('100%')\n.backgroundColor(Color.White)"
    },
    "explanation": "1. The LinearLayout is translated to Column, maintaining the vertical orientation.\n2. The include tag for toolbar is assumed to be included from a separate file, hence not directly translated here.\n3. ProgressBar is translated directly with its properties like width, height, alignment, marginTop, and visibility.\n4. RecyclerView is translated to List, assuming it will be populated with items in the actual implementation.\n5. ConstraintLayout is translated to Stack for the layout constraints to be managed.\n6. ImageView and TextView are translated with their respective properties, including width, height, margins, font size, color, and alignment rules to mimic the original constraints.\n7. All components are given appropriate IDs and visibility settings as per the original XML."
}