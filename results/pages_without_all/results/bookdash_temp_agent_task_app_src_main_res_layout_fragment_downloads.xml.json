{
    "name": "app/src/main/res/layout/fragment_downloads.xml",
    "content": "<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                xmlns:tools=\"http://schemas.android.com/tools\"\n\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:fitsSystemWindows=\"true\"\n                tools:context=\".presentation.main.MainActivity\">\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/appbackground\"/>\n    <androidx.coordinatorlayout.widget.CoordinatorLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/recycler_view_list_downloads\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:clipToPadding=\"false\"\n            android:paddingTop=\"8dp\"\n            app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n            tools:listitem=\"@layout/list_item_download\">\n\n        </androidx.recyclerview.widget.RecyclerView>\n\n        <com.google.android.material.appbar.AppBarLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <androidx.appcompat.widget.Toolbar\n                android:id=\"@+id/toolbar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"?attr/colorPrimary\"\n                android:minHeight=\"?attr/actionBarSize\"\n                android:title=\"@string/book_dash\"\n                app:layout_scrollFlags=\"scroll|enterAlways\"\n                app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n                app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"/>\n\n\n        </com.google.android.material.appbar.AppBarLayout>\n    </androidx.coordinatorlayout.widget.CoordinatorLayout>\n\n    <fr.castorflex.android.circularprogressbar.CircularProgressBar\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/fragment_loading_downloads\"\n        android:layout_width=\"48dp\"\n        android:layout_height=\"48dp\"\n        android:layout_alignParentBottom=\"false\"\n        android:layout_centerInParent=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginTop=\"16dp\"\n        android:indeterminate=\"true\"\n        app:cpb_color=\"@color/colorAccent\"\n        app:cpb_max_sweep_angle=\"300\"\n        app:cpb_min_sweep_angle=\"10\"\n        app:cpb_rotation_speed=\"1.0\"\n        app:cpb_stroke_width=\"4dp\"\n        app:cpb_sweep_speed=\"1.0\"/>\n\n    <LinearLayout\n        android:id=\"@+id/linear_layout_error\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:orientation=\"vertical\"\n        tools:visibility=\"visible\"\n        android:visibility=\"gone\"\n        android:layout_marginLeft=\"16dp\"\n        android:layout_marginTop=\"16dp\">\n\n\n\n        <TextView\n            android:id=\"@+id/text_view_error_screen\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:layout_margin=\"8dp\"\n            android:textSize=\"16sp\"\n            android:background=\"@drawable/textbox\"\n            android:text=\"@string/error_loading_books\"\n            android:gravity=\"center_vertical|center_horizontal\"/>\n        <ImageView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"150dp\"\n            android:layout_gravity=\"center\"\n            android:src=\"@drawable/owl_reading_nobooks\"/>\n\n        <Button\n            android:id=\"@+id/button_retry\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"@string/button_retry_text\"/>\n    </LinearLayout>\n</RelativeLayout>",
    "java": "package org.bookdash.android.presentation.downloads;\n\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.android.material.snackbar.Snackbar;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.domain.model.firebase.FireBookDetails;\nimport org.bookdash.android.presentation.bookinfo.BookInfoActivity;\nimport org.bookdash.android.presentation.main.NavDrawerInterface;\n\nimport java.util.List;\n\nimport fr.castorflex.android.circularprogressbar.CircularProgressBar;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.schedulers.Schedulers;\n\n\npublic class DownloadsFragment extends Fragment implements DownloadsContract.View {\n\n    private RecyclerView listDownloadsRecyclerView;\n    private DownloadsContract.Presenter downloadsPresenter;\n    private DownloadsAdapter downloadsAdapter;\n    private LinearLayout linearLayoutErrorScreen;\n    private Button buttonRetry;\n    private TextView textViewErrorMessage;\n    private CircularProgressBar circularProgressBar;\n    private NavDrawerInterface navDrawerInterface;\n\n\n    public static DownloadsFragment newInstance() {\n        return new DownloadsFragment();\n    }\n\n    @Override\n    public void showDownloadedBooks(List<FireBookDetails> books) {\n        downloadsAdapter.setBooks(books);\n        downloadsAdapter.notifyDataSetChanged();\n        listDownloadsRecyclerView.setVisibility(View.VISIBLE);\n    }\n\n    @Override\n    public void showLoading(final boolean visible) {\n        circularProgressBar.setVisibility(visible ? View.VISIBLE : View.GONE);\n        listDownloadsRecyclerView.setVisibility(visible ? View.GONE : View.VISIBLE);\n    }\n\n    @Override\n    public void showErrorScreen(boolean show, String errorMessage, boolean showRetryButton) {\n        if (show) {\n            linearLayoutErrorScreen.setVisibility(View.VISIBLE);\n        } else {\n            linearLayoutErrorScreen.setVisibility(View.GONE);\n        }\n        buttonRetry.setVisibility(showRetryButton ? View.VISIBLE : View.GONE);\n        textViewErrorMessage.setText(errorMessage);\n\n    }\n\n    @Override\n    public void showSnackBarError(final int message) {\n        Snackbar.make(listDownloadsRecyclerView, message, Snackbar.LENGTH_LONG).show();\n    }\n\n    @Override\n    public void showSnackBarError(final String message) {\n        Snackbar.make(listDownloadsRecyclerView, message, Snackbar.LENGTH_LONG).show();\n\n\n    }\n\n    @Override\n    public void showNoBooksDownloadedMessage() {\n        showErrorScreen(true, getString(R.string.no_books_downloaded), false);\n        listDownloadsRecyclerView.setVisibility(View.GONE);\n\n\n    }\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof NavDrawerInterface) {\n            navDrawerInterface = (NavDrawerInterface) context;\n\n        }\n    }\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,\n                             @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_downloads, container, false);\n    }\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        listDownloadsRecyclerView = (RecyclerView) view.findViewById(R.id.recycler_view_list_downloads);\n        downloadsPresenter = new DownloadsPresenter(Injection.provideBookService(), Injection.provideDownloadService(),\n                Injection.provideAnalytics(), Schedulers.io(), AndroidSchedulers.mainThread(),\n                Schedulers.computation());\n        downloadsPresenter.attachView(this);\n        downloadsAdapter = new DownloadsAdapter(null, getActivity(), new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                DownloadsViewHolder downloadsViewHolder = (DownloadsViewHolder) v.getTag();\n                showDeleteDialog(downloadsViewHolder.book);\n\n            }\n        }, new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                DownloadsViewHolder downloadsViewHolder = (DownloadsViewHolder) v.getTag();\n                showBookDetails(downloadsViewHolder.book);\n            }\n        });\n        listDownloadsRecyclerView\n                .setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false));\n        listDownloadsRecyclerView.setAdapter(downloadsAdapter);\n\n        linearLayoutErrorScreen =  view.findViewById(R.id.linear_layout_error);\n        buttonRetry =  view.findViewById(R.id.button_retry);\n        textViewErrorMessage =  view.findViewById(R.id.text_view_error_screen);\n        circularProgressBar =  view.findViewById(R.id.fragment_loading_downloads);\n        Toolbar toolbar =  view.findViewById(R.id.toolbar);\n        if (navDrawerInterface != null) {\n            navDrawerInterface.setToolbar(toolbar);\n\n        }\n\n        final ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();\n\n        if (actionBar != null) {\n            actionBar.setHomeAsUpIndicator(R.drawable.ic_menu_24dp);\n            actionBar.setDisplayHomeAsUpEnabled(true);\n            actionBar.setTitle(getString(R.string.fragment_title_downloads));\n        }\n        downloadsPresenter.loadListDownloads();\n\n        setHasOptionsMenu(false);\n    }\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        downloadsPresenter.detachView();\n\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        navDrawerInterface = null;\n    }\n\n    @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n\n            case android.R.id.home:\n                if (navDrawerInterface != null) {\n                    navDrawerInterface.openNavDrawer();\n                }\n                return true;\n\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    private void showDeleteDialog(final FireBookDetails bookToDelete) {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(), R.style.AppCompatAlertDialogStyle);\n        builder.setTitle(getString(R.string.delete_book_confirmation));\n        builder.setMessage(getString(R.string.downloads_are_you_sure, bookToDelete.getBookTitle()));\n        builder.setPositiveButton(getString(R.string.delete_ok), new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                downloadsPresenter.deleteDownload(bookToDelete);\n            }\n        });\n        builder.setNegativeButton(getString(R.string.delete_cancel), null);\n        builder.show();\n    }\n\n    private void showBookDetails(FireBookDetails bookDetail) {\n        Intent intent = new Intent(getActivity(), BookInfoActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        intent.putExtra(BookInfoActivity.BOOK_PARCEL, bookDetail);\n        startActivity(intent);\n    }\n\n\n}\n",
    "contains": [],
    "mock_data": {},
    "source": "bookdash",
    "time": 47.40398406982422,
    "result": {
        "harmony_component_code": "Column() {\n  Image($r('app.media.appbackground'))\n    .width('100%')\n    .height('100%')\n    .objectFit(ImageFit.Cover)\n  Stack() {\n    Column() {\n      List() {\n        // 子组件\n      }\n      .width('100%')\n      .height('100%')\n      .padding({ top: '8vp' })\n    }\n    .width('100%')\n    .height('100%')\n    Column() {\n      Toolbar()\n        .width('100%')\n        .height('wrap_content')\n        .backgroundColor(Color.Primary)\n        .minHeight('?attr/actionBarSize')\n        .title($r('app.string.book_dash'))\n    }\n    .width('100%')\n    .height('wrap_content')\n  }\n  Stack() {\n    CircularProgressBar()\n      .width('48vp')\n      .height('48vp')\n      .align(Alignment.Center)\n      .margin({ top: '16vp', bottom: '8vp' })\n      .indeterminate(true)\n      .color($r('app.color.colorAccent'))\n      .maxSweepAngle(300)\n      .minSweepAngle(10)\n      .rotationSpeed(1.0)\n      .strokeWidth('4vp')\n      .sweepSpeed(1.0)\n  }\n  Column() {\n    Text($r('app.string.error_loading_books'))\n      .width('wrap_content')\n      .height('wrap_content')\n      .fontSize('16fp')\n      .backgroundColor($r('app.media.textbox'))\n      .textAlign(TextAlign.Center)\n      .margin('8vp')\n    Image($r('app.media.owl_reading_nobooks'))\n      .width('wrap_content')\n      .height('150vp')\n      .align(Alignment.Center)\n    Button($r('app.string.button_retry_text'))\n      .width('wrap_content')\n      .height('wrap_content')\n      .align(Alignment.Center)\n  }\n  .width('100%')\n  .height('wrap_content')\n  .align(Alignment.Center)\n  .margin({ left: '16vp', top: '16vp' })\n  .visibility(Visibility.Hidden)\n}\n.width('100%')\n.height('100%')"
    },
    "explanation": "1. 使用Column作为根容器，宽度高度设置为100%以匹配父容器。\n2. Image组件用于显示背景图片，宽度高度设置为100%，并使用objectFit(ImageFit.Cover)来确保图片覆盖整个区域。\n3. Stack组件用于组合多个子组件，实现复杂的布局结构。\n4. List组件用于显示下载列表，宽度高度设置为100%，并添加顶部内边距。\n5. Toolbar组件用于显示顶部工具栏，宽度设置为100%，高度自适应，背景颜色和最小高度根据资源文件设置。\n6. CircularProgressBar组件用于显示加载进度，宽度高度设置为48vp，居中显示，并设置相关属性。\n7. Column组件用于显示错误信息，宽度设置为100%，高度自适应，居中显示，并设置相关属性。\n8. Text组件用于显示错误文本，宽度高度自适应，字体大小和背景颜色根据资源文件设置，文本居中显示。\n9. Image组件用于显示错误图片，宽度自适应，高度设置为150vp，居中显示。\n10. Button组件用于显示重试按钮，宽度高度自适应，居中显示。"
}