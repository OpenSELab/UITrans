{
    "name": "app\\src\\main\\res\\layout\\activity_about.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\nxmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nxmlns:tools=\"http://schemas.android.com/tools\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\ntools:context=\".about.AboutActivity\">\n\n<com.google.android.material.appbar.AppBarLayout\nandroid:id=\"@+id/appBarLayout\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\napp:layout_constraintBottom_toTopOf=\"@+id/tabLayout\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toTopOf=\"parent\">\n\n<include\nandroid:id=\"@+id/toolbar\"\nlayout=\"@layout/toolbar\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"/>\n\n</com.google.android.material.appbar.AppBarLayout>\n\n<com.google.android.material.tabs.TabLayout\nandroid:id=\"@+id/tabLayout\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\napp:layout_constraintBottom_toTopOf=\"@+id/pager\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toBottomOf=\"@+id/appBarLayout\"\napp:tabMode=\"fixed\"/>\n\n<androidx.viewpager.widget.ViewPager\nandroid:id=\"@+id/pager\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"0dp\"\napp:layout_constraintBottom_toBottomOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"@+id/tabLayout\"\napp:layout_constraintTop_toBottomOf=\"@+id/tabLayout\"/>\n\n</androidx.constraintlayout.widget.ConstraintLayout>",
    "java": "package de.grobox.transportr.about\n\nimport android.os.Bundle\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.FragmentManager\nimport androidx.fragment.app.FragmentPagerAdapter\nimport com.mikepenz.aboutlibraries.LibsBuilder\nimport de.grobox.transportr.R\nimport de.grobox.transportr.TransportrActivity\nimport kotlinx.android.synthetic.main.activity_about.*\n\nclass AboutActivity : TransportrActivity() {\n\ncompanion object {\n@JvmField\nval TAG : String = AboutActivity::class.java.simpleName\n}\n\npublic override fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nsetContentView(R.layout.activity_about)\nsetUpCustomToolbar(false)\n\npager.adapter = AboutPagerAdapter(supportFragmentManager)\ntabLayout.setupWithViewPager(pager)\n}\n\nprivate inner class AboutPagerAdapter internal constructor(fm: FragmentManager) : FragmentPagerAdapter(fm) {\n\noverride fun getItem(i: Int): Fragment {\nreturn when (i) {\n0 -> AboutFragment()\n1 -> LibsBuilder()\n// Pass the fields of your application to the lib so it can find all external lib information\n.withFields(R.string::class.java.fields)\n// get the fragment\n.supportFragment()\nelse -> throw IllegalArgumentException()\n}\n}\n\noverride fun getCount(): Int {\nreturn 2\n}\n\noverride fun getPageTitle(i: Int): CharSequence? {\nreturn when (i) {\n0 -> getString(R.string.tab_about)\n1 -> getString(R.string.tab_libraries)\nelse -> throw IllegalArgumentException()\n}\n}\n\n}\n\n} ",
    "contains": [
        "app\\src\\main\\res\\layout\\toolbar.xml",
        "app\\src\\main\\res\\layout\\fragment_about.xml"
    ],
    "mock_data": {},
    "source": "Transportr",
    "time": 31.06114363670349,
    "result": {
        "harmony_component_code": "RelativeContainer() {\n  Column() {\n    AppBarLayout() {\n      Toolbar()\n        .id('toolbar')\n        .width('100%')\n        .height('auto')\n    }\n    .id('appBarLayout')\n    .width('100%')\n    .height('auto')\n    .alignRules({\n      top: { anchor: '__container__', align: VerticalAlign.Top },\n      bottom: { anchor: 'tabLayout', align: VerticalAlign.Top },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End }\n    })\n\n    TabLayout() {\n      // 子组件\n    }\n    .id('tabLayout')\n    .width('100%')\n    .height('auto')\n    .alignRules({\n      top: { anchor: 'appBarLayout', align: VerticalAlign.Bottom },\n      bottom: { anchor: 'pager', align: VerticalAlign.Top },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End }\n    })\n\n    ViewPager() {\n      // 子组件\n    }\n    .id('pager')\n    .width('auto')\n    .height('100%')\n    .alignRules({\n      top: { anchor: 'tabLayout', align: VerticalAlign.Bottom },\n      bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n      left: { anchor: 'tabLayout', align: HorizontalAlign.Start }\n    })\n  }\n  .width('100%')\n  .height('100%')\n}"
    },
    "explanation": "1. 使用RelativeContainer作为根布局，以实现类似ConstraintLayout的约束布局效果。\n2. AppBarLayout和TabLayout通过alignRules实现与父容器和兄弟组件的相对定位。\n3. ViewPager的宽度设置为'auto'以自适应内容，高度设置为'100%'以填充父容器。\n4. 所有组件的id属性都进行了转译，以确保在鸿蒙应用中可以正确引用。\n5. 由于鸿蒙ArkUI中没有直接对应的AppBarLayout、TabLayout和ViewPager组件，因此使用了Column布局来模拟这些组件的层级关系，并通过alignRules来实现约束布局的效果。"
}