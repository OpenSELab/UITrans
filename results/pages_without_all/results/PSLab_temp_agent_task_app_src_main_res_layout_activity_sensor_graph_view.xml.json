{
    "name": "app\\src\\main\\res\\layout\\activity_sensor_graph_view.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nxmlns:tools=\"http://schemas.android.com/tools\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:id=\"@+id/data_view_cl\">\n\n<LinearLayout\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:background=\"@color/default_grey\"\nandroid:orientation=\"vertical\">\n\n<com.google.android.material.appbar.AppBarLayout\nandroid:id=\"@+id/top_app_bar_layout\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:theme=\"@style/AppTheme.AppBarOverlay\">\n\n<androidx.appcompat.widget.Toolbar\nandroid:id=\"@+id/toolbar\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"?attr/actionBarSize\"\nandroid:background=\"?attr/colorPrimary\"\napp:popupTheme=\"@style/AppTheme.PopupOverlay\" />\n</com.google.android.material.appbar.AppBarLayout>\n\n\n<androidx.cardview.widget.CardView\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"@dimen/lux_chart_height\"\nandroid:layout_marginBottom=\"@dimen/view_data_graph_bottom\"\nandroid:layout_marginEnd=\"@dimen/card_margin\"\nandroid:layout_marginLeft=\"@dimen/card_margin\"\nandroid:layout_marginRight=\"@dimen/card_margin\"\nandroid:layout_marginStart=\"@dimen/card_margin\"\nandroid:layout_marginTop=\"@dimen/view_data_graph_bottom\">\n\n<RelativeLayout\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\">\n\n<RelativeLayout\nandroid:id=\"@+id/chart_xaxis_layout\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_alignParentStart=\"true\"\nandroid:layout_alignParentTop=\"true\"\nandroid:background=\"@color/black\"\nandroid:orientation=\"vertical\">\n\n<TextView\nandroid:id=\"@+id/tv_graph_label_xaxis_hmc\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_alignParentTop=\"true\"\nandroid:layout_centerHorizontal=\"true\"\nandroid:layout_gravity=\"center_vertical|center_horizontal|center\"\nandroid:foregroundGravity=\"center_vertical\"\nandroid:gravity=\"center_vertical|center_horizontal|center\"\nandroid:text=\"@string/time\"\nandroid:textColor=\"#ffff\"\nandroid:textSize=\"@dimen/lux_chart_axis_text\"\nandroid:textStyle=\"normal|bold\"\ntools:layout_editor_absoluteX=\"288dp\"\ntools:layout_editor_absoluteY=\"0dp\" />\n\n<TextView\nandroid:id=\"@+id/tv_unit_xaxis_hmc\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_alignParentTop=\"true\"\nandroid:layout_toEndOf=\"@+id/tv_graph_label_xaxis_hmc\"\nandroid:layout_toRightOf=\"@+id/tv_graph_label_xaxis_hmc\"\nandroid:text=\"@string/seconds\"\nandroid:textColor=\"#ffff\"\nandroid:textSize=\"@dimen/lux_chart_axis_text\"\nandroid:textStyle=\"normal|bold\"\napp:layout_constraintLeft_toRightOf=\"@+id/tv_graph_label_xaxis_hmc\"\ntools:layout_editor_absoluteY=\"0dp\" />\n\n</RelativeLayout>\n\n<androidx.constraintlayout.widget.ConstraintLayout\nandroid:id=\"@+id/chart_yaxis_layout_hmc\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"match_parent\"\nandroid:layout_alignParentLeft=\"true\"\nandroid:layout_alignParentStart=\"true\"\nandroid:layout_alignParentTop=\"true\"\nandroid:background=\"#000\"\nandroid:foregroundGravity=\"center_vertical\"\nandroid:gravity=\"center_vertical\"\nandroid:orientation=\"vertical\">\n\n<TextView\nandroid:id=\"@+id/tv_label_left_yaxis_hmc\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"@dimen/tv_lux_height\"\nandroid:layout_gravity=\"center\"\nandroid:foregroundGravity=\"center_horizontal\"\nandroid:gravity=\"top|center_horizontal\"\nandroid:includeFontPadding=\"false\"\nandroid:rotation=\"-90\"\nandroid:text=\"@string/lux\"\nandroid:textColor=\"#ffff\"\nandroid:textSize=\"@dimen/lux_chart_axis_text\"\nandroid:textStyle=\"normal|bold\"\napp:layout_constraintBottom_toBottomOf=\"parent\"\napp:layout_constraintLeft_toLeftOf=\"parent\"\napp:layout_constraintRight_toRightOf=\"parent\"\napp:layout_constraintTop_toTopOf=\"parent\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n\n<com.github.mikephil.charting.charts.LineChart\nandroid:id=\"@+id/chart_lux_meter\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:layout_below=\"@+id/chart_xaxis_layout\"\nandroid:layout_toEndOf=\"@+id/chart_yaxis_layout_hmc\"\nandroid:layout_toRightOf=\"@+id/chart_yaxis_layout_hmc\"\nandroid:background=\"#000\" />\n</RelativeLayout>\n\n</androidx.cardview.widget.CardView>\n\n<androidx.cardview.widget.CardView\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginBottom=\"@dimen/view_data_info_bottom\"\nandroid:layout_marginEnd=\"@dimen/card_margin\"\nandroid:layout_marginLeft=\"@dimen/card_margin\"\nandroid:layout_marginRight=\"@dimen/card_margin\"\nandroid:layout_marginStart=\"@dimen/card_margin\">\n\n<LinearLayout\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:layout_margin=\"@dimen/view_data_ll_margin\"\nandroid:orientation=\"vertical\">\n\n<RelativeLayout\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginBottom=\"@dimen/view_data_rl_top\"\nandroid:layout_marginLeft=\"@dimen/view_data_rl_left\"\nandroid:layout_marginStart=\"@dimen/view_data_rl_left\"\nandroid:layout_marginTop=\"@dimen/view_data_rl_top\">\n\n<TextView\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_alignParentLeft=\"true\"\nandroid:layout_alignParentStart=\"true\"\nandroid:text=\"@string/date_of_recording\"\nandroid:textColor=\"@color/colorPrimary\" />\n\n<TextView\nandroid:id=\"@+id/date_rec\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_alignParentEnd=\"true\"\nandroid:layout_alignParentRight=\"true\"\nandroid:layout_marginEnd=\"@dimen/view_data_rl_right\"\nandroid:layout_marginRight=\"@dimen/view_data_rl_right\" />\n</RelativeLayout>\n\n<View\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"@dimen/separator_width\"\nandroid:layout_marginLeft=\"@dimen/view_data_sep_margin\"\nandroid:layout_marginRight=\"@dimen/view_data_sep_margin\"\nandroid:alpha=\"0.4\"\nandroid:background=\"@color/colorPrimary\" />\n\n<RelativeLayout\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginBottom=\"@dimen/view_data_rl_top\"\nandroid:layout_marginLeft=\"@dimen/view_data_rl_left\"\nandroid:layout_marginStart=\"@dimen/view_data_rl_left\"\nandroid:layout_marginTop=\"@dimen/view_data_rl_top\">\n\n<TextView\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_alignParentLeft=\"true\"\nandroid:layout_alignParentStart=\"true\"\nandroid:text=\"@string/time_of_recording\"\nandroid:textColor=\"@color/colorPrimary\" />\n\n<TextView\nandroid:id=\"@+id/time_rec\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_alignParentEnd=\"true\"\nandroid:layout_alignParentRight=\"true\"\nandroid:layout_marginEnd=\"@dimen/view_data_rl_right\"\nandroid:layout_marginRight=\"@dimen/view_data_rl_right\" />\n</RelativeLayout>\n</LinearLayout>\n</androidx.cardview.widget.CardView>\n\n\n<RelativeLayout\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:layout_marginEnd=\"@dimen/card_margin\"\nandroid:layout_marginLeft=\"@dimen/card_margin\"\nandroid:layout_marginRight=\"@dimen/card_margin\"\nandroid:layout_marginStart=\"@dimen/card_margin\"\nandroid:layout_marginBottom=\"@dimen/view_data_map_rl_margin\">\n\n<org.osmdroid.views.MapView\nandroid:id=\"@+id/osmmap\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\" />\n\n<LinearLayout\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"@dimen/view_data_loc_height\"\nandroid:background=\"@color/black\"\nandroid:alpha=\"0.6\"\nandroid:gravity=\"center_vertical\"\nandroid:paddingLeft=\"@dimen/view_data_loc_padding\"\nandroid:paddingStart=\"@dimen/view_data_loc_padding\">\n\n<TextView\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:text=\"@string/location\"\nandroid:textColor=\"@color/white\" />\n\n<TextView\nandroid:id=\"@+id/loc_lat\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_gravity=\"center_vertical\"\nandroid:textColor=\"@color/white\"\nandroid:layout_marginLeft=\"@dimen/view_data_loc_middle\"\nandroid:layout_marginStart=\"@dimen/view_data_loc_middle\"\nandroid:maxLines=\"1\"\nandroid:maxLength=\"9\"\nandroid:ellipsize=\"end\" />\n\n<TextView\nandroid:id=\"@+id/loc_long\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_gravity=\"center_vertical\"\nandroid:textColor=\"@color/white\"\nandroid:layout_marginLeft=\"@dimen/view_data_loc_padding\"\nandroid:layout_marginStart=\"@dimen/view_data_loc_padding\"\nandroid:maxLines=\"1\"\nandroid:maxLength=\"9\"\nandroid:ellipsize=\"end\" />\n</LinearLayout>\n\n\n</RelativeLayout>\n\n\n</LinearLayout>\n</androidx.coordinatorlayout.widget.CoordinatorLayout>\n",
    "java": "package io.pslab.activity;\n\nimport android.content.Intent;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.ListView;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.widget.Toolbar;\n\nimport com.google.android.material.snackbar.Snackbar;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport io.pslab.R;\nimport io.pslab.activity.guide.GuideActivity;\nimport io.pslab.communication.ScienceLab;\nimport io.pslab.communication.peripherals.I2C;\nimport io.pslab.others.CustomSnackBar;\nimport io.pslab.others.ScienceLabCommon;\nimport io.pslab.sensors.SensorADS1115;\nimport io.pslab.sensors.SensorAPDS9960;\nimport io.pslab.sensors.SensorBMP180;\nimport io.pslab.sensors.SensorCCS811;\nimport io.pslab.sensors.SensorHMC5883L;\nimport io.pslab.sensors.SensorMLX90614;\nimport io.pslab.sensors.SensorMPU6050;\nimport io.pslab.sensors.SensorMPU925X;\nimport io.pslab.sensors.SensorSHT21;\nimport io.pslab.sensors.SensorTSL2561;\nimport io.pslab.sensors.SensorVL53L0X;\n\n/**\n* Created by asitava on 18/6/17.\n*/\n\npublic class SensorActivity extends GuideActivity {\n\nprivate I2C i2c;\nprivate ScienceLab scienceLab;\nprivate final Map<Integer, String> sensorAddr = new LinkedHashMap<>();\nprivate final List<String> dataAddress = new ArrayList<>();\nprivate final List<String> dataName = new ArrayList<>();\nprivate ArrayAdapter<String> adapter;\nprivate ListView lvSensor;\nprivate TextView tvSensorScan;\nprivate Button buttonSensorAutoScan;\n\npublic SensorActivity() {\nsuper(R.layout.sensor_main);\n}\n\n@Override\nprotected void onCreate(@Nullable Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nscienceLab = ScienceLabCommon.scienceLab;\n\nToolbar toolbar = findViewById(R.id.toolbar);\nsetSupportActionBar(toolbar);\nfinal ActionBar actionBar = getSupportActionBar();\nif (actionBar != null) {\nactionBar.setTitle(R.string.sensors);\nactionBar.setDisplayHomeAsUpEnabled(true);\n}\n\ni2c = scienceLab.i2c;\nsensorAddr.put(0x48, \"ADS1115\");\nsensorAddr.put(0x77, \"BMP180\");\nsensorAddr.put(0x5A, \"MLX90614\");\nsensorAddr.put(0x1E, \"HMC5883L\");\nsensorAddr.put(0x68, \"MPU6050\");\nsensorAddr.put(0x40, \"SHT21\");\nsensorAddr.put(0x39, \"TSL2561\");\nsensorAddr.put(0x69, \"MPU925x\");\nsensorAddr.put(0x29, \"VL53L0X\");\nsensorAddr.put(0x5A, \"CCS811\");\nsensorAddr.put(0x39, \"APDS9960\");\n\nadapter = new ArrayAdapter<>(getApplication(), R.layout.sensor_list_item, R.id.tv_sensor_list_item, dataName);\n\nbuttonSensorAutoScan = findViewById(R.id.button_sensor_autoscan);\ntvSensorScan = findViewById(R.id.tv_sensor_scan);\ntvSensorScan.setText(getResources().getString(R.string.use_autoscan));\nlvSensor = findViewById(R.id.lv_sensor);\nlvSensor.setAdapter(adapter);\n\nbuttonSensorAutoScan.setOnClickListener(v -> {\nbuttonSensorAutoScan.setClickable(false);\ntvSensorScan.setText(getResources().getString(R.string.scanning));\nnew PopulateSensors().execute();\n});\nlvSensor.setOnItemClickListener((parent, view, position, id) -> {\nString itemValue = (String) lvSensor.getItemAtPosition(position);\nIntent intent;\nswitch (itemValue) {\ncase \"ADS1115\":\nintent = new Intent(getApplication(), SensorADS1115.class);\nstartActivity(intent);\nbreak;\ncase \"BMP180\":\nintent = new Intent(getApplication(), SensorBMP180.class);\nstartActivity(intent);\nbreak;\ncase \"MLX90614\":\nintent = new Intent(getApplication(), SensorMLX90614.class);\nstartActivity(intent);\nbreak;\ncase \"HMC5883L\":\nintent = new Intent(getApplication(), SensorHMC5883L.class);\nstartActivity(intent);\nbreak;\ncase \"MPU6050\":\nintent = new Intent(getApplication(), SensorMPU6050.class);\nstartActivity(intent);\nbreak;\ncase \"SHT21\":\nintent = new Intent(getApplication(), SensorSHT21.class);\nstartActivity(intent);\nbreak;\ncase \"TSL2561\":\nintent = new Intent(getApplication(), SensorTSL2561.class);\nstartActivity(intent);\nbreak;\ncase \"MPU925x\":\nintent = new Intent(getApplication(), SensorMPU925X.class);\nstartActivity(intent);\nbreak;\ncase \"VL53L0X\":\nintent = new Intent(getApplication(), SensorVL53L0X.class);\nstartActivity(intent);\nbreak;\ncase \"CCS811\":\nintent = new Intent(getApplication(), SensorCCS811.class);\nstartActivity(intent);\nbreak;\ncase \"APDS9960\":\nintent = new Intent(getApplication(), SensorAPDS9960.class);\nstartActivity(intent);\nbreak;\ndefault:\nCustomSnackBar.showSnackBar(findViewById(android.R.id.content),\n\"Sensor Not Supported\", null, null, Snackbar.LENGTH_SHORT);\n}\n});\n}\n\nprivate class PopulateSensors extends AsyncTask<Void, Void, Void> {\nprivate List<Integer> data;\n\n@Override\nprotected Void doInBackground(Void... voids) {\ndata = new ArrayList<>();\ndataName.clear();\ndataAddress.clear();\nif (scienceLab.isConnected()) {\ntry {\ndata = i2c.scan(null);\n} catch (IOException | NullPointerException e) {\ne.printStackTrace();\n}\n}\nreturn null;\n}\n\n@Override\nprotected void onPostExecute(Void aVoid) {\nsuper.onPostExecute(aVoid);\n\nStringBuilder tvData = new StringBuilder();\nif (data != null) {\nfor (Integer myInt : data) {\nif (myInt != null && sensorAddr.get(myInt) != null) {\ndataAddress.add(String.valueOf(myInt));\n}\n}\n\nfor (final String s : dataAddress) {\ntvData.append(s).append(\":\").append(sensorAddr.get(Integer.parseInt(s))).append(\"\\n\");\n}\n\n} else {\ntvData.append(getResources().getString(R.string.sensor_not_connected));\n}\n\nfor (int key : sensorAddr.keySet()) {\ndataName.add(sensorAddr.get(key));\n}\n\nif (scienceLab.isConnected()) {\ntvSensorScan.setText(tvData);\n} else {\ntvSensorScan.setText(getString(R.string.not_connected));\n}\nadapter.notifyDataSetChanged();\nbuttonSensorAutoScan.setClickable(true);\n}\n}\n\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\ngetMenuInflater().inflate(R.menu.sensor_menu, menu);\nreturn true;\n}\n\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\nswitch (item.getItemId()) {\ncase android.R.id.home:\nfinish();\nbreak;\ncase R.id.show_guide:\ntoggleGuide();\nbreak;\ndefault:\nbreak;\n}\nreturn true;\n}\n}",
    "contains": [],
    "mock_data": {},
    "source": "PSLab",
    "time": 97.46228647232056,
    "result": {
        "harmony_component_code": "Column() {\n  // AppBarLayout and Toolbar\n  Column() {\n    Row() {\n      Text($r('app.string.title'))\n        .fontSize(20)\n        .fontWeight(FontWeight.Bold)\n        .width('100%')\n        .height('auto')\n        .backgroundColor(Color.Primary)\n        .padding({ top: 16, bottom: 16 })\n    }\n    .width('100%')\n    .height('auto')\n    .backgroundColor(Color.Primary)\n  }\n  .width('100%')\n  .height('auto')\n\n  // CardView for graph\n  Column() {\n    RelativeContainer() {\n      Column() {\n        Text($r('app.string.time'))\n          .fontSize(16)\n          .fontWeight(FontWeight.Bold)\n          .textColor(Color.White)\n          .width('auto')\n          .height('auto')\n          .alignRules({\n            centerHorizontal: { anchor: '__container__', align: HorizontalAlign.Center }\n          })\n        Text($r('app.string.seconds'))\n          .fontSize(16)\n          .fontWeight(FontWeight.Bold)\n          .textColor(Color.White)\n          .width('auto')\n          .height('auto')\n          .alignRules({\n            left: { anchor: 'time', align: HorizontalAlign.Right }\n          })\n      }\n      .width('100%')\n      .height('auto')\n      .backgroundColor(Color.Black)\n\n      Column() {\n        Text($r('app.string.lux'))\n          .fontSize(16)\n          .fontWeight(FontWeight.Bold)\n          .textColor(Color.White)\n          .width('auto')\n          .height('auto')\n          .rotation(-90)\n          .alignRules({\n            centerVertical: { anchor: '__container__', align: VerticalAlign.Center }\n          })\n      }\n      .width('auto')\n      .height('100%')\n      .backgroundColor(Color.Black)\n\n      Image($r('app.media.chart_image'))\n        .objectFit(ImageFit.Cover)\n        .width('100%')\n        .height('100%')\n        .alignRules({\n          top: { anchor: 'time', align: VerticalAlign.Bottom },\n          left: { anchor: 'lux', align: HorizontalAlign.Right }\n        })\n    }\n    .width('100%')\n    .height('auto')\n    .padding({ top: 16, bottom: 16, left: 16, right: 16 })\n    .backgroundColor(Color.DefaultGrey)\n  }\n  .width('100%')\n  .height('auto')\n\n  // CardView for information\n  Column() {\n    Column() {\n      Row() {\n        Text($r('app.string.date_of_recording'))\n          .fontSize(16)\n          .textColor(Color.Primary)\n          .width('auto')\n          .height('auto')\n        Text('')\n          .id('date_rec')\n          .width('auto')\n          .height('auto')\n          .alignRules({\n            right: { anchor: '__container__', align: HorizontalAlign.End }\n          })\n      }\n      .width('100%')\n      .height('auto')\n      .padding({ top: 16, bottom: 16, left: 16, right: 16 })\n\n      Divider()\n        .width('100%')\n        .height(1)\n        .backgroundColor(Color.Primary)\n        .alpha(0.4)\n        .margin({ left: 16, right: 16 })\n\n      Row() {\n        Text($r('app.string.time_of_recording'))\n          .fontSize(16)\n          .textColor(Color.Primary)\n          .width('auto')\n          .height('auto')\n        Text('')\n          .id('time_rec')\n          .width('auto')\n          .height('auto')\n          .alignRules({\n            right: { anchor: '__container__', align: HorizontalAlign.End }\n          })\n      }\n      .width('100%')\n      .height('auto')\n      .padding({ top: 16, bottom: 16, left: 16, right: 16 })\n    }\n    .width('100%')\n    .height('auto')\n    .padding({ top: 16, bottom: 16, left: 16, right: 16 })\n    .backgroundColor(Color.DefaultGrey)\n  }\n  .width('100%')\n  .height('auto')\n\n  // MapView and location information\n  Column() {\n    MapView()\n      .id('osmmap')\n      .width('100%')\n      .height('100%')\n\n    Row() {\n      Text($r('app.string.location'))\n        .fontSize(16)\n        .textColor(Color.White)\n        .width('auto')\n        .height('auto')\n      Text('')\n        .id('loc_lat')\n        .fontSize(16)\n        .textColor(Color.White)\n        .width('auto')\n        .height('auto')\n        .margin({ left: 16 })\n      Text('')\n        .id('loc_long')\n        .fontSize(16)\n        .textColor(Color.White)\n        .width('auto')\n        .height('auto')\n        .margin({ left: 16 })\n    }\n    .width('100%')\n    .height('auto')\n    .backgroundColor(Color.Black)\n    .alpha(0.6)\n    .padding({ left: 16 })\n  }\n  .width('100%')\n  .height('100%')\n  .padding({ top: 16, bottom: 16, left: 16, right: 16 })\n  .backgroundColor(Color.DefaultGrey)\n}\n.width('100%')\n.height('100%')"
    },
    "explanation": "1. 使用Column和Row组件来替代LinearLayout和RelativeLayout，以实现垂直和水平布局。\n2. 使用Text组件来替代TextView，并使用$r('app.string.xxx')来引用字符串资源。\n3. 使用Image组件来替代LineChart，并使用$r('app.media.xxx')来引用图片资源。\n4. 使用MapView组件来替代org.osmdroid.views.MapView，并设置id为'osmmap'。\n5. 使用backgroundColor、padding、margin等属性来设置组件的背景色、内边距和外边距。\n6. 使用alignRules来实现RelativeLayout中的布局约束。\n7. 使用Divider组件来替代View，并设置其宽度和高度为1，背景色为Primary，透明度为0.4。\n8. 使用alpha属性来设置组件的透明度。\n9. 使用rotation属性来实现文本的旋转。\n10. 使用objectFit属性来设置图片的显示方式。"
}