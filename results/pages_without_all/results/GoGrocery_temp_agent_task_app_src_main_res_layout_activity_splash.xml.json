{
    "name": "app/src/main/res/layout/activity_splash.xml",
    "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/white\"\n    tools:context=\"app.infiniverse.grocery.Splash\">\n\n\n    <TextView\n        android:id=\"@+id/grocery\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"@string/app_name\"\n        android:textColor=\"@color/color_black_light\"\n        android:textSize=\"32sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/logo\" />\n\n    <TextView\n        android:id=\"@+id/slogan\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/slogan\"\n        android:textColor=\"@color/color_black\"\n        android:textSize=\"14sp\"\n        android:textStyle=\"normal\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/grocery\" />\n\n\n    <ImageView\n        android:id=\"@+id/logo\"\n        android:layout_width=\"133dp\"\n        android:layout_height=\"150dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/icon\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.100000024\" />\n\n    <com.airbnb.lottie.LottieAnimationView\n        android:id=\"@+id/animation_view\"\n        android:layout_width=\"250sp\"\n        android:layout_height=\"250dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.7\"\n        app:lottie_autoPlay=\"true\"\n        app:lottie_loop=\"true\"\n        app:lottie_rawRes=\"@raw/loading\" />\n\n</android.support.constraint.ConstraintLayout>\n",
    "java": "package app.infiniverse.grocery;\n\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.provider.Settings;\nimport android.support.v4.app.FragmentActivity;\nimport android.support.v7.app.AlertDialog;\nimport android.view.animation.Animation;\nimport android.view.animation.AnimationUtils;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\npublic class Splash extends FragmentActivity {\n\n    private Animation animation;\n    private ImageView logo;\n    private TextView appTitle;\n    private TextView appSlogan;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_splash);\n\n        logo = findViewById(R.id.logo);\n        appTitle = findViewById(R.id.grocery);\n        appSlogan = findViewById(R.id.slogan);\n\n\n\n\n\n        if (ConnectivityReceiver.isConnected()) {\n\n            if (savedInstanceState == null) {\n                flyIn();\n            }\n\n            new Handler().postDelayed(new Runnable() {\n\n                @Override\n                public void run() {\n                    endSplash();\n                }\n            }, 3000);\n\n\n        } else {\n\n            AlertDialog.Builder builder = new AlertDialog.Builder(this);\n            builder.setTitle(\"No Internet Connection \");\n            builder.setMessage(\"Do you want to go to settings\");\n            builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n                @Override\n                public void onClick(DialogInterface dialogInterface, int i) {\n\n                    Intent j = new Intent(Settings.ACTION_WIFI_SETTINGS);\n                    startActivity(j);\n                    System.exit(0);\n                }\n            });\n\n            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\n                @Override\n                public void onClick(DialogInterface dialogInterface, int i) {\n                    finish();\n                    System.exit(0);\n                }\n            });\n            builder.show();\n        }\n\n\n\n\n\n\n\n\n\n\n\n    }\n\n    private void flyIn() {\n        animation = AnimationUtils.loadAnimation(this, R.anim.logo_animation);\n        logo.startAnimation(animation);\n\n        animation = AnimationUtils.loadAnimation(this,\n                R.anim.app_name_animation);\n        appTitle.startAnimation(animation);\n\n        animation = AnimationUtils.loadAnimation(this, R.anim.pro_animation);\n        appSlogan.startAnimation(animation);\n    }\n\n    private void endSplash() {\n        animation = AnimationUtils.loadAnimation(this,\n                R.anim.logo_animation_back);\n        logo.startAnimation(animation);\n\n        animation = AnimationUtils.loadAnimation(this,\n                R.anim.app_name_animation_back);\n        appTitle.startAnimation(animation);\n\n        animation = AnimationUtils.loadAnimation(this,\n                R.anim.pro_animation_back);\n        appSlogan.startAnimation(animation);\n\n        animation.setAnimationListener(new Animation.AnimationListener() {\n            @Override\n            public void onAnimationEnd(Animation arg0) {\n\n                Intent intent = new Intent(getApplicationContext(),\n                        StartActivity.class);\n                startActivity(intent);\n                finish();\n            }\n\n            @Override\n            public void onAnimationRepeat(Animation arg0) {\n            }\n\n            @Override\n            public void onAnimationStart(Animation arg0) {\n            }\n        });\n\n    }\n\n    @Override\n    public void onBackPressed() {\n        // Do nothing\n    }\n\n}\n\n",
    "contains": [],
    "mock_data": {},
    "source": "GoGrocery",
    "time": 47.767385482788086,
    "result": {
        "harmony_component_code": "Column() {\n  Image($r('app.media.icon'))\n    .id('logo')\n    .width('133vp')\n    .height('150vp')\n    .margin({ top: '8vp', bottom: '8vp', start: '8vp', end: '8vp' })\n    .objectFit(ImageFit.Contain)\n    .alignRules({\n      top: { anchor: '__container__', align: VerticalAlign.Top },\n      bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End }\n    })\n\n  Text($r('app.string.app_name'))\n    .id('grocery')\n    .width('auto')\n    .height('auto')\n    .margin({ start: '8vp', end: '8vp' })\n    .fontSize('32fp')\n    .fontColor(Color.Black)\n    .fontWeight(FontWeight.Bold)\n    .alignRules({\n      top: { anchor: 'logo', align: VerticalAlign.Bottom },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End }\n    })\n\n  Text($r('app.string.slogan'))\n    .id('slogan')\n    .width('auto')\n    .height('auto')\n    .margin({ top: '8vp', start: '8vp', end: '8vp' })\n    .fontSize('14fp')\n    .fontColor(Color.Black)\n    .alignRules({\n      top: { anchor: 'grocery', align: VerticalAlign.Bottom },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End }\n    })\n\n  LottieAnimation($r('app.media.loading'))\n    .id('animation_view')\n    .width('250vp')\n    .height('250vp')\n    .margin({ top: '8vp', bottom: '8vp', start: '8vp', end: '8vp' })\n    .autoPlay(true)\n    .loop(true)\n    .alignRules({\n      top: { anchor: '__container__', align: VerticalAlign.Top },\n      bottom: { anchor: '__container__', align: VerticalAlign.Bottom },\n      left: { anchor: '__container__', align: HorizontalAlign.Start },\n      right: { anchor: '__container__', align: HorizontalAlign.End }\n    })\n}\n.width('100%')\n.height('100%')\n.backgroundColor($r('app.color.white'))"
    },
    "explanation": "1. 使用Column作为根布局，因为ConstraintLayout在鸿蒙中没有直接对应的组件，但可以通过Column和alignRules来实现类似的效果。\n2. 将ImageView转译为Image组件，并设置其id、width、height、margin和objectFit属性。\n3. 将TextView转译为Text组件，并设置其id、width、height、margin、fontSize、fontColor和fontWeight属性。\n4. 将LottieAnimationView转译为LottieAnimation组件，并设置其id、width、height、margin、autoPlay和loop属性。\n5. 使用alignRules来实现ConstraintLayout中的约束布局效果，确保每个组件的位置和大小与原安卓布局一致。\n6. 设置了根布局的宽度和高度为100%，并设置了背景颜色为白色，以匹配原安卓布局的背景颜色。"
}