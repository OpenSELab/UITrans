# 基础类型定义

## Resource
资源引用类型，用于设置组件属性的值。可以通过$r或者$rawfile创建Resource类型对象，不可以修改Resource中的各属性的值。
示例 1：
```ets
// belonging：系统资源或者应用资源，相应的取值为'sys'和'app'；
// type：资源类型，支持'boolean'、'color'、'float'、'intarray'、'integer'、'pattern'、'plural'、'strarray'、'string'、'media'；
// name：资源名称，在资源定义时确定。
$r('belonging.type.name')
```
示例 2：
```ets
// filename：工程中resources/rawfile目录下的文件名称。
$rawfile('filename')
```

## Length
长度类型，用于描述尺寸单位。
支持的基本类型：
* string：需要显式指定像素单位，如'10px'，也可设置百分比字符串，如'100%'。
* number：默认单位vp。
* Resource：资源引用类型，引入系统资源或者应用资源中的尺寸。

## LengthMetrics
用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。
定义：
```json
{
    "description": "用于设置长度属性，当长度单位为PERCENT时，值为1表示100%。"
    "value": {
        "type": "number",
        "description": "长度属性的值。"
    },
    "unit": {
        "type": "LengthUnit",
        "description": "长度属性的单位，默认为vp。"
    }
}

## LengthUnit
长度属性单位枚举。
定义：
```json
{
    "enum": ["PX", "VP", "FP", "PERCENT", "LPX"]
}
```
示例：
```ets
LengthUnit.VP
```


## ResourceStr
字符串类型，用于描述字符串入参可以使用的类型。
支持的基本类型：
* string：字符串类型。
* Resource：资源引用类型，引入系统资源或者应用资源中的字符串。

## Padding
内边距类型，用于描述组件不同方向的内边距。
定义：
```json
{
    top: {
        "type": "Length",
        "description": "上内边距，组件内元素距组件顶部的尺寸。"
    },
    left: {
        "type": "Length",
        "description": "左内边距，组件内元素距组件左侧的尺寸。"
    },
    right: {
        "type": "Length",
        "description": "右内边距，组件内元素距组件右侧的尺寸。"
    },
    bottom: {
        "type": "Length",
        "description": "下内边距，组件内元素距组件底部的尺寸。"
    }
}
```

## LocalizedPadding
内边距类型，用于描述组件不同方向的内边距。
定义：
```json
{
    top: {
        "type": "LengthMetrics",
        "description": "上内边距，组件内元素距组件顶部的尺寸。"
    },
    bottom: {
        "type": "LengthMetrics",
        "description": "下内边距，组件内元素距组件底部的尺寸。"
    }
    start: {
        "type": "LengthMetrics",
        "description": "左内边距，组件内元素距组件左边界的尺寸，从右至左显示语言模式下为右内边距，组件内元素距组件右边界的尺寸。"
    },
    end: {
        "type": "LengthMetrics",
        "description": "右内边距，组件内元素距组件右边界的尺寸，从右至左显示语言模式下为左内边距，组件内元素距组件左边界的尺寸。"
    }
}
```

## Margin
外边距类型，用于描述组件不同方向的外边距。
定义：
```json
{
    top: {
        "type": "Length",
        "description": "上外边距，组件距其父组件顶部的尺寸。"
    },
    left: {
        "type": "Length",
        "description": "左外边距，组件距其父组件左侧的尺寸。"
    },
    right: {
        "type": "Length",
        "description": "右外边距，组件距其父组件右侧的尺寸。"
    },
    bottom: {
        "type": "Length",
        "description": "下外边距，组件距其父组件底部的尺寸。"
    }
}
```

## LocalizedMargin
外边距类型，用于描述组件不同方向的外边距。
定义：
```json
{
    top: {
        "type": "LengthMetrics",
        "description": "上外边距，组件距其父组件顶部的尺寸。"
    },
    bottom: {
        "type": "LengthMetrics",
        "description": "下外边距，组件距其父组件底部的尺寸。"
    }
    start: {
        "type": "LengthMetrics",
        "description": "左外边距，组件距其父组件左边界的尺寸，从右至左显示语言模式下为右外边距，组件距其父组件右边界的尺寸。"
    },
    end: {
        "type": "LengthMetrics",
        "description": "右外边距，组件距其父组件右边界的尺寸，从右至左显示语言模式下为左外边距，组件距其父组件左边界的尺寸。"
    }
}
```

## EdgeWidths
边框宽度类型，用于描述组件边框不同方向的宽度。
定义：
```json
{
    top: {
        "type": "Length",
        "description": "组件上边框宽度。"
    },
    left: {
        "type": "Length",
        "description": "组件左边框宽度。"
    },
    right: {
        "type": "Length",
        "description": "组件右边框宽度。"
    },
    bottom: {
        "type": "Length",
        "description": "组件下边框宽度。"
    }
}
```

## LocalizedEdgeWidths
边框宽度类型，用于描述组件边框不同方向的宽度。
定义：
```json
{
    top: {
        "type": "LengthMetrics",
        "description": "组件上边框宽度。"
    },
    bottom: {
        "type": "LengthMetrics",
        "description": "组件下边框宽度。"
    }
    start: {
        "type": "LengthMetrics",
        "description": "组件左边框宽度，从右至左显示语言模式下为组件右边框宽度。"
    },
    end: {
        "type": "LengthMetrics",
        "description": "组件右边框宽度，从右至左显示语言模式下为组件左边框宽度。"
    }
}
```

## BorderRadiuses
圆角类型，用于描述组件边框圆角半径。
定义：
```json
{
    topLeft: {
        "type": "Length",
        "description": "组件左上角圆角半径。"
    },
    topRight: {
        "type": "Length",
        "description": "组件右上角圆角半径。"
    },
    bottomLeft: {
        "type": "Length",
        "description": "组件左下角圆角半径。"
    },
    bottomRight: {
        "type": "Length",
        "description": "组件右下角圆角半径。"
    }
}
```

## LocalizedBorderRadiuses
圆角类型，用于描述组件边框圆角半径。
定义：
```json
{
    topStart: {
        "type": "LengthMetrics",
        "description": "组件左上角圆角半径。从右至左显示语言模式下为组件右上角圆角半径。"
    },
    topEnd: {
        "type": "LengthMetrics",
        "description": "组件右上角圆角半径。从右至左显示语言模式下为组件左上角圆角半径。"
    },
    bottomStart: {
        "type": "LengthMetrics",
        "description": "组件左下角圆角半径。从右至左显示语言模式下为组件右下角圆角半径。"
    },
    bottomEnd: {
        "type": "LengthMetrics",
        "description": "组件右下角圆角半径。从右至左显示语言模式下为组件左下角圆角半径。"
    }
}
```

## EdgeColors
边框颜色，用于描述组件边框四条边的颜色。
定义：
```json
{
    top: {
        "type": "ResourceColor",
        "description": "组件上边框颜色。"
    },
    left: {
        "type": "ResourceColor",
        "description": "组件左边框颜色。"
    },
    right: {
        "type": "ResourceColor",
        "description": "组件右边框颜色。"
    },
    bottom: {
        "type": "ResourceColor",
        "description": "组件下边框颜色。"
    }
}
```

## LocalizedEdgeColors
边框颜色，用于描述组件边框四条边的颜色。
定义：
```json
{
    top: {
        "type": "ResourceColor",
        "description": "组件上边框颜色。"
    },
    bottom: {
        "type": "ResourceColor",
        "description": "组件下边框颜色。"
    }
    start: {
        "type": "ResourceColor",
        "description": "组件左边框颜色，从右至左显示语言模式下为组件右边框颜色。"
    },
    end: {
        "type": "ResourceColor",
        "description": "组件右边框颜色，从右至左显示语言模式下为组件左边框颜色。"
    }
}
```

## EdgeStyles
边框样式，用于描述组件边框四条边的样式。
定义：
```json
{
    top: {
        "type": "BorderStyle",
        "description": "组件上边框样式。"
    },
    left: {
        "type": "BorderStyle",
        "description": "组件左边框样式。"
    },
    right: {
        "type": "BorderStyle",
        "description": "组件右边框样式。"
    },
    bottom: {
        "type": "BorderStyle",
        "description": "组件下边框样式。"
    }
}
```

## Offset
相对布局完成位置坐标偏移量。
定义：
```json
{
    dx: {
        "type": "Length",
        "required": true,
        "description": "水平方向偏移量。"
    },
    dx: {
        "type": "Length",
        "required": true,
        "description": "竖直方向偏移量。"
    }
}
```

## RectResult
位置和尺寸类型，用于描述组件的位置和宽高。
定义：
```json
{
    x: {
        "type": "number",
        "description": "水平方向横坐标。"
    },
    y: {
        "type": "number",
        "description": "竖直方向纵坐标。"
    },
    width: {
        "type": "number",
        "description": "内容宽度大小。"
    },
    height: {
        "type": "number",
        "description": "内容高度大小。"
    }
}
```

## ResourceColor
颜色类型，用于描述资源颜色类型。
支持的基本类型：
* string：rgb或者argb格式颜色。示例：'#ffffff', '#ff000000', 'rgb(255, 100, 255)', 'rgba(255, 100, 255, 0.5)'。
* Resource：资源引用类型，引入系统资源或者应用资源中的颜色。
* Color: 颜色枚举值。
* number: HEX格式颜色，支持rgb或者argb。示例：0xffffff，0xffff0000。number无法识别传入位数，格式选择依据值的大小，例如0x00ffffff作rgb格式解析

## ColoringStrategy
智能取色枚举类型，用于设置前景色。
定义：
```json
{
    "enum": ["INVERT", "AVERAGE", "PRIMARY"]
}
```
示例：
```ets
ColoringStrategy.INVERT  // 设置前景色为控件背景色的反色。
ColoringStrategy.AVERAGE  // 设置控件背景阴影色为控件背景阴影区域的平均色。
ColoringStrategy.PRIMARY  // 设置控件背景阴影色为控件背景阴影区域的主色。
```

## LengthConstrain
长度约束类型，用于描述组件的最小和最大尺寸。
定义：
```json
{
    minLength: {
        "type": "Length",
        "required": true,
        "description": "组件最小长度。"
    },
    maxLength: {
        "type": "Length",
        "required": true,
        "description": "组件最大长度。"
    }
}
```

## Font
设置文本样式。
定义：
```json
{
    size: {
        "type": "Length",
        "description": "设置文本尺寸，Length为number类型时，使用fp单位。不支持设置百分比字符串。",
        "default": 16.0
    },
    weight: {
        "type": "FontWeight | number | string",
        "description": "设置文本的字体粗细，number类型取值[100, 900]，取值间隔为100，取值越大，字体越粗。"
        "default": 400 | FontWeight.Normal
    },
    family: {
        "type": "string | Resource",
        "description": "设置文本的字体列表。使用多个字体，使用','进行分割，优先级按顺序生效。例如：'Arial, HarmonyOS Sans'。"
    },
    style: {
        "type": "FontStyle",
        "description": "设置文本的字体样式。"
        "default": FontStyle.Normal
    }
}
```

## Area
区域类型，用于描述组件的位置和尺寸。
定义：
```json
{
    position: {
        "type": "Position",
        "description": "目标元素左上角相对父元素左上角的位置。"
    },
    globalPosition: {
        "type": "Position",
        "description": "目标元素左上角相对页面左上角的位置。"
    },
    width: {
        "type": "Length",
        "description": "目标元素的宽度，作为返回值时，类型为number，单位vp。"
    },
    height: {
        "type": "Length",
        "description": "目标元素的高度，作为返回值时，类型为number，单位vp。"
    }
}
```

## Position
位置类型，用于表示一个坐标点。
定义：
```json
{
    x: {
        "type": "Length",
        "description": "x轴坐标，作为返回值时，类型为number，单位vp。"
    },
    y: {
        "type": "Length",
        "description": "y轴坐标，作为返回值时，类型为number，单位vp。"
    }
}
```

## LocalizedPosition
位置类型，用于表示一个坐标点。
定义：
```json
{
    start: {
        "type": "LengthMetrics",
        "description": "LTR模式时x轴相对左边坐标，RTL模式x轴相对右边坐标。"
    },
    top: {
        "type": "LengthMetrics",
        "description": "y轴坐标。"
    }
}
```

## Edges
位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置left和right，仅left生效。
定义：
```json
{
    top: {
        "type": "Dimension",
        "description": "相对顶边的偏移量"
    },
    left: {
        "type": "Dimension",
        "description": "相对左边的偏移量"
    },
    right: {
        "type": "Dimension",
        "description": "相对右边的偏移量"
    },
    bottom: {
        "type": "Dimension",
        "description": "相对底边的偏移量"
    }
}
```

## LocalizedEdges
位置类型，表示相对四边的偏移量。同时设置top和bottom，仅top生效；同时设置start和end，仅start生效。
定义：
```json
{
    top: {
        "type": "LengthMetrics",
        "description": "相对顶边的偏移量。"
    },
    bottom: {
        "type": "LengthMetrics",
        "description": "相对底边的偏移量。"
    },
    start: {
        "type": "LengthMetrics",
        "description": "LTR模式时相对左边的偏移量，RTL模式时相对右边的偏移量。"
    },
    end: {
        "type": "LengthMetrics",
        "description": "LTR模式时相对右边的偏移量，RTL模式时相对左边的偏移量。"
    }
}
```

## ConstraintSizeOptions
设置约束尺寸，组件布局时，进行尺寸范围限制。
定义：
```json
{
    minWidth: {
        "type": "Length",
        "description": "组件最小宽度。"
    },
    maxWidth: {
        "type": "Length",
        "description": "组件最大宽度。"
    },
    minHeight: {
        "type": "Length",
        "description": "组件最小高度。"
    },
    maxHeight: {
        "type": "Length",
        "description": "组件最大高度。"
    }
}
```

## SizeOptions
设置宽高尺寸。
定义：
```json
{
    width: {
        "type": "Length",
        "description": "元素宽度。"
    },
    height: {
        "type": "Length",
        "description": "元素高度。"
    }
}
```

## BorderOptions
边框属性集合，用于描述边框相关信息。
定义：
```json
{
    width: {
        "type": "Length | EdgeWidths | LocalizedEdgeWidths",
        "description": "边框宽度。"
    },
    color: {
        "type": "ResourceColor | EdgeColors",
        "description": "边框颜色。"
    },
    style: {
        "type": "BorderStyle | EdgeStyles",
        "description": "边框样式。"
    },
    radius: {
        "type": "Length | BorderRadiuses",
        "description": "边框圆角半径。"
    }
}
```

## ColorFilter
创建具有4*5矩阵的颜色过滤器。
定义：
```json
{
    constructor: {
        "type": "number[]",
        "required": true,
        "description": "创建具有4*5矩阵的颜色过滤器, 入参为[m*n]位于m行和n列中矩阵值, 矩阵是行优先的。"
    }
}
```

## CustomBuilder
组件属性方法参数可使用CustomBuilder类型来自定义UI描述。
定义：
```json
{
    "CustomBuilder": {
        "type": "() => any | void",
        "description": "生成用户自定义组件，在使用时结合@Builder使用。"
    }
}
```

## PixelStretchEffectOptions
像素扩展属性集合,用于描述像素扩展的信息。
定义：
```json
{
    "left": {
        "type": "Length",
        "description": "组件图像左边沿像素扩展距离。"
    },
    "right": {
        "type": "Length",
        "description": "组件图像右边沿像素扩展距离。"
    },
    "top": {
        "type": "Length",
        "description": "组件图像上边沿像素扩展距离。"
    },
    "bottom": {
        "type": "Length",
        "description": "组件图像下边沿像素扩展距离。"
    }
}
```

## ModalTransition
全屏模态转场方式枚举类型，用于设置全屏模态转场类型。
定义：
```json
{
    "type": "ModalTransition"
    "enum": ["NONE", "DEFAULT", "ALPHA"]
    "enumDescriptions": {
        "NONE": "无转场效果",
        "DEFAULT": "默认转场效果",
        "ALPHA": "透明度转场效果"
    }
}
```

## Dimension
长度类型，用于描述尺寸单位。
定义：
```json
{
    "type": "enum",
    "enum": ["PX", "VP", "FP", "LPX", "PERCENT", "Resource"],
    "enumDescriptions": {
        "PX": "需要指定以px像素单位，如'10px'。",
        "VP": "需要指定数字或vp像素单位，如10或'10vp'。",
        "FP": "需要指定以fp像素单位，如'10fp'。",
        "LPX": "需要指定以lpx像素单位，如'10lpx'。",
        "PERCENT": "需要指定以%像素单位，如'10%'。",
        "Resource": "资源引用类型，引入系统资源或者应用资源中的尺寸。"
    }
}
```

## PX
长度类型，用于描述以px像素单位为单位的长度。
定义：
```json
{
    "type": "string",
    "description": "{number}px, 需要指定以px像素单位，如'10px'。"
}
```

## VP
长度类型，用于描述以vp像素单位为单位的长度。
定义：
```json
{
    "type": ["string", "number"],
    "description": "{number}vp|number, 需要指定数字或vp像素单位，如10或'10vp'。"
}
```

## FP
长度类型，用于描述以fp像素单位为单位的长度。
定义：
```json
{
    "type": "string",
    "description": "{number}fp, 需要指定以fp像素单位，如'10fp'。"
}
```

## LPX
长度类型，用于描述以lpx像素单位为单位的长度。
定义：
```json
{
    "type": "string",
    "description": "{number}lpx, 需要指定以lpx像素单位，如'10lpx'。"
}
```

## Percentage
长度类型，用于描述以%像素单位为单位的长度。
定义：
```json
{
    "type": "string",
    "description": "{number}%, 需要指定以%像素单位，如'10%'。"
}
```

## Degree
角度类型，用于描述角度单位。
定义：
```json
{
    "type": "number",
    "description": "{number}deg，需要指定以deg像素单位，如'10deg'。"
}
```

## MultiShadowOptions
投影样式。
定义：
```json
{
    "type": "object",
    "properties": {
        "radius": {
            "type": ["number", "Resource"],
            "description": "投影模糊半径，单位为vp。",
            "default": 20
        },
        "offsetX": {
            "type": ["number", "Resource"],
            "description": "X轴的偏移量，单位为vp。",
            "default": 5
        },
        "offsetY": {
            "type": ["number", "Resource"],
            "description": "Y轴的偏移量，单位为vp。",
            "default": 5
        }
    }
}
```

## SwiperAnimationEvent
Swiper组件动画相关信息集合。
定义：
```json
{
    "type": "object",
    "properties": {
        "currentOffset": {
            "type": "number",
            "required": true,
            "description": "Swiper当前显示元素在主轴方向上，相对于Swiper起始位置的位移，单位vp。",
            "default": 0
        },
        "targetOffset": {
            "type": "number",
            "required": true,
            "description": "Swiper动画目标元素在主轴方向上，相对于Swiper起始位置的位移，单位vp。",
            "default": 0
        },
        "velocity": {
            "type": "number",
            "required": true,
            "description": "Swiper离手动画开始时的离手速度。单位vp/s",
            "default": 0
        }
    }
}
```

## TabsAnimationEvent
Tabs组件动画相关信息集合。
定义：
```json
{
    "type": "object",
    "properties": {
        "currentOffset": {
            "type": "number",
            "required": true,
            "description": "Tabs当前显示元素在主轴方向上，相对于Tabs起始位置的位移，单位vp。",
            "default": 0
        },
        "targetOffset": {
            "type": "number",
            "required": true,
            "description": "Tabs动画目标元素在主轴方向上，相对于Tabs起始位置的位移，单位vp。",
            "default": 0
        },
        "velocity": {
            "type": "number",
            "required": true,
            "description": "Tabs离手动画开始时的离手速度。单位vp/s",
            "default": 0
        }
    }
}
```

## SafeAreaType
扩展安全区域的枚举类型。
定义：
```json
{
    "type": "enum",
    "enum": ["SYSTEM", "CUTOUT", "KEYBOARD"],
    "enumDescriptions": {
        "SYSTEM": "系统默认安全区域，包括状态栏、导航栏。",
        "CUTOUT": "	设备的非安全区域，例如刘海屏或挖孔屏区域。",
        "KEYBOARD": "软键盘区域。"
    }
}
```

## SafeAreaEdge
扩展安全区域的方向。
定义：
```json
{
    "type": "enum",
    "enum": ["TOP", "BOTTOM", "START", "END"],
    "enumDescriptions": {
        "TOP": "上方区域。",
        "BOTTOM": "下方区域。",
        "START": "前部区域。",
        "END": "尾部区域。"
    }
}
```

## KeyboardAvoidMode
配置键盘避让时页面的避让模式。
定义：
```json
{
    "type": "enum",
    ”enum": ["OFFSET", "RESIZE"],
    "enumDescriptions": {
        "OFFSET": "上抬模式。",
        "RESIZE": "压缩模式。"
    }
}
```

## LayoutSafeAreaType
扩展布局安全区域的枚举类型。
定义：
```json
{
    "type": "enum",
    "enum": ["SYSTEM"],
    "enumDescriptions": {
        "SYSTEM": "系统默认安全区域，包括状态栏、导航栏。",
    }
}
```

## LayoutSafeAreaEdge
扩展安全区域的方向。
定义：
```json
{
    "type": "enum",
    "enum": ["TOP", "BOTTOM"],
    "enumDescriptions": {
        "TOP": "上方区域。",
        "BOTTOM": "下方区域。",
    }
}
```

## TouchPoint
配置跟手点坐标，不配置时，默认居中。
定义：
```json
{
    "type": "object",
    "properties": {
        "X": {
            "type": "Dimension",
            "description": "跟手点X轴坐标。"
        },
        "Y": {
            "type": "	Dimension",
            "description": "跟手点Y轴坐标。"
        }
    }
}
```

## TabContentAnimatedTransition
Tabs自定义切换动画相关信息。
定义：
```json
{
    "type": "object",
    "properties": {
        "timeout": {
            "type": "number",
            "description": "Tabs自定义切换动画超时时间。从自定义动画开始切换计时，如果到达该时间后，开发者仍未调用TabContentTransitionProxy的finishTransition接口通知Tabs组件自定义动画结束，那么组件就会认为此次自定义动画已结束，直接执行后续操作，单位ms。",
            "default": 1000
        },
        "transition": {
            "type": "(proxy: TabContentTransitionProxy) => void",
            "required": true,
            "description": "自定义切换动画具体内容。",
        }
    }
}
```

## TabContentTransitionProxy
Tabs自定义切换动画执行过程中，返回给开发者的proxy对象。开发者可通过该对象获取自定义动画的起始和目标页面信息，同时，也可以通过调用该对象的finishTransition接口通知Tabs组件自定义动画已结束。
定义：
```json
{
    "type": "object",
    "properties": {
        "from": {
            "type": "number",
            "required": true,
            "description": "自定义动画起始页面对应的index值。"
        },
        "to": {
            "type": "number",
            "required": true,
            "description": "自定义动画目标页面对应的index值。"
        },
        "finishTransition()": {
            "type": "void",
            "required": true,
            "description": "通知Tabs组件，此次自定义动画已结束。"
        }
    }
}
```

## PixelRoundPolicy
组件像素级取整对齐策略。
定义：
```json
{
    "type": "object",
    "properties": {
        "start": {
            "type": "PixelRoundCalcPolicy",
            "description": "组件前部边界取整对齐。"
        },
        "end": {
            "type": "PixelRoundCalcPolicy",
            "description": "组件尾部边界取整对齐。"
        },
        "top": {
            "type": "PixelRoundCalcPolicy",
            "description": "组件上边界取整对齐。"
        },
        "bottom": {
            "type": "PixelRoundCalcPolicy",
            "description": "组件下边界取整对齐。"
        }
    }
}
```

## VoidCallback
无参数回调函数。
定义：
```json
{
    "type": "() => void",
    "description": "无参数回调函数。"
}
```

## Callback
带参数的函数回调。
定义：
```json
{
    "type": "(data: T) => V",
    "description": "带参数的函数回调。"
}
```

## HoverCallback
hover事件的回调类型。
定义：
```json
{
    "type": "(isHover: boolean, event: HoverEvent) => void",
    "description": "hover事件的回调类型。"
}
```

## VisibleAreaEventOptions
关于区域变化相关的参数。
定义：
```json
{
    "type": "object",
    "properties": {
        "ratios": {
            "type": "Array<number>",
            "required": true,
            "description": "阈值数组。其中，每个阈值代表组件可见面积（即组件在屏幕显示区的面积，只计算父组件内的面积，超出父组件部分不会计算）与组件自身面积的比值。每个阈值的取值范围为[0.0, 1.0]，如果开发者设置的阈值超出该范围，则会实际取值0.0或1.0。"
        },
        "expectedUpdateInterval": {
            "type": "number",
            "description": "预期更新间隔，单位为ms。定义了开发者期望的更新间隔。",
            "default": 1000
        }
    }
}
```

## VisibleAreaChangeCallback
组件可见区域变化事件的回调类型。
定义：
```json
{
    "type": "(isVisible: boolean, currentRatio: number) => void",
    "description": "组件可见区域变化事件的回调。\n- isVisible：表示组件的可见面积与自身面积的比值与上一次变化相比的情况，比值变大为true，比值变小为false。\n- currentRatio：触发回调时，组件可见面积与自身面积的比值。"
}
```

## StyledStringValue
样式对象类型，用于设置属性字符串的样式。
定义：
```json
{
    "type": "enum",
    "enum": ["TextStyle", "DecorationStyle", "BaselineOffsetStyle", "LetterSpacingStyle", "LineHeightStyle", "TextShadowStyle", "GestureStyle", "ParagraphStyle", "ImageAttachment", "CustomSpan"],
    "enumDescriptions": {
        "TextStyle": "文本字体样式。",
        "DecorationStyle": "文本装饰线样式。",
        "BaselineOffsetStyle": 文本基线偏移量样式。",
        "LetterSpacingStyle": "文本字符间距样式。",
        "LineHeightStyle": "文本行高样式。",
        "TextShadowStyle": "文本阴影样式。",
        "GestureStyle": "事件手势样式。",
        "ParagraphStyle": "文本段落样式。",
        "ImageAttachment": "图片样式。",
        "CustomSpan": "自定义绘制Span样式。"
    }
}
```

## SubmitEvent
定义用户提交事件。
定义：
```json
{
    "type": "object",
    "properties": {
        "keepEditableState": {
            "type": "() => void",
            "required": true,
            "description": "用户自定义输入框编辑状态，调用时保持编辑态。"
        },
        "text": {
            "type": "string",
            "required": true,
            "description": "输入框文本内容。"
        }
    }
}
```

## EnterKeyType
定义输入框回车键类型。
定义：
```json
{
    "type": "enum",
    "enum": ["Go", "Search", "Send", "Next", "Done", "PREVIOUS", "NEW_LINE"],
    "enumDescriptions": {
        "Go": "显示为开始样式。",
        "Search": "显示为搜索样式。",
        "Send": "显示为发送样式。",
        "Next": "显示为下一步样式。",
        "Done": "显示为完成样式。",
        "PREVIOUS": "显示为上一步样式。",
        "NEW_LINE": "显示为换行样式。"
    }
}
```

## DividerStyleOptions
分割线样式属性集合, 用于描述分割线相关信息。
定义：
```json
{
    "type": "object",
    "properties": {
        "strokeWidth": {
            "type": "LengthMetrics",
            "description": "分割线的线宽。"
        },
        "color": {
            "type": "ResourceColor",
            "description": "分割线的颜色。"
        },
        "startMargin": {
            "type": "LengthMetrics",
            "description": "分割线与菜单侧边起始端的距离。"
        },
        "endMargin": {
            "type": "LengthMetrics",
            "description": "	分割线与菜单侧边结束端的距离。"
        }
    }
}
```