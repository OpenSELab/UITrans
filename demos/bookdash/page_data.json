{
    "app/src/main/res/layout/activity_splash.xml": {
        "app/src/main/res/layout/activity_splash.xml": {
            "name": "app/src/main/res/layout/activity_splash.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n\n    <ImageView\n        android:layout_width=\"150dp\"\n        android:layout_height=\"200dp\"\n        android:id=\"@+id/imageView\"\n        android:layout_gravity=\"center_horizontal\"\n        android:layout_centerVertical=\"true\"\n        android:scaleType=\"fitCenter\"\n        android:layout_centerHorizontal=\"true\"\n        android:src=\"@drawable/bookdash_icon\"/>\n\n</RelativeLayout>",
            "java": "package org.bookdash.android.presentation.splash;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.presentation.main.MainActivity;\n\nimport za.co.riggaroo.materialhelptutorial.tutorial.MaterialTutorialActivity;\n\n/**\n * @author Rebecca Franks\n * @since 2015/07/16 3:16 PM\n */\npublic class SplashActivity extends AppCompatActivity implements SplashContract.View {\n    private static final int SPLASH_SCREEN_REQUEST_CODE = 1;\n    private SplashContract.UserActionsListener splashPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_splash);\n        splashPresenter = new SplashPresenter(this, Injection.provideSettingsRepo(this));\n        showSplashAfterDelay();\n    }\n\n    private void showSplashAfterDelay() {\n        (new Handler()).postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                splashPresenter.loadSplash();\n            }\n        }, 1000);\n\n    }\n\n    @Override\n    public void loadTutorial() {\n        Intent mainAct = new Intent(SplashActivity.this, MaterialTutorialActivity.class);\n        mainAct.putParcelableArrayListExtra(MaterialTutorialActivity.MATERIAL_TUTORIAL_ARG_TUTORIAL_ITEMS, splashPresenter.getTutorialItems(this));\n        startActivityForResult(mainAct, SPLASH_SCREEN_REQUEST_CODE);\n    }\n\n\n    @Override\n    public void loadMainScreen() {\n        Intent mainAct = new Intent(SplashActivity.this, MainActivity.class);\n        startActivity(mainAct);\n        finish();\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        //    super.onActivityResult(requestCode, resultCode, data);\n        if (resultCode == RESULT_OK && requestCode == SPLASH_SCREEN_REQUEST_CODE) {\n            splashPresenter.finishedTutorial();\n\n        }\n    }\n}\n",
            "contains": [],
            "mock_data": {}
        }
    },
    "app/src/main/res/layout/activity_main.xml": {
        "app/src/main/res/layout/activity_main.xml": {
            "name": "app/src/main/res/layout/activity_main.xml",
            "content": "<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                        xmlns:tools=\"http://schemas.android.com/tools\"\n                                        android:id=\"@+id/drawer_layout\"\n                                        android:layout_width=\"match_parent\"\n                                        android:layout_height=\"match_parent\"\n                                        android:fitsSystemWindows=\"true\"\n                                        tools:openDrawer=\"start\"\n    >\n\n    <RelativeLayout\n        android:id=\"@+id/fragment_content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n    </RelativeLayout>\n\n    <com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/navigation_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:elevation=\"@dimen/z_drawer\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/drawer_header\"\n        app:menu=\"@menu/menu_drawer\"/>\n</androidx.drawerlayout.widget.DrawerLayout>\n\n",
            "java": "package org.bookdash.android.presentation.main;\n\nimport android.content.ActivityNotFoundException;\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.text.Html;\nimport android.text.method.LinkMovementMethod;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.core.view.GravityCompat;\nimport androidx.drawerlayout.widget.DrawerLayout;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport com.google.android.material.navigation.NavigationView;\nimport com.google.android.material.snackbar.Snackbar;\n\nimport org.bookdash.android.BuildConfig;\nimport org.bookdash.android.R;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.presentation.about.AboutFragment;\nimport org.bookdash.android.presentation.activity.BaseAppCompatActivity;\nimport org.bookdash.android.presentation.downloads.DownloadsFragment;\nimport org.bookdash.android.presentation.listbooks.ListBooksFragment;\nimport org.bookdash.android.presentation.settings.SettingsFragment;\n\n\npublic class MainActivity extends BaseAppCompatActivity implements MainContract.MainView, NavDrawerInterface {\n\n    private static final int INVITE_REQUEST_CODE = 1;\n    private static final String TAG = \"MainActivity\";\n    private static final String GOOGLE_PLAY_STORE_URL = \"http://play.google.com/store/apps/details?id=\";\n    private static final String GOOGLE_PLAY_MARKET_URL = \"market://details?id=\";\n    private DrawerLayout drawerLayout;\n    private NavigationView navigationView;\n    private MainContract.MainUserActions mainPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n\n        navigationView = (NavigationView) findViewById(R.id.navigation_view);\n\n        mainPresenter = new MainPresenter(this, Injection.provideAnalytics());\n        final ActionBar actionBar = getSupportActionBar();\n\n        if (actionBar != null) {\n            actionBar.setHomeAsUpIndicator(R.drawable.ic_menu_24dp);\n            actionBar.setDisplayHomeAsUpEnabled(true);\n        }\n\n        setUpNavDrawer();\n        showAllBooks();\n    }\n\n    private void setUpNavDrawer() {\n\n        navigationView.setCheckedItem(R.id.action_all_books);\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\n            @Override\n            public boolean onNavigationItemSelected(MenuItem menuItem) {\n                switch (menuItem.getItemId()) {\n\n                    case R.id.action_all_books: {\n                        mainPresenter.clickViewAllBooks();\n                        break;\n                    }\n                    case R.id.action_downloads:\n                        mainPresenter.clickViewDownloadBooks();\n                        break;\n                    case R.id.action_about:\n                        showAboutPage();\n                        break;\n                    case R.id.action_settings: {\n                        mainPresenter.clickShowSettings();\n                        break;\n                    }\n                    case R.id.action_thanks: {\n                        showThanksPopover();\n                        break;\n                    }\n                    case R.id.action_invite_friends: {\n                        mainPresenter.clickInvitePage();\n                        break;\n                    }\n                    case R.id.action_rate_app: {\n                        mainPresenter.clickRateApp();\n                        break;\n                    }\n                    default:\n\n                }\n                drawerLayout.closeDrawers();\n                if (menuItem.getItemId() == R.id.action_thanks || menuItem\n                        .getItemId() == R.id.action_invite_friends || menuItem.getItemId() == R.id.action_rate_app) {\n                    return false;\n                } else {\n                    return true;\n                }\n\n            }\n\n\n        });\n    }\n\n    private void showAllBooks() {\n        mainPresenter.clickViewAllBooks();\n    }\n\n    public void showSettingsScreen() {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction ft = fragmentManager.beginTransaction();\n        Fragment settingsFragment = new SettingsFragment();\n        ft.replace(R.id.fragment_content, settingsFragment, \"SETTINGS\");\n        ft.commit();\n    }\n\n    @Override\n    public void showThanksPopover() {\n        AlertDialog.Builder thanksDialog = new AlertDialog.Builder(this);\n        thanksDialog.setTitle(getString(R.string.contributions_to_app));\n        thanksDialog.setMessage(Html.fromHtml(getString(R.string.list_of_contributors)));\n\n        thanksDialog.setPositiveButton(android.R.string.ok, null);\n        AlertDialog ad = thanksDialog.show();\n        ((TextView) ad.findViewById(android.R.id.message)).setMovementMethod(LinkMovementMethod.getInstance());\n\n    }\n\n    @Override\n    public void showAboutPage() {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction ft = fragmentManager.beginTransaction();\n        Fragment f = AboutFragment.newInstance();\n        ft.replace(R.id.fragment_content, f, \"ABOUT\");\n        ft.commit();\n    }\n\n    @Override\n    public void showRatingPlayStore() {\n        Uri uri = Uri.parse(GOOGLE_PLAY_MARKET_URL + BuildConfig.APPLICATION_ID);\n        Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\n        goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\n        try {\n            startActivity(goToMarket);\n        } catch (ActivityNotFoundException e) {\n            try {\n                startActivity(\n                        new Intent(Intent.ACTION_VIEW, Uri.parse(GOOGLE_PLAY_STORE_URL + BuildConfig.APPLICATION_ID)));\n            } catch (ActivityNotFoundException anfe) {\n                Snackbar.make(navigationView, R.string.error_opening_app_rating, Snackbar.LENGTH_LONG);\n            }\n        }\n    }\n\n    @Override\n    public void showAllBooksPage() {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction ft = fragmentManager.beginTransaction();\n        Fragment f = ListBooksFragment.newInstance();\n        ft.replace(R.id.fragment_content, f, \"ALLBOOKS\");\n        ft.commit();\n    }\n\n    @Override\n    public void showDownloadedBooksPage() {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction ft = fragmentManager.beginTransaction();\n        Fragment f = DownloadsFragment.newInstance();\n        ft.replace(R.id.fragment_content, f, \"DOWNLOADED_BOOKS\");\n        ft.commit();\n    }\n\n    @Override\n    public void inviteFriends() {\n        try {\n            Intent sendIntent = new Intent();\n            sendIntent.setAction(Intent.ACTION_SEND);\n            sendIntent.putExtra(Intent.EXTRA_TEXT, getString(R.string.invitation_message));\n            sendIntent.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.invitation_subject));\n            sendIntent.setType(\"text/plain\");\n            startActivity(Intent.createChooser(sendIntent,\n                    getResources().getText(R.string.invite_using)));\n        } catch (ActivityNotFoundException ac) {\n            Snackbar.make(navigationView, R.string.invite_error_no_apps_found, Snackbar.LENGTH_LONG)\n                    .show();\n        }\n    }\n\n    @Override\n    public String getScreenName() {\n        return \"MainActivity\";\n    }\n\n    @Override\n    public void openNavDrawer() {\n        drawerLayout.openDrawer(navigationView);\n    }\n\n    @Override\n    public void closeNavDrawer() {\n        drawerLayout.closeDrawer(navigationView);\n    }\n\n    @Override\n    public void setToolbar(Toolbar toolbar) {\n        setSupportActionBar(toolbar);\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                drawerLayout.openDrawer(GravityCompat.START);\n            }\n        });\n    }\n}",
            "contains": [
                "app/src/main/res/layout/drawer_header",
                "app/src/main/res/menu/menu_drawer"
            ],
            "mock_data": {}
        },
        "app/src/main/res/layout/drawer_header.xml": {
            "name": "app/src/main/res/layout/drawer_header.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                xmlns:tools=\"http://schemas.android.com/tools\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"160dp\"\n                android:orientation=\"vertical\"\n\n    >\n\n\n    <ImageView\n        android:id=\"@+id/imageViewHeader\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"160dp\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/headerimage\"\n        />\n\n    <ImageView\n        android:id=\"@+id/imageViewBookdashIcon\"\n        android:layout_width=\"68dp\"\n        android:layout_height=\"68dp\"\n        android:layout_marginBottom=\"@dimen/activity_vertical_margin\"\n        android:layout_marginLeft=\"16dp\"\n        android:layout_marginStart=\"16dp\"\n        android:layout_marginTop=\"@dimen/nav_header_vertical_spacing\"\n        android:elevation=\"16dp\"\n        android:fitsSystemWindows=\"true\"\n        app:srcCompat=\"@drawable/bookdash_b_vector\"\n        />\n\n  <!--  <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@id/imageViewBookdashIcon\"\n        android:layout_marginLeft=\"16dp\"\n        android:layout_marginStart=\"16dp\"\n        android:text=\"@string/book_dash_nav_header\"\n        android:textAppearance=\"@style/TextAppearance.AppCompat.Body1\"\n        tools:text=\"Book Dash\"/>-->\n\n    <View\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"1dp\"\n        android:layout_alignParentBottom=\"true\"\n        android:background=\"#eeeeee\"/>\n</RelativeLayout>",
            "java": "",
            "contains": [],
            "mock_data": {}
        },
        "app/src/main/res/menu/menu_drawer.xml": {
            "name": "app/src/main/res/menu/menu_drawer.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <group android:checkableBehavior=\"single\">\n        <item\n            android:id=\"@+id/action_all_books\"\n            android:icon=\"@drawable/ic_collections_bookmark_black_24dp\"\n            android:orderInCategory=\"1\"\n            android:title=\"@string/action_all_books\"\n            />\n        <item\n            android:id=\"@+id/action_downloads\"\n            android:icon=\"@drawable/ic_file_download_black_24dp\"\n            android:orderInCategory=\"2\"\n            android:title=\"@string/action_downloads\"\n            />\n\n        <item\n            android:id=\"@+id/action_about\"\n            android:icon=\"@drawable/ic_info_outline_black_24dp\"\n            android:orderInCategory=\"3\"\n            android:title=\"@string/action_about\"\n            app:showAsAction=\"never\"/>\n\n        <item\n            android:id=\"@+id/action_thanks\"\n            android:icon=\"@drawable/ic_people_outline_black_24dp\"\n            android:orderInCategory=\"4\"\n            android:title=\"@string/settings_thank_yous\"\n            app:showAsAction=\"never\"/>\n        <item\n            android:id=\"@+id/action_rate_app\"\n            android:icon=\"@drawable/ic_grade_black_24dp\"\n            android:orderInCategory=\"5\"\n            android:title=\"@string/rate_this_app\"\n            app:showAsAction=\"never\"/>\n        <item\n            android:id=\"@+id/action_invite_friends\"\n            android:icon=\"@drawable/ic_group_add_black_24dp\"\n            android:orderInCategory=\"6\"\n            android:title=\"@string/invite_friends\"\n            app:showAsAction=\"never\"/>\n        <item\n            android:id=\"@+id/action_settings\"\n            android:icon=\"@drawable/ic_settings_black_24dp\"\n            android:orderInCategory=\"7\"\n            android:title=\"@string/action_settings\"\n            app:showAsAction=\"never\"/>\n    </group>\n</menu>",
            "java": "",
            "contains": [],
            "mock_data": {}
        }
    },
    "app/src/main/res/layout/activity_about.xml": {
        "app/src/main/res/layout/activity_about.xml": {
            "name": "app/src/main/res/layout/activity_about.xml",
            "content": "<androidx.coordinatorlayout.widget.CoordinatorLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\">\n\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/appbackground\"/>\n\n    <com.google.android.material.appbar.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"?attr/actionBarSize\"\n        android:fitsSystemWindows=\"true\">\n\n        <androidx.appcompat.widget.Toolbar\n            android:id=\"@+id/toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"?attr/colorPrimary\"\n            android:fitsSystemWindows=\"true\"\n            android:minHeight=\"?attr/actionBarSize\"\n            android:title=\"@string/action_about\"\n            app:layout_scrollFlags=\"scroll|enterAlways\"\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n            app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"\n            />\n\n\n    </com.google.android.material.appbar.AppBarLayout>\n\n    <ScrollView\n        android:id=\"@+id/nestedScrollView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginTop=\"?attr/actionBarSize\"\n        android:fitsSystemWindows=\"true\"\n        >\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"vertical\"\n            android:paddingBottom=\"@dimen/activity_vertical_margin\"\n            android:paddingTop=\"@dimen/activity_vertical_margin\">\n\n            <androidx.cardview.widget.CardView\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginBottom=\"4dp\"\n                    android:layout_marginLeft=\"@dimen/activity_horizontal_margin\"\n                    android:layout_marginRight=\"@dimen/activity_horizontal_margin\"\n\n                    android:layout_marginTop=\"4dp\"\n                    android:padding=\"16dp\"\n                    app:cardCornerRadius=\"8dp\">\n\n                <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"vertical\">\n\n                    <TextView\n                            android:id=\"@+id/text_view_about\"\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginBottom=\"24dp\"\n                            android:layout_marginLeft=\"16dp\"\n                            android:layout_marginRight=\"16dp\"\n                            android:layout_marginTop=\"16dp\"\n                            android:breakStrategy=\"high_quality\"\n                            android:hyphenationFrequency=\"full\"\n                            android:text=\"@string/heading_about\"\n                            android:textAppearance=\"?android:attr/textAppearanceMedium\"\n                            android:textIsSelectable=\"true\"\n                            android:textSize=\"16sp\">\n\n                        <requestFocus/>\n                    </TextView>\n                </LinearLayout>\n            </androidx.cardview.widget.CardView>\n\n            <androidx.cardview.widget.CardView\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginBottom=\"4dp\"\n                    android:layout_marginLeft=\"@dimen/activity_horizontal_margin\"\n                    android:layout_marginRight=\"@dimen/activity_horizontal_margin\"\n\n                    android:layout_marginTop=\"4dp\"\n                    android:padding=\"16dp\"\n                    app:cardCornerRadius=\"8dp\">\n\n                <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"vertical\"\n                        android:padding=\"8dp\">\n\n                    <ImageView\n                            android:id=\"@+id/imageViewLogo\"\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"200dp\"\n                            android:layout_gravity=\"center\"\n                            android:layout_marginBottom=\"8dp\"\n                            android:layout_marginLeft=\"8dp\"\n                            android:layout_marginRight=\"8dp\"\n                            android:layout_marginTop=\"8dp\"\n                            app:srcCompat=\"@drawable/bookdash_logo\"/>\n\n\n                </LinearLayout>\n\n            </androidx.cardview.widget.CardView>\n\n            <androidx.cardview.widget.CardView\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginBottom=\"4dp\"\n                    android:layout_marginLeft=\"@dimen/activity_horizontal_margin\"\n                    android:layout_marginRight=\"@dimen/activity_horizontal_margin\"\n\n                    android:layout_marginTop=\"4dp\"\n                    android:padding=\"16dp\"\n                    app:cardCornerRadius=\"8dp\">\n\n                <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"vertical\">\n\n                    <TextView\n                            android:id=\"@+id/textViewHeading\"\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginBottom=\"8dp\"\n                            android:layout_marginLeft=\"16dp\"\n                            android:layout_marginRight=\"16dp\"\n                            android:layout_marginTop=\"16dp\"\n                            android:text=\"@string/why_bookdash_heading\"\n                            android:textAppearance=\"?android:attr/textAppearanceLarge\"\n                            android:textIsSelectable=\"true\"\n                            android:textSize=\"24sp\"/>\n\n                    <TextView\n                            android:id=\"@+id/text_why_bookdash\"\n                            style=\"@style/TextAppearance.AppCompat.Medium\"\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginBottom=\"16dp\"\n\n                            android:layout_marginLeft=\"16dp\"\n                            android:layout_marginRight=\"16dp\"\n                            android:breakStrategy=\"high_quality\"\n                            android:fontFamily=\"sans-serif\"\n                            android:hyphenationFrequency=\"normal\"\n                            android:text=\"@string/why_bookdash\"\n                            android:textIsSelectable=\"true\"\n                            android:textSize=\"16sp\"/>\n\n                    <Button\n                            android:id=\"@+id/button_learn_more\"\n                            style=\"@style/Widget.AppCompat.Button.Borderless\"\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginBottom=\"8dp\"\n                            android:layout_marginLeft=\"8dp\"\n                            android:layout_marginRight=\"8dp\"\n                            android:fontFamily=\"sans-serif\"\n                            android:text=\"@string/learn_more\"\n                            android:textColor=\"@color/colorAccent\"/>\n                </LinearLayout>\n\n            </androidx.cardview.widget.CardView>\n\n\n        </LinearLayout>\n\n\n    </ScrollView>\n\n</androidx.coordinatorlayout.widget.CoordinatorLayout>\n\n\n",
            "java": "package org.bookdash.android.presentation.about;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.text.Html;\nimport android.text.util.Linkify;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.fragment.app.Fragment;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.presentation.main.NavDrawerInterface;\n\npublic class AboutFragment extends Fragment implements AboutContract.View {\n\n    private AboutPresenter aboutPresenter;\n    private NavDrawerInterface navDrawerInterface;\n\n    public static AboutFragment newInstance() {\n\n        Bundle args = new Bundle();\n\n        AboutFragment fragment = new AboutFragment();\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n        return inflater.inflate(R.layout.activity_about, container, false);\n    }\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        aboutPresenter = new AboutPresenter(this);\n\n        Toolbar toolbar = (Toolbar) view.findViewById(R.id.toolbar);\n        navDrawerInterface.setToolbar(toolbar);\n        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();\n\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n            actionBar.setHomeAsUpIndicator(R.drawable.ic_menu_24dp);\n            actionBar.setTitle(R.string.about_heading);\n        }\n\n        TextView textViewWhyBookDash = (TextView) view.findViewById(R.id.text_why_bookdash);\n        textViewWhyBookDash.setText(Html.fromHtml(getString(R.string.why_bookdash)));\n        Linkify.addLinks(textViewWhyBookDash, Linkify.ALL);\n\n        TextView textViewHeading = (TextView) view.findViewById(R.id.text_view_about);\n        textViewHeading.setText(Html.fromHtml(getString(R.string.heading_about)));\n        Linkify.addLinks(textViewHeading, Linkify.ALL);\n\n        Button learnMoreBookDash = (Button) view.findViewById(R.id.button_learn_more);\n        learnMoreBookDash.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                aboutPresenter.clickLearnMore();\n            }\n        });\n\n\n        textViewHeading.findFocus();\n    }\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof NavDrawerInterface) {\n            navDrawerInterface = (NavDrawerInterface) context;\n\n        }\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        navDrawerInterface = null;\n    }\n\n\n    @Override\n    public void showLearnMorePage(String url) {\n        Intent intent = new Intent(Intent.ACTION_VIEW);\n        intent.setData(Uri.parse(url));\n        startActivity(intent);\n    }\n}\n",
            "contains": [],
            "mock_data": {}
        }
    },
    "app/src/main/res/layout/fragment_settings.xml": {
        "app/src/main/res/layout/fragment_settings.xml": {
            "name": "app/src/main/res/layout/fragment_settings.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <com.google.android.material.appbar.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n\n        <androidx.appcompat.widget.Toolbar\n            android:id=\"@+id/toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?actionBarSize\"\n            android:background=\"?colorPrimary\"\n            android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"\n            app:navigationIcon=\"@drawable/ic_menu_24dp\"\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n            app:title=\"@string/settings_title\" />\n\n    </com.google.android.material.appbar.AppBarLayout>\n\n\n    <FrameLayout\n        android:id=\"@android:id/list_container\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:targetApi=\"n\" />\n</LinearLayout>",
            "java": "package org.bookdash.android.presentation.settings;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.MenuItem;\nimport android.view.View;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.preference.Preference;\nimport androidx.preference.PreferenceFragmentCompat;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.data.settings.SettingsApiImpl;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.presentation.main.NavDrawerInterface;\n\nimport java.util.ArrayList;\n\nimport za.co.riggaroo.materialhelptutorial.TutorialItem;\nimport za.co.riggaroo.materialhelptutorial.tutorial.MaterialTutorialActivity;\n\n\npublic class SettingsFragment extends PreferenceFragmentCompat implements SettingsContract.View {\n    public static final String TUTORIAL_DISPLAY_KEY = \"tutorial_display_key\";\n    SettingsPresenter presenter;\n    private NavDrawerInterface navDrawerInterface;\n\n    @Override\n    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n        presenter = new SettingsPresenter(Injection.provideTutorialRepo(getContext()), Injection.provideAnalytics(),\n                Injection.provideSettingsRepo(getContext()));\n        presenter.attachView(this);\n\n        addPreferencesFromResource(R.xml.app_preferences);\n        setupTutorialDisplayPreference();\n        setupNewBookNotificationPreference();\n\n    }\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof NavDrawerInterface) {\n            navDrawerInterface = (NavDrawerInterface) context;\n\n        }\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        navDrawerInterface = null;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n\n            case android.R.id.home:\n                if (navDrawerInterface != null) {\n                    navDrawerInterface.openNavDrawer();\n                }\n                return true;\n\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        Toolbar toolbar =  view.findViewById(R.id.toolbar);\n\n        navDrawerInterface.setToolbar(toolbar);\n\n        final ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();\n\n\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n        }\n    }\n\n    private void setupTutorialDisplayPreference() {\n        Preference tutorialPreferenceItem = findPreference(TUTORIAL_DISPLAY_KEY);\n        tutorialPreferenceItem.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {\n            @Override\n            public boolean onPreferenceClick(Preference preference) {\n                presenter.openTutorialScreen();\n                return true;\n            }\n        });\n    }\n\n    private void setupNewBookNotificationPreference() {\n        Preference notificationPreference = findPreference(SettingsApiImpl.PREF_IS_SUBSCRIBED_NEW_BOOK_NOTIFICATIONS);\n        notificationPreference.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {\n            @Override\n            public boolean onPreferenceChange(final Preference preference, final Object newValue) {\n                presenter.setNewBookNotificationSubscriptionStatus((Boolean) newValue);\n                return true;\n            }\n        });\n    }\n\n    @Override\n    public void showTutorialScreen(ArrayList<TutorialItem> tutorialItems) {\n        Intent mainAct = new Intent(getContext(), MaterialTutorialActivity.class);\n        mainAct.putParcelableArrayListExtra(MaterialTutorialActivity.MATERIAL_TUTORIAL_ARG_TUTORIAL_ITEMS,\n                tutorialItems);\n        startActivity(mainAct);\n    }\n}\n",
            "contains": [
                "app/src/main/res/xml/app_preferences.xml"
            ],
            "mock_data": {}
        },
        "app/src/main/res/xml/app_preferences.xml": {
            "name": "app/src/main/res/xml/app_preferences.xml",
            "content": "<androidx.preference.PreferenceScreen\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <androidx.preference.Preference\n        android:key=\"tutorial_display_key\"\n        android:summary=\"@string/show_tutorial_settings_summary\"\n        android:title=\"@string/show_tutorial_settings_title\" />\n\n    <androidx.preference.SwitchPreferenceCompat\n        android:defaultValue=\"true\"\n        android:key=\"pref_new_book_notification\"\n        android:summary=\"@string/settings_new_book_notifications_summary\"\n        android:title=\"@string/settings_new_book_notifications\"\n        />\n</androidx.preference.PreferenceScreen>",
            "java": "",
            "contains": [],
            "mock_data": {}
        }
    },
    "app/src/main/res/layout/fragment_list_books.xml": {
        "app/src/main/res/layout/fragment_list_books.xml": {
            "name": "app/src/main/res/layout/fragment_list_books.xml",
            "content": "<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    tools:context=\".presentation.main.MainActivity\">\n\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/appbackground\" />\n\n    <com.google.android.material.appbar.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        android:theme=\"@style/AppTheme.AppBarOverlay\">\n\n        <androidx.appcompat.widget.Toolbar\n            android:id=\"@+id/toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            android:background=\"?attr/colorPrimary\"\n            android:title=\"@string/book_dash\"\n            app:layout_scrollFlags=\"scroll|enterAlways\"\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\" />\n\n        <LinearLayout\n            android:id=\"@+id/container_language\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"@drawable/language_selector\"\n            android:gravity=\"right\"\n            android:paddingLeft=\"4dp\"\n            android:paddingTop=\"4dp\"\n            android:paddingRight=\"@dimen/book_list_language_bar_right_padding\"\n            android:paddingBottom=\"4dp\"\n            app:layout_scrollFlags=\"scroll|enterAlways\">\n\n            <androidx.appcompat.widget.AppCompatTextView\n                android:id=\"@+id/text_current_language\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:drawablePadding=\"4dp\"\n                android:ellipsize=\"end\"\n                android:fontFamily=\"sans-serif\"\n                android:maxLines=\"1\"\n                android:text=\"@string/language_selection_heading\"\n                android:textColor=\"@color/text_color_primary_dark\"\n                android:textSize=\"16sp\"\n                app:drawableRightCompat=\"@drawable/ic_arrow_down_24\" />\n        </LinearLayout>\n    </com.google.android.material.appbar.AppBarLayout>\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <fr.castorflex.android.circularprogressbar.CircularProgressBar\n            android:id=\"@+id/activity_loading_books\"\n            android:layout_width=\"48dp\"\n            android:layout_height=\"48dp\"\n            android:layout_alignParentBottom=\"false\"\n            android:layout_centerInParent=\"true\"\n            android:layout_gravity=\"center\"\n            android:layout_marginTop=\"16dp\"\n            android:layout_marginBottom=\"8dp\"\n            android:foregroundGravity=\"center|center_vertical|center_horizontal\"\n            android:indeterminate=\"true\"\n            app:cpb_color=\"@color/colorAccent\"\n            app:cpb_max_sweep_angle=\"300\"\n            app:cpb_min_sweep_angle=\"10\"\n            app:cpb_rotation_speed=\"1.0\"\n            app:cpb_stroke_width=\"4dp\"\n            app:cpb_sweep_speed=\"1.0\"\n            />\n    </RelativeLayout>\n\n\n    <LinearLayout\n        android:id=\"@+id/linear_layout_error\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:orientation=\"vertical\"\n        android:visibility=\"gone\">\n\n        <ImageView\n            android:id=\"@+id/image_view_sad_cloud\"\n            android:layout_width=\"150dp\"\n            android:layout_height=\"150dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:src=\"@drawable/lb_ic_sad_cloud\" />\n\n        <TextView\n            android:id=\"@+id/text_view_error_screen\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:layout_margin=\"8dp\"\n            android:text=\"@string/error_loading_books\" />\n\n        <Button\n            android:id=\"@+id/button_retry\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"@string/button_retry_text\" />\n    </LinearLayout>\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/recycler_view_books\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:clipToPadding=\"false\"\n        android:fitsSystemWindows=\"true\"\n        android:gravity=\"center_horizontal\"\n        android:paddingLeft=\"@dimen/book_list_padding\"\n        android:paddingTop=\"@dimen/book_list_padding\"\n        android:paddingRight=\"@dimen/book_list_padding\"\n        android:scrollbars=\"vertical\"\n        android:visibility=\"visible\"\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n        tools:listitem=\"@layout/list_item_book\" />\n\n</androidx.coordinatorlayout.widget.CoordinatorLayout>",
            "java": "package org.bookdash.android.presentation.listbooks;\n\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.GridLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.android.material.snackbar.Snackbar;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.domain.model.firebase.FireBookDetails;\nimport org.bookdash.android.presentation.bookinfo.BookInfoActivity;\nimport org.bookdash.android.presentation.main.NavDrawerInterface;\nimport org.bookdash.android.presentation.search.SearchActivity;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport fr.castorflex.android.circularprogressbar.CircularProgressBar;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.schedulers.Schedulers;\n\n\npublic class ListBooksFragment extends Fragment implements ListBooksContract.View {\n\n    private static final String TAG = ListBooksFragment.class.getCanonicalName();\n    private static final int BOOK_DETAIL_REQUEST_CODE = 43;\n    private ListBooksContract.Presenter listBooksPresenter;\n    private Button buttonRetry;\n    private RecyclerView recyclerViewBooks;\n    private CircularProgressBar circularProgressBar;\n    private LinearLayout linearLayoutErrorScreen;\n    private TextView textViewErrorMessage;\n    private LinearLayout linearLayoutContainerLanguage;\n    private TextView textViewCurrentLanguage;\n    private NavDrawerInterface navDrawerInterface;\n    private BookAdapter bookAdapter;\n    private View.OnClickListener bookClickListener = new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            BookViewHolder viewHolder = (BookViewHolder) v.getTag();\n            FireBookDetails bookDetailResult = viewHolder.bookDetail;\n            BookInfoActivity.startBookInfo(ListBooksFragment.this.getActivity(), bookDetailResult);\n        }\n    };\n    private DialogInterface.OnClickListener languageClickListener = new DialogInterface.OnClickListener() {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            if (dialog != null) {\n                dialog.dismiss();\n            }\n\n            listBooksPresenter.saveSelectedLanguage(which);\n\n        }\n    };\n\n    public static Fragment newInstance() {\n        return new ListBooksFragment();\n    }\n\n    @Override\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        Log.d(TAG,\n                \"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], resultCode = [\" + resultCode + \"], data = [\" + data + \"]\");\n\n        if (requestCode == BOOK_DETAIL_REQUEST_CODE) {\n            if (bookAdapter != null) {\n                bookAdapter.notifyDataSetChanged();\n            }\n        }\n    }\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof NavDrawerInterface) {\n            navDrawerInterface = (NavDrawerInterface) context;\n\n        }\n    }\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,\n                             @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_list_books, container, false);\n    }\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        listBooksPresenter = new ListBooksPresenter(Injection.provideSettingsRepo(getActivity()),\n                Injection.provideBookService(), Injection.provideAnalytics(), Schedulers.io(),\n                AndroidSchedulers.mainThread());\n        listBooksPresenter.attachView(this);\n        circularProgressBar = view.findViewById(R.id.activity_loading_books);\n        linearLayoutErrorScreen = view.findViewById(R.id.linear_layout_error);\n        buttonRetry = view.findViewById(R.id.button_retry);\n        textViewErrorMessage = view.findViewById(R.id.text_view_error_screen);\n        linearLayoutContainerLanguage = view.findViewById(R.id.container_language);\n        textViewCurrentLanguage = view.findViewById(R.id.text_current_language);\n        recyclerViewBooks = view.findViewById(R.id.recycler_view_books);\n        recyclerViewBooks.setLayoutManager(\n                new GridLayoutManager(getActivity(), getContext().getResources().getInteger(R.integer.book_span)));\n        buttonRetry.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Log.d(TAG, \"Retry button clicked\");\n                listBooksPresenter.loadBooksForLanguagePreference();\n            }\n        });\n        linearLayoutContainerLanguage.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                listBooksPresenter.clickOpenLanguagePopover();\n            }\n        });\n        Toolbar toolbar = view.findViewById(R.id.toolbar);\n        if (navDrawerInterface != null) {\n            navDrawerInterface.setToolbar(toolbar);\n        }\n        final ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();\n\n\n        if (actionBar != null) {\n            actionBar.setHomeAsUpIndicator(R.drawable.ic_menu_24dp);\n            actionBar.setDisplayHomeAsUpEnabled(true);\n            actionBar.setTitle(getString(R.string.book_dash));\n        }\n        listBooksPresenter.loadLanguages();\n        listBooksPresenter.loadBooksForLanguagePreference();\n        setHasOptionsMenu(true);\n    }\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        listBooksPresenter.detachView();\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        navDrawerInterface = null;\n    }\n\n    @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n        inflater.inflate(R.menu.menu_main, menu);\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        if (item.getItemId() == R.id.action_search_books) {\n            listBooksPresenter.openSearchScreen();\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    private void runUiThread(Runnable runnable) {\n        Activity activity = getActivity();\n        if (activity == null) {\n            return;\n        }\n        activity.runOnUiThread(runnable);\n    }\n\n\n    @Override\n    public void showErrorScreen(final boolean show, final String errorMessage, final boolean showRetryButton) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                if (show) {\n                    linearLayoutErrorScreen.setVisibility(View.VISIBLE);\n                    recyclerViewBooks.setVisibility(View.GONE);\n                } else {\n                    linearLayoutErrorScreen.setVisibility(View.GONE);\n                    recyclerViewBooks.setVisibility(View.VISIBLE);\n                }\n                buttonRetry.setVisibility(showRetryButton ? View.VISIBLE : View.GONE);\n                textViewErrorMessage.setText(errorMessage);\n            }\n        });\n\n\n    }\n\n\n    @Override\n    public void showLoading(final boolean visible) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n//                if (visible) {\n                if (false){\n                    linearLayoutErrorScreen.setVisibility(View.GONE);\n                    buttonRetry.setVisibility(View.GONE);\n                    recyclerViewBooks.setVisibility(View.GONE);\n                    circularProgressBar.setVisibility(View.VISIBLE);\n                } else {\n                    linearLayoutErrorScreen.setVisibility(View.GONE);\n                    buttonRetry.setVisibility(View.GONE);\n                    circularProgressBar.setVisibility(View.GONE);\n                    recyclerViewBooks.setVisibility(View.GONE);\n                }\n\n            }\n        });\n\n    }\n\n\n    @Override\n    public void showBooks(final List<FireBookDetails> bookDetailList) {\n//        runUiThread(new Runnable() {\n//            @Override\n//            public void run() {\n//                if (bookDetailList.isEmpty()) {\n//                    showErrorScreen(true, getString(R.string.no_books_available), true);\n//                }\n//                bookAdapter = new BookAdapter(bookDetailList, ListBooksFragment.this.getActivity(), bookClickListener);\n//                recyclerViewBooks.setAdapter(bookAdapter);\n//            }\n//        });\n    //\u4f7f\u7528\u6a21\u62df\u6570\u636e\n        System.out.println(\"\u5f00\u59cb\u4f7f\u7528\u6a21\u62df\u6570\u636e.........\");\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                // \u4f7f\u7528\u6a21\u62df\u6570\u636e\n                List<FireBookDetails> mockBooks = generateMockBooks();\n\n                if (mockBooks.isEmpty()) {\n                    showErrorScreen(true, getString(R.string.no_books_available), true);\n                }\n                bookAdapter = new BookAdapter(mockBooks, ListBooksFragment.this.getActivity(), bookClickListener);\n                recyclerViewBooks.setAdapter(bookAdapter);\n            }\n        });\n\n\n    }\n\n\n    @Override\n    public void showSnackBarError(final int message) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                Snackbar.make(recyclerViewBooks, message, Snackbar.LENGTH_LONG).show();\n            }\n        });\n    }\n\n\n    @Override\n    public void showLanguagePopover(final String[] languages, final int selected) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                AlertDialog alertDialogLanguages = new AlertDialog.Builder(getActivity())\n                        .setTitle(getString(R.string.language_selection_heading))\n                        .setSingleChoiceItems(languages, selected, languageClickListener).create();\n                alertDialogLanguages.show();\n            }\n        });\n\n    }\n\n    @Override\n    public void startSearchActivity() {\n        SearchActivity.start(getActivity());\n    }\n\n    @Override\n    public void onSelectedLanguageChanged(final String selectedLanguage) {\n        runUiThread(new Runnable() {\n            @Override\n            public void run() {\n                textViewCurrentLanguage.setText(selectedLanguage);\n            }\n        });\n    }\n    /**\n     * \u6a21\u62df\u6570\u636e\u751f\u6210\u65b9\u6cd5\n     * **/\n    private List<FireBookDetails> generateMockBooks() {\n        List<FireBookDetails> mockBooks = new ArrayList<>();\n\n        for (int i = 1; i <= 10; i++) {\n            FireBookDetails book = new FireBookDetails();\n            book.setBookId(\"book_\" + i);\n            book.setBookTitle(\"Book Title \" + i);\n            book.setBookDescription(\"Book Description \" + i);\n            book.setBookCoverPageUrl(\"http://example.com/book_cover_\" + i + \".jpg\");\n            mockBooks.add(book);\n        }\n\n        return mockBooks;\n    }\n\n}\n",
            "contains": [
                "app/src/main/res/menu/menu_main.xml",
                "app/src/main/res/layout/list_item_book.xml"
            ],
            "mock_data": {}
        },
        "app/src/main/res/menu/menu_main.xml": {
            "name": "app/src/main/res/menu/menu_main.xml",
            "content": "<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    tools:context=\".MainActivity\">\n\n    <item\n        android:id=\"@+id/action_search_books\"\n        android:contentDescription=\"@string/action_search\"\n        android:icon=\"@drawable/ic_search\"\n        android:orderInCategory=\"1\"\n        android:title=\"@string/action_search\"\n        app:showAsAction=\"ifRoom\" />\n\n</menu>\n",
            "java": "",
            "contains": [],
            "mock_data": {}
        },
        "app/src/main/res/layout/list_item_book.xml": {
            "name": "app/src/main/res/layout/list_item_book.xml",
            "content": "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n    <androidx.cardview.widget.CardView\n            android:id=\"@+id/card_view\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_margin=\"8dp\"\n            android:foreground=\"@drawable/book_selector\"\n            app:cardCornerRadius=\"8dp\"\n            >\n\n        <androidx.constraintlayout.widget.ConstraintLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\">\n\n            <ImageView\n                    android:id=\"@+id/imageViewBookCover\"\n                    android:layout_width=\"0dp\"\n                    android:layout_height=\"0dp\"\n                    android:src=\"@drawable/bookdash_placeholder\"\n                    app:layout_constraintBottom_toTopOf=\"@+id/textViewBookName\"\n                    app:layout_constraintDimensionRatio=\"1:1\"\n                    app:layout_constraintEnd_toEndOf=\"parent\"\n                    app:layout_constraintStart_toStartOf=\"parent\"\n                    app:layout_constraintTop_toTopOf=\"parent\"/>\n\n            <TextView\n                    android:id=\"@+id/textViewBookName\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_gravity=\"center_horizontal\"\n                    android:layout_marginBottom=\"8dp\"\n                    android:ellipsize=\"end\"\n                    android:lines=\"2\"\n                    android:maxLines=\"2\"\n                    android:paddingLeft=\"8dp\"\n                    android:paddingRight=\"8dp\"\n                    android:textColor=\"@color/text_color_primary_dark\"\n                    android:textSize=\"16sp\"\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\n                    app:layout_constraintLeft_toLeftOf=\"parent\"\n                    app:layout_constraintStart_toStartOf=\"parent\"\n                    tools:text=\"Giraff really long named giraffee\"/>\n\n\n            <ImageView\n                    android:id=\"@+id/imageViewBookDownloaded\"\n                    android:layout_width=\"16dp\"\n                    android:layout_height=\"16dp\"\n                    android:layout_margin=\"4dp\"\n                    android:foregroundGravity=\"bottom|right\"\n                    android:tint=\"@color/colorAccent\"\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\n                    app:layout_constraintEnd_toEndOf=\"parent\"\n                    app:layout_constraintRight_toRightOf=\"parent\"\n                    app:srcCompat=\"@drawable/ic_cloud_download_black_24dp\"/>\n\n        </androidx.constraintlayout.widget.ConstraintLayout>\n\n    </androidx.cardview.widget.CardView>\n</LinearLayout>\n",
            "java": "",
            "contains": [],
            "mock_data": {}
        }
    },
    "app/src/main/res/layout/fragment_downloads.xml": {
        "app/src/main/res/layout/fragment_downloads.xml": {
            "name": "app/src/main/res/layout/fragment_downloads.xml",
            "content": "<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                xmlns:tools=\"http://schemas.android.com/tools\"\n\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:fitsSystemWindows=\"true\"\n                tools:context=\".presentation.main.MainActivity\">\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/appbackground\"/>\n    <androidx.coordinatorlayout.widget.CoordinatorLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/recycler_view_list_downloads\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:clipToPadding=\"false\"\n            android:paddingTop=\"8dp\"\n            app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n            tools:listitem=\"@layout/list_item_download\">\n\n        </androidx.recyclerview.widget.RecyclerView>\n\n        <com.google.android.material.appbar.AppBarLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <androidx.appcompat.widget.Toolbar\n                android:id=\"@+id/toolbar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"?attr/colorPrimary\"\n                android:minHeight=\"?attr/actionBarSize\"\n                android:title=\"@string/book_dash\"\n                app:layout_scrollFlags=\"scroll|enterAlways\"\n                app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n                app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"/>\n\n\n        </com.google.android.material.appbar.AppBarLayout>\n    </androidx.coordinatorlayout.widget.CoordinatorLayout>\n\n    <fr.castorflex.android.circularprogressbar.CircularProgressBar\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/fragment_loading_downloads\"\n        android:layout_width=\"48dp\"\n        android:layout_height=\"48dp\"\n        android:layout_alignParentBottom=\"false\"\n        android:layout_centerInParent=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginTop=\"16dp\"\n        android:indeterminate=\"true\"\n        app:cpb_color=\"@color/colorAccent\"\n        app:cpb_max_sweep_angle=\"300\"\n        app:cpb_min_sweep_angle=\"10\"\n        app:cpb_rotation_speed=\"1.0\"\n        app:cpb_stroke_width=\"4dp\"\n        app:cpb_sweep_speed=\"1.0\"/>\n\n    <LinearLayout\n        android:id=\"@+id/linear_layout_error\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:orientation=\"vertical\"\n        tools:visibility=\"visible\"\n        android:visibility=\"gone\"\n        android:layout_marginLeft=\"16dp\"\n        android:layout_marginTop=\"16dp\">\n\n\n\n        <TextView\n            android:id=\"@+id/text_view_error_screen\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:layout_margin=\"8dp\"\n            android:textSize=\"16sp\"\n            android:background=\"@drawable/textbox\"\n            android:text=\"@string/error_loading_books\"\n            android:gravity=\"center_vertical|center_horizontal\"/>\n        <ImageView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"150dp\"\n            android:layout_gravity=\"center\"\n            android:src=\"@drawable/owl_reading_nobooks\"/>\n\n        <Button\n            android:id=\"@+id/button_retry\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"@string/button_retry_text\"/>\n    </LinearLayout>\n</RelativeLayout>",
            "java": "package org.bookdash.android.presentation.downloads;\n\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.android.material.snackbar.Snackbar;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.domain.model.firebase.FireBookDetails;\nimport org.bookdash.android.presentation.bookinfo.BookInfoActivity;\nimport org.bookdash.android.presentation.main.NavDrawerInterface;\n\nimport java.util.List;\n\nimport fr.castorflex.android.circularprogressbar.CircularProgressBar;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.schedulers.Schedulers;\n\n\npublic class DownloadsFragment extends Fragment implements DownloadsContract.View {\n\n    private RecyclerView listDownloadsRecyclerView;\n    private DownloadsContract.Presenter downloadsPresenter;\n    private DownloadsAdapter downloadsAdapter;\n    private LinearLayout linearLayoutErrorScreen;\n    private Button buttonRetry;\n    private TextView textViewErrorMessage;\n    private CircularProgressBar circularProgressBar;\n    private NavDrawerInterface navDrawerInterface;\n\n\n    public static DownloadsFragment newInstance() {\n        return new DownloadsFragment();\n    }\n\n    @Override\n    public void showDownloadedBooks(List<FireBookDetails> books) {\n        downloadsAdapter.setBooks(books);\n        downloadsAdapter.notifyDataSetChanged();\n        listDownloadsRecyclerView.setVisibility(View.VISIBLE);\n    }\n\n    @Override\n    public void showLoading(final boolean visible) {\n        circularProgressBar.setVisibility(visible ? View.VISIBLE : View.GONE);\n        listDownloadsRecyclerView.setVisibility(visible ? View.GONE : View.VISIBLE);\n    }\n\n    @Override\n    public void showErrorScreen(boolean show, String errorMessage, boolean showRetryButton) {\n        if (show) {\n            linearLayoutErrorScreen.setVisibility(View.VISIBLE);\n        } else {\n            linearLayoutErrorScreen.setVisibility(View.GONE);\n        }\n        buttonRetry.setVisibility(showRetryButton ? View.VISIBLE : View.GONE);\n        textViewErrorMessage.setText(errorMessage);\n\n    }\n\n    @Override\n    public void showSnackBarError(final int message) {\n        Snackbar.make(listDownloadsRecyclerView, message, Snackbar.LENGTH_LONG).show();\n    }\n\n    @Override\n    public void showSnackBarError(final String message) {\n        Snackbar.make(listDownloadsRecyclerView, message, Snackbar.LENGTH_LONG).show();\n\n\n    }\n\n    @Override\n    public void showNoBooksDownloadedMessage() {\n        showErrorScreen(true, getString(R.string.no_books_downloaded), false);\n        listDownloadsRecyclerView.setVisibility(View.GONE);\n\n\n    }\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof NavDrawerInterface) {\n            navDrawerInterface = (NavDrawerInterface) context;\n\n        }\n    }\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,\n                             @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_downloads, container, false);\n    }\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        listDownloadsRecyclerView = (RecyclerView) view.findViewById(R.id.recycler_view_list_downloads);\n        downloadsPresenter = new DownloadsPresenter(Injection.provideBookService(), Injection.provideDownloadService(),\n                Injection.provideAnalytics(), Schedulers.io(), AndroidSchedulers.mainThread(),\n                Schedulers.computation());\n        downloadsPresenter.attachView(this);\n        downloadsAdapter = new DownloadsAdapter(null, getActivity(), new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                DownloadsViewHolder downloadsViewHolder = (DownloadsViewHolder) v.getTag();\n                showDeleteDialog(downloadsViewHolder.book);\n\n            }\n        }, new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                DownloadsViewHolder downloadsViewHolder = (DownloadsViewHolder) v.getTag();\n                showBookDetails(downloadsViewHolder.book);\n            }\n        });\n        listDownloadsRecyclerView\n                .setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false));\n        listDownloadsRecyclerView.setAdapter(downloadsAdapter);\n\n        linearLayoutErrorScreen =  view.findViewById(R.id.linear_layout_error);\n        buttonRetry =  view.findViewById(R.id.button_retry);\n        textViewErrorMessage =  view.findViewById(R.id.text_view_error_screen);\n        circularProgressBar =  view.findViewById(R.id.fragment_loading_downloads);\n        Toolbar toolbar =  view.findViewById(R.id.toolbar);\n        if (navDrawerInterface != null) {\n            navDrawerInterface.setToolbar(toolbar);\n\n        }\n\n        final ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();\n\n        if (actionBar != null) {\n            actionBar.setHomeAsUpIndicator(R.drawable.ic_menu_24dp);\n            actionBar.setDisplayHomeAsUpEnabled(true);\n            actionBar.setTitle(getString(R.string.fragment_title_downloads));\n        }\n        downloadsPresenter.loadListDownloads();\n\n        setHasOptionsMenu(false);\n    }\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        downloadsPresenter.detachView();\n\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        navDrawerInterface = null;\n    }\n\n    @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n\n            case android.R.id.home:\n                if (navDrawerInterface != null) {\n                    navDrawerInterface.openNavDrawer();\n                }\n                return true;\n\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    private void showDeleteDialog(final FireBookDetails bookToDelete) {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(), R.style.AppCompatAlertDialogStyle);\n        builder.setTitle(getString(R.string.delete_book_confirmation));\n        builder.setMessage(getString(R.string.downloads_are_you_sure, bookToDelete.getBookTitle()));\n        builder.setPositiveButton(getString(R.string.delete_ok), new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                downloadsPresenter.deleteDownload(bookToDelete);\n            }\n        });\n        builder.setNegativeButton(getString(R.string.delete_cancel), null);\n        builder.show();\n    }\n\n    private void showBookDetails(FireBookDetails bookDetail) {\n        Intent intent = new Intent(getActivity(), BookInfoActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        intent.putExtra(BookInfoActivity.BOOK_PARCEL, bookDetail);\n        startActivity(intent);\n    }\n\n\n}\n",
            "contains": [],
            "mock_data": {}
        }
    },
    "app/src/main/res/layout/activity_book_details.xml": {
        "app/src/main/res/layout/activity_book_details.xml": {
            "name": "app/src/main/res/layout/activity_book_details.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\"\n              android:background=\"@color/background_floating_material_dark\"\n              android:orientation=\"vertical\">\n\n    <androidx.viewpager.widget.ViewPager\n        android:id=\"@+id/view_pager\"\n        android:padding=\"@dimen/padding_book\"\n        android:elevation=\"16dp\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/>\n\n</LinearLayout>",
            "java": "package org.bookdash.android.presentation.readbook\n\nimport android.os.Bundle\nimport android.view.ViewTreeObserver\nimport android.view.WindowManager\nimport android.widget.Toast\nimport androidx.lifecycle.Observer\nimport androidx.lifecycle.ViewModelProviders\nimport androidx.viewpager.widget.ViewPager\nimport com.google.firebase.crashlytics.FirebaseCrashlytics\nimport org.bookdash.android.R\nimport org.bookdash.android.domain.model.gson.BookPages\nimport org.bookdash.android.presentation.activity.BaseAppCompatActivity\n\n\nclass BookDetailActivity : BaseAppCompatActivity() {\n    private lateinit var viewPager: ViewPager\n\n    private lateinit var pageAdapter: PageAdapter\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_book_details)\n        window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON)\n\n        viewPager = findViewById(R.id.view_pager)\n        viewPager.viewTreeObserver.addOnPreDrawListener(object : ViewTreeObserver.OnPreDrawListener {\n            override fun onPreDraw(): Boolean {\n                viewPager.viewTreeObserver.removeOnPreDrawListener(this)\n                viewPager.translationX = viewPager.measuredWidth.toFloat()\n                viewPager.animate().translationXBy((-viewPager.measuredWidth).toFloat()).duration = 1000\n                return true\n            }\n        })\n        //val book = intent.getStringExtra(BOOK_ARG)\n        val bookPages = intent.getParcelableExtra<BookPages>(BOOK_PAGES)\n        if (bookPages == null) {\n            onBookPagesNull()\n            return\n        }\n        bookPages.pages.add(0, null)\n        val bookLocation = intent.getStringExtra(LOCATION_BOOK)\n        pageAdapter = PageAdapter(supportFragmentManager, bookPages.pages,\n                bookLocation)\n\n        viewPager.adapter = pageAdapter\n        viewPager.offscreenPageLimit = 1\n\n        setupViewModelListeners()\n    }\n\n    private fun setupViewModelListeners() {\n        val readBookViewModel = ViewModelProviders.of(this).get<ReadBookViewModel>(ReadBookViewModel::class.java)\n        readBookViewModel.pageBackEventTrigger.observe(this, Observer {\n            if (viewPager.currentItem != 0) {\n                viewPager.setCurrentItem(viewPager.currentItem - 1, true)\n            }\n        })\n        readBookViewModel.pageForwardEventTrigger.observe(this, Observer {\n            if (viewPager.currentItem != viewPager.childCount - 1) {\n                viewPager.setCurrentItem(viewPager.currentItem + 1, true)\n            }\n        })\n    }\n\n    /**\n     * Called when this Activity was launched with no book pages.\n     * TODO Remove this method once bookPages == null bug is fixed.\n     */\n    private fun onBookPagesNull() {\n        FirebaseCrashlytics.getInstance().recordException(Exception(\"Book pages null when opening book detail.\"))\n        Toast.makeText(applicationContext, R.string.failed_to_open_book, Toast.LENGTH_LONG).show()\n        finish()\n    }\n\n    override fun getScreenName(): String {\n        return \"BookDetailScreen\"\n    }\n\n    companion object {\n        val BOOK_PAGES = \"book_pages\"\n        val LOCATION_BOOK = \"book_location\"\n        val BOOK_ARG = \"book_obj\"\n    }\n\n\n}\n",
            "contains": [],
            "mock_data": {}
        }
    },
    "app/src/main/res/layout/activity_book_information.xml": {
        "app/src/main/res/layout/activity_book_information.xml": {
            "name": "app/src/main/res/layout/activity_book_information.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n    >\n\n    <data>\n\n        <import type=\"android.view.View\"/>\n\n        <import type=\"android.text.TextUtils\"/>\n\n        <variable\n            name=\"downloadClick\"\n            type=\"View.OnClickListener\"/>\n\n        <variable\n            name=\"bookInfo\"\n            type=\"org.bookdash.android.domain.model.firebase.FireBookDetails\"/>\n    </data>\n\n    <FrameLayout>\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <fr.castorflex.android.circularprogressbar.CircularProgressBar\n                android:id=\"@+id/activity_loading_book_info\"\n                android:layout_width=\"48dp\"\n                android:layout_height=\"48dp\"\n                android:layout_alignParentBottom=\"false\"\n                android:layout_centerInParent=\"true\"\n                android:layout_marginBottom=\"8dp\"\n                android:layout_marginTop=\"16dp\"\n                android:indeterminate=\"true\"\n                app:cpb_color=\"@color/colorAccent\"\n                app:cpb_max_sweep_angle=\"300\"\n                app:cpb_min_sweep_angle=\"10\"\n                app:cpb_rotation_speed=\"1.0\"\n                app:cpb_stroke_width=\"4dp\"\n                app:cpb_sweep_speed=\"1.0\"/>\n\n            <LinearLayout\n                android:id=\"@+id/linear_layout_error\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerInParent=\"true\"\n                android:orientation=\"vertical\"\n                android:visibility=\"gone\">\n\n                <ImageView\n                    android:id=\"@+id/image_view_sad_cloud\"\n                    android:layout_width=\"150dp\"\n                    android:layout_height=\"150dp\"\n                    android:layout_gravity=\"center_horizontal\"\n                    android:src=\"@drawable/lb_ic_sad_cloud\"/>\n\n                <TextView\n                    android:id=\"@+id/text_view_error_screen\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_gravity=\"center\"\n                    android:layout_margin=\"8dp\"\n                    android:text=\"@string/error_loading_books\"/>\n\n                <Button\n                    android:id=\"@+id/button_retry\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_gravity=\"center_horizontal\"\n                    android:text=\"@string/button_retry_text\"/>\n            </LinearLayout>\n        </RelativeLayout>\n\n        <androidx.coordinatorlayout.widget.CoordinatorLayout\n            android:id=\"@+id/coordinator_layout_content\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:fitsSystemWindows=\"true\"\n            android:visibility=\"visible\">\n\n            <ImageView\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:scaleType=\"centerCrop\"\n                android:src=\"@drawable/appbackground\"/>\n\n\n            <com.google.android.material.appbar.AppBarLayout\n                android:id=\"@+id/app_bar_layout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"200dp\"\n                android:fitsSystemWindows=\"true\"\n                android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\">\n\n                <com.google.android.material.appbar.CollapsingToolbarLayout\n                    android:id=\"@+id/collapsing_toolbar\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    app:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n                    app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n                    app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"\n                    app:title=\"@{bookInfo.bookTitle}\">\n\n                    <ImageView\n                        android:id=\"@+id/image_view_book_cover\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:scaleType=\"centerCrop\"\n                        android:transitionName=\"@string/transition_book\"\n\n                        app:layout_collapseMode=\"parallax\"\n                        app:layout_collapseParallaxMultiplier=\"0.7\"/>\n\n                    <View\n                        android:id=\"@+id/toolbar_background_gradient\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"match_parent\"/>\n\n                    <androidx.appcompat.widget.Toolbar\n                        android:id=\"@+id/toolbar\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"?attr/actionBarSize\"\n                        app:layout_collapseMode=\"pin\"\n                        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n                        app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"/>\n\n                </com.google.android.material.appbar.CollapsingToolbarLayout>\n\n            </com.google.android.material.appbar.AppBarLayout>\n\n            <androidx.core.widget.NestedScrollView\n                android:id=\"@+id/scrollViewBookInfo\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:visibility=\"visible\"\n\n                app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:orientation=\"vertical\"\n                    android:paddingTop=\"24dp\">\n\n                    <androidx.cardview.widget.CardView\n                            android:id=\"@+id/card_view_main_book_info\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginBottom=\"4dp\"\n                            android:layout_marginLeft=\"@dimen/activity_horizontal_margin\"\n                            android:layout_marginRight=\"@dimen/activity_horizontal_margin\"\n\n                            android:layout_marginTop=\"8dp\"\n                            android:visibility=\"@{TextUtils.isEmpty(bookInfo.bookDescription) ? View.GONE : View.VISIBLE}\"\n                            app:cardCornerRadius=\"8dp\"\n                            >\n\n                        <RelativeLayout\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\"wrap_content\"\n                                android:orientation=\"vertical\">\n\n                            <TextView\n                                    android:id=\"@+id/textview_about_heading\"\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"48dp\"\n                                    android:layout_marginLeft=\"16dp\"\n                                    android:layout_marginRight=\"16dp\"\n                                    android:fontFamily=\"sans-serif\"\n                                    android:gravity=\"center_vertical\"\n                                    android:text=\"@string/about_book_info\"\n                                    android:textColor=\"@color/text_secondary_dark\"\n                                    android:textSize=\"14sp\"/>\n\n                            <TextView\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"48dp\"\n                                    android:layout_alignParentEnd=\"false\"\n                                    android:layout_alignParentRight=\"true\"\n                                    android:layout_marginBottom=\"16dp\"\n                                    android:layout_marginLeft=\"16dp\"\n                                    android:layout_marginRight=\"16dp\"\n                                    android:layout_toRightOf=\"@id/textview_about_heading\"\n                                    android:fontFamily=\"sans-serif\"\n                                    android:gravity=\"center_vertical|right\"\n                                    android:text=\"@{bookInfo.getCreatedDateFormatted()}\"\n                                    android:textColor=\"@color/text_secondary_dark\"\n                                    android:textSize=\"14sp\"\n                                    />\n\n\n                            <TextView\n                                    android:layout_width=\"match_parent\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:layout_below=\"@id/textview_about_heading\"\n                                    android:layout_marginBottom=\"16dp\"\n                                    android:layout_marginLeft=\"16dp\"\n                                    android:layout_marginRight=\"16dp\"\n                                    android:layout_marginTop=\"2dp\"\n                                    android:fontFamily=\"sans-serif\"\n                                    android:text=\"@{bookInfo.bookDescription}\"\n                                    android:textColor=\"@color/text_color_primary_dark\"\n                                    android:textSize=\"16sp\"/>\n\n                        </RelativeLayout>\n\n                    </androidx.cardview.widget.CardView>\n\n                    <androidx.cardview.widget.CardView\n                            android:id=\"@+id/contributor_card\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginBottom=\"4dp\"\n                            android:layout_marginLeft=\"@dimen/activity_horizontal_margin\"\n                            android:layout_marginRight=\"@dimen/activity_horizontal_margin\"\n                            android:layout_marginTop=\"8dp\"\n                            android:paddingTop=\"4dp\"\n                            android:visibility=\"visible\"\n                            app:cardCornerRadius=\"8dp\"\n                            >\n\n                        <LinearLayout\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\"wrap_content\"\n                                android:orientation=\"vertical\">\n\n                            <TextView\n                                    android:layout_width=\"match_parent\"\n                                    android:layout_height=\"48dp\"\n                                    android:layout_marginLeft=\"16dp\"\n                                    android:layout_marginRight=\"16dp\"\n                                    android:fontFamily=\"sans-serif\"\n                                    android:gravity=\"center_vertical\"\n                                    android:text=\"@string/contributors\"\n                                    android:textColor=\"@color/text_secondary_dark\"\n                                    android:textSize=\"14sp\"/>\n\n                            <androidx.recyclerview.widget.RecyclerView\n                                    android:id=\"@+id/recyclerview_contributors\"\n                                    android:layout_width=\"match_parent\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:orientation=\"vertical\">\n\n                            </androidx.recyclerview.widget.RecyclerView>\n\n\n                        </LinearLayout>\n\n                    </androidx.cardview.widget.CardView>\n                </LinearLayout>\n\n            </androidx.core.widget.NestedScrollView>\n\n            <view\n                android:id=\"@+id/fab_download\"\n                class=\"mbanje.kurt.fabbutton.FabButton\"\n                android:layout_width=\"@dimen/fab_button_size\"\n                android:layout_height=\"@dimen/fab_button_size\"\n                android:layout_marginRight=\"@dimen/fab_margin_right\"\n                android:color=\"?attr/colorPrimaryDark\"\n                android:indeterminate=\"false\"\n                android:max=\"100\"\n                android:onClick=\"@{downloadClick}\"\n                android:src=\"@drawable/ic_file_download\"\n                android:visibility=\"visible\"\n                app:fbb_autoStart=\"false\"\n                app:fbb_endBitmap=\"@drawable/ic_open_book\"\n                app:fbb_hideProgressOnComplete=\"true\"\n                app:fbb_progressColor=\"?attr/colorAccent\"\n                app:fbb_progressWidthRatio=\"0.1\"\n                app:fbb_showEndBitmap=\"true\"\n                app:fbb_showShadow=\"true\"\n                app:layout_anchor=\"@id/app_bar_layout\"\n                app:layout_anchorGravity=\"bottom|right|end\"/>\n\n        </androidx.coordinatorlayout.widget.CoordinatorLayout>\n\n    </FrameLayout>\n\n\n</layout>\n",
            "java": "package org.bookdash.android.presentation.bookinfo;\n\nimport android.app.Activity;\nimport android.content.ActivityNotFoundException;\nimport android.content.Intent;\nimport android.content.pm.ActivityInfo;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.graphics.drawable.GradientDrawable;\nimport android.net.Uri;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.transition.Transition;\nimport android.util.DisplayMetrics;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewTreeObserver;\nimport android.view.Window;\nimport android.view.animation.AccelerateInterpolator;\nimport android.view.animation.OvershootInterpolator;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.annotation.StringRes;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.cardview.widget.CardView;\nimport androidx.coordinatorlayout.widget.CoordinatorLayout;\nimport androidx.core.content.ContextCompat;\nimport androidx.core.graphics.ColorUtils;\nimport androidx.databinding.DataBindingUtil;\nimport androidx.palette.graphics.Palette;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions;\nimport com.bumptech.glide.request.target.CustomTarget;\nimport com.google.android.material.appbar.AppBarLayout;\nimport com.google.android.material.appbar.CollapsingToolbarLayout;\nimport com.google.android.material.snackbar.Snackbar;\nimport com.google.firebase.storage.StorageReference;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.config.GlideApp;\nimport org.bookdash.android.databinding.ActivityBookInformationBinding;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.domain.model.firebase.FireBookDetails;\nimport org.bookdash.android.domain.model.firebase.FireContributor;\nimport org.bookdash.android.domain.model.gson.BookPages;\nimport org.bookdash.android.presentation.activity.BaseAppCompatActivity;\nimport org.bookdash.android.presentation.readbook.BookDetailActivity;\n\nimport java.util.List;\n\nimport mbanje.kurt.fabbutton.FabButton;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.schedulers.Schedulers;\n\n\npublic class BookInfoActivity extends BaseAppCompatActivity implements BookInfoContract.View {\n    public static final String BOOK_PARCEL = \"book_parcel\";\n    private static final String TAG = \"BookInfoActivity\";\n    /**\n     * Presenter object\n     */\n    private BookInfoContract.Presenter bookInfoPresenter;\n\n    /**\n     * Views\n     */\n    private CollapsingToolbarLayout collapsingToolbarLayout;\n    private FabButton floatingActionButton;\n    private View gradientBackground;\n    private RecyclerView contributorRecyclerView;\n    private View scrollView;\n    private ImageView imageViewBook;\n    private AppBarLayout appBarLayout;\n    private CoordinatorLayout coordinatorLayout;\n    private View errorLayout;\n    private TextView errorText;\n    private ActivityBookInformationBinding binding;\n    private ProgressBar loadingProgressBar;\n    private CardView contributorCard, mainBookCard;\n    private Toolbar toolbar;\n    private ActionBar actionBar;\n    private FireBookDetails bookInfo;\n    private Button errorRetryButton;\n    private int progress = 0;\n\n    public static void startBookInfo(Activity activity, FireBookDetails bookDetails) {\n        Intent intent = new Intent(activity, BookInfoActivity.class);\n        intent.putExtra(BookInfoActivity.BOOK_PARCEL, bookDetails);\n        activity.startActivity(intent);\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_book_information);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            getWindow().getSharedElementReturnTransition().addListener(new Transition.TransitionListener() {\n                @Override\n                public void onTransitionStart(Transition transition) {\n                    floatingActionButton.animate().scaleY(0).scaleX(0).setInterpolator(new AccelerateInterpolator())\n                            .setDuration(getResources().getInteger(android.R.integer.config_shortAnimTime)).start();\n\n                }\n\n                @Override\n                public void onTransitionEnd(Transition transition) {\n                    enterAnimation();\n                }\n\n                @Override\n                public void onTransitionCancel(Transition transition) {\n\n                }\n\n                @Override\n                public void onTransitionPause(Transition transition) {\n\n                }\n\n                @Override\n                public void onTransitionResume(Transition transition) {\n\n                }\n            });\n            postponeEnterTransition();\n        }\n        contributorRecyclerView = (RecyclerView) findViewById(R.id.recyclerview_contributors);\n        contributorCard = (CardView) findViewById(R.id.contributor_card);\n        imageViewBook = (ImageView) findViewById(R.id.image_view_book_cover);\n        appBarLayout = (AppBarLayout) findViewById(R.id.app_bar_layout);\n        mainBookCard = (CardView) findViewById(R.id.card_view_main_book_info);\n        toolbar = (Toolbar) findViewById(R.id.toolbar);\n        coordinatorLayout = (CoordinatorLayout) findViewById(R.id.coordinator_layout_content);\n        errorLayout = findViewById(R.id.linear_layout_error);\n        errorText = (TextView) findViewById(R.id.text_view_error_screen);\n\n        errorRetryButton = (Button) findViewById(R.id.button_retry);\n        loadingProgressBar = (ProgressBar) findViewById(R.id.activity_loading_book_info);\n        setSupportActionBar(toolbar);\n        actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n        }\n        scrollView = findViewById(R.id.scrollViewBookInfo);\n        collapsingToolbarLayout = (CollapsingToolbarLayout) findViewById(R.id.collapsing_toolbar);\n\n        gradientBackground = findViewById(R.id.toolbar_background_gradient);\n        floatingActionButton = (FabButton) findViewById(R.id.fab_download);\n        floatingActionButton.setScaleX(0);\n        floatingActionButton.setScaleY(0);\n        binding.setDownloadClick(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (bookInfo == null) {\n                    showSnackBarMessage(R.string.book_not_available);\n                    return;\n                }\n                if (!bookInfo.isDownloadedAlready()) {\n                    floatingActionButton.resetIcon();\n                    floatingActionButton.showProgress(true);\n                    floatingActionButton.setProgress(0);\n                }\n                bookInfoPresenter.downloadBook(bookInfo);\n            }\n        });\n\n\n        bookInfoPresenter = new BookInfoPresenter(Injection.provideBookService(), Injection.provideDownloadService(),\n                Injection.provideAnalytics(), Schedulers.io(), AndroidSchedulers.mainThread());\n        bookInfoPresenter.attachView(this);\n        calculateLayoutHeight();\n        imageViewBook.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {\n            @Override\n            public boolean onPreDraw() {\n                imageViewBook.getViewTreeObserver().removeOnPreDrawListener(this);\n\n                enterAnimation();\n                return true;\n            }\n        });\n        final FireBookDetails bookDetailParcelable = getIntent().getParcelableExtra(BOOK_PARCEL);\n\n        if (bookDetailParcelable != null) {\n            setBookInfoBinding(bookDetailParcelable);\n            startLoadingBook(bookDetailParcelable);\n            showBookDetailView();\n        } else {\n            onNewIntent(getIntent());\n        }\n\n    }\n\n    private void enterAnimation() {\n\n        floatingActionButton.setScaleX(0);\n        floatingActionButton.setScaleY(0);\n        floatingActionButton.animate().setStartDelay(500).scaleY(1).scaleX(1)\n                .setInterpolator(new OvershootInterpolator())\n                .setDuration(getResources().getInteger(android.R.integer.config_mediumAnimTime)).start();\n    }\n\n    @SuppressWarnings(\"SuspiciousNameCombination\")\n    private void calculateLayoutHeight() {\n        if (getResources().getConfiguration().orientation == ActivityInfo.SCREEN_ORIENTATION_PORTRAIT) {\n            Log.d(TAG, \"Setting image height\");\n            DisplayMetrics dMetrics = new DisplayMetrics();\n            getWindowManager().getDefaultDisplay().getMetrics(dMetrics);\n            CollapsingToolbarLayout.LayoutParams lp = (CollapsingToolbarLayout.LayoutParams) imageViewBook\n                    .getLayoutParams();\n            lp.height = dMetrics.widthPixels;\n            imageViewBook.setLayoutParams(lp);\n\n            CoordinatorLayout.LayoutParams lp2 = (CoordinatorLayout.LayoutParams) appBarLayout.getLayoutParams();\n            lp2.height = dMetrics.widthPixels;\n            appBarLayout.setLayoutParams(lp2);\n        }\n    }\n\n    private void startLoadingBook(final FireBookDetails bookDetailId) {\n        errorRetryButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                bookInfoPresenter.loadContributorInformation(bookDetailId);\n            }\n        });\n\n        bookInfoPresenter.loadContributorInformation(bookDetailId);\n        showBookDetailView();\n    }\n\n    @Override\n    public void showBookDetailView() {\n        mainBookCard.setVisibility(View.VISIBLE);\n        loadingProgressBar.setVisibility(View.GONE);\n        errorLayout.setVisibility(View.GONE);\n        coordinatorLayout.setVisibility(View.VISIBLE);\n        scrollView.setVisibility(View.VISIBLE);\n        floatingActionButton.setVisibility(View.VISIBLE);\n    }\n\n    protected void onNewIntent(Intent intent) {\n        super.onNewIntent(intent);\n        String action = intent.getAction();\n        String data = intent.getDataString();\n        Log.d(TAG, \"onNewIntent() called: action\" + action);\n\n        if (Intent.ACTION_VIEW.equals(action) && data != null) {\n            Uri uri = Uri.parse(data);\n            String bookId = uri.getLastPathSegment();\n            String invitationId = uri.getQueryParameter(\"invitation_id\");\n            Log.d(TAG, \"Action View: book id:\" + bookId + \". Full URL:\" + uri\n                    .toString() + \". InvitationId:\" + invitationId);\n            //  startLoadingBook(bookId);\n        }\n    }\n\n    private void loadImage(StorageReference url) {\n        GlideApp.with(this).load(url)\n                .transition(DrawableTransitionOptions.withCrossFade())\n                .into(new CustomTarget<Drawable>() {\n                    @Override\n                    public void onResourceReady(@NonNull Drawable resource, @Nullable com.bumptech.glide.request.transition.Transition<? super Drawable> transition) {\n\n                        Bitmap bitmap = drawableToBitmap(resource);\n                        onImageLoaded(bitmap);\n                        extractPaletteColors(bitmap);\n                    }\n\n                    @Override\n                    public void onLoadCleared(@Nullable Drawable placeholder) {\n                        // Clear the view.\n                        onImageLoaded(null);\n                    }\n                });\n    }\n    public static Bitmap drawableToBitmap (Drawable drawable) {\n        Bitmap bitmap = null;\n\n        if (drawable instanceof BitmapDrawable) {\n            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;\n            if(bitmapDrawable.getBitmap() != null) {\n                return bitmapDrawable.getBitmap();\n            }\n        }\n\n        if(drawable.getIntrinsicWidth() <= 0 || drawable.getIntrinsicHeight() <= 0) {\n            bitmap = Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888); // Single color bitmap will be created of 1x1 pixel\n        } else {\n            bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\n        }\n\n        Canvas canvas = new Canvas(bitmap);\n        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());\n        drawable.draw(canvas);\n        return bitmap;\n    }\n    private void onImageLoaded(@Nullable Bitmap bitmap) {\n        imageViewBook.setImageBitmap(bitmap);\n\n    }\n\n    private void extractPaletteColors(Bitmap resource) {\n        Palette.from(resource).generate(new Palette.PaletteAsyncListener() {\n            @Override\n            public void onGenerated(Palette palette) {\n                if (null == palette) {\n                    return;\n                }\n                Log.d(\"onGenerated\", palette.toString());\n                Palette.Swatch toolbarSwatch = palette.getMutedSwatch();\n\n                int toolbarColor = toolbarSwatch != null ? toolbarSwatch.getRgb() : ContextCompat\n                        .getColor(getApplicationContext(), R.color.colorPrimary);\n                int accentColor = palette\n                        .getVibrantColor(ContextCompat.getColor(getApplicationContext(), R.color.colorAccent));\n\n                setToolbarColor(toolbarColor);\n                setAccentColor(accentColor);\n\n                if (toolbarSwatch != null) {\n                    float[] darkerShade = toolbarSwatch.getHsl();\n                    darkerShade[2] = darkerShade[2] * 0.8f; //Make it a darker shade for the status bar\n                    setStatusBarColor(ColorUtils.HSLToColor(darkerShade));\n                } else {\n                    setStatusBarColor(ContextCompat.getColor(getApplicationContext(), R.color.colorPrimaryDark));\n                }\n            }\n        });\n    }\n\n    private void setToolbarColor(int color) {\n        if (collapsingToolbarLayout != null) {\n            collapsingToolbarLayout.setStatusBarScrimColor(color);\n            collapsingToolbarLayout.setContentScrimColor(color);\n        } else {\n            actionBar.setBackgroundDrawable(new ColorDrawable(color));\n        }\n        floatingActionButton.setRingProgressColor(color);\n\n        if (gradientBackground != null) {\n            GradientDrawable gradientDrawable = new GradientDrawable();\n            gradientDrawable.setColor(color);\n            gradientDrawable.setAlpha(140);\n            gradientBackground.setBackground(gradientDrawable);\n        }\n    }\n\n    private void setAccentColor(int accentColor) {\n        floatingActionButton.setColor(accentColor);\n\n    }\n\n    private void setStatusBarColor(int color) {\n        if (isFinishing()) {\n            return;\n        }\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            Window window = getWindow();\n            window.setStatusBarColor(color);\n        }\n    }\n\n    @Override\n    public void showError(String errorMessage) {\n        loadingProgressBar.setVisibility(View.GONE);\n        errorLayout.setVisibility(View.VISIBLE);\n        errorText.setText(errorMessage);\n    }\n\n    @Override\n    public void showError(@StringRes int stringRes) {\n        showError(getString(stringRes));\n    }\n\n    @Override\n    public void showSnackBarMessage(final int message, final String errorDetail) {\n        Snackbar.make(scrollView, getString(message, errorDetail), Snackbar.LENGTH_LONG).show();\n\n    }\n\n    @Override\n    public void showSnackBarMessage(int message) {\n        Snackbar.make(scrollView, message, Snackbar.LENGTH_LONG).show();\n\n    }\n\n    @Override\n    public void showDownloadProgress(final int downloadProgress) {\n        if (progress == downloadProgress || downloadProgress == 0) {\n            return;\n        }\n        progress = downloadProgress;\n        Log.d(TAG, \"Download progress:\" + downloadProgress);\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                floatingActionButton.setProgress(downloadProgress);\n            }\n        });\n\n    }\n\n    @Override\n    public void showDownloadFinished() {\n        Log.d(TAG, \"Download finished\");\n        floatingActionButton.setProgress(100.0f);\n    }\n\n    @Override\n    public void setToolbarTitle(String title) {\n        toolbar.setTitle(title);\n        ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setTitle(title);\n        }\n        if (collapsingToolbarLayout != null) {\n            collapsingToolbarLayout.setTitle(title);\n        }\n    }\n\n    @Override\n    public void setBookInfoBinding(FireBookDetails bookInfo) {\n        this.bookInfo = bookInfo;\n        binding.setBookInfo(bookInfo);\n        if (bookInfo.isDownloadedAlready()) {\n            showDownloadFinished();\n        }\n        loadImage(bookInfo.getFirebaseBookCoverUrl());\n    }\n\n    @Override\n    public void openBook(FireBookDetails bookDetail, BookPages bookPages, String location) {\n        if (isFinishing()) {\n            return;\n        }\n        Intent intent = new Intent(BookInfoActivity.this, BookDetailActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        intent.putExtra(BookDetailActivity.Companion.getBOOK_PAGES(), bookPages);\n        intent.putExtra(BookDetailActivity.Companion.getBOOK_ARG(), bookDetail.getBookTitle());\n        intent.putExtra(BookDetailActivity.Companion.getLOCATION_BOOK(), location);\n        startActivity(intent);\n    }\n\n    @Override\n    public void showContributors(List<FireContributor> list) {\n        if (list == null || list.size() == 0) {\n            contributorCard.setVisibility(View.GONE);\n            return;\n        }\n        contributorCard.setVisibility(View.VISIBLE);\n        ContributorAdapter contributorAdapter = new ContributorAdapter(list, this);\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);\n        contributorRecyclerView.setLayoutManager(linearLayoutManager);\n        contributorRecyclerView.setAdapter(contributorAdapter);\n    }\n\n    @Override\n    public void sendShareEvent(String bookTitle) {\n        try {\n            Intent sendIntent = new Intent();\n            sendIntent.setAction(Intent.ACTION_SEND);\n            sendIntent.putExtra(Intent.EXTRA_TEXT, getString(R.string.sharing_book_title, bookTitle));\n            sendIntent.setType(\"text/plain\");\n            startActivity(sendIntent);\n        } catch (ActivityNotFoundException anfe) {\n            showSnackBarMessage(R.string.share_book_error_no_apps_found);\n        }\n    }\n\n    @Override\n    protected String getScreenName() {\n        return \"BookInfoActivity\";\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu_book_info, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n\n        int id = item.getItemId();\n\n        if (id == R.id.action_share_book) {\n            bookInfoPresenter.shareBookClicked(bookInfo);\n            return true;\n        } else if (id == android.R.id.home) {\n            onBackPressed();\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        bookInfoPresenter.detachView();\n    }\n}\n",
            "contains": [
                "app/src/main/res/menu/menu_book_info.xml"
            ],
            "mock_data": {
                "bookInfo": {
                    "bookTitle": "Sample Book Title",
                    "bookCoverPageUrl": "https://example.com/cover.jpg",
                    "bookEnabled": true,
                    "bookLanguage": "English",
                    "bookLanguageAbbreviation": "en",
                    "bookId": "12345",
                    "bookDescription": "This is a sample book description.",
                    "contributorsIndexedKeys": [
                        "contributor1",
                        "contributor2"
                    ],
                    "isDownloading": false,
                    "bookUrl": "https://example.com/book.pdf",
                    "createdDate": 1633046400000
                }
            }
        },
        "app/src/main/res/menu/menu_book_info.xml": {
            "name": "app/src/main/res/menu/menu_book_info.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <item\n        android:id=\"@+id/action_share_book\"\n        android:icon=\"@drawable/ic_share\"\n        android:contentDescription=\"@string/book_share\"\n        android:orderInCategory=\"1\"\n        android:title=\"@string/book_share\"\n        app:showAsAction=\"ifRoom\" />\n</menu>",
            "java": "",
            "contains": [],
            "mock_data": {}
        }
    },
    "app/src/main/res/layout/activity_search.xml": {
        "app/src/main/res/layout/activity_search.xml": {
            "name": "app/src/main/res/layout/activity_search.xml",
            "content": "<androidx.coordinatorlayout.widget.CoordinatorLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    >\n\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/appbackground\"/>\n\n    <com.google.android.material.appbar.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:theme=\"@style/AppTheme.AppBarOverlay\">\n\n        <androidx.appcompat.widget.Toolbar\n            android:id=\"@+id/toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            android:background=\"?attr/colorPrimary\"\n            android:title=\"@string/book_dash\"\n            app:layout_scrollFlags=\"scroll|enterAlways\"\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"/>\n\n\n    </com.google.android.material.appbar.AppBarLayout>\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <fr.castorflex.android.circularprogressbar.CircularProgressBar\n            xmlns:android=\"http://schemas.android.com/apk/res/android\"\n            xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n            android:id=\"@+id/progress_bar_search\"\n            android:layout_width=\"48dp\"\n            android:layout_height=\"48dp\"\n            android:layout_alignParentBottom=\"false\"\n            android:layout_centerInParent=\"true\"\n            android:layout_gravity=\"center\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginTop=\"16dp\"\n            android:foregroundGravity=\"center|center_vertical|center_horizontal\"\n            android:indeterminate=\"true\"\n            app:cpb_color=\"@color/colorAccent\"\n            app:cpb_max_sweep_angle=\"300\"\n            app:cpb_min_sweep_angle=\"10\"\n            app:cpb_rotation_speed=\"1.0\"\n            app:cpb_stroke_width=\"4dp\"\n            app:cpb_sweep_speed=\"1.0\"/>\n    </RelativeLayout>\n\n\n    <RelativeLayout\n        android:id=\"@+id/linear_layout_error\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_centerInParent=\"true\"\n        android:visibility=\"gone\"\n        tools:visibility=\"visible\">\n\n\n        <Button\n            android:id=\"@+id/button_retry\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerHorizontal=\"true\"\n            android:layout_centerInParent=\"true\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:text=\"@string/button_retry_text\"/>\n\n        <TextView\n            android:id=\"@+id/text_view_error_screen\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_above=\"@id/button_retry\"\n            android:layout_centerHorizontal=\"true\"\n            android:layout_gravity=\"center\"\n            android:layout_margin=\"8dp\"\n            android:text=\"@string/error_loading_books\"/>\n    </RelativeLayout>\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/recycler_view_books\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:clipToPadding=\"false\"\n        android:paddingLeft=\"@dimen/book_list_padding\"\n        android:paddingRight=\"@dimen/book_list_padding\"\n        android:scrollbars=\"vertical\"\n        android:visibility=\"visible\"\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n        tools:listitem=\"@layout/list_item_book\"/>\n\n</androidx.coordinatorlayout.widget.CoordinatorLayout>\n\n",
            "java": "package org.bookdash.android.presentation.search;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.text.TextUtils;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.Window;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.widget.SearchView;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.core.content.ContextCompat;\nimport androidx.recyclerview.widget.GridLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport org.bookdash.android.R;\nimport org.bookdash.android.di.Injection;\nimport org.bookdash.android.domain.model.firebase.FireBookDetails;\nimport org.bookdash.android.presentation.activity.BaseAppCompatActivity;\nimport org.bookdash.android.presentation.bookinfo.BookInfoActivity;\nimport org.bookdash.android.presentation.listbooks.BookAdapter;\nimport org.bookdash.android.presentation.listbooks.BookViewHolder;\n\nimport java.util.List;\n\nimport fr.castorflex.android.circularprogressbar.CircularProgressBar;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.schedulers.Schedulers;\nimport timber.log.Timber;\n\n/**\n * @author rebeccafranks\n * @since 2016/12/11\n */\n\npublic class SearchActivity extends BaseAppCompatActivity implements SearchContract.View {\n\n    SearchContract.Presenter searchPresenter;\n    private Toolbar toolbar;\n    private String searchQuery;\n    private RecyclerView recyclerViewBooks;\n    private BookAdapter bookAdapter;\n    private CircularProgressBar circularProgressBar;\n    private View.OnClickListener bookClickListener = new View.OnClickListener() {\n        @Override\n        public void onClick(final View view) {\n            BookViewHolder viewHolder = (BookViewHolder) view.getTag();\n            FireBookDetails bookDetail = viewHolder.bookDetail;\n            BookInfoActivity.startBookInfo(SearchActivity.this, bookDetail);\n        }\n    };\n    private View errorLayout;\n    private TextView errorText;\n    private Button errorRetryButton;\n\n    public static void start(final Activity activity) {\n        Intent intent = new Intent(activity, SearchActivity.class);\n        activity.startActivity(intent);\n    }\n\n    @Override\n    protected void onCreate(final Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_search);\n\n        toolbar = (Toolbar) findViewById(R.id.toolbar);\n        toolbar.setTitle(getString(R.string.search_query_hint));\n        toolbar.setNavigationIcon(R.drawable.ic_arrow_back);\n\n        ActionBar actionBar = getSupportActionBar();\n\n        setSupportActionBar(toolbar);\n\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n            actionBar.setHomeButtonEnabled(true);\n            actionBar.setDisplayShowTitleEnabled(false);\n            actionBar.setDisplayUseLogoEnabled(false);\n            actionBar.setDisplayShowHomeEnabled(true);\n\n        }\n        searchPresenter = new SearchPresenter(Injection.provideBookService(), Injection.provideAnalytics(),\n                AndroidSchedulers.mainThread(), Schedulers.io());\n        searchPresenter.attachView(this);\n\n        recyclerViewBooks = (RecyclerView) findViewById(R.id.recycler_view_books);\n        recyclerViewBooks.setLayoutManager(new GridLayoutManager(this, getResources().getInteger(R.integer.book_span)));\n        circularProgressBar = (CircularProgressBar) findViewById(R.id.progress_bar_search);\n        errorLayout = findViewById(R.id.linear_layout_error);\n        errorText = (TextView) findViewById(R.id.text_view_error_screen);\n\n        errorRetryButton = (Button) findViewById(R.id.button_retry);\n        errorRetryButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(final View view) {\n                searchPresenter.search(searchQuery);\n            }\n        });\n        setStatusBarColor(ContextCompat.getColor(getApplicationContext(), R.color.colorPrimaryDark));\n        hideLoading();\n    }\n    private void setStatusBarColor(int color) {\n        if (isFinishing()) {\n            return;\n        }\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            Window window = getWindow();\n            window.setStatusBarColor(color);\n        }\n    }\n\n    @Override\n    protected String getScreenName() {\n        return \"SearchActivity\";\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(final Menu menu) {\n        getMenuInflater().inflate(R.menu.menu_search, menu);\n\n        final MenuItem item = menu.findItem(R.id.action_menu_search);\n        final SearchView searchView = (SearchView) item.getActionView();\n\n        toolbar.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                item.expandActionView();\n                searchView.setQuery(searchQuery, false);\n            }\n        });\n\n        if (searchView != null) {\n            item.expandActionView();\n            if (searchQuery != null) {\n                toolbar.setTitle(searchQuery);\n                searchView.setQuery(searchQuery, false);\n\n            }\n\n            searchView.setQueryHint(getString(R.string.search_query_hint));\n            searchView.setIconified(false);\n\n            searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n                @Override\n                public boolean onQueryTextSubmit(String query) {\n                    Timber.d(\"Search submitted with query:\" + query);\n                    if (TextUtils.isEmpty(query)) {\n                        return true;\n                    }\n                    item.collapseActionView();\n                    searchPresenter.search(query);\n                    toolbar.setTitle(query);\n                    return true;\n                }\n\n                @Override\n                public boolean onQueryTextChange(String query) {\n                    Timber.d(\"Search query:\" + query);\n                    if (TextUtils.isEmpty(query)) {\n                        return true;\n                    }\n                    searchPresenter.search(query);\n                    toolbar.setTitle(query);\n                    return true;\n                }\n            });\n        }\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case android.R.id.home:\n                onBackPressed();\n                return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n    }\n\n    @Override\n    public void showSearchResults(final List<FireBookDetails> bookList) {\n        recyclerViewBooks.setVisibility(View.VISIBLE);\n        bookAdapter = new BookAdapter(bookList, this, bookClickListener);\n        recyclerViewBooks.setAdapter(bookAdapter);\n    }\n\n    @Override\n    public void showErrorMessage(final String errorMsg) {\n        recyclerViewBooks.setVisibility(View.GONE);\n        errorLayout.setVisibility(View.VISIBLE);\n        errorText.setText(errorMsg);\n    }\n\n    @Override\n    public void showLoading() {\n        circularProgressBar.setVisibility(View.VISIBLE);\n        recyclerViewBooks.setVisibility(View.GONE);\n        errorLayout.setVisibility(View.GONE);\n    }\n\n    @Override\n    public void hideLoading() {\n        circularProgressBar.setVisibility(View.GONE);\n\n    }\n\n    @Override\n    public void showNoInternetMessage() {\n        recyclerViewBooks.setVisibility(View.GONE);\n        errorLayout.setVisibility(View.VISIBLE);\n        errorText.setText(getText(R.string.search_no_internet_text));\n    }\n\n    @Override\n    public void showNoResultsMessage() {\n        recyclerViewBooks.setVisibility(View.GONE);\n        errorLayout.setVisibility(View.VISIBLE);\n        errorText.setText(getText(R.string.search_no_results_found));\n    }\n\n    @Override\n    public void showRetryButton() {\n        errorRetryButton.setVisibility(View.VISIBLE);\n    }\n\n    @Override\n    public void hideRetryButton() {\n        errorRetryButton.setVisibility(View.INVISIBLE);\n    }\n}\n",
            "contains": [
                "app/src/main/res/menu/menu_search.xml"
            ],
            "mock_data": {}
        },
        "app/src/main/res/menu/menu_search.xml": {
            "name": "app/src/main/res/menu/menu_search.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <item\n        android:id=\"@+id/action_menu_search\"\n        android:icon=\"@drawable/ic_search\"\n        android:title=\"@string/menu_search\"\n        app:actionViewClass=\"androidx.appcompat.widget.SearchView\"\n        app:showAsAction=\"collapseActionView|always\"/>\n</menu>",
            "java": "",
            "contains": [],
            "mock_data": {}
        }
    },
    "materialhelptutorial/src/main/res/layout/activity_help_tutorial.xml": {
        "materialhelptutorial/src/main/res/layout/activity_help_tutorial.xml": {
            "name": "materialhelptutorial/src/main/res/layout/activity_help_tutorial.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<!--\nMIT License\n\nCopyright (c) 2015 Rebecca Franks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the \"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject\nto the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-->\n\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:id=\"@+id/activity_help_root\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <androidx.viewpager.widget.ViewPager\n        android:id=\"@+id/activity_help_view_pager\"\n        android:clipToPadding=\"false\"\n        android:clipChildren=\"false\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_above=\"@+id/linear_layout_indicator\">\n\n    </androidx.viewpager.widget.ViewPager>\n\n    <View android:layout_width=\"match_parent\"\n\n        android:layout_above=\"@+id/linear_layout_indicator\"\n        android:layout_height=\"1dp\"\n        android:background=\"#E0E0E0\"\n        />\n    <LinearLayout\n        android:id=\"@+id/linear_layout_indicator\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"56dp\"\n        android:weightSum=\"1\"\n        android:layout_alignParentBottom=\"true\"\n        android:orientation=\"horizontal\">\n\n        <Button\n            android:id=\"@+id/activity_help_skip_textview\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"match_parent\"\n            android:layout_alignParentBottom=\"true\"\n            android:layout_centerInParent=\"true\"\n            style=\"@android:style/Widget.Holo.Button.Borderless\"\n            android:fontFamily=\"sans-serif\"\n            android:gravity=\"center\"\n            android:text=\"@string/tutorial_skip\"\n            android:textColor=\"@color/tutorial_buttonTextColor\"\n            android:textSize=\"18sp\"\n            android:layout_weight=\"0.25\" />\n\n        <za.co.riggaroo.materialhelptutorial.view.CirclePageIndicator\n            android:id=\"@+id/activity_help_view_page_indicator\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_above=\"@id/activity_help_skip_textview\"\n            app:fillColor=\"#41FFFFFF\"\n            app:pageColor=\"#14FFFFFF\"\n            app:radius=\"6dp\"\n            android:layout_weight=\"0.5\"\n            app:strokeColor=\"#E0E0E0\"\n            app:strokeWidth=\"0dp\"\n            android:layout_gravity=\"center_vertical\"\n            android:minHeight=\"24dp\" />\n\n        <LinearLayout\n            android:layout_width=\"0dp\"\n            android:layout_weight=\"0.25\"\n            android:orientation=\"vertical\"\n            android:layout_height=\"match_parent\">\n            <ImageButton\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:src=\"@drawable/ic_navigate_next\"\n                style=\"@android:style/Widget.Holo.Button.Borderless\"\n                android:id=\"@+id/activity_next_button\"\n                android:layout_margin=\"8dp\"\n                android:visibility=\"visible\"\n                android:padding=\"16dp\" />\n            <Button\n                android:id=\"@+id/activity_tutorial_done\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                style=\"@android:style/Widget.Holo.Button.Borderless\"\n                android:fontFamily=\"sans-serif\"\n                android:gravity=\"center\"\n                android:text=\"@string/tutorial_done\"\n                android:textColor=\"@color/tutorial_buttonTextColor\"\n                android:textSize=\"18sp\"\n                android:visibility=\"gone\" />\n        </LinearLayout>\n\n    </LinearLayout>\n\n\n</RelativeLayout>",
            "java": "/*\nMIT License\n\nCopyright (c) 2015 Rebecca Franks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the \"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject\nto the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npackage za.co.riggaroo.materialhelptutorial.tutorial;\n\n\nimport android.app.ActionBar;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.Window;\nimport android.view.WindowManager;\nimport android.widget.Button;\nimport android.widget.ImageButton;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.viewpager.widget.ViewPager;\n\nimport java.util.List;\n\nimport za.co.riggaroo.materialhelptutorial.MaterialTutorialFragment;\nimport za.co.riggaroo.materialhelptutorial.R;\nimport za.co.riggaroo.materialhelptutorial.TutorialItem;\nimport za.co.riggaroo.materialhelptutorial.adapter.MaterialTutorialAdapter;\nimport za.co.riggaroo.materialhelptutorial.view.CirclePageIndicator;\n\npublic class MaterialTutorialActivity extends AppCompatActivity implements MaterialTutorialContract.View {\n\n    public static final String MATERIAL_TUTORIAL_ARG_TUTORIAL_ITEMS = \"tutorial_items\";\n    private static final String TAG = \"MaterialTutActivity\";\n    private ViewPager mHelpTutorialViewPager;\n    private View mRootView;\n    private TextView mTextViewSkip;\n    private ImageButton mNextButton;\n    private Button mDoneButton;\n    private MaterialTutorialPresenter materialTutorialPresenter;\n\n    private View.OnClickListener finishTutorialClickListener = new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            materialTutorialPresenter.doneOrSkipClick();\n\n        }\n    };\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_help_tutorial);\n\n        materialTutorialPresenter = new MaterialTutorialPresenter(this, this);\n        setStatusBarColor();\n        ActionBar actionBar = getActionBar();\n\n        if (actionBar != null) {\n            getActionBar().hide();\n        }\n        mRootView = findViewById(R.id.activity_help_root);\n        mHelpTutorialViewPager = (ViewPager) findViewById(R.id.activity_help_view_pager);\n        mTextViewSkip = (TextView) findViewById(R.id.activity_help_skip_textview);\n        mNextButton = (ImageButton) findViewById(R.id.activity_next_button);\n        mDoneButton = (Button) findViewById(R.id.activity_tutorial_done);\n\n        mTextViewSkip.setOnClickListener(finishTutorialClickListener);\n        mDoneButton.setOnClickListener(finishTutorialClickListener);\n\n\n        mNextButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                materialTutorialPresenter.nextClick();\n\n\n            }\n        });\n        List<TutorialItem> tutorialItems = getIntent().getParcelableArrayListExtra(MATERIAL_TUTORIAL_ARG_TUTORIAL_ITEMS);\n        if (tutorialItems == null) {\n            showEndTutorial();\n        } else {\n            materialTutorialPresenter.loadViewPagerFragments(tutorialItems);\n        }\n    }\n\n    private void setStatusBarColor() {\n        if (isFinishing()) {\n            return;\n        }\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            Window window = getWindow();\n            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\n            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n        }\n    }\n\n    @Override\n    public void showNextTutorial() {\n        int currentItem = mHelpTutorialViewPager.getCurrentItem();\n        if (currentItem < materialTutorialPresenter.getNumberOfTutorials()) {\n            mHelpTutorialViewPager.setCurrentItem(mHelpTutorialViewPager.getCurrentItem() + 1);\n        }\n    }\n\n    @Override\n    public void showEndTutorial() {\n        setResult(RESULT_OK);\n        finish();\n    }\n\n    @Override\n    public void setBackgroundColor(int color) {\n        mRootView.setBackgroundColor(color);\n    }\n\n    @Override\n    public void showDoneButton() {\n        mTextViewSkip.setVisibility(View.INVISIBLE);\n        mNextButton.setVisibility(View.GONE);\n        mDoneButton.setVisibility(View.VISIBLE);\n    }\n\n    @Override\n    public void showSkipButton() {\n        mTextViewSkip.setVisibility(View.VISIBLE);\n        mNextButton.setVisibility(View.VISIBLE);\n        mDoneButton.setVisibility(View.GONE);\n    }\n\n    @Override\n    public void setViewPagerFragments(List<MaterialTutorialFragment> materialTutorialFragments) {\n        mHelpTutorialViewPager.setAdapter(new MaterialTutorialAdapter(getSupportFragmentManager(), materialTutorialFragments));\n        CirclePageIndicator mCirclePageIndicator = (CirclePageIndicator) findViewById(R.id.activity_help_view_page_indicator);\n\n        mCirclePageIndicator.setViewPager(mHelpTutorialViewPager);\n        mCirclePageIndicator.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n            @Override\n            public void onPageScrolled(int i, float v, int i2) {\n\n            }\n\n            @Override\n            public void onPageSelected(int i) {\n                materialTutorialPresenter.onPageSelected(mHelpTutorialViewPager.getCurrentItem());\n\n            }\n\n            @Override\n            public void onPageScrollStateChanged(int i) {\n\n            }\n        });\n        mHelpTutorialViewPager.setPageTransformer(true, new ViewPager.PageTransformer() {\n                    @Override\n                    public void transformPage(View page, float position) {\n                        materialTutorialPresenter.transformPage(page, position);\n                    }\n                }\n\n        );\n    }\n}\n",
            "contains": [],
            "mock_data": {}
        }
    },
    "materialhelptutorial/src/main/res/layout/fragment_help_tutorial_image.xml": {
        "materialhelptutorial/src/main/res/layout/fragment_help_tutorial_image.xml": {
            "name": "materialhelptutorial/src/main/res/layout/fragment_help_tutorial_image.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<!--\nMIT License\n\nCopyright (c) 2015 Rebecca Franks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the \"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject\nto the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-->\n\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:clipToPadding=\"false\"\n    android:clipChildren=\"false\"\n    tools:background=\"#000000\">\n\n    <TextView\n        android:id=\"@+id/fragment_help_tutorial_subtitle_text\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentLeft=\"false\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_alignParentTop=\"false\"\n        android:layout_marginLeft=\"36dp\"\n        android:layout_marginRight=\"36dp\"\n        android:autoLink=\"web\"\n        android:layout_marginBottom=\"16dp\"\n        android:fontFamily=\"sans-serif\"\n        android:padding=\"8dp\"\n        android:textColor=\"@color/tutorial_subtitleTextColor\"\n        android:textSize=\"16sp\"\n        tools:text=\"Line 2 of this description\" />\n\n    <TextView\n        android:id=\"@+id/fragment_help_tutorial_text\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_above=\"@id/fragment_help_tutorial_subtitle_text\"\n        android:layout_alignParentLeft=\"false\"\n        android:layout_alignParentTop=\"false\"\n        android:autoLink=\"web\"\n        android:fontFamily=\"sans-serif\"\n        android:padding=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:textColor=\"@color/tutorial_titleTextColor\"\n        android:layout_marginLeft=\"36dp\"\n        android:layout_marginRight=\"36dp\"\n        android:textSize=\"24sp\"\n        tools:text=\"Browse this wonderful tutorial.\" />\n\n    <ImageView\n        android:id=\"@+id/fragment_help_tutorial_imageview_background\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_above=\"@id/fragment_help_tutorial_text\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:scaleType=\"fitCenter\" />\n    <ImageView\n        android:id=\"@+id/fragment_help_tutorial_imageview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_above=\"@id/fragment_help_tutorial_text\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentTop=\"true\"\n        tools:src=\"@drawable/ic_navigate_next\"\n        android:scaleType=\"fitCenter\" />\n</RelativeLayout>",
            "java": "/*\nMIT License\n\nCopyright (c) 2015 Rebecca Franks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the \"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject\nto the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\npackage za.co.riggaroo.materialhelptutorial;\n\nimport android.os.Bundle;\nimport android.text.TextUtils;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport androidx.fragment.app.Fragment;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\nimport com.bumptech.glide.request.RequestOptions;\n\n/**\n * @author rebeccafranks\n * @since 2015/10/15.\n */\npublic class MaterialTutorialFragment extends Fragment {\n    private static final String ARG_TUTORIAL_ITEM = \"arg_tut_item\";\n    private static final String TAG = \"MaterialTutFragment\";\n    private static final String ARG_PAGE = \"arg_page\";\n\n    public static MaterialTutorialFragment newInstance(TutorialItem tutorialItem, int page) {\n        MaterialTutorialFragment helpTutorialImageFragment = new MaterialTutorialFragment();\n        Bundle args = new Bundle();\n        args.putParcelable(ARG_TUTORIAL_ITEM, tutorialItem);\n        args.putInt(ARG_PAGE, page);\n        helpTutorialImageFragment.setArguments(args);\n        return helpTutorialImageFragment;\n    }\n\n    private TutorialItem tutorialItem;\n    int page;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Bundle b = getArguments();\n        tutorialItem = b.getParcelable(ARG_TUTORIAL_ITEM);\n        page = b.getInt(ARG_PAGE);\n\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n        View v = inflater.inflate(R.layout.fragment_help_tutorial_image, container, false);\n        v.setTag(page);\n\n        ImageView imageViewFront = (ImageView) v.findViewById(R.id.fragment_help_tutorial_imageview);\n        ImageView imageViewBack = (ImageView) v.findViewById(R.id.fragment_help_tutorial_imageview_background);\n        TextView textViewSubTitle = (TextView) v.findViewById(R.id.fragment_help_tutorial_subtitle_text);\n\n        TextView textView = (TextView) v.findViewById(R.id.fragment_help_tutorial_text);\n        if (!TextUtils.isEmpty(tutorialItem.getTitleText())) {\n            textView.setText(tutorialItem.getTitleText());\n        } else if (tutorialItem.getTitleTextRes() != -1) {\n            textView.setText(tutorialItem.getTitleTextRes());\n        }\n        if (!TextUtils.isEmpty(tutorialItem.getSubTitleText())) {\n            textViewSubTitle.setText(tutorialItem.getSubTitleText());\n        } else if (tutorialItem.getSubTitleTextRes() != -1) {\n            textViewSubTitle.setText(tutorialItem.getSubTitleTextRes());\n        }\n        if (tutorialItem.getBackgroundImageRes() != -1) {\n            Glide.with(this).load(tutorialItem.getBackgroundImageRes()).into(imageViewBack);\n        }\n        if (tutorialItem.getForegroundImageRes() != -1 && !tutorialItem.isGif()) {\n            Glide.with(this).load(tutorialItem.getForegroundImageRes()).into(imageViewFront);\n        }\n        if (tutorialItem.getForegroundImageRes() != -1 && tutorialItem.isGif()) {\n            Glide.with(this)\n                    .asGif()\n                    .load(tutorialItem.getForegroundImageRes())\n                    .apply(new RequestOptions().diskCacheStrategy(DiskCacheStrategy.DATA))\n                    .into(imageViewFront);\n        }\n        return v;\n    }\n\n  /*  public void onTranform(int pageNumber, float transformation) {\n        Log.d(TAG, \"onTransform:\" + transformation);\n        if (!isAdded()) {\n            return;\n        }\n        if (transformation == 0){\n            imageViewBack.setTranslationX(0);\n            return;\n        }\n        int pageWidth = getView().getWidth();\n        Log.d(TAG, \"onTransform Added page Width:\" + pageWidth);\n\n        imageViewBack.setTranslationX(-transformation * (pageWidth / 2)); //Half the normal speed\n\n    }*/\n}\n\n",
            "contains": [],
            "mock_data": {}
        }
    }
}