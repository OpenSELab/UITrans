{
    "app\\src\\main\\res\\layout\\activity_map.xml": {
        "app\\src\\main\\res\\layout\\activity_map.xml": {
            "name": "app\\src\\main\\res\\layout\\activity_map.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.coordinatorlayout.widget.CoordinatorLayout\nxmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:fitsSystemWindows=\"true\">\n\n<fragment\nandroid:id=\"@+id/mapFragment\"\nandroid:name=\"de.grobox.transportr.map.MapFragment\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"/>\n\n<androidx.cardview.widget.CardView\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"48dp\"\nandroid:layout_marginEnd=\"16dp\"\nandroid:layout_marginLeft=\"16dp\"\nandroid:layout_marginRight=\"16dp\"\nandroid:layout_marginStart=\"16dp\"\nandroid:layout_marginTop=\"16dp\">\n\n<ImageButton\nandroid:id=\"@+id/menu\"\nandroid:layout_width=\"48dp\"\nandroid:layout_height=\"48dp\"\nandroid:background=\"?attr/selectableItemBackground\"\nandroid:clickable=\"true\"\nandroid:contentDescription=\"@string/material_drawer_open\"\nandroid:focusable=\"true\"\nandroid:scaleType=\"center\"\nandroid:src=\"@drawable/ic_menu_black\"\napp:tint=\"?colorControlNormal\"\napp:srcCompat=\"@drawable/ic_menu_black\"/>\n\n<de.grobox.transportr.locations.LocationView\nandroid:id=\"@+id/search\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:layout_marginLeft=\"48dp\"\nandroid:layout_marginStart=\"48dp\"\nandroid:gravity=\"center_vertical\"\napp:elevation=\"@dimen/cardview_default_elevation\"\napp:hint=\"@string/search_hint\"\napp:showIcon=\"false\"/>\n\n</androidx.cardview.widget.CardView>\n\n<com.google.android.material.floatingactionbutton.FloatingActionButton\nandroid:id=\"@+id/directionsFab\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_gravity=\"bottom|end\"\nandroid:layout_marginBottom=\"88dp\"\nandroid:layout_marginEnd=\"16dp\"\nandroid:layout_marginRight=\"16dp\"\nandroid:clickable=\"true\"\nandroid:focusable=\"true\"\nandroid:tint=\"@color/md_white_1000\"\napp:backgroundTint=\"@color/primary\"\napp:behavior_autoHide=\"true\"\napp:fabSize=\"normal\"\napp:layout_anchor=\"@+id/bottomSheet\"\napp:layout_anchorGravity=\"top|end\"\napp:srcCompat=\"@drawable/ic_menu_directions\"/>\n\n<FrameLayout\nandroid:id=\"@+id/bottomSheet\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"\napp:behavior_hideable=\"true\"\napp:elevation=\"5dp\"\napp:layout_behavior=\"com.google.android.material.bottomsheet.BottomSheetBehavior\"/>\n\n</androidx.coordinatorlayout.widget.CoordinatorLayout>\n",
            "java": "package de.grobox.transportr.map;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.StrictMode;\nimport android.os.StrictMode.ThreadPolicy;\nimport android.os.StrictMode.VmPolicy;\nimport android.view.View;\n\nimport com.google.android.material.bottomsheet.BottomSheetBehavior;\nimport com.google.android.material.bottomsheet.BottomSheetBehavior.BottomSheetCallback;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.mapbox.mapboxsdk.geometry.LatLng;\n\nimport javax.annotation.ParametersAreNonnullByDefault;\nimport javax.inject.Inject;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.lifecycle.ViewModelProvider;\nimport de.grobox.transportr.BuildConfig;\nimport de.grobox.transportr.R;\nimport de.grobox.transportr.data.locations.FavoriteLocation.FavLocationType;\nimport de.grobox.transportr.locations.LocationFragment;\nimport de.grobox.transportr.locations.LocationView;\nimport de.grobox.transportr.locations.LocationView.LocationViewListener;\nimport de.grobox.transportr.locations.WrapLocation;\nimport de.grobox.transportr.networks.TransportNetwork;\nimport de.grobox.transportr.ui.TransportrChangeLog;\nimport de.grobox.transportr.utils.OnboardingBuilder;\n\nimport static android.content.Intent.ACTION_VIEW;\nimport static com.google.android.material.bottomsheet.BottomSheetBehavior.PEEK_HEIGHT_AUTO;\nimport static com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_COLLAPSED;\nimport static com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_EXPANDED;\nimport static com.google.android.material.bottomsheet.BottomSheetBehavior.STATE_HIDDEN;\nimport static de.grobox.transportr.locations.WrapLocation.WrapType.GPS;\nimport static de.grobox.transportr.trips.search.DirectionsActivity.ACTION_SEARCH;\nimport static de.grobox.transportr.utils.Constants.WRAP_LOCATION;\nimport static de.grobox.transportr.utils.IntentUtils.findDirections;\nimport static uk.co.samuelwall.materialtaptargetprompt.MaterialTapTargetPrompt.STATE_DISMISSED;\nimport static uk.co.samuelwall.materialtaptargetprompt.MaterialTapTargetPrompt.STATE_FOCAL_PRESSED;\n\n@ParametersAreNonnullByDefault\npublic class MapActivity extends DrawerActivity implements LocationViewListener {\n\n@Inject ViewModelProvider.Factory viewModelFactory;\n\nprivate MapViewModel viewModel;\nprivate LocationView search;\nprivate BottomSheetBehavior bottomSheetBehavior;\n\nprivate @Nullable LocationFragment locationFragment;\nprivate boolean transportNetworkInitialized = false;\n\n@Override\npublic void onCreate(@Nullable Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nif (BuildConfig.DEBUG) enableStrictMode();\ngetComponent().inject(this);\nsetContentView(R.layout.activity_map);\nsetupDrawer(savedInstanceState);\n\nView menu = findViewById(R.id.menu);\nmenu.setOnClickListener(view -> openDrawer());\n\nsearch = findViewById(R.id.search);\nsearch.setLocationViewListener(this);\n\nView bottomSheet = findViewById(R.id.bottomSheet);\nbottomSheetBehavior = BottomSheetBehavior.from(bottomSheet);\nbottomSheetBehavior.setBottomSheetCallback(new BottomSheetCallback() {\n@Override\npublic void onStateChanged(@NonNull View bottomSheet, int newState) {\nif (newState == STATE_HIDDEN) {\nsearch.clearLocation();\nsearch.reset();\nviewModel.setPeekHeight(0);\n}\n}\n\n@Override\npublic void onSlide(@NonNull View bottomSheet, float slideOffset) {\n}\n});\n\n// get view model and observe data\nviewModel = new ViewModelProvider(this, viewModelFactory).get(MapViewModel.class);\nviewModel.getTransportNetwork().observe(this, this::onTransportNetworkChanged);\nviewModel.getHome().observe(this, homeLocation -> search.setHomeLocation(homeLocation));\nviewModel.getWork().observe(this, workLocation -> search.setWorkLocation(workLocation));\nviewModel.getLocations().observe(this, favoriteLocations -> search.setFavoriteLocations(favoriteLocations));\nviewModel.getMapClicked().observe(this, no -> onMapClicked());\nviewModel.getMarkerClicked().observe(this, no -> onMarkerClicked());\nviewModel.getSelectedLocation().observe(this, this::onLocationSelected);\nviewModel.getSelectedLocationClicked().observe(this, this::onSelectedLocationClicked);\nviewModel.getPeekHeight().observe(this, height -> {\nif (height != null) bottomSheetBehavior.setPeekHeight(height);\n});\n\nFloatingActionButton directionsFab = findViewById(R.id.directionsFab);\ndirectionsFab.setOnClickListener(view -> {\nWrapLocation from = new WrapLocation(GPS);\nWrapLocation to = null;\nif (locationFragment != null && locationFragmentVisible()) {\nto = locationFragment.getLocation();\n}\nfindDirections(MapActivity.this, from, null, to);\n});\n\nIntent intent = getIntent();\nif (intent != null) onNewIntent(intent);\n\nif (savedInstanceState == null) {\nshowSavedSearches();\ncheckAndShowChangelog();\n} else {\nlocationFragment = (LocationFragment) getSupportFragmentManager().findFragmentByTag(LocationFragment.TAG);\n}\n}\n\nprivate void showSavedSearches() {\nSavedSearchesFragment f = new SavedSearchesFragment();\ngetSupportFragmentManager().beginTransaction()\n.replace(R.id.bottomSheet, f, SavedSearchesFragment.class.getSimpleName())\n.commitNow(); // otherwise takes some time and empty bottomSheet will not be shown\nbottomSheetBehavior.setState(STATE_COLLAPSED);\nviewModel.setPeekHeight(PEEK_HEIGHT_AUTO);\n}\n\nprivate void onTransportNetworkChanged(TransportNetwork network) {\nif (transportNetworkInitialized) {\nviewModel.selectLocation(null);\nsearch.setLocation(null);\ncloseDrawer();\nshowSavedSearches();\nrecreate();\n} else {\n// it didn't really change, this is just the first notification from LiveData Observer\nsearch.setTransportNetwork(network);\ntransportNetworkInitialized = true;\n}\n}\n\n@Override\npublic void onLocationItemClick(final WrapLocation loc, FavLocationType type) {\nviewModel.selectLocation(loc);\n}\n\n@Override\npublic void onLocationCleared(FavLocationType type) {\nbottomSheetBehavior.setState(STATE_HIDDEN);\nviewModel.selectLocation(null);\nsearch.postDelayed(() -> { // show dropdown again after it got hidden by hiding the bottom sheet\nsearch.onClick();\n}, 500);\n}\n\nprivate void onLocationSelected(@Nullable WrapLocation loc) {\nif (loc == null) return;\n\nlocationFragment = LocationFragment.newInstance(loc);\ngetSupportFragmentManager().beginTransaction()\n.replace(R.id.bottomSheet, locationFragment, LocationFragment.TAG)\n.commit(); // takes some time and empty bottomSheet will not be shown\nbottomSheetBehavior.setState(STATE_COLLAPSED);\n\n// show on-boarding dialog\nif (getSettingsManager().showLocationFragmentOnboarding()) {\nnew OnboardingBuilder(this)\n.setTarget(R.id.bottomSheet)\n.setPrimaryText(R.string.onboarding_location_title)\n.setSecondaryText(R.string.onboarding_location_message)\n.setPromptStateChangeListener((prompt, state) -> {\nif (state == STATE_DISMISSED || state == STATE_FOCAL_PRESSED) {\ngetSettingsManager().locationFragmentOnboardingShown();\nviewModel.selectedLocationClicked(loc.getLatLng());\n}\n})\n.show();\n}\n}\n\nprivate void onSelectedLocationClicked(@Nullable LatLng latLng) {\nif (latLng == null) return;\nbottomSheetBehavior.setState(STATE_EXPANDED);\n}\n\nprivate void onMapClicked() {\nsearch.clearFocus(); // also hides soft keyboard\n}\n\nprivate void onMarkerClicked() {\nif (locationFragment != null) search.setLocation(locationFragment.getLocation());\nbottomSheetBehavior.setState(STATE_COLLAPSED);\n}\n\nprivate boolean locationFragmentVisible() {\nreturn locationFragment != null && locationFragment.isVisible() && bottomSheetBehavior.getState() != STATE_HIDDEN;\n}\n\n@Override\nprotected void onNewIntent(Intent intent) {\nsuper.onNewIntent(intent);\nif (intent == null || intent.getAction() == null) return;\n\nif (intent.getAction().equals(ACTION_VIEW) && intent.getData() != null) {\nviewModel.setGeoUri(intent.getData());\n} else if (intent.getAction().equals(ACTION_SEARCH)) {\nWrapLocation location = (WrapLocation) intent.getSerializableExtra(WRAP_LOCATION);\nviewModel.selectLocation(location);\nviewModel.findNearbyStations(location);\n}\n}\n\nprivate void checkAndShowChangelog() {\nTransportrChangeLog cl = new TransportrChangeLog(this, getSettingsManager());\nif (cl.isFirstRun() && !cl.isFirstRunEver()) {\ncl.getLogDialog().show();\n}\n}\n\nprivate void enableStrictMode() {\nThreadPolicy.Builder threadPolicy = new ThreadPolicy.Builder();\nthreadPolicy.detectAll();\nthreadPolicy.penaltyLog();\nStrictMode.setThreadPolicy(threadPolicy.build());\n\nVmPolicy.Builder vmPolicy = new VmPolicy.Builder();\nvmPolicy.detectAll();\nvmPolicy.penaltyLog();\nStrictMode.setVmPolicy(vmPolicy.build());\n}\n\n} ",
            "contains": [
                "app\\src\\main\\res\\layout\\fragment_map.xml"
            ],
            "mock_data": {}
        },
        "app\\src\\main\\res\\layout\\fragment_map.xml": {
            "name": "app\\src\\main\\res\\layout\\fragment_map.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\nxmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nxmlns:tools=\"http://schemas.android.com/tools\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\">\n\n<com.mapbox.mapboxsdk.maps.MapView\nandroid:id=\"@+id/map\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\napp:layout_constraintBottom_toBottomOf=\"parent\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toTopOf=\"parent\"\napp:maplibre_uiLogo=\"false\"\napp:maplibre_uiAttribution=\"false\"\napp:maplibre_uiCompassMarginTop=\"72dp\"\napp:maplibre_uiRotateGestures=\"true\"/>\n\n<View\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"0dp\"\nandroid:background=\"?attributionBackground\"\napp:layout_constraintStart_toStartOf=\"@id/logo\"\napp:layout_constraintEnd_toEndOf=\"@id/attribution\"\napp:layout_constraintTop_toTopOf=\"@id/attribution\"\napp:layout_constraintBottom_toBottomOf=\"@id/attribution\" />\n\n<ImageView\nandroid:id=\"@+id/logo\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:padding=\"4dp\"\napp:layout_constraintStart_toStartOf=\"@id/map\"\napp:layout_constraintTop_toTopOf=\"@id/attribution\"\napp:layout_constraintBottom_toBottomOf=\"@id/map\"\napp:srcCompat=\"@drawable/maplibre_logo_icon\"/>\n\n<TextView\nandroid:id=\"@+id/attribution\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\nandroid:padding=\"4dp\"\nandroid:textSize=\"12sp\"\nandroid:text=\"@string/map_attribution\"\nandroid:textColorLink=\"?android:textColorTertiary\"\napp:layout_constraintHorizontal_bias=\"0\"\napp:layout_constraintWidth_default=\"wrap\"\napp:layout_constraintStart_toEndOf=\"@+id/logo\"\napp:layout_constraintEnd_toStartOf=\"@id/gpsFab\"\napp:layout_constraintBottom_toBottomOf=\"@+id/map\"\ntools:text=\"© JawgMaps, © OSM Contributors\\nImprove this map\"/>\n\n<com.google.android.material.floatingactionbutton.FloatingActionButton\nandroid:id=\"@+id/gpsFab\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_margin=\"16dp\"\nandroid:clickable=\"true\"\nandroid:focusable=\"true\"\nandroid:tint=\"@color/fabForegroundInitial\"\napp:backgroundTint=\"@color/fabBackground\"\napp:behavior_autoHide=\"true\"\napp:elevation=\"4dp\"\napp:fabSize=\"normal\"\napp:layout_constraintBottom_toBottomOf=\"parent\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:srcCompat=\"@drawable/ic_gps\"/>\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n",
            "java": "package de.grobox.transportr.map\n\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Toast\nimport androidx.annotation.LayoutRes\nimport androidx.lifecycle.Observer\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.loader.app.LoaderManager\nimport androidx.loader.app.LoaderManager.LoaderCallbacks\nimport androidx.loader.content.Loader\nimport com.mapbox.mapboxsdk.annotations.Marker\nimport com.mapbox.mapboxsdk.annotations.MarkerOptions\nimport com.mapbox.mapboxsdk.geometry.LatLng\nimport com.mapbox.mapboxsdk.maps.MapboxMap\nimport com.mapbox.mapboxsdk.maps.MapboxMap.OnMarkerClickListener\nimport com.mapbox.mapboxsdk.maps.Style\nimport de.grobox.transportr.R\nimport de.grobox.transportr.locations.NearbyLocationsLoader\nimport de.grobox.transportr.locations.WrapLocation\nimport de.grobox.transportr.networks.TransportNetwork\nimport de.grobox.transportr.utils.Constants.LOADER_NEARBY_STATIONS\nimport de.schildbach.pte.dto.Location\nimport de.schildbach.pte.dto.LocationType.STATION\nimport de.schildbach.pte.dto.NearbyLocationsResult\nimport de.schildbach.pte.dto.NearbyLocationsResult.Status.OK\nimport javax.inject.Inject\n\ninternal class MapFragment : GpsMapFragment<MapViewModel>(), LoaderCallbacks<NearbyLocationsResult>, OnMarkerClickListener {\n\n@Inject\ninternal lateinit var viewModelFactory: ViewModelProvider.Factory\n\noverride lateinit var viewModel: MapViewModel\nprivate lateinit var nearbyStationsDrawer: NearbyStationsDrawer\n\nprivate var selectedLocationMarker: Marker? = null\n\noverride val layout: Int\n@LayoutRes\nget() = R.layout.fragment_map\n\noverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\ncomponent.inject(this)\nviewModel = ViewModelProvider(activity!!, viewModelFactory).get(MapViewModel::class.java)\n\nval v = super.onCreateView(inflater, container, savedInstanceState)\nviewModel.transportNetwork.observe(viewLifecycleOwner) { onTransportNetworkChanged(it) }\n\nnearbyStationsDrawer = NearbyStationsDrawer(context)\n\nreturn v\n}\n\noverride fun onMapReady(mapboxMap: MapboxMap) {\nsuper.onMapReady(mapboxMap)\n\nval location = Location(STATION, \"fake\")\nval args = NearbyLocationsLoader.getBundle(location, 0)\nLoaderManager.getInstance(this).initLoader(LOADER_NEARBY_STATIONS, args, this)\n\nmapboxMap.addOnMapClickListener { viewModel.mapClicked.call(); false }\nmapboxMap.addOnMapLongClickListener { point -> viewModel.selectLocation(WrapLocation(point)); false }\nmapboxMap.setOnMarkerClickListener(this)\n\n// observe map related data\nviewModel.getSelectedLocation().observe(this, Observer { onLocationSelected(it) })\nviewModel.getSelectedLocationClicked().observe(this, Observer { onSelectedLocationClicked(it) })\nviewModel.getFindNearbyStations().observe(this, Observer { findNearbyStations(it) })\n}\n\noverride fun onMapStyleLoaded(style: Style) {\nsuper.onMapStyleLoaded(style)\nif (viewModel.transportNetworkWasChanged || map?.isInitialPosition() == true) {\nzoomInOnFreshStart()\nviewModel.transportNetworkWasChanged = false\n}\n}\n\nprivate fun MapboxMap.isInitialPosition(): Boolean {\nreturn cameraPosition.zoom == minZoomLevel &&\ncameraPosition.target == LatLng(0.0, 0.0)\n}\n\nprivate fun zoomInOnFreshStart() {\n// zoom to favorite locations or only current location, if no favorites exist\nviewModel.liveBounds.observe(this) { bounds ->\nif (bounds != null) {\nzoomToBounds(bounds)\n} else if (getLastKnownLocation() != null) {\nmap?.zoomToMyLocation()\n}\nviewModel.liveBounds.removeObservers(this)\n}\n}\n\noverride fun onMarkerClick(marker: Marker): Boolean {\nif (marker == selectedLocationMarker) {\nviewModel.markerClicked.call()\nreturn true\n}\nval wrapLocation = nearbyStationsDrawer.getClickedNearbyStation(marker)\nif (wrapLocation != null) {\nviewModel.selectLocation(wrapLocation)\nreturn true\n}\nreturn false\n}\n\nprivate fun onTransportNetworkChanged(network: TransportNetwork?) {\nif (network != null && map != null) {\n// activity will reload and then zoom in to new area because this is set\nviewModel.transportNetworkWasChanged = true\n// prevent loader from re-adding nearby stations\nLoaderManager.getInstance(this).destroyLoader(LOADER_NEARBY_STATIONS)\n}\n}\n\nprivate fun onLocationSelected(location: WrapLocation?) {\nif (location == null) return\nval latLng = location.latLng\naddMarker(latLng)\nanimateTo(latLng, LOCATION_ZOOM)\nviewModel.clearSelectedLocation()\n}\n\nprivate fun onSelectedLocationClicked(latLng: LatLng?) {\nif (latLng == null) return\nanimateTo(latLng, LOCATION_ZOOM)\n}\n\nprivate fun addMarker(latLng: LatLng) {\nselectedLocationMarker?.let { map?.removeMarker(it) }\nselectedLocationMarker = map?.addMarker(MarkerOptions().position(latLng))\n}\n\nprivate fun findNearbyStations(location: WrapLocation?) {\nif (location == null) return\nval args = NearbyLocationsLoader.getBundle(location.location, 1000)\nLoaderManager.getInstance(this).restartLoader(LOADER_NEARBY_STATIONS, args, this).forceLoad()\n}\n\n/* Nearby Stations Loader */\n\noverride fun onCreateLoader(id: Int, args: Bundle?): Loader<NearbyLocationsResult> {\nreturn NearbyLocationsLoader(context, viewModel.transportNetwork.value, args)\n}\n\noverride fun onLoadFinished(loader: Loader<NearbyLocationsResult>, result: NearbyLocationsResult?) {\nmap?.let { map ->\nif (result != null && result.status == OK && result.locations != null && result.locations.size > 0) {\nnearbyStationsDrawer.draw(map, result.locations)\n} else {\nToast.makeText(context, R.string.error_find_nearby_stations, Toast.LENGTH_SHORT).show()\n}\nviewModel.setNearbyStationsFound(true)\n}\n}\n\noverride fun onLoaderReset(loader: Loader<NearbyLocationsResult>) {\nnearbyStationsDrawer.reset()\n}\n\n} ",
            "contains": []
        }
    },
    "app\\src\\main\\res\\layout\\activity_about.xml": {
        "app\\src\\main\\res\\layout\\activity_about.xml": {
            "name": "app\\src\\main\\res\\layout\\activity_about.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\nxmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nxmlns:tools=\"http://schemas.android.com/tools\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\ntools:context=\".about.AboutActivity\">\n\n<com.google.android.material.appbar.AppBarLayout\nandroid:id=\"@+id/appBarLayout\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\napp:layout_constraintBottom_toTopOf=\"@+id/tabLayout\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toTopOf=\"parent\">\n\n<include\nandroid:id=\"@+id/toolbar\"\nlayout=\"@layout/toolbar\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"/>\n\n</com.google.android.material.appbar.AppBarLayout>\n\n<com.google.android.material.tabs.TabLayout\nandroid:id=\"@+id/tabLayout\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\napp:layout_constraintBottom_toTopOf=\"@+id/pager\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toBottomOf=\"@+id/appBarLayout\"\napp:tabMode=\"fixed\"/>\n\n<androidx.viewpager.widget.ViewPager\nandroid:id=\"@+id/pager\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"0dp\"\napp:layout_constraintBottom_toBottomOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"@+id/tabLayout\"\napp:layout_constraintTop_toBottomOf=\"@+id/tabLayout\"/>\n\n</androidx.constraintlayout.widget.ConstraintLayout>",
            "java": "package de.grobox.transportr.about\n\nimport android.os.Bundle\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.FragmentManager\nimport androidx.fragment.app.FragmentPagerAdapter\nimport com.mikepenz.aboutlibraries.LibsBuilder\nimport de.grobox.transportr.R\nimport de.grobox.transportr.TransportrActivity\nimport kotlinx.android.synthetic.main.activity_about.*\n\nclass AboutActivity : TransportrActivity() {\n\ncompanion object {\n@JvmField\nval TAG : String = AboutActivity::class.java.simpleName\n}\n\npublic override fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nsetContentView(R.layout.activity_about)\nsetUpCustomToolbar(false)\n\npager.adapter = AboutPagerAdapter(supportFragmentManager)\ntabLayout.setupWithViewPager(pager)\n}\n\nprivate inner class AboutPagerAdapter internal constructor(fm: FragmentManager) : FragmentPagerAdapter(fm) {\n\noverride fun getItem(i: Int): Fragment {\nreturn when (i) {\n0 -> AboutFragment()\n1 -> LibsBuilder()\n// Pass the fields of your application to the lib so it can find all external lib information\n.withFields(R.string::class.java.fields)\n// get the fragment\n.supportFragment()\nelse -> throw IllegalArgumentException()\n}\n}\n\noverride fun getCount(): Int {\nreturn 2\n}\n\noverride fun getPageTitle(i: Int): CharSequence? {\nreturn when (i) {\n0 -> getString(R.string.tab_about)\n1 -> getString(R.string.tab_libraries)\nelse -> throw IllegalArgumentException()\n}\n}\n\n}\n\n} ",
            "contains": [
                "app\\src\\main\\res\\layout\\toolbar.xml",
                "app\\src\\main\\res\\layout\\fragment_about.xml"
            ],
            "mock_data": {}
        },
        "app\\src\\main\\res\\layout\\toolbar.xml": {
            "name": "app\\src\\main\\res\\layout\\toolbar.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.appcompat.widget.Toolbar\n xmlns:android=\"http://schemas.android.com/apk/res/android\"\n xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n xmlns:tools=\"http://schemas.android.com/tools\"\n style=\"@style/ToolbarStyle\"\n android:id=\"@+id/toolbar\"\n android:layout_height=\"wrap_content\"\n android:layout_width=\"match_parent\"\n android:background=\"?attr/colorPrimary\"\n app:layout_scrollFlags=\"scroll|enterAlways\"\n tools:ignore=\"Overdraw\"/>\n",
            "java": "",
            "contains": []
        },
        "app\\src\\main\\res\\layout\\fragment_about.xml": {
            "name": "app\\src\\main\\res\\layout\\fragment_about.xml",
            "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ScrollView\nxmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nxmlns:tools=\"http://schemas.android.com/tools\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\">\n\n<androidx.constraintlayout.widget.ConstraintLayout\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\">\n\n<ImageView\nandroid:id=\"@+id/appIcon\"\nandroid:layout_width=\"64dp\"\nandroid:layout_height=\"64dp\"\nandroid:layout_margin=\"16dp\"\nandroid:contentDescription=\"@string/app_name\"\nandroid:src=\"@mipmap/ic_launcher\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toTopOf=\"parent\"/>\n\n<TextView\nandroid:id=\"@+id/appNameVersion\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginEnd=\"16dp\"\nandroid:layout_marginStart=\"16dp\"\nandroid:textColor=\"?android:textColorPrimary\"\nandroid:textSize=\"16sp\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toEndOf=\"@+id/appIcon\"\napp:layout_constraintTop_toTopOf=\"@+id/appIcon\"\ntools:text=\"Transportr 2.0.0\"/>\n\n<TextView\nandroid:id=\"@+id/copyright\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginEnd=\"8dp\"\nandroid:layout_marginRight=\"8dp\"\nandroid:layout_marginTop=\"8dp\"\nandroid:text=\"@string/about_copyright\"\napp:layout_constraintBottom_toBottomOf=\"@+id/appIcon\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"@+id/appNameVersion\"\napp:layout_constraintTop_toBottomOf=\"@+id/appNameVersion\"/>\n\n<TextView\nandroid:id=\"@+id/aboutTextView\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginEnd=\"16dp\"\nandroid:layout_marginStart=\"16dp\"\nandroid:layout_marginTop=\"16dp\"\nandroid:text=\"@string/about_description\"\nandroid:textColor=\"?android:textColorPrimary\"\nandroid:textSize=\"16sp\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toBottomOf=\"@+id/appIcon\"/>\n\n<TextView\nandroid:id=\"@+id/warningTitle\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginLeft=\"16dp\"\nandroid:layout_marginStart=\"16dp\"\nandroid:layout_marginTop=\"16dp\"\nandroid:text=\"@string/about_warning_title\"\nandroid:textColor=\"@color/md_red_500\"\nandroid:textSize=\"16sp\"\nandroid:textStyle=\"bold\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toBottomOf=\"@+id/aboutTextView\"/>\n\n<TextView\nandroid:id=\"@+id/warningText\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginEnd=\"16dp\"\nandroid:layout_marginStart=\"16dp\"\nandroid:layout_marginTop=\"8dp\"\nandroid:text=\"@string/about_warning_text\"\nandroid:textColor=\"@color/md_red_500\"\nandroid:textSize=\"16sp\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toBottomOf=\"@+id/warningTitle\"/>\n\n<TextView\nandroid:id=\"@+id/contributions\"\nandroid:layout_width=\"0dp\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginEnd=\"16dp\"\nandroid:layout_marginStart=\"16dp\"\nandroid:layout_marginTop=\"16dp\"\nandroid:text=\"@string/about_contributions\"\nandroid:textColor=\"?android:textColorPrimary\"\nandroid:textSize=\"16sp\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toBottomOf=\"@+id/warningText\"/>\n\n<Button\nandroid:id=\"@+id/websiteButton\"\nstyle=\"@style/Widget.AppCompat.Button.Colored\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_marginTop=\"16dp\"\nandroid:text=\"@string/about_visit_website\"\napp:layout_constraintEnd_toEndOf=\"parent\"\napp:layout_constraintStart_toStartOf=\"parent\"\napp:layout_constraintTop_toBottomOf=\"@+id/contributions\"/>\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n\n</ScrollView>\n",
            "java": "package de.grobox.transportr.about\n\nimport android.content.Intent\nimport android.content.pm.PackageManager.NameNotFoundException\nimport android.net.Uri\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Button\nimport android.widget.TextView\nimport de.grobox.transportr.R\nimport de.grobox.transportr.TransportrFragment\n\n\nclass AboutFragment : TransportrFragment() {\n\noverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\nval v = inflater.inflate(R.layout.fragment_about, container, false)\n\n// add app name and version\nval versionName = try {\nval activity = activity ?: throw NameNotFoundException()\nactivity.packageManager.getPackageInfo(activity.packageName, 0).versionName\n} catch (e: NameNotFoundException) {\n\"?.?\"\n}\nval appNameVersion = v.findViewById<TextView>(R.id.appNameVersion)\nappNameVersion.text = \"${getString(R.string.app_name)} $versionName\"\n\n// website button\nval websiteButton = v.findViewById<Button>(R.id.websiteButton)\nwebsiteButton.setOnClickListener {\nval launchBrowser = Intent(Intent.ACTION_VIEW, Uri.parse(getString(R.string.website) + getString(R.string.website_source_app)))\nstartActivity(launchBrowser)\n}\n\nreturn v\n}\n\n} ",
            "contains": []
        }
    }
}